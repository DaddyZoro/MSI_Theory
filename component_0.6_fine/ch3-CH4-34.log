Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 6e-06, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 3.4e-05, elapsed time[sec] = 0
         effective rotational constant[1/cm]  = 27.3386
         analytic  frequency at minimum[1/cm] = 264.582
         numerical frequency at minimum[1/cm] = 264.58
         minimum energy[kcal/mol]             = -0.652133
         maximum energy[kcal/mol]             = 4.43076
         maximum frequency[1/cm]              = 304.056
         maximum imaginary frequency[1/cm]    = 363.663
         ground energy [kcal/mol]             = -0.331612
         highest energy level [kcal/mol]      = 181.149
         number of levels                     = 97
         10 lowest excited states [kcal/mol] relative to the ground: 0.0416 0.501 0.787 1.2 1.64 2.1 2.58 3.06 3.55
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum      Classical  Semiclassical  ***
           100        1.91315        2.83254        1.89531
           200        2.39365        2.62672        2.39014
           300          2.881        2.99583        2.87973
           400        3.35757        3.42902        3.35695
           500        3.82304        3.87287        3.82272
           600        4.27901        4.31609        4.27884
           700        4.72624        4.75501        4.72615
           800        5.16483        5.18782        5.16479
           900        5.59466        5.61343        5.59464
          1000        6.01554        6.03113        6.01553
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 0.003238, elapsed time[sec] = 0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.00257, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00577, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
               hamiltonian size                = 175
               ground energy [kcal/mol]        = -0.331612
               highest level energy [kcal/mol] = 579.487
               number of levels                = 173
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.003313, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.37551, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3975
      interpolating states number/density done, cpu time[sec] = 0.413346, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.416747, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         18.6636
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4.4e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.55031        9.55025        4.77514
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000136, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         19.7115        11.2506        7.16248
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         27.4891        14.3449        9.42601
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000102, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.37766        1.21309        1.07414
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 5.2e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000117, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.8e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.70369        1.21669        1.08113
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000102, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.46649        1.30145        1.14415
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.7e-05, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         6.45653       0.996021       0.869895
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.2e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 7.3e-05, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.24344       0.933826       0.927158
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.9e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 6.8e-05, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000875, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000846, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00217, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.005032, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.022744, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.022786, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001589, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004978, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.020976, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021033, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001581, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004953, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.020873, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020928, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001585, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00492, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020364, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020416, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001585, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0049, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020646, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0207, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001556, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004881, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.02056, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020614, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001551, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00486, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020452, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020507, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001546, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004846, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020384, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020438, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001542, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004839, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.020346, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020399, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004833, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.020272, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020326, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001557, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004811, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.020319, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020374, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00155, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004805, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020199, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020254, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001551, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.020242, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020294, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001545, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020227, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020281, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001546, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.020192, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020252, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004886, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.020284, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020346, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001543, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004819, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.02026, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020317, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 5.35982, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 5.97292, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001587, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004991, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.021534, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021588, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001594, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004961, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.020718, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020771, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00159, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004935, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.020579, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02063, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001581, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004913, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.020378, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020429, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001562, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004913, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.020387, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02044, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001564, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004938, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020319, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020369, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001552, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004867, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.020063, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020113, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001554, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004856, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.020489, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020544, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001552, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004851, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.020486, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020541, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001621, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004828, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.020179, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020228, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001553, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004824, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.020077, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020128, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001552, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004824, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.019964, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020015, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001558, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004828, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.020304, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020356, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001576, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00485, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.020105, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020155, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001557, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004835, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.020274, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020331, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001556, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00484, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.019943, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 6.10163, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 6.69388, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001734, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00546, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 32.2948, elapsed time[sec] = 4
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 32.3324, elapsed time[sec] = 4
   Model::RRHO::RRHO:  done, cpu time[sec] = 32.3324, elapsed time[sec] = 4
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000941, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.00096, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.32337e+28  1.11801e+26  1.79595e+26  1.27054e+26  1.20988e+26  3.09395e+23  9.07742e+27  3.09395e+23  8.88157e+27  3.09395e+23  4.22578e+27  3.80274e+23  1.41444e+28  3.80274e+23  1.04332e+28  1.02813e+30  3.90835e+30  1.47521e+35  6.97793e+37 5.12313e+128  6.66931e+29  2.86815e+29
     200  1.33692e+29  7.62301e+26  1.46719e+27  1.01648e+27  9.67917e+26   1.7502e+24  7.26915e+28   1.7502e+24  7.10972e+28   1.7502e+24  3.38168e+28  1.07558e+24  1.21883e+29  1.07558e+24  8.41716e+28   2.6594e+31  6.23661e+31  1.08311e+30  2.15609e+30  1.52794e+59   8.8803e+30   3.6677e+30
     300  5.54011e+29   2.3227e+27  5.26013e+27  3.43494e+27  3.26819e+27  4.82299e+24  2.48509e+29  4.82299e+24  2.42373e+29  4.82299e+24  1.14821e+29  1.97596e+24  4.86792e+29  1.97596e+24  2.97902e+29  1.82848e+32  2.59531e+32  1.44204e+30  1.73251e+30  1.89698e+39  4.41738e+31  1.66472e+31
     400  1.62876e+30  5.05864e+27  1.36165e+28  8.18813e+27  7.76763e+27  9.90065e+24  6.13421e+29  9.90065e+24  5.94841e+29  9.90065e+24  2.78615e+29  3.04219e+24  1.44573e+30  3.04219e+24  7.82109e+29  7.43427e+32   6.7607e+32  3.11922e+30  3.38427e+30  5.81349e+32  1.53174e+32  5.25522e+31
     500  4.05813e+30  9.18441e+27  2.95805e+28  1.61898e+28  1.52757e+28  1.72958e+25  1.28789e+30  1.72958e+25  1.23982e+30  1.72958e+25   5.7057e+29  4.25159e+24  3.66233e+30  4.25159e+24  1.77789e+30  2.27526e+33  1.40931e+33  6.99374e+30  7.25775e+30  2.17394e+31  4.38411e+32  1.38723e+32
     600    9.205e+30  1.48858e+28  5.75714e+28  2.85232e+28  2.67107e+28  2.72836e+25  2.45845e+30  2.72836e+25   2.3485e+30  2.72836e+25  1.05857e+30  5.58887e+24  8.37639e+30  5.58887e+24  3.71358e+30  5.83122e+33  2.59745e+33  1.53855e+31  1.55306e+31  1.56568e+31  1.10959e+33   3.2876e+32
     700  1.96268e+31  2.23327e+28  1.03863e+29  4.64909e+28  4.31284e+28  4.01151e+25  4.40299e+30  4.01151e+25  4.17418e+30  4.01151e+25  1.84184e+30  7.04278e+24  1.77958e+31  7.04278e+24   7.3216e+30  1.32403e+34  4.44561e+33   3.2848e+31  3.24856e+31  2.00146e+31   2.5703e+33  7.23012e+32
     800  3.99726e+31  3.16884e+28  1.77202e+29  7.16645e+28  6.57463e+28  5.60263e+25  7.52403e+30  5.60263e+25  7.08108e+30  5.60263e+25  3.06199e+30  8.60462e+24  3.57018e+31  8.60462e+24  1.38186e+31  2.75318e+34  7.26015e+33  6.79278e+31  6.61014e+31  3.04631e+31  5.55972e+33  1.50221e+33
     900  7.84672e+31  4.31167e+28  2.89593e+29  1.05933e+29  9.59692e+28  7.52475e+25   1.2392e+31  7.52475e+25  1.15817e+31  7.52475e+25  4.91708e+30  1.02674e+25   6.8364e+31  1.02674e+25  2.51764e+31  5.35415e+34  1.14974e+34  1.36142e+32  1.30787e+32  4.96296e+31  1.13778e+34  2.98126e+33
    1000  1.49313e+32  5.67863e+28   4.5729e+29   1.5155e+29  1.35418e+29  9.80094e+25  1.98006e+31  9.80094e+25  1.83844e+31  9.80094e+25  7.67956e+30  1.20253e+25  1.25894e+32  1.20253e+25  4.45216e+31  9.87573e+34  1.78329e+34   2.6486e+32  2.51879e+32  8.31111e+31  2.22336e+34  5.69301e+33
    1100  2.76498e+32  7.28733e+28  7.02014e+29  2.11181e+29  1.85958e+29  1.24549e+26  3.08361e+31  1.24549e+26  2.84529e+31  1.24549e+26  1.17186e+31  1.38735e+25  2.24211e+32  1.38735e+25  7.67118e+31  1.74484e+35  2.72609e+34  5.01126e+32  4.72845e+32  1.40419e+32  4.17712e+34   1.0516e+34
    1200  4.99709e+32  9.15623e+28  1.05243e+30  2.87952e+29   2.4973e+29  1.55112e+26  4.69635e+31  1.55112e+26    4.308e+31  1.55112e+26  1.75274e+31  1.58077e+25  3.87836e+32  1.58077e+25  1.29155e+32  2.97422e+35  4.12329e+34  9.23932e+32   8.6658e+32  2.37069e+32  7.58478e+34  1.88651e+34
    1300  8.83374e+32  1.13047e+29  1.54592e+30  3.85497e+29  3.29178e+29  1.89956e+26  7.01317e+31  1.89956e+26  6.39766e+31  1.89956e+26  2.57572e+31  1.78243e+25  6.53817e+32  1.78243e+25  2.12955e+32  4.91785e+35  6.18529e+34  1.66312e+33  1.55279e+33  3.97859e+32  1.33662e+35  3.29702e+34
    1400  1.53024e+33  1.37529e+29  2.23077e+30  5.08012e+29   4.2708e+29  2.29347e+26  1.02902e+32  2.29347e+26  9.33807e+31  2.29347e+26  3.72573e+31    1.992e+25  1.07714e+33    1.992e+25  3.44487e+32  7.92097e+35  9.21464e+34  2.92792e+33   2.7242e+33  6.61771e+32   2.2936e+35  5.62782e+34
    1500  2.60145e+33  1.65218e+29  3.16862e+30  6.60308e+29  5.46575e+29  2.73564e+26    1.486e+32  2.73564e+26  1.34187e+32  2.73564e+26  5.31243e+31  2.20919e+25   1.7381e+33  2.20919e+25   5.4755e+32  1.24687e+36  1.36429e+35  5.04944e+33  4.68555e+33  1.08918e+33  3.84292e+35  9.40225e+34
    1600  4.34584e+33  1.96331e+29  4.43755e+30  8.47865e+29  6.91195e+29  3.22898e+26  2.11503e+32  3.22898e+26  1.90103e+32  3.22898e+26  7.47593e+31  2.43375e+25  2.75222e+33  2.43375e+25  8.56247e+32  1.92339e+36  2.00811e+35  8.54277e+33  7.91042e+33  1.77224e+33  6.30124e+35  1.54018e+35
    1700  7.14212e+33  2.31092e+29  6.13555e+30   1.0769e+30  8.64899e+29  3.77647e+26  2.97052e+32  3.77647e+26   2.6583e+32  3.77647e+26  1.03937e+32  2.66545e+25   4.2834e+33  2.66545e+25  1.31882e+33  2.91382e+36  2.93871e+35  1.41965e+34  1.31232e+34  2.84978e+33  1.01309e+36  2.47759e+35
    1800  1.15587e+34  2.69732e+29   8.3846e+30  1.35441e+30   1.0721e+30  4.38121e+26  4.12115e+32  4.38121e+26  3.67278e+32  4.38121e+26  1.42886e+32  2.90406e+25  6.56127e+33  2.90406e+25  2.00268e+33  4.34307e+36  4.27567e+35  2.32001e+34  2.14153e+34   4.5282e+33  1.59972e+36  3.91911e+35
    1900  1.84378e+34  3.12487e+29  1.13355e+31  1.68827e+30   1.3177e+30  5.04637e+26  5.65279e+32  5.04637e+26  5.01818e+32  5.04637e+26  1.94381e+32   3.1494e+25  9.90373e+33   3.1494e+25  3.00099e+33  6.37873e+36  6.18439e+35  3.73225e+34  3.44083e+34  7.11066e+33  2.48444e+36  6.10326e+35
    2000  2.90124e+34  3.59599e+29  1.51731e+31  2.08726e+30  1.60714e+30  5.77522e+26  7.67203e+32  5.77522e+26  6.78572e+32  5.77522e+26  2.61854e+32  3.40128e+25   1.4746e+34  3.40128e+25   4.4411e+33  9.24353e+36  8.89195e+35  5.91605e+34  5.44797e+34  1.10373e+34  3.79963e+36  9.36719e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 2.29837e+225  1.02813e+30  1.82417e+29    3.594e+38   2.9701e+47 1.37266e+129  2.66905e+20     0.948942
     200 5.57152e+127   2.6594e+31  1.34736e+31  5.34606e+31  1.40666e+35  2.50103e+59   1.7765e+26  6.67134e+15
     300  3.09099e+95  1.82848e+32   9.3443e+31  1.94038e+31  2.80774e+33  2.63474e+39  3.25529e+28  2.48059e+21
     400    3.325e+79  7.43427e+32  3.14239e+32  2.19142e+31  8.64423e+32  7.43778e+32    6.851e+29   2.2413e+24
     500  1.13834e+70  2.27526e+33  7.63521e+32  3.32701e+31  6.11802e+32   2.6476e+31  5.78544e+30  1.76229e+26
     600  6.87565e+63  5.83122e+33  1.55857e+33  5.64371e+31  6.25213e+32  1.84519e+31  3.01214e+31  4.01315e+27
     700  2.95091e+59  1.32403e+34  2.86945e+33  1.00075e+32  7.71381e+32  2.30406e+31  1.16802e+32  4.44289e+28
     800  1.80605e+56  2.75318e+34  4.94971e+33  1.80048e+32  1.05643e+33   3.4457e+31  3.71824e+32  3.10232e+29
     900  6.45973e+53  5.35415e+34  8.17932e+33  3.23813e+32  1.53624e+33  5.53732e+31   1.0277e+33  1.58053e+30
    1000  7.90811e+51  9.87573e+34  1.31259e+34  5.77682e+32  2.31258e+33  9.17195e+31  2.55409e+33  6.41662e+30
    1100  2.35818e+50  1.74484e+35  2.06322e+34  1.01819e+33  3.54884e+33  1.53581e+32  5.84168e+33  2.19695e+31
    1200  1.36572e+49  2.97422e+35  3.19399e+34  1.76957e+33   5.4983e+33  2.57362e+32  1.24968e+34  6.59117e+31
    1300  1.31351e+48  4.91785e+35  4.88631e+34  3.02998e+33  8.54687e+33  4.29194e+32  2.52991e+34  1.77992e+32
    1400  1.87634e+47  7.92097e+35  7.40307e+34  5.11055e+33  1.32748e+34  7.10037e+32  4.88935e+34  4.41164e+32
    1500  3.66886e+46  1.24687e+36  1.11219e+35   8.4923e+33  2.05446e+34  1.16314e+33  9.08125e+34   1.0183e+33
    1600  9.23757e+45  1.92339e+36  1.65808e+35  1.39081e+34  3.16238e+34  1.88484e+33  1.62955e+35  2.21334e+33
    1700  2.85867e+45  2.91382e+36  2.45396e+35  2.24595e+34  4.83564e+34  3.01988e+33  2.83688e+35  4.56972e+33
    1800  1.04875e+45  4.34307e+36  3.60632e+35    3.578e+34  7.33958e+34  4.78305e+33  4.80782e+35   9.0238e+33
    1900  4.43352e+44  6.37873e+36  5.26318e+35  5.62626e+34  1.10524e+35  7.48924e+33  7.95446e+35  1.71381e+34
    2000   2.1114e+44  9.24353e+36   7.6287e+35  8.73711e+34  1.65077e+35  1.15948e+34  1.28782e+36  3.14479e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 46.764, elapsed time[sec] = 8
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 1650.82 K
      Collision rate   = 6.86398e-10cm^3/sec
      Energy reference = 50613 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: density of states done, elapsed time[sec] = 0.000381
         W1 Well: cannot satisfy the constant collision frequency at energy = -29187 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28737 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28537 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28437 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28387 1/cm, truncating the well
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.515288
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.074974
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.15929
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.03412
         W1 Well: minimal relaxation eigenvalue = 0.260634
         W1 Well: maximal relaxation eigenvalue = 1.01137
         W1 Well:       grid size = 1580
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -28387 1/cm
         B1 Barrier:        grid size = 1013
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 1008
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 212 1/cm
         B3 Barrier:        grid size = 1105
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 1136
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6187 1/cm
         B5 Barrier: nonpositive number of states at -23137 1/cm => truncating
         B5 Barrier:        grid size = 1475
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23137 1/cm
         B6 Barrier:        grid size = 983
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 918
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.81259, elapsed time[sec] = 4
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -28387 -23137 3.64e+05 1.54e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 9.71e+16
         B2    213 2.95e+16
         B3  -4637 9.92e+15
         B4  -6187  1.1e+16
         B5 -23137  1.4e+15
         B6   1463 1.11e+17
         B7   4713 1.93e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.76e-11  3.19e-11  4.16e-12  1.13e-12  3.62e-19   8.3e-10  4.42e-08
          R  5.68e+10         1      1.81     0.236     0.064  2.06e-08      47.1  2.51e+03
         P1  3.13e+10     0.552         1      0.13    0.0354  1.13e-08        26  1.38e+03
         P2   2.4e+11      4.23      7.67         1     0.271   8.7e-08       199  1.06e+04
         P3  8.87e+11      15.6      28.3      3.69         1  3.21e-07       736  3.91e+04
         P4  2.76e+18  4.86e+07  8.81e+07  1.15e+07  3.12e+06         1  2.29e+09  1.22e+11
         P5  1.21e+09    0.0212    0.0385   0.00502   0.00136  4.36e-10         1      53.2
         P6  2.26e+07  0.000399  0.000723  9.43e-05  2.55e-05   8.2e-12    0.0188         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.44e-15  8.05e-15  1.05e-15  2.85e-16  9.14e-23  2.09e-13  1.11e-11
          R  2.25e+14         1      1.81     0.236     0.064  2.06e-08      47.1  2.51e+03
         P1  1.24e+14     0.552         1      0.13    0.0354  1.13e-08        26  1.38e+03
         P2  9.52e+14      4.23      7.67         1     0.271   8.7e-08       199  1.06e+04
         P3  3.51e+15      15.6      28.3      3.69         1  3.21e-07       736  3.91e+04
         P4  1.09e+22  4.86e+07  8.81e+07  1.15e+07  3.12e+06         1  2.29e+09  1.22e+11
         P5  4.78e+12    0.0212    0.0385   0.00502   0.00136  4.36e-10         1      53.2
         P6  8.97e+10  0.000399  0.000723  9.43e-05  2.55e-05   8.2e-12    0.0188         1
   MasterEquation::set:  done, cpu time[sec] = 3.81458, elapsed time[sec] = 4
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1e-05 atm	 Temperature = 1650.82 K
      collision frequency = 30511.9 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.100265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11024, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.271186
      maximal relaxation eigenvalue / collision frequency = 1.78423e+09
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.20873e+08  1.88568e+08  6.34725e+07  7.06318e+07  8.95286e+06  7.08254e+08  1.23477e+08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.87e-05   1.9e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-05   1.9e-05        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.9e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.96766, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3e-05 atm	 Temperature = 1650.82 K
      collision frequency = 91535.7 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.10668, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.270518
      maximal relaxation eigenvalue / collision frequency = 5.94743e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.06958e+08  6.28559e+07  2.11575e+07  2.35439e+07  2.98429e+06  2.36085e+08  4.11589e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.95e-05  1.55e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.99e-06  1.55e-05        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98148, elapsed time[sec] = 5
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5e-05 atm	 Temperature = 1650.82 K
      collision frequency = 152560 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11199, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.270178
      maximal relaxation eigenvalue / collision frequency = 3.56846e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.24175e+08  3.77135e+07  1.26945e+07  1.41264e+07  1.79057e+06  1.41651e+08  2.46953e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-05   1.4e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.05e-06   1.4e-05         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.4e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98819, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7e-05 atm	 Temperature = 1650.82 K
      collision frequency = 213583 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11118, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.269947
      maximal relaxation eigenvalue / collision frequency = 2.5489e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.86962e+07  2.69382e+07  9.06749e+06  1.00903e+07  1.27898e+06  1.01179e+08  1.76395e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-05   1.3e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-06   1.3e-05        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98753, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9e-05 atm	 Temperature = 1650.82 K
      collision frequency = 274607 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.107976, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11024, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.269774
      maximal relaxation eigenvalue / collision frequency = 1.98248e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.89859e+07   2.0952e+07   7.0525e+06  7.84798e+06       994762  7.86948e+07  1.37196e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-05  1.24e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-06  1.24e-05        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98616, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0001 atm	 Temperature = 1650.82 K
      collision frequency = 305119 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.107949, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11532, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.2697
      maximal relaxation eigenvalue / collision frequency = 1.78423e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.20873e+07  1.88568e+07  6.34725e+06  7.06318e+06       895286  7.08254e+07  1.23477e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.23e-05  1.21e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.01e-06  1.21e-05         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.99088, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0003 atm	 Temperature = 1650.82 K
      collision frequency = 915357 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.107981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11254, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.268963
      maximal relaxation eigenvalue / collision frequency = 5.94743e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.06958e+07  6.28559e+06  2.11575e+06  2.35439e+06       298429  2.36085e+07  4.11589e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-05  9.82e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.79e-06  9.82e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.99041, elapsed time[sec] = 5
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0005 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+06 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108263, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.10597, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.268656
      maximal relaxation eigenvalue / collision frequency = 3.56846e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.24175e+07  3.77135e+06  1.26945e+06  1.41264e+06       179057  1.41651e+07  2.46953e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-05  9.04e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.45e-06  9.04e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.97972, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0007 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+06 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11726, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.268472
      maximal relaxation eigenvalue / collision frequency = 2.5489e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.86962e+06  2.69382e+06       906749  1.00903e+06       127898  1.01179e+07  1.76395e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-05   8.6e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-06   8.6e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.99473, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0009 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+06 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108302, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11829, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.268344
      maximal relaxation eigenvalue / collision frequency = 1.98248e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.89859e+06   2.0952e+06       705250       784798      99476.2  7.86948e+06  1.37196e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-05   8.3e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-06   8.3e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.99213, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+06 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.1292, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.268293
      maximal relaxation eigenvalue / collision frequency = 1.78423e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.20873e+06  1.88568e+06       634725       706318      89528.6  7.08254e+06  1.23477e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-05  8.18e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-06  8.18e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.00548, elapsed time[sec] = 5
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.003 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+06 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108026, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.16003, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.267828
      maximal relaxation eigenvalue / collision frequency = 5.94743e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.06958e+06       628559       211575       235439      29842.9  2.36085e+06       411589
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-05  7.07e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-06  7.07e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.03545, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.005 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+07 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.19437, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.267635
      maximal relaxation eigenvalue / collision frequency = 3.56846e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.24175e+06       377135       126945       141264      17905.7  1.41651e+06       246953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-05  6.56e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.13e-06  6.56e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.06989, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.007 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+07 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.20986, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.267508
      maximal relaxation eigenvalue / collision frequency = 2.5489e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             886962       269382      90674.9       100903      12789.8  1.01179e+06       176395
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-05  6.22e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-06  6.22e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.07874, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.009 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+07 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108059, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.20615, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.267411
      maximal relaxation eigenvalue / collision frequency = 1.98248e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             689859       209520        70525      78479.8      9947.62       786948       137196
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-05  5.96e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-06  5.96e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.0796, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+07 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108208, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.1968, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.26737
      maximal relaxation eigenvalue / collision frequency = 1.78423e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             620873       188568      63472.5      70631.8      8952.86       708254       123477
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-05  5.85e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-06  5.85e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.06808, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.03 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+07 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108007, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.24567, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.266901
      maximal relaxation eigenvalue / collision frequency = 594744
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             206958      62855.9      21157.5      23543.9      2984.29       236085      41158.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.72e-06  4.63e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-06  4.63e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.12587, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.05 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+08 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.107991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.28375, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.266651
      maximal relaxation eigenvalue / collision frequency = 356847
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             124175      37713.5      12694.5      14126.4      1790.57       141651      24695.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.83e-06  4.05e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-06  4.05e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.15563, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.07 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+08 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108137, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29505, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.266475
      maximal relaxation eigenvalue / collision frequency = 254891
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88696.2      26938.2      9067.49      10090.3      1278.98       101179      17639.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.23e-06  3.68e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-06  3.68e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.7e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.17063, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.09 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+08 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.109113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.29503, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.266337
      maximal relaxation eigenvalue / collision frequency = 198249
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68985.9        20952       7052.5      7847.98      994.762      78694.8      13719.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.79e-06   3.4e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-06   3.4e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.4e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.17288, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+08 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.32997, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.266278
      maximal relaxation eigenvalue / collision frequency = 178424
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62087.3      18856.8      6347.25      7063.18      895.286      70825.4      12347.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.61e-06  3.29e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-06  3.29e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.20575, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+08 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.38807, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.265613
      maximal relaxation eigenvalue / collision frequency = 59475.3
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20695.8      6285.59      2115.75      2354.39      298.429      23608.5      4115.89
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.77e-06  2.19e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-06  2.19e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.26354, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+09 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108116, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.38204, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.265279
      maximal relaxation eigenvalue / collision frequency = 35685.6
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12417.5      3771.35      1269.45      1412.64      179.057      14165.1      2469.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.99e-06  1.76e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-06  1.76e-06         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.25782, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+09 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.43931, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.265053
      maximal relaxation eigenvalue / collision frequency = 25490
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8869.62      2693.82      906.749      1009.03      127.898      10117.9      1763.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-06   1.5e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-07   1.5e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.3148, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+09 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108198, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.42272, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.264881
      maximal relaxation eigenvalue / collision frequency = 19825.7
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6898.59       2095.2       705.25      784.798      99.4762      7869.48      1371.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-06  1.32e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.44e-07  1.32e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.30153, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+09 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.41065, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.264809
      maximal relaxation eigenvalue / collision frequency = 17843.3
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6208.73      1885.68      634.725      706.318      89.5286      7082.54      1234.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.05e-06  1.25e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.08e-07  1.25e-06        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.28432, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+09 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108063, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.52319, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.264042
      maximal relaxation eigenvalue / collision frequency = 5948.41
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2069.58      628.559      211.575      235.439      29.8429      2360.85      411.589
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-06  6.59e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.88e-07  6.59e-07        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.6e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.39983, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+10 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108158, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.5844, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.263686
      maximal relaxation eigenvalue / collision frequency = 3569.44
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1241.75      377.135      126.945      141.264      17.9057      1416.51      246.953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-06  4.67e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-07  4.67e-07         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.7e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.4603, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+10 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108298, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.63299, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.263455
      maximal relaxation eigenvalue / collision frequency = 2549.88
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            886.962      269.382      90.6749      100.903      12.7898      1011.79      176.395
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-06  3.65e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-07  3.65e-07        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.7e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.50889, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+10 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.68276, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.263285
      maximal relaxation eigenvalue / collision frequency = 1983.46
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            689.859       209.52       70.525      78.4798      9.94762      786.948      137.196
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-06  3.01e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.67e-07  3.01e-07        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.55858, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+10 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.7057, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.263214
      maximal relaxation eigenvalue / collision frequency = 1785.22
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            620.873      188.568      63.4725      70.6318      8.95286      708.254      123.477
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.54e-07  2.77e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-07  2.77e-07        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.58206, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+10 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108347, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.79226, elapsed time[sec] = 5
      minimal relaxation eigenvalue / collision frequency = 0.262517
      maximal relaxation eigenvalue / collision frequency = 595.73
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            206.958      62.8559      21.1575      23.5439      2.98429      236.085      41.1589
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-07  1.05e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-07  1.05e-07        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.66798, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+11 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108126, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.93377, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.262223
      maximal relaxation eigenvalue / collision frequency = 357.833
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.175      37.7135      12.6945      14.1264      1.79057      141.651      24.6953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.25e-07  6.28e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.51e-08  6.28e-08        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.3e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.80997, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+11 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.10816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.00166, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.262042
      maximal relaxation eigenvalue / collision frequency = 255.878
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.6962      26.9382      9.06749      10.0903      1.27898      101.179      17.6395
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-07  4.37e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   6.6e-08  4.37e-08        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.4e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.87771, elapsed time[sec] = 6
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+11 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.05501, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261914
      maximal relaxation eigenvalue / collision frequency = 199.236
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.9859       20.952       7.0525      7.84798     0.994762      78.6948      13.7196
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-07  3.29e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-08  3.29e-08        -1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.3e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.93036, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+11 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.109654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.01693, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261863
      maximal relaxation eigenvalue / collision frequency = 179.411
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.0873      18.8568      6.34725      7.06318     0.895286      70.8254      12.3477
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-07  2.91e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.99e-08  2.91e-08         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.9e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.88696, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+11 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.26307, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261395
      maximal relaxation eigenvalue / collision frequency = 60.4637
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.6958      6.28559      2.11575      2.35439     0.298429      23.6085      4.11589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9565, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.51678, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4745, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    7.599e-08  7.59903e-08  7.21965e-09
      low eigenvalue method done, cpu time[sec] = 20.4911, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.6e-08  7.22e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-08  7.22e-09         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.2e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.6298, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+12 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.3217, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261224
      maximal relaxation eigenvalue / collision frequency = 36.6752
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.4175      3.77135      1.26945      1.41264     0.179057      14.1651      2.46953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.8721, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.533804, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4071, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.82253e-08  4.82252e-08   3.5029e-09
      low eigenvalue method done, cpu time[sec] = 20.4237, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-08   3.5e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-08   3.5e-09         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.5e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.6223, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 700 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+12 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.39883, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261126
      maximal relaxation eigenvalue / collision frequency = 26.4805
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.86962      2.69382     0.906749      1.00903     0.127898      10.1179      1.76395
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.8726, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.523951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.3978, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54643e-08  3.54641e-08  2.11994e-09
      low eigenvalue method done, cpu time[sec] = 20.4144, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.55e-08  2.12e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  9.26e-09  2.12e-09         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.6877, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 900 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+12 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.109981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.4614, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261061
      maximal relaxation eigenvalue / collision frequency = 20.817
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.89859       2.0952      0.70525     0.784798    0.0994762      7.86948      1.37196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9098, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.516592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4277, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.80894e-08  2.80895e-08  1.43791e-09
      low eigenvalue method done, cpu time[sec] = 20.4443, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.81e-08  1.44e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-09  1.44e-09         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.4e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.7835, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1000 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+12 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.48356, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.261036
      maximal relaxation eigenvalue / collision frequency = 18.8348
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.20873      1.88568     0.634725     0.706318    0.0895286      7.08254      1.23477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.8817, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.537463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4204, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54532e-08  2.54531e-08  1.21797e-09
      low eigenvalue method done, cpu time[sec] = 20.437, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-08  1.22e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.64e-09  1.22e-09         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.797, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3000 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+12 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108098, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.59383, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260834
      maximal relaxation eigenvalue / collision frequency = 6.94315
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.06958     0.628559     0.211575     0.235439    0.0298429      2.36085     0.411589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.876, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.537276, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4146, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.90085e-09  8.90086e-09  1.93845e-10
      low eigenvalue method done, cpu time[sec] = 20.4311, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.9e-09  1.94e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.32e-09  1.94e-10         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.9e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9006, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5000 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+13 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.10808, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.63838, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260773
      maximal relaxation eigenvalue / collision frequency = 4.56532
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.24175     0.377135     0.126945     0.141264    0.0179057      1.41651     0.246953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9029, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.530796, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.435, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.40413e-09  5.40413e-09  7.77793e-11
      low eigenvalue method done, cpu time[sec] = 20.4516, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-09  7.78e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-09  7.78e-11         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.8e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9673, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7000 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+13 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.60256, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.260741
      maximal relaxation eigenvalue / collision frequency = 3.54635
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.886962     0.269382    0.0906749     0.100903    0.0127898      1.01179     0.176395
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9665, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.520117, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4878, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.88121e-09  3.88123e-09  4.19215e-11
      low eigenvalue method done, cpu time[sec] = 20.5044, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-09  4.19e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-09  4.19e-11         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.2e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9816, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9000 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+13 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.109782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.64173, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260722
      maximal relaxation eigenvalue / collision frequency = 2.9803
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.689859      0.20952     0.070525    0.0784798   0.00994762     0.786948     0.137196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9087, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.534258, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4442, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.02829e-09  3.02829e-09  2.62268e-11
      low eigenvalue method done, cpu time[sec] = 20.4608, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-09  2.62e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   7.9e-10  2.62e-11         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.6e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9808, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10000 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+13 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.64611, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260715
      maximal relaxation eigenvalue / collision frequency = 2.78219
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.620873     0.188568    0.0634725    0.0706318   0.00895286     0.708254     0.123477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9232, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.526893, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4514, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72855e-09  2.72854e-09   2.1509e-11
      low eigenvalue method done, cpu time[sec] = 20.468, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-09  2.15e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.11e-10  2.15e-11         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.2e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9942, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30000 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+13 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108086, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.64697, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.260666
      maximal relaxation eigenvalue / collision frequency = 1.59369
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.206958    0.0628559    0.0211575    0.0235439   0.00298429     0.236085    0.0411589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.8774, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.527747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4063, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.15976e-10  9.15976e-10  2.59938e-12
      low eigenvalue method done, cpu time[sec] = 20.423, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.16e-10   2.6e-12         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-10   2.6e-12         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.6e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9428, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50000 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+14 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.107962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.61701, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260654
      maximal relaxation eigenvalue / collision frequency = 1.35605
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.124175    0.0377135    0.0126945    0.0141264   0.00179057     0.141651    0.0246953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9197, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.537401, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4583, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.50405e-10  5.50405e-10  9.54176e-13
      low eigenvalue method done, cpu time[sec] = 20.475, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-10  9.53e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-10  9.53e-13         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.5e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.968, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70000 atm	 Temperature = 1650.82 K
      collision frequency = 2.13583e+14 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.61152, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260649
      maximal relaxation eigenvalue / collision frequency = 1.25422
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0886962    0.0269382   0.00906749    0.0100903   0.00127898     0.101179    0.0176395
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.9395, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.525876, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4666, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.93402e-10  3.93401e-10  4.91091e-13
      low eigenvalue method done, cpu time[sec] = 20.4832, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-10   4.9e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-10   4.9e-13         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.9e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 27.9706, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90000 atm	 Temperature = 1650.82 K
      collision frequency = 2.74607e+14 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.108221, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.59776, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.260646
      maximal relaxation eigenvalue / collision frequency = 1.19766
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0689859     0.020952    0.0070525   0.00784798  0.000994762    0.0786948    0.0137196
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.2381, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.532973, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.7724, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.06089e-10   3.0609e-10  2.98557e-13
      low eigenvalue method done, cpu time[sec] = 20.7886, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-10  2.96e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.98e-11  2.96e-13         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.2628, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100000 atm	 Temperature = 1650.82 K
      collision frequency = 3.05119e+14 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.100724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30608, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260645
      maximal relaxation eigenvalue / collision frequency = 1.17786
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0620873    0.0188568   0.00634725   0.00706318  0.000895286    0.0708254    0.0123477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.0637, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.533969, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.599, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.75515e-10  2.75516e-10  2.42256e-13
      low eigenvalue method done, cpu time[sec] = 20.6153, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.76e-10  2.41e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.18e-11  2.41e-13         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.4e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.7906, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300000 atm	 Temperature = 1650.82 K
      collision frequency = 9.15357e+14 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.102393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30541, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260638
      maximal relaxation eigenvalue / collision frequency = 1.05912
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0206958   0.00628559   0.00211575   0.00235439  0.000298429    0.0236085   0.00411589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.0548, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.522988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.5791, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    9.191e-11  9.19092e-11  2.72087e-14
      low eigenvalue method done, cpu time[sec] = 20.5954, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.19e-11   2.6e-14         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-11   2.6e-14         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.6e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.7773, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500000 atm	 Temperature = 1650.82 K
      collision frequency = 1.5256e+15 1/sec
      global relaxation matrix dimension = 1580
      setting global matrices ... done, cpu time[sec] = 0.100762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32282, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.260636
      maximal relaxation eigenvalue / collision frequency = 1.03538
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0124175   0.00377135   0.00126945   0.00141264  0.000179057    0.0141651   0.00246953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.0988, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.522635, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6228, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.51528e-11   5.5154e-11  9.81675e-15
      low eigenvalue method done, cpu time[sec] = 20.6391, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-11  7.99e-15         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-11  7.99e-15         1
         *Z       ---       ---  3.52e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.8285, elapsed time[sec] = 11
rate calculation done, cpu time[sec] = 705.859, elapsed time[sec] = 398
