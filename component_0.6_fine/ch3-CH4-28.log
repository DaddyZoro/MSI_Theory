Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 6e-06, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         effective rotational constant[1/cm]  = 27.3386
         analytic  frequency at minimum[1/cm] = 264.582
         numerical frequency at minimum[1/cm] = 264.58
         minimum energy[kcal/mol]             = -0.652133
         maximum energy[kcal/mol]             = 4.43076
         maximum frequency[1/cm]              = 304.056
         maximum imaginary frequency[1/cm]    = 363.663
         ground energy [kcal/mol]             = -0.331612
         highest energy level [kcal/mol]      = 181.149
         number of levels                     = 97
         10 lowest excited states [kcal/mol] relative to the ground: 0.0416 0.501 0.787 1.2 1.64 2.1 2.58 3.06 3.55
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum      Classical  Semiclassical  ***
           100        1.91315        2.83254        1.89531
           200        2.39365        2.62672        2.39014
           300          2.881        2.99583        2.87973
           400        3.35757        3.42902        3.35695
           500        3.82304        3.87287        3.82272
           600        4.27901        4.31609        4.27884
           700        4.72624        4.75501        4.72615
           800        5.16483        5.18782        5.16479
           900        5.59466        5.61343        5.59464
          1000        6.01554        6.03113        6.01553
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 0.003304, elapsed time[sec] = 0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.002949, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.006369, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
               hamiltonian size                = 175
               ground energy [kcal/mol]        = -0.331612
               highest level energy [kcal/mol] = 579.487
               number of levels                = 173
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.003329, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.378696, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3975
      interpolating states number/density done, cpu time[sec] = 0.419534, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.423002, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         18.6636
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4.3e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.55031        9.55025        4.77514
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000137, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         19.7115        11.2506        7.16248
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         27.4891        14.3449        9.42601
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000115, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.37766        1.21309        1.07414
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.8e-05, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.70369        1.21669        1.08113
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 9e-05, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.46649        1.30145        1.14415
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.5e-05, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         6.45653       0.996021       0.869895
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.2e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 7.2e-05, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.24344       0.933826       0.927158
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.9e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 6.6e-05, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000873, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000859, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.002166, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.005012, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.022688, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.022732, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001623, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004978, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.021077, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021136, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001579, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004975, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.020715, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020768, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001637, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004938, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020498, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020555, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001569, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004903, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020274, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020326, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001553, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004885, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.020165, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020218, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001552, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004865, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020642, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020697, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001596, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004875, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020596, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020651, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001611, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004867, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.020594, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020649, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004829, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.02032, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020374, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001542, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.020285, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020345, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004819, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020224, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02028, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001542, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004817, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.020222, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020279, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001531, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020273, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02033, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001532, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004823, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.020243, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020297, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001534, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004824, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.020306, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020363, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001556, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00487, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.020545, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0206, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 5.35408, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 5.96764, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001588, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004993, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.021321, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021376, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.0016, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004969, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.020962, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021018, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001591, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004942, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.020795, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020851, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001571, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004923, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.020713, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020772, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001586, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004905, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.020721, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020776, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001565, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004892, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020589, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020641, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001563, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004864, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.020473, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020533, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001578, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004853, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.020461, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020518, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001567, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004886, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.020404, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02047, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001546, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004842, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.020352, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020406, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001541, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004831, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.020041, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020099, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00154, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004831, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.020117, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020172, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001549, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004852, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.0204, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020456, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001545, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004845, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.020383, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02044, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001546, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004858, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.020399, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020464, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001561, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004847, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.020378, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020437, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 6.1991, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 6.82354, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001939, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.006064, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 34.9954, elapsed time[sec] = 4
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 35.0462, elapsed time[sec] = 4
   Model::RRHO::RRHO:  done, cpu time[sec] = 35.0463, elapsed time[sec] = 4
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.001255, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.001173, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.32337e+28  1.11801e+26  1.79595e+26  1.27054e+26  1.20988e+26  3.09395e+23  9.07742e+27  3.09395e+23  8.88157e+27  3.09395e+23  4.22578e+27  3.80274e+23  1.41444e+28  3.80274e+23  1.04332e+28  1.02813e+30  3.90835e+30  1.47521e+35  6.97793e+37 5.12313e+128  6.66931e+29  2.86815e+29
     200  1.33692e+29  7.62301e+26  1.46719e+27  1.01648e+27  9.67917e+26   1.7502e+24  7.26915e+28   1.7502e+24  7.10972e+28   1.7502e+24  3.38168e+28  1.07558e+24  1.21883e+29  1.07558e+24  8.41716e+28   2.6594e+31  6.23661e+31  1.08311e+30  2.15609e+30  1.52794e+59   8.8803e+30   3.6677e+30
     300  5.54011e+29   2.3227e+27  5.26013e+27  3.43494e+27  3.26819e+27  4.82299e+24  2.48509e+29  4.82299e+24  2.42373e+29  4.82299e+24  1.14821e+29  1.97596e+24  4.86792e+29  1.97596e+24  2.97902e+29  1.82848e+32  2.59531e+32  1.44204e+30  1.73251e+30  1.89698e+39  4.41738e+31  1.66472e+31
     400  1.62876e+30  5.05864e+27  1.36165e+28  8.18813e+27  7.76763e+27  9.90065e+24  6.13421e+29  9.90065e+24  5.94841e+29  9.90065e+24  2.78615e+29  3.04219e+24  1.44573e+30  3.04219e+24  7.82109e+29  7.43427e+32   6.7607e+32  3.11922e+30  3.38427e+30  5.81349e+32  1.53174e+32  5.25522e+31
     500  4.05813e+30  9.18441e+27  2.95805e+28  1.61898e+28  1.52757e+28  1.72958e+25  1.28789e+30  1.72958e+25  1.23982e+30  1.72958e+25   5.7057e+29  4.25159e+24  3.66233e+30  4.25159e+24  1.77789e+30  2.27526e+33  1.40931e+33  6.99374e+30  7.25775e+30  2.17394e+31  4.38411e+32  1.38723e+32
     600    9.205e+30  1.48858e+28  5.75714e+28  2.85232e+28  2.67107e+28  2.72836e+25  2.45845e+30  2.72836e+25   2.3485e+30  2.72836e+25  1.05857e+30  5.58887e+24  8.37639e+30  5.58887e+24  3.71358e+30  5.83122e+33  2.59745e+33  1.53855e+31  1.55306e+31  1.56568e+31  1.10959e+33   3.2876e+32
     700  1.96268e+31  2.23327e+28  1.03863e+29  4.64909e+28  4.31284e+28  4.01151e+25  4.40299e+30  4.01151e+25  4.17418e+30  4.01151e+25  1.84184e+30  7.04278e+24  1.77958e+31  7.04278e+24   7.3216e+30  1.32403e+34  4.44561e+33   3.2848e+31  3.24856e+31  2.00146e+31   2.5703e+33  7.23012e+32
     800  3.99726e+31  3.16884e+28  1.77202e+29  7.16645e+28  6.57463e+28  5.60263e+25  7.52403e+30  5.60263e+25  7.08108e+30  5.60263e+25  3.06199e+30  8.60462e+24  3.57018e+31  8.60462e+24  1.38186e+31  2.75318e+34  7.26015e+33  6.79278e+31  6.61014e+31  3.04631e+31  5.55972e+33  1.50221e+33
     900  7.84672e+31  4.31167e+28  2.89593e+29  1.05933e+29  9.59692e+28  7.52475e+25   1.2392e+31  7.52475e+25  1.15817e+31  7.52475e+25  4.91708e+30  1.02674e+25   6.8364e+31  1.02674e+25  2.51764e+31  5.35415e+34  1.14974e+34  1.36142e+32  1.30787e+32  4.96296e+31  1.13778e+34  2.98126e+33
    1000  1.49313e+32  5.67863e+28   4.5729e+29   1.5155e+29  1.35418e+29  9.80094e+25  1.98006e+31  9.80094e+25  1.83844e+31  9.80094e+25  7.67956e+30  1.20253e+25  1.25894e+32  1.20253e+25  4.45216e+31  9.87573e+34  1.78329e+34   2.6486e+32  2.51879e+32  8.31111e+31  2.22336e+34  5.69301e+33
    1100  2.76498e+32  7.28733e+28  7.02014e+29  2.11181e+29  1.85958e+29  1.24549e+26  3.08361e+31  1.24549e+26  2.84529e+31  1.24549e+26  1.17186e+31  1.38735e+25  2.24211e+32  1.38735e+25  7.67118e+31  1.74484e+35  2.72609e+34  5.01126e+32  4.72845e+32  1.40419e+32  4.17712e+34   1.0516e+34
    1200  4.99709e+32  9.15623e+28  1.05243e+30  2.87952e+29   2.4973e+29  1.55112e+26  4.69635e+31  1.55112e+26    4.308e+31  1.55112e+26  1.75274e+31  1.58077e+25  3.87836e+32  1.58077e+25  1.29155e+32  2.97422e+35  4.12329e+34  9.23932e+32   8.6658e+32  2.37069e+32  7.58478e+34  1.88651e+34
    1300  8.83374e+32  1.13047e+29  1.54592e+30  3.85497e+29  3.29178e+29  1.89956e+26  7.01317e+31  1.89956e+26  6.39766e+31  1.89956e+26  2.57572e+31  1.78243e+25  6.53817e+32  1.78243e+25  2.12955e+32  4.91785e+35  6.18529e+34  1.66312e+33  1.55279e+33  3.97859e+32  1.33662e+35  3.29702e+34
    1400  1.53024e+33  1.37529e+29  2.23077e+30  5.08012e+29   4.2708e+29  2.29347e+26  1.02902e+32  2.29347e+26  9.33807e+31  2.29347e+26  3.72573e+31    1.992e+25  1.07714e+33    1.992e+25  3.44487e+32  7.92097e+35  9.21464e+34  2.92792e+33   2.7242e+33  6.61771e+32   2.2936e+35  5.62782e+34
    1500  2.60145e+33  1.65218e+29  3.16862e+30  6.60308e+29  5.46575e+29  2.73564e+26    1.486e+32  2.73564e+26  1.34187e+32  2.73564e+26  5.31243e+31  2.20919e+25   1.7381e+33  2.20919e+25   5.4755e+32  1.24687e+36  1.36429e+35  5.04944e+33  4.68555e+33  1.08918e+33  3.84292e+35  9.40225e+34
    1600  4.34584e+33  1.96331e+29  4.43755e+30  8.47865e+29  6.91195e+29  3.22898e+26  2.11503e+32  3.22898e+26  1.90103e+32  3.22898e+26  7.47593e+31  2.43375e+25  2.75222e+33  2.43375e+25  8.56247e+32  1.92339e+36  2.00811e+35  8.54277e+33  7.91042e+33  1.77224e+33  6.30124e+35  1.54018e+35
    1700  7.14212e+33  2.31092e+29  6.13555e+30   1.0769e+30  8.64899e+29  3.77647e+26  2.97052e+32  3.77647e+26   2.6583e+32  3.77647e+26  1.03937e+32  2.66545e+25   4.2834e+33  2.66545e+25  1.31882e+33  2.91382e+36  2.93871e+35  1.41965e+34  1.31232e+34  2.84978e+33  1.01309e+36  2.47759e+35
    1800  1.15587e+34  2.69732e+29   8.3846e+30  1.35441e+30   1.0721e+30  4.38121e+26  4.12115e+32  4.38121e+26  3.67278e+32  4.38121e+26  1.42886e+32  2.90406e+25  6.56127e+33  2.90406e+25  2.00268e+33  4.34307e+36  4.27567e+35  2.32001e+34  2.14153e+34   4.5282e+33  1.59972e+36  3.91911e+35
    1900  1.84378e+34  3.12487e+29  1.13355e+31  1.68827e+30   1.3177e+30  5.04637e+26  5.65279e+32  5.04637e+26  5.01818e+32  5.04637e+26  1.94381e+32   3.1494e+25  9.90373e+33   3.1494e+25  3.00099e+33  6.37873e+36  6.18439e+35  3.73225e+34  3.44083e+34  7.11066e+33  2.48444e+36  6.10326e+35
    2000  2.90124e+34  3.59599e+29  1.51731e+31  2.08726e+30  1.60714e+30  5.77522e+26  7.67203e+32  5.77522e+26  6.78572e+32  5.77522e+26  2.61854e+32  3.40128e+25   1.4746e+34  3.40128e+25   4.4411e+33  9.24353e+36  8.89195e+35  5.91605e+34  5.44797e+34  1.10373e+34  3.79963e+36  9.36719e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 2.29837e+225  1.02813e+30  1.82417e+29    3.594e+38   2.9701e+47 1.37266e+129  2.66905e+20     0.948942
     200 5.57152e+127   2.6594e+31  1.34736e+31  5.34606e+31  1.40666e+35  2.50103e+59   1.7765e+26  6.67134e+15
     300  3.09099e+95  1.82848e+32   9.3443e+31  1.94038e+31  2.80774e+33  2.63474e+39  3.25529e+28  2.48059e+21
     400    3.325e+79  7.43427e+32  3.14239e+32  2.19142e+31  8.64423e+32  7.43778e+32    6.851e+29   2.2413e+24
     500  1.13834e+70  2.27526e+33  7.63521e+32  3.32701e+31  6.11802e+32   2.6476e+31  5.78544e+30  1.76229e+26
     600  6.87565e+63  5.83122e+33  1.55857e+33  5.64371e+31  6.25213e+32  1.84519e+31  3.01214e+31  4.01315e+27
     700  2.95091e+59  1.32403e+34  2.86945e+33  1.00075e+32  7.71381e+32  2.30406e+31  1.16802e+32  4.44289e+28
     800  1.80605e+56  2.75318e+34  4.94971e+33  1.80048e+32  1.05643e+33   3.4457e+31  3.71824e+32  3.10232e+29
     900  6.45973e+53  5.35415e+34  8.17932e+33  3.23813e+32  1.53624e+33  5.53732e+31   1.0277e+33  1.58053e+30
    1000  7.90811e+51  9.87573e+34  1.31259e+34  5.77682e+32  2.31258e+33  9.17195e+31  2.55409e+33  6.41662e+30
    1100  2.35818e+50  1.74484e+35  2.06322e+34  1.01819e+33  3.54884e+33  1.53581e+32  5.84168e+33  2.19695e+31
    1200  1.36572e+49  2.97422e+35  3.19399e+34  1.76957e+33   5.4983e+33  2.57362e+32  1.24968e+34  6.59117e+31
    1300  1.31351e+48  4.91785e+35  4.88631e+34  3.02998e+33  8.54687e+33  4.29194e+32  2.52991e+34  1.77992e+32
    1400  1.87634e+47  7.92097e+35  7.40307e+34  5.11055e+33  1.32748e+34  7.10037e+32  4.88935e+34  4.41164e+32
    1500  3.66886e+46  1.24687e+36  1.11219e+35   8.4923e+33  2.05446e+34  1.16314e+33  9.08125e+34   1.0183e+33
    1600  9.23757e+45  1.92339e+36  1.65808e+35  1.39081e+34  3.16238e+34  1.88484e+33  1.62955e+35  2.21334e+33
    1700  2.85867e+45  2.91382e+36  2.45396e+35  2.24595e+34  4.83564e+34  3.01988e+33  2.83688e+35  4.56972e+33
    1800  1.04875e+45  4.34307e+36  3.60632e+35    3.578e+34  7.33958e+34  4.78305e+33  4.80782e+35   9.0238e+33
    1900  4.43352e+44  6.37873e+36  5.26318e+35  5.62626e+34  1.10524e+35  7.48924e+33  7.95446e+35  1.71381e+34
    2000   2.1114e+44  9.24353e+36   7.6287e+35  8.73711e+34  1.65077e+35  1.15948e+34  1.28782e+36  3.14479e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 49.9937, elapsed time[sec] = 9
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 1601.11 K
      Collision rate   = 6.79066e-10cm^3/sec
      Energy reference = 49231 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: density of states done, elapsed time[sec] = 0.000452
         W1 Well: cannot satisfy the constant collision frequency at energy = -29469 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28919 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28719 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28569 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28519 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28469 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -28419 1/cm, truncating the well
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.821878
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.092104
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.44722
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.2228
         W1 Well: minimal relaxation eigenvalue = 0.262408
         W1 Well: maximal relaxation eigenvalue = 1.00654
         W1 Well:       grid size = 1553
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -28419 1/cm
         B1 Barrier:        grid size = 985
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 981
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 1077
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 1109
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6219 1/cm
         B5 Barrier: nonpositive number of states at -23119 1/cm => truncating
         B5 Barrier:        grid size = 1447
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23119 1/cm
         B6 Barrier:        grid size = 955
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 891
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4680 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.61995, elapsed time[sec] = 4
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -28419 -23119 3.69e+05 1.28e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 7.66e+16
         B2    181 2.25e+16
         B3  -4619 7.41e+15
         B4  -6219 8.28e+15
         B5 -23119 1.04e+15
         B6   1481  8.5e+16
         B7   4681 1.44e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.06e-11  7.32e-11  8.53e-12  2.21e-12  4.31e-19  2.04e-09  1.18e-07
          R  2.46e+10         1       1.8      0.21    0.0543  1.06e-08      50.2   2.9e+03
         P1  1.37e+10     0.555         1     0.117    0.0302  5.89e-09      27.9  1.61e+03
         P2  1.17e+11      4.77      8.58         1     0.259  5.06e-08       239  1.38e+04
         P3  4.53e+11      18.4      33.2      3.86         1  1.95e-07       925  5.34e+04
         P4  2.32e+18  9.43e+07   1.7e+08  1.98e+07  5.12e+06         1  4.73e+09  2.73e+11
         P5   4.9e+08    0.0199    0.0359   0.00418   0.00108  2.11e-10         1      57.7
         P6  8.49e+06  0.000345  0.000621  7.24e-05  1.87e-05  3.66e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.04e-14  1.87e-14  2.18e-15  5.65e-16   1.1e-22  5.22e-13  3.01e-11
          R  9.62e+13         1       1.8      0.21    0.0543  1.06e-08      50.2   2.9e+03
         P1  5.34e+13     0.555         1     0.117    0.0302  5.89e-09      27.9  1.61e+03
         P2  4.58e+14      4.77      8.58         1     0.259  5.06e-08       239  1.38e+04
         P3  1.77e+15      18.4      33.2      3.86         1  1.95e-07       925  5.34e+04
         P4  9.07e+21  9.43e+07   1.7e+08  1.98e+07  5.12e+06         1  4.73e+09  2.73e+11
         P5  1.92e+12    0.0199    0.0359   0.00418   0.00108  2.11e-10         1      57.7
         P6  3.32e+10  0.000345  0.000621  7.24e-05  1.87e-05  3.66e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 4.62239, elapsed time[sec] = 4
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1e-05 atm	 Temperature = 1601.11 K
      collision frequency = 31123.1 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.122873, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.73877, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.270581
      maximal relaxation eigenvalue / collision frequency = 1.61778e+09
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        5.75489e+08  1.68976e+08  5.56615e+07  6.22532e+07    7.837e+06  6.39223e+08  1.08345e+08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-05  9.81e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   4.7e-06  9.81e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.58812, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3e-05 atm	 Temperature = 1601.11 K
      collision frequency = 93369.4 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.41182, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.270038
      maximal relaxation eigenvalue / collision frequency = 5.39262e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
         1.9183e+08  5.63253e+07  1.85538e+07  2.07511e+07  2.61233e+06  2.13074e+08   3.6115e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-05  7.95e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-06  7.95e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.24294, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5e-05 atm	 Temperature = 1601.11 K
      collision frequency = 155616 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103933, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.41584, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.269762
      maximal relaxation eigenvalue / collision frequency = 3.23557e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.15098e+08  3.37952e+07  1.11323e+07  1.24506e+07   1.5674e+06  1.27845e+08   2.1669e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-05  7.13e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-06  7.13e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.25143, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7e-05 atm	 Temperature = 1601.11 K
      collision frequency = 217862 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103606, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.40962, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.269575
      maximal relaxation eigenvalue / collision frequency = 2.31112e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.22127e+07  2.41394e+07  7.95165e+06  8.89331e+06  1.11957e+06  9.13176e+07  1.54779e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-05  6.63e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.32e-06  6.63e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.245, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9e-05 atm	 Temperature = 1601.11 K
      collision frequency = 280108 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.104243, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.40888, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.269434
      maximal relaxation eigenvalue / collision frequency = 1.79754e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.39432e+07  1.87751e+07  6.18462e+06  6.91702e+06       870778  7.10248e+07  1.20383e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-05  6.28e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.15e-06  6.28e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.24461, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0001 atm	 Temperature = 1601.11 K
      collision frequency = 311231 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.104211, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.39938, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.269374
      maximal relaxation eigenvalue / collision frequency = 1.61778e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        5.75489e+07  1.68976e+07  5.56615e+06  6.22532e+06       783700  6.39223e+07  1.08345e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-05  6.14e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-06  6.14e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.23549, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0003 atm	 Temperature = 1601.11 K
      collision frequency = 933694 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.104546, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.36826, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.268778
      maximal relaxation eigenvalue / collision frequency = 5.39262e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
         1.9183e+07  5.63253e+06  1.85538e+06  2.07511e+06       261233  2.13074e+07   3.6115e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.18e-06  4.93e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-06  4.93e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.20782, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0005 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+06 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.10361, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.35555, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.268531
      maximal relaxation eigenvalue / collision frequency = 3.23557e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.15098e+07  3.37952e+06  1.11323e+06  1.24506e+06       156740  1.27845e+07   2.1669e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.35e-06  4.52e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-06  4.52e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.5e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.19222, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0007 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+06 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.34342, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.268383
      maximal relaxation eigenvalue / collision frequency = 2.31112e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.22127e+06  2.41394e+06       795165       889331       111957  9.13176e+06  1.54779e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.88e-06   4.3e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-06   4.3e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.17474, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0009 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+06 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.32622, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.26828
      maximal relaxation eigenvalue / collision frequency = 1.79754e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.39432e+06  1.87751e+06       618462       691702      87077.8  7.10248e+06  1.20383e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.57e-06  4.14e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-06  4.14e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.16202, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+06 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02119, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.268239
      maximal relaxation eigenvalue / collision frequency = 1.61778e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        5.75489e+06  1.68976e+06       556615       622532        78370  6.39223e+06  1.08345e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.44e-06  4.08e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-06  4.08e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.84117, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.003 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+06 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01866, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.267866
      maximal relaxation eigenvalue / collision frequency = 5.39262e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
         1.9183e+06       563253       185538       207511      26123.3  2.13074e+06       361150
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-06   3.5e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-06   3.5e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.5e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85202, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.005 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+07 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.09807, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04296, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.267711
      maximal relaxation eigenvalue / collision frequency = 3.23557e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.15098e+06       337952       111323       124506        15674  1.27845e+06       216690
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.9e-06  3.24e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-06  3.24e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.86685, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.007 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+07 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06811, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.26761
      maximal relaxation eigenvalue / collision frequency = 2.31112e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             822127       241394      79516.5      88933.1      11195.7       913176       154779
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.61e-06  3.06e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-06  3.06e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.89729, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.009 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+07 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04748, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.267533
      maximal relaxation eigenvalue / collision frequency = 1.79754e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             639432       187751      61846.2      69170.2      8707.78       710248       120383
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-06  2.93e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-06  2.93e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.87859, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+07 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098011, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04638, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.2675
      maximal relaxation eigenvalue / collision frequency = 1.61779e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             575489       168976      55661.5      62253.2         7837       639223       108345
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.31e-06  2.87e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-06  2.87e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.87677, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.03 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+07 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03722, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.267126
      maximal relaxation eigenvalue / collision frequency = 539263
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             191830      56325.3      18553.8      20751.1      2612.33       213074        36115
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.34e-06  2.25e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-06  2.25e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.86703, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.05 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+08 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07207, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.266928
      maximal relaxation eigenvalue / collision frequency = 323558
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             115098      33795.2      11132.3      12450.6       1567.4       127845        21669
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-06  1.96e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-06  1.96e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90257, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.07 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+08 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098044, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06063, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.266789
      maximal relaxation eigenvalue / collision frequency = 231113
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82212.7      24139.4      7951.65      8893.31      1119.57      91317.6      15477.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-06  1.77e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  9.52e-07  1.77e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.89123, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.09 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+08 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097976, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07525, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.26668
      maximal relaxation eigenvalue / collision frequency = 179755
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63943.2      18775.1      6184.62      6917.02      870.778      71024.8      12038.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-06  1.63e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-07  1.63e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.90301, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+08 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06843, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.266634
      maximal relaxation eigenvalue / collision frequency = 161779
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57548.9      16897.6      5566.15      6225.32        783.7      63922.3      10834.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.25e-06  1.58e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.66e-07  1.58e-06        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.89771, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+08 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06324, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.266112
      maximal relaxation eigenvalue / collision frequency = 53927.1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              19183      5632.53      1855.38      2075.11      261.233      21307.4       3611.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-06  1.03e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.15e-07  1.03e-06         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.89242, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+09 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.09816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11102, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.265851
      maximal relaxation eigenvalue / collision frequency = 32356.7
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11509.8      3379.52      1113.23      1245.06       156.74      12784.5       2166.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-06   8.2e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-07   8.2e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.2e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.94506, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+09 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1251, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.265674
      maximal relaxation eigenvalue / collision frequency = 23112.2
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8221.27      2413.94      795.165      889.331      111.957      9131.76      1547.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-06  6.95e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.48e-07  6.95e-07        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.9e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.94989, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+09 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17054, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.265541
      maximal relaxation eigenvalue / collision frequency = 17976.4
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6394.32      1877.51      618.462      691.702      87.0778      7102.48      1203.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-06   6.1e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.04e-07   6.1e-07        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.1e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.00601, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+09 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097982, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16247, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.265485
      maximal relaxation eigenvalue / collision frequency = 16178.8
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5754.89      1689.76      556.615      622.532        78.37      6392.23      1083.45
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-06  5.76e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-07  5.76e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.8e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.98648, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+09 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22606, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.264893
      maximal relaxation eigenvalue / collision frequency = 5393.6
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1918.3      563.253      185.538      207.511      26.1233      2130.74       361.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.65e-07  2.96e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-07  2.96e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.05488, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+10 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25326, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.264621
      maximal relaxation eigenvalue / collision frequency = 3236.56
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1150.98      337.952      111.323      124.506       15.674      1278.45       216.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.57e-07  2.07e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-07  2.07e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.08317, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+10 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25479, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.264446
      maximal relaxation eigenvalue / collision frequency = 2312.11
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            822.127      241.394      79.5165      88.9331      11.1957      913.176      154.779
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.42e-07   1.6e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-07   1.6e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.6e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.08351, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+10 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28056, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.264317
      maximal relaxation eigenvalue / collision frequency = 1798.53
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            639.432      187.751      61.8462      69.1702      8.70778      710.248      120.383
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.66e-07  1.31e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-07  1.31e-07        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.11243, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+10 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2772, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.264263
      maximal relaxation eigenvalue / collision frequency = 1618.77
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            575.489      168.976      55.6615      62.2532        7.837      639.223      108.345
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-07   1.2e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-07   1.2e-07         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.10696, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+10 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26037, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.263741
      maximal relaxation eigenvalue / collision frequency = 540.249
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             191.83      56.3253      18.5538      20.7511      2.61233      213.074       36.115
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-07  4.42e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-08  4.42e-08         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.4e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.09316, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+11 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2737, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.263523
      maximal relaxation eigenvalue / collision frequency = 324.544
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            115.098      33.7952      11.1323      12.4506       1.5674      127.845       21.669
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-07   2.6e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-08   2.6e-08        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.6e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.1031, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+11 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2661, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.263391
      maximal relaxation eigenvalue / collision frequency = 232.1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82.2127      24.1394      7.95165      8.89331      1.11957      91.3176      15.4779
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-07  1.79e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-08  1.79e-08        -1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.10199, elapsed time[sec] = 7
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+11 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097974, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27362, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.263297
      maximal relaxation eigenvalue / collision frequency = 180.742
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.9432      18.7751      6.18462      6.91702     0.870778      71.0248      12.0383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1591, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.503511, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6639, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.12225e-08  9.12225e-08  1.33298e-08
      low eigenvalue method done, cpu time[sec] = 20.6776, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.12e-08  1.33e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-08  1.33e-08         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.776, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+11 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28461, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.26326
      maximal relaxation eigenvalue / collision frequency = 162.766
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.5489      16.8976      5.56615      6.22532       0.7837      63.9223      10.8345
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1596, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.492293, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6532, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.37758e-08  8.37758e-08  1.17526e-08
      low eigenvalue method done, cpu time[sec] = 20.6668, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.38e-08  1.18e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-08  1.18e-08         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.7825, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+11 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27876, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.262924
      maximal relaxation eigenvalue / collision frequency = 54.9155
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             19.183      5.63253      1.85538      2.07511     0.261233      21.3074       3.6115
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 19.907, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.499815, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.4081, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.28779e-08  3.28778e-08  2.80512e-09
      low eigenvalue method done, cpu time[sec] = 20.4217, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-08  2.81e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.64e-09  2.81e-09         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.5378, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+12 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.51336, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262803
      maximal relaxation eigenvalue / collision frequency = 33.3462
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.5098      3.37952      1.11323      1.24506      0.15674      12.7845       2.1669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1516, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.512529, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6653, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07415e-08  2.07415e-08  1.33713e-09
      low eigenvalue method done, cpu time[sec] = 20.679, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-08  1.34e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-09  1.34e-09         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.0266, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 700 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+12 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.102242, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.53919, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.262735
      maximal relaxation eigenvalue / collision frequency = 24.1027
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.22127      2.41394     0.795165     0.889331     0.111957      9.13176      1.54779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1742, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.5061, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6816, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5202e-08   1.5202e-08  8.00137e-10
      low eigenvalue method done, cpu time[sec] = 20.6955, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-08     8e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.99e-09     8e-10         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.0652, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 900 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+12 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33814, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.26269
      maximal relaxation eigenvalue / collision frequency = 18.9676
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.39432      1.87751     0.618462     0.691702    0.0870778      7.10248      1.20383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.0104, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.512531, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.5242, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20143e-08  1.20143e-08  5.38308e-10
      low eigenvalue method done, cpu time[sec] = 20.5379, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-08  5.38e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-09  5.38e-10         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.4e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.712, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1000 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+12 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097993, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34358, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262673
      maximal relaxation eigenvalue / collision frequency = 17.1704
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5.75489      1.68976     0.556615     0.622532      0.07837      6.39223      1.08345
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1683, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.479578, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6711, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08774e-08  1.08774e-08  4.54451e-10
      low eigenvalue method done, cpu time[sec] = 20.6848, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-08  4.54e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-09  4.54e-10         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.5e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.8544, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3000 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+12 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38318, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262536
      maximal relaxation eigenvalue / collision frequency = 6.38838
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1.9183     0.563253     0.185538     0.207511    0.0261233      2.13074      0.36115
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.3286, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.519932, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.8498, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.77906e-09  3.77905e-09  7.01416e-11
      low eigenvalue method done, cpu time[sec] = 20.8635, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.78e-09  7.01e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  9.92e-10  7.01e-11         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.0804, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5000 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+13 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.09785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4082, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262496
      maximal relaxation eigenvalue / collision frequency = 4.23246
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.15098     0.337952     0.111323     0.124506     0.015674      1.27845      0.21669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.2567, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.494263, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.7522, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2903e-09  2.29031e-09  2.78318e-11
      low eigenvalue method done, cpu time[sec] = 20.766, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.29e-09  2.78e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.01e-10  2.78e-11         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.0002, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7000 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+13 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.63377, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.262476
      maximal relaxation eigenvalue / collision frequency = 3.3086
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.822127     0.241394    0.0795165    0.0889331    0.0111957     0.913176     0.154779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1554, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.499731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6563, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.64347e-09  1.64347e-09   1.4909e-11
      low eigenvalue method done, cpu time[sec] = 20.67, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-09  1.49e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-10  1.49e-11         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.1436, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9000 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+13 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43394, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.262463
      maximal relaxation eigenvalue / collision frequency = 2.79539
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.639432     0.187751    0.0618462    0.0691702   0.00870778     0.710248     0.120383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1522, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.480126, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6513, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28162e-09  1.28164e-09  9.29041e-12
      low eigenvalue method done, cpu time[sec] = 20.665, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-09  9.29e-12         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.36e-10  9.29e-12         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.3e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.9236, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10000 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+13 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.09801, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.63552, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262459
      maximal relaxation eigenvalue / collision frequency = 2.61577
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.575489     0.168976    0.0556615    0.0622532     0.007837     0.639223     0.108345
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.2655, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.509179, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.7759, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15455e-09  1.15456e-09  7.60774e-12
      low eigenvalue method done, cpu time[sec] = 20.7896, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-09  7.61e-12         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.03e-10  7.61e-12         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.6e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.2572, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30000 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+13 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.097761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.492, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.262427
      maximal relaxation eigenvalue / collision frequency = 1.53821
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            0.19183    0.0563253    0.0185538    0.0207511   0.00261233     0.213074     0.036115
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.2699, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.510565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.7818, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.87121e-10  3.87123e-10  9.09363e-13
      low eigenvalue method done, cpu time[sec] = 20.7955, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-10  9.09e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-10  9.09e-13         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.1e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.1165, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50000 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+14 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.7009, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.26242
      maximal relaxation eigenvalue / collision frequency = 1.32276
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.115098    0.0337952    0.0111323    0.0124506    0.0015674     0.127845     0.021669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1553, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.51211, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6686, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.32549e-10  2.32559e-10   3.3288e-13
      low eigenvalue method done, cpu time[sec] = 20.6822, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-10  3.32e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-11  3.32e-13         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.3e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.2116, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70000 atm	 Temperature = 1601.11 K
      collision frequency = 2.17862e+14 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.103456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.70911, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262417
      maximal relaxation eigenvalue / collision frequency = 1.23044
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0822127    0.0241394   0.00795165   0.00889331   0.00111957    0.0913176    0.0154779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1601, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.511371, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.6727, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66196e-10  1.66202e-10  1.71105e-13
      low eigenvalue method done, cpu time[sec] = 20.6866, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-10   1.7e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-11   1.7e-13         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.7e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.2324, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90000 atm	 Temperature = 1601.11 K
      collision frequency = 2.80108e+14 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.104159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.69679, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.262415
      maximal relaxation eigenvalue / collision frequency = 1.17916
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0639432    0.0187751   0.00618462   0.00691702  0.000870778    0.0710248    0.0120383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.1745, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.498215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.674, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29306e-10  1.29307e-10  1.03946e-13
      low eigenvalue method done, cpu time[sec] = 20.6877, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-10  1.03e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-11  1.03e-13         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.2208, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100000 atm	 Temperature = 1601.11 K
      collision frequency = 3.11231e+14 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.105535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.70852, elapsed time[sec] = 6
      minimal relaxation eigenvalue / collision frequency = 0.262414
      maximal relaxation eigenvalue / collision frequency = 1.16121
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0575489    0.0168976   0.00556615   0.00622532    0.0007837    0.0639223    0.0108345
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.0388, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.48218, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.5494, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16391e-10  1.16388e-10  8.43216e-14
      low eigenvalue method done, cpu time[sec] = 20.563, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-10  8.33e-14         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-11  8.33e-14         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.3e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 28.1092, elapsed time[sec] = 10
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300000 atm	 Temperature = 1601.11 K
      collision frequency = 9.33694e+14 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.09805, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55731, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.26241
      maximal relaxation eigenvalue / collision frequency = 1.05356
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.019183   0.00563253   0.00185538   0.00207511  0.000261233    0.0213074    0.0036115
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.3574, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.491989, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.8507, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.88155e-11  3.88206e-11  9.45489e-15
      low eigenvalue method done, cpu time[sec] = 20.8644, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-11  7.99e-15         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-11  7.99e-15         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.2511, elapsed time[sec] = 11
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500000 atm	 Temperature = 1601.11 K
      collision frequency = 1.55616e+15 1/sec
      global relaxation matrix dimension = 1553
      setting global matrices ... done, cpu time[sec] = 0.098131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56548, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.262409
      maximal relaxation eigenvalue / collision frequency = 1.03204
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0115098   0.00337952   0.00111323   0.00124506   0.00015674    0.0127845    0.0021669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 20.3171, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.515669, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 20.834, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.3289e-11  2.32953e-11   3.4101e-15
      low eigenvalue method done, cpu time[sec] = 20.8476, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-11  2.22e-15         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-12  2.22e-15         1
         *Z       ---       ---  5.16e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.2e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 29.2483, elapsed time[sec] = 11
rate calculation done, cpu time[sec] = 811.933, elapsed time[sec] = 465
