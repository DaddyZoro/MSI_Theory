Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         effective rotational constant[1/cm]  = 27.3386
         analytic  frequency at minimum[1/cm] = 264.582
         numerical frequency at minimum[1/cm] = 264.58
         minimum energy[kcal/mol]             = -0.652133
         maximum energy[kcal/mol]             = 4.43076
         maximum frequency[1/cm]              = 304.056
         maximum imaginary frequency[1/cm]    = 363.663
         ground energy [kcal/mol]             = -0.331612
         highest energy level [kcal/mol]      = 181.149
         number of levels                     = 97
         10 lowest excited states [kcal/mol] relative to the ground: 0.0416 0.501 0.787 1.2 1.64 2.1 2.58 3.06 3.55
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum      Classical  Semiclassical  ***
           100        1.91315        2.83254        1.89531
           200        2.39365        2.62672        2.39014
           300          2.881        2.99583        2.87973
           400        3.35757        3.42902        3.35695
           500        3.82304        3.87287        3.82272
           600        4.27901        4.31609        4.27884
           700        4.72624        4.75501        4.72615
           800        5.16483        5.18782        5.16479
           900        5.59466        5.61343        5.59464
          1000        6.01554        6.03113        6.01553
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 0.003096, elapsed time[sec] = 0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.002428, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.007414, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
               hamiltonian size                = 175
               ground energy [kcal/mol]        = -0.331612
               highest level energy [kcal/mol] = 579.487
               number of levels                = 173
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.003317, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.378751, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3975
      interpolating states number/density done, cpu time[sec] = 0.424458, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.427715, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         18.6636
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 4.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.55031        9.55025        4.77514
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000131, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         19.7115        11.2506        7.16248
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         27.4891        14.3449        9.42601
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000102, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.37766        1.21309        1.07414
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.8e-05, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.70369        1.21669        1.08113
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 9e-05, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: linear
            rotational constant[1/cm]:         60.4052
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         9.46649        1.30145        1.14415
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 8.6e-05, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         6.45653       0.996021       0.869895
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 3.1e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 7.3e-05, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.24344       0.933826       0.927158
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 2.9e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 6.7e-05, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000881, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000845, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00216, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.005001, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.022645, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.022687, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001595, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004967, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.020894, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020946, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001577, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004942, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.020588, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020638, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001571, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004932, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020746, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020798, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001574, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004907, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020683, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020737, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001566, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004868, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.020314, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020365, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001608, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00485, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020291, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020341, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001553, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004836, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.020394, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020446, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001541, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00483, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.020348, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020404, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004829, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.020311, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020364, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001543, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.020292, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020346, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001536, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004813, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.020227, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020282, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001539, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004813, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.020235, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020288, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001529, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004807, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.019821, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.019871, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001532, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004821, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.020229, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020283, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001533, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004826, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.020291, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020351, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001555, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004817, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.020372, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020424, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 5.35968, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 5.97212, elapsed time[sec] = 2
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001594, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00499, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.02139, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.021443, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001583, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004966, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.020591, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020643, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001578, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004942, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.020541, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.02059, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001568, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004919, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.020379, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020431, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00156, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004898, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.020243, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020295, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001565, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004883, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.020235, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020286, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001561, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004856, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.020282, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020333, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001567, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004844, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.02022, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020269, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001563, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004835, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.020246, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020295, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001581, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004829, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.020072, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020121, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00155, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004825, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.020037, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020085, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00155, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004824, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.020141, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020191, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001542, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004829, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.020017, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020069, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001543, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004839, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.020352, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020405, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001545, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004845, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.020541, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020602, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001546, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004849, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.02045, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.020508, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 6.08889, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 6.68074, elapsed time[sec] = 1
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::RigidRotor::RigidRotor:  starts
      Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001739, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.005454, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 33.149, elapsed time[sec] = 4
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 33.1876, elapsed time[sec] = 4
   Model::RRHO::RRHO:  done, cpu time[sec] = 33.1876, elapsed time[sec] = 4
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000939, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000918, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.32337e+28  1.11801e+26  1.79595e+26  1.27054e+26  1.20988e+26  3.09395e+23  9.07742e+27  3.09395e+23  8.88157e+27  3.09395e+23  4.22578e+27  3.80274e+23  1.41444e+28  3.80274e+23  1.04332e+28  1.02813e+30  3.90835e+30  1.47521e+35  6.97793e+37 5.12313e+128  6.66931e+29  2.86815e+29
     200  1.33692e+29  7.62301e+26  1.46719e+27  1.01648e+27  9.67917e+26   1.7502e+24  7.26915e+28   1.7502e+24  7.10972e+28   1.7502e+24  3.38168e+28  1.07558e+24  1.21883e+29  1.07558e+24  8.41716e+28   2.6594e+31  6.23661e+31  1.08311e+30  2.15609e+30  1.52794e+59   8.8803e+30   3.6677e+30
     300  5.54011e+29   2.3227e+27  5.26013e+27  3.43494e+27  3.26819e+27  4.82299e+24  2.48509e+29  4.82299e+24  2.42373e+29  4.82299e+24  1.14821e+29  1.97596e+24  4.86792e+29  1.97596e+24  2.97902e+29  1.82848e+32  2.59531e+32  1.44204e+30  1.73251e+30  1.89698e+39  4.41738e+31  1.66472e+31
     400  1.62876e+30  5.05864e+27  1.36165e+28  8.18813e+27  7.76763e+27  9.90065e+24  6.13421e+29  9.90065e+24  5.94841e+29  9.90065e+24  2.78615e+29  3.04219e+24  1.44573e+30  3.04219e+24  7.82109e+29  7.43427e+32   6.7607e+32  3.11922e+30  3.38427e+30  5.81349e+32  1.53174e+32  5.25522e+31
     500  4.05813e+30  9.18441e+27  2.95805e+28  1.61898e+28  1.52757e+28  1.72958e+25  1.28789e+30  1.72958e+25  1.23982e+30  1.72958e+25   5.7057e+29  4.25159e+24  3.66233e+30  4.25159e+24  1.77789e+30  2.27526e+33  1.40931e+33  6.99374e+30  7.25775e+30  2.17394e+31  4.38411e+32  1.38723e+32
     600    9.205e+30  1.48858e+28  5.75714e+28  2.85232e+28  2.67107e+28  2.72836e+25  2.45845e+30  2.72836e+25   2.3485e+30  2.72836e+25  1.05857e+30  5.58887e+24  8.37639e+30  5.58887e+24  3.71358e+30  5.83122e+33  2.59745e+33  1.53855e+31  1.55306e+31  1.56568e+31  1.10959e+33   3.2876e+32
     700  1.96268e+31  2.23327e+28  1.03863e+29  4.64909e+28  4.31284e+28  4.01151e+25  4.40299e+30  4.01151e+25  4.17418e+30  4.01151e+25  1.84184e+30  7.04278e+24  1.77958e+31  7.04278e+24   7.3216e+30  1.32403e+34  4.44561e+33   3.2848e+31  3.24856e+31  2.00146e+31   2.5703e+33  7.23012e+32
     800  3.99726e+31  3.16884e+28  1.77202e+29  7.16645e+28  6.57463e+28  5.60263e+25  7.52403e+30  5.60263e+25  7.08108e+30  5.60263e+25  3.06199e+30  8.60462e+24  3.57018e+31  8.60462e+24  1.38186e+31  2.75318e+34  7.26015e+33  6.79278e+31  6.61014e+31  3.04631e+31  5.55972e+33  1.50221e+33
     900  7.84672e+31  4.31167e+28  2.89593e+29  1.05933e+29  9.59692e+28  7.52475e+25   1.2392e+31  7.52475e+25  1.15817e+31  7.52475e+25  4.91708e+30  1.02674e+25   6.8364e+31  1.02674e+25  2.51764e+31  5.35415e+34  1.14974e+34  1.36142e+32  1.30787e+32  4.96296e+31  1.13778e+34  2.98126e+33
    1000  1.49313e+32  5.67863e+28   4.5729e+29   1.5155e+29  1.35418e+29  9.80094e+25  1.98006e+31  9.80094e+25  1.83844e+31  9.80094e+25  7.67956e+30  1.20253e+25  1.25894e+32  1.20253e+25  4.45216e+31  9.87573e+34  1.78329e+34   2.6486e+32  2.51879e+32  8.31111e+31  2.22336e+34  5.69301e+33
    1100  2.76498e+32  7.28733e+28  7.02014e+29  2.11181e+29  1.85958e+29  1.24549e+26  3.08361e+31  1.24549e+26  2.84529e+31  1.24549e+26  1.17186e+31  1.38735e+25  2.24211e+32  1.38735e+25  7.67118e+31  1.74484e+35  2.72609e+34  5.01126e+32  4.72845e+32  1.40419e+32  4.17712e+34   1.0516e+34
    1200  4.99709e+32  9.15623e+28  1.05243e+30  2.87952e+29   2.4973e+29  1.55112e+26  4.69635e+31  1.55112e+26    4.308e+31  1.55112e+26  1.75274e+31  1.58077e+25  3.87836e+32  1.58077e+25  1.29155e+32  2.97422e+35  4.12329e+34  9.23932e+32   8.6658e+32  2.37069e+32  7.58478e+34  1.88651e+34
    1300  8.83374e+32  1.13047e+29  1.54592e+30  3.85497e+29  3.29178e+29  1.89956e+26  7.01317e+31  1.89956e+26  6.39766e+31  1.89956e+26  2.57572e+31  1.78243e+25  6.53817e+32  1.78243e+25  2.12955e+32  4.91785e+35  6.18529e+34  1.66312e+33  1.55279e+33  3.97859e+32  1.33662e+35  3.29702e+34
    1400  1.53024e+33  1.37529e+29  2.23077e+30  5.08012e+29   4.2708e+29  2.29347e+26  1.02902e+32  2.29347e+26  9.33807e+31  2.29347e+26  3.72573e+31    1.992e+25  1.07714e+33    1.992e+25  3.44487e+32  7.92097e+35  9.21464e+34  2.92792e+33   2.7242e+33  6.61771e+32   2.2936e+35  5.62782e+34
    1500  2.60145e+33  1.65218e+29  3.16862e+30  6.60308e+29  5.46575e+29  2.73564e+26    1.486e+32  2.73564e+26  1.34187e+32  2.73564e+26  5.31243e+31  2.20919e+25   1.7381e+33  2.20919e+25   5.4755e+32  1.24687e+36  1.36429e+35  5.04944e+33  4.68555e+33  1.08918e+33  3.84292e+35  9.40225e+34
    1600  4.34584e+33  1.96331e+29  4.43755e+30  8.47865e+29  6.91195e+29  3.22898e+26  2.11503e+32  3.22898e+26  1.90103e+32  3.22898e+26  7.47593e+31  2.43375e+25  2.75222e+33  2.43375e+25  8.56247e+32  1.92339e+36  2.00811e+35  8.54277e+33  7.91042e+33  1.77224e+33  6.30124e+35  1.54018e+35
    1700  7.14212e+33  2.31092e+29  6.13555e+30   1.0769e+30  8.64899e+29  3.77647e+26  2.97052e+32  3.77647e+26   2.6583e+32  3.77647e+26  1.03937e+32  2.66545e+25   4.2834e+33  2.66545e+25  1.31882e+33  2.91382e+36  2.93871e+35  1.41965e+34  1.31232e+34  2.84978e+33  1.01309e+36  2.47759e+35
    1800  1.15587e+34  2.69732e+29   8.3846e+30  1.35441e+30   1.0721e+30  4.38121e+26  4.12115e+32  4.38121e+26  3.67278e+32  4.38121e+26  1.42886e+32  2.90406e+25  6.56127e+33  2.90406e+25  2.00268e+33  4.34307e+36  4.27567e+35  2.32001e+34  2.14153e+34   4.5282e+33  1.59972e+36  3.91911e+35
    1900  1.84378e+34  3.12487e+29  1.13355e+31  1.68827e+30   1.3177e+30  5.04637e+26  5.65279e+32  5.04637e+26  5.01818e+32  5.04637e+26  1.94381e+32   3.1494e+25  9.90373e+33   3.1494e+25  3.00099e+33  6.37873e+36  6.18439e+35  3.73225e+34  3.44083e+34  7.11066e+33  2.48444e+36  6.10326e+35
    2000  2.90124e+34  3.59599e+29  1.51731e+31  2.08726e+30  1.60714e+30  5.77522e+26  7.67203e+32  5.77522e+26  6.78572e+32  5.77522e+26  2.61854e+32  3.40128e+25   1.4746e+34  3.40128e+25   4.4411e+33  9.24353e+36  8.89195e+35  5.91605e+34  5.44797e+34  1.10373e+34  3.79963e+36  9.36719e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 2.29837e+225  1.02813e+30  1.82417e+29    3.594e+38   2.9701e+47 1.37266e+129  2.66905e+20     0.948942
     200 5.57152e+127   2.6594e+31  1.34736e+31  5.34606e+31  1.40666e+35  2.50103e+59   1.7765e+26  6.67134e+15
     300  3.09099e+95  1.82848e+32   9.3443e+31  1.94038e+31  2.80774e+33  2.63474e+39  3.25529e+28  2.48059e+21
     400    3.325e+79  7.43427e+32  3.14239e+32  2.19142e+31  8.64423e+32  7.43778e+32    6.851e+29   2.2413e+24
     500  1.13834e+70  2.27526e+33  7.63521e+32  3.32701e+31  6.11802e+32   2.6476e+31  5.78544e+30  1.76229e+26
     600  6.87565e+63  5.83122e+33  1.55857e+33  5.64371e+31  6.25213e+32  1.84519e+31  3.01214e+31  4.01315e+27
     700  2.95091e+59  1.32403e+34  2.86945e+33  1.00075e+32  7.71381e+32  2.30406e+31  1.16802e+32  4.44289e+28
     800  1.80605e+56  2.75318e+34  4.94971e+33  1.80048e+32  1.05643e+33   3.4457e+31  3.71824e+32  3.10232e+29
     900  6.45973e+53  5.35415e+34  8.17932e+33  3.23813e+32  1.53624e+33  5.53732e+31   1.0277e+33  1.58053e+30
    1000  7.90811e+51  9.87573e+34  1.31259e+34  5.77682e+32  2.31258e+33  9.17195e+31  2.55409e+33  6.41662e+30
    1100  2.35818e+50  1.74484e+35  2.06322e+34  1.01819e+33  3.54884e+33  1.53581e+32  5.84168e+33  2.19695e+31
    1200  1.36572e+49  2.97422e+35  3.19399e+34  1.76957e+33   5.4983e+33  2.57362e+32  1.24968e+34  6.59117e+31
    1300  1.31351e+48  4.91785e+35  4.88631e+34  3.02998e+33  8.54687e+33  4.29194e+32  2.52991e+34  1.77992e+32
    1400  1.87634e+47  7.92097e+35  7.40307e+34  5.11055e+33  1.32748e+34  7.10037e+32  4.88935e+34  4.41164e+32
    1500  3.66886e+46  1.24687e+36  1.11219e+35   8.4923e+33  2.05446e+34  1.16314e+33  9.08125e+34   1.0183e+33
    1600  9.23757e+45  1.92339e+36  1.65808e+35  1.39081e+34  3.16238e+34  1.88484e+33  1.62955e+35  2.21334e+33
    1700  2.85867e+45  2.91382e+36  2.45396e+35  2.24595e+34  4.83564e+34  3.01988e+33  2.83688e+35  4.56972e+33
    1800  1.04875e+45  4.34307e+36  3.60632e+35    3.578e+34  7.33958e+34  4.78305e+33  4.80782e+35   9.0238e+33
    1900  4.43352e+44  6.37873e+36  5.26318e+35  5.62626e+34  1.10524e+35  7.48924e+33  7.95446e+35  1.71381e+34
    2000   2.1114e+44  9.24353e+36   7.6287e+35  8.73711e+34  1.65077e+35  1.15948e+34  1.28782e+36  3.14479e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 47.5017, elapsed time[sec] = 8
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 1646.24 K
      Collision rate   = 6.85728e-10cm^3/sec
      Energy reference = 50486 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: density of states done, elapsed time[sec] = 0.000356
         W1 Well: cannot satisfy the constant collision frequency at energy = -31314 1/cm, truncating the well
         W1 Well: cannot satisfy the constant collision frequency at energy = -31264 1/cm, truncating the well
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.075736
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.072554
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.54951
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.14812
         W1 Well: minimal relaxation eigenvalue = 0.0218124
         W1 Well: maximal relaxation eigenvalue = 1.02987
         W1 Well:       grid size = 1635
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31264 1/cm
         B1 Barrier:        grid size = 1010
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 1006
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 1102
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4614 1/cm
         B4 Barrier:        grid size = 1134
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6214 1/cm
         B5 Barrier: nonpositive number of states at -23614 1/cm => truncating
         B5 Barrier:        grid size = 1482
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23614 1/cm
         B6 Barrier:        grid size = 980
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 916
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4686 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.87477, elapsed time[sec] = 3
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31264 -23614 2.55e+05 1.51e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  9.5e+16
         B2    187 2.88e+16
         B3  -4614 9.66e+15
         B4  -6214 1.08e+16
         B5 -23614 1.36e+15
         B6   1486 1.08e+17
         B7   4687 1.88e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.1e-11   3.8e-11  4.91e-12  1.33e-12  4.07e-19  9.95e-10  5.33e-08
          R  4.76e+10         1      1.81     0.234    0.0631  1.94e-08      47.4  2.54e+03
         P1  2.63e+10     0.552         1     0.129    0.0349  1.07e-08      26.2   1.4e+03
         P2  2.04e+11      4.28      7.74         1      0.27  8.29e-08       203  1.09e+04
         P3  7.55e+11      15.8      28.7      3.71         1  3.07e-07       751  4.03e+04
         P4  2.46e+18  5.16e+07  9.35e+07  1.21e+07  3.26e+06         1  2.45e+09  1.31e+11
         P5     1e+09    0.0211    0.0382   0.00493   0.00133  4.09e-10         1      53.6
         P6  1.87e+07  0.000394  0.000713   9.2e-05  2.48e-05  7.63e-12    0.0187         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.8e-15  8.68e-15  1.12e-15  3.03e-16  9.29e-23  2.27e-13  1.22e-11
          R  2.09e+14         1      1.81     0.234    0.0631  1.94e-08      47.4  2.54e+03
         P1  1.15e+14     0.552         1     0.129    0.0349  1.07e-08      26.2   1.4e+03
         P2  8.92e+14      4.28      7.74         1      0.27  8.29e-08       203  1.09e+04
         P3   3.3e+15      15.8      28.7      3.71         1  3.07e-07       751  4.03e+04
         P4  1.08e+22  5.16e+07  9.35e+07  1.21e+07  3.26e+06         1  2.45e+09  1.31e+11
         P5   4.4e+12    0.0211    0.0382   0.00493   0.00133  4.09e-10         1      53.6
         P6  8.21e+10  0.000394  0.000713   9.2e-05  2.48e-05  7.63e-12    0.0187         1
   MasterEquation::set:  done, cpu time[sec] = 2.87683, elapsed time[sec] = 3
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1e-05 atm	 Temperature = 1646.24 K
      collision frequency = 30567 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108586, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.598, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0226214
      maximal relaxation eigenvalue / collision frequency = 1.76858e+09
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.16667e+08  1.86717e+08  6.27232e+07  6.98298e+07  8.84574e+06  7.01763e+08  1.22036e+08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.21e-05  2.68e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-06  2.68e-05         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.7e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54429, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3e-05 atm	 Temperature = 1646.24 K
      collision frequency = 91700.9 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.10852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56106, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0225665
      maximal relaxation eigenvalue / collision frequency = 5.89527e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.05556e+08  6.22389e+07  2.09077e+07  2.32766e+07  2.94858e+06  2.33921e+08  4.06786e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-05  2.29e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-06  2.29e-05         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50498, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5e-05 atm	 Temperature = 1646.24 K
      collision frequency = 152835 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108806, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55419, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0225384
      maximal relaxation eigenvalue / collision frequency = 3.53716e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.23333e+08  3.73434e+07  1.25446e+07   1.3966e+07  1.76915e+06  1.40353e+08  2.44071e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.01e-05   2.1e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-06   2.1e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5048, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7e-05 atm	 Temperature = 1646.24 K
      collision frequency = 213969 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.10866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54523, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0225192
      maximal relaxation eigenvalue / collision frequency = 2.52655e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.80953e+07  2.66738e+07  8.96046e+06  9.97568e+06  1.26368e+06  1.00252e+08  1.74337e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.75e-05  1.98e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-06  1.98e-05         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.49426, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9e-05 atm	 Temperature = 1646.24 K
      collision frequency = 275103 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.113781, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53435, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0225045
      maximal relaxation eigenvalue / collision frequency = 1.96509e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.85186e+07  2.07463e+07  6.96925e+06  7.75886e+06       982860  7.79737e+07  1.35595e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-05  1.89e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-06  1.89e-05         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.9e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.49072, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0001 atm	 Temperature = 1646.24 K
      collision frequency = 305670 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52016, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0224983
      maximal relaxation eigenvalue / collision frequency = 1.76858e+08
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.16667e+07  1.86717e+07  6.27232e+06  6.98298e+06       884574  7.01763e+07  1.22036e+07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.47e-05  1.85e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-06  1.85e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47027, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0003 atm	 Temperature = 1646.24 K
      collision frequency = 917009 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48809, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0224323
      maximal relaxation eigenvalue / collision frequency = 5.89527e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.05556e+07  6.22389e+06  2.09077e+06  2.32766e+06       294858  2.33921e+07  4.06786e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.66e-05  1.48e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.22e-07  1.48e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43978, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0005 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+06 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47012, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0224027
      maximal relaxation eigenvalue / collision frequency = 3.53716e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.23333e+07  3.73434e+06  1.25446e+06   1.3966e+06       176915  1.40353e+07  2.44071e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-05  1.34e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.45e-07  1.34e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41898, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0007 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+06 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.10872, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4667, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0223843
      maximal relaxation eigenvalue / collision frequency = 2.52655e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        8.80953e+06  2.66738e+06       896046       997568       126368  1.00252e+07  1.74337e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.13e-05  1.25e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0     7e-07  1.25e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.42314, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.0009 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+06 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45549, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0223713
      maximal relaxation eigenvalue / collision frequency = 1.96509e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.85186e+06  2.07463e+06       696925       775886        98286  7.79737e+06  1.35595e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-05   1.2e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.68e-07   1.2e-05        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39783, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+06 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108643, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46068, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0223661
      maximal relaxation eigenvalue / collision frequency = 1.76858e+07
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.16667e+06  1.86717e+06       627232       698298      88457.4  7.01763e+06  1.22036e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-05  1.18e-05         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.56e-07  1.18e-05         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41046, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.003 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+06 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45938, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.022319
      maximal relaxation eigenvalue / collision frequency = 5.89527e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.05556e+06       622389       209077       232766      29485.8  2.33921e+06       406786
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-05  9.89e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-07  9.89e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41107, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.005 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+07 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48011, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0223009
      maximal relaxation eigenvalue / collision frequency = 3.53716e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.23333e+06       373434       125446       139660      17691.5  1.40353e+06       244071
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.29e-05  9.21e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-07  9.21e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43463, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.007 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+07 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108636, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48746, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0222898
      maximal relaxation eigenvalue / collision frequency = 2.52655e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             880953       266738      89604.6      99756.8      12636.8  1.00252e+06       174337
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-05  8.79e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.88e-07  8.79e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43183, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.009 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+07 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108702, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53227, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0222817
      maximal relaxation eigenvalue / collision frequency = 1.96509e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             685186       207463      69692.5      77588.6       9828.6       779737       135595
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-05  8.48e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-07  8.48e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.5e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.48199, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+07 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4919, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0222783
      maximal relaxation eigenvalue / collision frequency = 1.76858e+06
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             616667       186717      62723.2      69829.8      8845.74       701763       122036
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-05  8.36e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-07  8.36e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.4e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44129, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.03 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+07 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56631, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0222428
      maximal relaxation eigenvalue / collision frequency = 589528
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             205556      62238.9      20907.7      23276.6      2948.58       233921      40678.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-05  7.05e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-07  7.05e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51863, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.05 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+08 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112087, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56767, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0222252
      maximal relaxation eigenvalue / collision frequency = 353717
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             123333      37343.4      12544.6        13966      1769.15       140353      24407.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-05  6.42e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.66e-07  6.42e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.4e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.52152, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.07 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+08 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111561, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61056, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.022213
      maximal relaxation eigenvalue / collision frequency = 252655
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88095.3      26673.8      8960.46      9975.68      1263.68       100252      17433.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-05  6.01e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.45e-07  6.01e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56811, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.09 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+08 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64102, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0222036
      maximal relaxation eigenvalue / collision frequency = 196510
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68518.6      20746.3      6969.25      7758.86       982.86      77973.7      13559.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-05  5.69e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-07  5.69e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.7e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.59428, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+08 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111767, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63972, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0221996
      maximal relaxation eigenvalue / collision frequency = 176859
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61666.7      18671.7      6272.32      6982.98      884.574      70176.3      12203.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-05  5.56e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.22e-07  5.56e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.59166, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+08 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78285, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0221549
      maximal relaxation eigenvalue / collision frequency = 58953.7
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20555.6      6223.89      2090.77      2327.66      294.858      23392.1      4067.86
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-05  4.21e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-07  4.21e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.73727, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+09 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80809, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0221326
      maximal relaxation eigenvalue / collision frequency = 35372.6
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12333.3      3734.34      1254.46       1396.6      176.915      14035.3      2440.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-05  3.62e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-07  3.62e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.6e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76666, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+09 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83033, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0221175
      maximal relaxation eigenvalue / collision frequency = 25266.4
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8809.53      2667.38      896.046      997.568      126.368      10025.2      1743.37
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.17e-06  3.24e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-07  3.24e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.7798, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+09 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112096, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80341, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0221061
      maximal relaxation eigenvalue / collision frequency = 19651.8
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6851.86      2074.63      696.925      775.886       98.286      7797.37      1355.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.53e-06  2.97e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-07  2.97e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75857, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+09 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83204, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0221013
      maximal relaxation eigenvalue / collision frequency = 17686.7
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6166.67      1867.17      627.232      698.298      88.4574      7017.63      1220.36
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.27e-06  2.86e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-07  2.86e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.9e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.78396, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+09 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80747, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0220503
      maximal relaxation eigenvalue / collision frequency = 5896.21
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2055.56      622.389      209.077      232.766      29.4858      2339.21      406.786
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.73e-06  1.84e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-07  1.84e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76136, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+10 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81151, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0220266
      maximal relaxation eigenvalue / collision frequency = 3538.1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1233.33      373.434      125.446       139.66      17.6915      1403.53      244.071
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-06  1.45e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-07  1.45e-06         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76503, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+10 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111798, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81687, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0220111
      maximal relaxation eigenvalue / collision frequency = 2527.48
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            880.953      266.738      89.6046      99.7568      12.6368      1002.52      174.337
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-06  1.23e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  9.05e-08  1.23e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76997, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+10 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80397, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219998
      maximal relaxation eigenvalue / collision frequency = 1966.02
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            685.186      207.463      69.6925      77.5886       9.8286      779.737      135.595
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.69e-06  1.07e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-08  1.07e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75848, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+10 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111745, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79861, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219951
      maximal relaxation eigenvalue / collision frequency = 1769.52
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            616.667      186.717      62.7232      69.8298      8.84574      701.763      122.036
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-06  1.01e-06         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-08  1.01e-06        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75141, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+10 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78449, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219481
      maximal relaxation eigenvalue / collision frequency = 590.464
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            205.556      62.2389      20.9077      23.2766      2.94858      233.921      40.6786
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-06  5.18e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-08  5.18e-07        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.2e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.7376, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+11 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.112087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.794, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219281
      maximal relaxation eigenvalue / collision frequency = 354.656
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.333      37.3434      12.5446       13.966      1.76915      140.353      24.4071
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-06  3.61e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-08  3.61e-07         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.6e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75587, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+11 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.111468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.77233, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219158
      maximal relaxation eigenvalue / collision frequency = 253.597
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.0953      26.6738      8.96046      9.97568      1.26368      100.252      17.4337
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-06   2.8e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.82e-08   2.8e-07        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.71812, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+11 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.11149, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79206, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.021907
      maximal relaxation eigenvalue / collision frequency = 197.454
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.5186      20.7463      6.96925      7.75886      0.98286      77.9737      13.5595
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-06   2.3e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-08   2.3e-07        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.74513, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+11 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.113899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81518, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0219034
      maximal relaxation eigenvalue / collision frequency = 177.804
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.6667      18.6717      6.27232      6.98298     0.884574      70.1763      12.2036
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-06  2.11e-07         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-08  2.11e-07         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.77003, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+11 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108994, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.864, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218707
      maximal relaxation eigenvalue / collision frequency = 59.9145
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.5556      6.22389      2.09077      2.32766     0.294858      23.3921      4.06786
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.95e-07  7.78e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-08  7.78e-08        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.8e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80278, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+12 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89374, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218583
      maximal relaxation eigenvalue / collision frequency = 36.3415
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.3333      3.73434      1.25446       1.3966     0.176915      14.0353      2.44071
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.4e-07   4.6e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.43e-09   4.6e-08        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.6e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.84256, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 700 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+12 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90136, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218513
      maximal relaxation eigenvalue / collision frequency = 26.2402
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.80953      2.66738     0.896046     0.997568     0.126368      10.0252      1.74337
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-07  3.17e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.73e-09  3.17e-08         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.2e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85136, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 900 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+12 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.10902, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91108, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218465
      maximal relaxation eigenvalue / collision frequency = 20.629
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.85186      2.07463     0.696925     0.775886     0.098286      7.79737      1.35595
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-07  2.38e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-09  2.38e-08        -1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.4e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86341, elapsed time[sec] = 8
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1000 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+12 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108998, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92395, elapsed time[sec] = 7
      minimal relaxation eigenvalue / collision frequency = 0.0218446
      maximal relaxation eigenvalue / collision frequency = 18.6651
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.16667      1.86717     0.627232     0.698298    0.0884574      7.01763      1.22036
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-07   2.1e-08         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-09   2.1e-08         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86994, elapsed time[sec] = 9
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3000 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+12 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.109024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9964, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218292
      maximal relaxation eigenvalue / collision frequency = 6.88421
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.05556     0.622389     0.209077     0.232766    0.0294858      2.33921     0.406786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.15, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.598782, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7502, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.75659e-08  7.75659e-08  5.07845e-09
      low eigenvalue method done, cpu time[sec] = 22.7681, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.76e-08  5.08e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-09  5.08e-09         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.1e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.7134, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 5000 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+13 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108921, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.03338, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218244
      maximal relaxation eigenvalue / collision frequency = 4.52873
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.23333     0.373434     0.125446      0.13966    0.0176915      1.40353     0.244071
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.0703, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.596267, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.668, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89743e-08  4.89744e-08  2.43759e-09
      low eigenvalue method done, cpu time[sec] = 22.6859, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.9e-08  2.44e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-09  2.44e-09         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.4e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.6684, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 7000 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+13 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0454, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218218
      maximal relaxation eigenvalue / collision frequency = 3.51942
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.880953     0.266738    0.0896046    0.0997568    0.0126368      1.00252     0.174337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.0706, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.584317, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.6563, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.59136e-08  3.59137e-08  1.46514e-09
      low eigenvalue method done, cpu time[sec] = 22.6742, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.59e-08  1.47e-09         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  7.84e-10  1.47e-09         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.6692, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 9000 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+13 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108781, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.04602, elapsed time[sec] = 9
      minimal relaxation eigenvalue / collision frequency = 0.0218203
      maximal relaxation eigenvalue / collision frequency = 2.95876
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.685186     0.207463    0.0696925    0.0775886    0.0098286     0.779737     0.135595
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1397, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.591759, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.733, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83931e-08  2.83935e-08  9.88865e-10
      low eigenvalue method done, cpu time[sec] = 22.7509, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-08  9.89e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-10  9.89e-10         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.9e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.7461, elapsed time[sec] = 13
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10000 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+13 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.109493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.0839, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218197
      maximal relaxation eigenvalue / collision frequency = 2.76255
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.616667     0.186717    0.0627232    0.0698298   0.00884574     0.701763     0.122036
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.0512, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.588011, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.6406, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57106e-08  2.57105e-08  8.35911e-10
      low eigenvalue method done, cpu time[sec] = 22.6585, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.57e-08  8.36e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.61e-10  8.36e-10         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.4e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.6919, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 30000 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+13 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14802, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218154
      maximal relaxation eigenvalue / collision frequency = 1.58561
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.205556    0.0622389    0.0209077    0.0232766   0.00294858     0.233921    0.0406786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1264, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.596859, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7246, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.94309e-09  8.94307e-09  1.30547e-10
      low eigenvalue method done, cpu time[sec] = 22.7426, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.94e-09  1.31e-10         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-10  1.31e-10         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.3e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8406, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 50000 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+14 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.109183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15689, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218143
      maximal relaxation eigenvalue / collision frequency = 1.35037
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.123333    0.0373434    0.0125446     0.013966   0.00176915     0.140353    0.0244071
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1642, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.579918, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7455, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.42184e-09  5.42183e-09  5.20137e-11
      low eigenvalue method done, cpu time[sec] = 22.7634, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.42e-09   5.2e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-10   5.2e-11         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.2e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8759, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 70000 atm	 Temperature = 1646.24 K
      collision frequency = 2.13969e+14 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17527, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218138
      maximal relaxation eigenvalue / collision frequency = 1.24959
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0880953    0.0266738   0.00896046   0.00997568   0.00126368     0.100252    0.0174337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1375, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.59576, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7346, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.89117e-09  3.89121e-09  2.79243e-11
      low eigenvalue method done, cpu time[sec] = 22.7526, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-09  2.79e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  8.49e-11  2.79e-11         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.8e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8713, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 90000 atm	 Temperature = 1646.24 K
      collision frequency = 2.75103e+14 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108956, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17994, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218135
      maximal relaxation eigenvalue / collision frequency = 1.19362
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0685186    0.0207463   0.00696925   0.00775886   0.00098286    0.0779737    0.0135595
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1237, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.591772, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7169, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.03489e-09   3.0348e-09  1.74251e-11
      low eigenvalue method done, cpu time[sec] = 22.7348, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-09  1.74e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  6.62e-11  1.74e-11         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.7e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8646, elapsed time[sec] = 13
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 100000 atm	 Temperature = 1646.24 K
      collision frequency = 3.0567e+14 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18363, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218134
      maximal relaxation eigenvalue / collision frequency = 1.17404
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0616667    0.0186717   0.00627232   0.00698298  0.000884574    0.0701763    0.0122036
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.1219, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.597105, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.7204, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.73394e-09  2.73399e-09  1.42766e-11
      low eigenvalue method done, cpu time[sec] = 22.7384, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-09  1.43e-11         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0  5.96e-11  1.43e-11         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.4e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8711, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 300000 atm	 Temperature = 1646.24 K
      collision frequency = 9.17009e+14 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.20654, elapsed time[sec] = 8
      minimal relaxation eigenvalue / collision frequency = 0.0218128
      maximal relaxation eigenvalue / collision frequency = 1.05662
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0205556   0.00622389   0.00209077   0.00232766  0.000294858    0.0233921   0.00406786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.0642, elapsed time[sec] = 3
            inverting kinetic matrices ... done, cpu time[sec] = 0.593022, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.6586, elapsed time[sec] = 4
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.16929e-10    9.169e-10  1.71285e-12
      low eigenvalue method done, cpu time[sec] = 22.6765, elapsed time[sec] = 4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.17e-10  1.71e-12         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-11  1.71e-12         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.7e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8326, elapsed time[sec] = 12
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 500000 atm	 Temperature = 1646.24 K
      collision frequency = 1.52835e+15 1/sec
      global relaxation matrix dimension = 1635
      setting global matrices ... done, cpu time[sec] = 0.108816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.2222, elapsed time[sec] = 9
      minimal relaxation eigenvalue / collision frequency = 0.0218126
      maximal relaxation eigenvalue / collision frequency = 1.03317
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
          0.0123333   0.00373434   0.00125446    0.0013966  0.000176915    0.0140353   0.00244071
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 22.0729, elapsed time[sec] = 2
            inverting kinetic matrices ... done, cpu time[sec] = 0.597788, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 22.6722, elapsed time[sec] = 3
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.50864e-10   5.5084e-10  6.27566e-13
      low eigenvalue method done, cpu time[sec] = 22.6901, elapsed time[sec] = 3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.51e-10  6.28e-13         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-11  6.28e-13         1
         *Z       ---       ---  3.83e+20
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.3e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 31.8609, elapsed time[sec] = 13
rate calculation done, cpu time[sec] = 738.082, elapsed time[sec] = 495
