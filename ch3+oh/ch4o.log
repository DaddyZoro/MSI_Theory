Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.006173, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.018099, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.006581, elapsed time[sec] = 0
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 264.579
         numerical frequency at minimum[1/cm] = 264.578
         minimum energy[kcal/mol]             = -0.652133
         maximum energy[kcal/mol]             = 4.43076
         maximum frequency[1/cm]              = 304.053
         ground energy [kcal/mol]             = -0.331614
         highest energy level [kcal/mol]      = 19385.7
         number of levels                     = 997
         10 lowest excited states [kcal/mol] relative to the ground: 0.0416 0.501 0.787 1.2 1.64 2.1 2.58 3.06 3.55
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        1.91319        1.64389        1.89532
           200        2.39372        2.26847        2.39016
           300        2.88105        2.80392        2.87975
           400        3.35761        3.30298        3.35697
           500        3.82311        3.78092        3.82274
           600         4.2791        4.24457        4.27887
           700        4.72634        4.69695        4.72618
           800        5.16494        5.13924        5.16483
           900        5.59476        5.57184        5.59468
          1000        6.01564        5.99492        6.01558
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 10.2284, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.104976, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.030469, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000115, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.254482, elapsed time[sec] = 0
         effective power exponent at 690.248 kcal/mol = 11.4796
      interpolating states number/density done, cpu time[sec] = 1.09912, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.3702, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000513, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000739, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001458, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000258, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000444, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000982, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.004453, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000256, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000438, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000924, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00025, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000409, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000903, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.002963, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00023, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000409, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000851, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000276, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000518, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001336, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.003268, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000221, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000382, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00083, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000245, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000509, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001017, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.002924, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000217, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000375, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000823, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000241, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000415, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000911, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.0028, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000581, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001109, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.002204, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000247, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.000927, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.001962, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.027002, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.026575, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000229, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000395, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.040482, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.013942, elapsed time[sec] = 0
            effective power exponent at 622.659 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.465144, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.466832, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00026, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.028454, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.009633, elapsed time[sec] = 0
            effective power exponent at 619.406 kcal/mol = 11.9694
         interpolating states number/density done, cpu time[sec] = 0.162857, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.163784, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001474, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000505, elapsed time[sec] = 0
            effective power exponent at 616.412 kcal/mol = 11.9705
         interpolating states number/density done, cpu time[sec] = 0.017055, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017123, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001467, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000479, elapsed time[sec] = 0
            effective power exponent at 613.676 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.016996, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017072, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001448, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000504, elapsed time[sec] = 0
            effective power exponent at 611.203 kcal/mol = 11.9723
         interpolating states number/density done, cpu time[sec] = 0.016906, elapsed time[sec] = 1
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016975, elapsed time[sec] = 1
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001449, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000494, elapsed time[sec] = 0
            effective power exponent at 608.998 kcal/mol = 11.9731
         interpolating states number/density done, cpu time[sec] = 0.016856, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016931, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001439, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000486, elapsed time[sec] = 0
            effective power exponent at 607.066 kcal/mol = 11.9737
         interpolating states number/density done, cpu time[sec] = 0.016761, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016829, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001436, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000466, elapsed time[sec] = 0
            effective power exponent at 605.407 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016689, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016754, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001435, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000475, elapsed time[sec] = 0
            effective power exponent at 604.049 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.01667, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016738, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001438, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000475, elapsed time[sec] = 0
            effective power exponent at 602.986 kcal/mol = 11.9739
         interpolating states number/density done, cpu time[sec] = 0.016644, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016713, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001443, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000483, elapsed time[sec] = 0
            effective power exponent at 602.234 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.016832, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016912, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001431, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000474, elapsed time[sec] = 0
            effective power exponent at 601.762 kcal/mol = 11.9738
         interpolating states number/density done, cpu time[sec] = 0.016624, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016691, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000478, elapsed time[sec] = 0
            effective power exponent at 601.548 kcal/mol = 11.974
         interpolating states number/density done, cpu time[sec] = 0.016611, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016678, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000502, elapsed time[sec] = 0
            effective power exponent at 601.608 kcal/mol = 11.9746
         interpolating states number/density done, cpu time[sec] = 0.016617, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016686, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00049, elapsed time[sec] = 0
            effective power exponent at 601.856 kcal/mol = 11.9754
         interpolating states number/density done, cpu time[sec] = 0.016615, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016696, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001428, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000486, elapsed time[sec] = 0
            effective power exponent at 602.254 kcal/mol = 11.9765
         interpolating states number/density done, cpu time[sec] = 0.016627, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016699, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001431, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 602.763 kcal/mol = 11.978
         interpolating states number/density done, cpu time[sec] = 0.016545, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016613, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.34776, elapsed time[sec] = 1
      effective power exponent at 601.548 kcal/mol = 12.1579
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 2.25869, elapsed time[sec] = 2
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001445, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000477, elapsed time[sec] = 0
            effective power exponent at 621.876 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.017809, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.017898, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000487, elapsed time[sec] = 0
            effective power exponent at 618.814 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016545, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016619, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001427, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000464, elapsed time[sec] = 0
            effective power exponent at 616.032 kcal/mol = 11.973
         interpolating states number/density done, cpu time[sec] = 0.016467, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016539, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001414, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000496, elapsed time[sec] = 0
            effective power exponent at 613.53 kcal/mol = 11.9729
         interpolating states number/density done, cpu time[sec] = 0.0164, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016469, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001417, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00046, elapsed time[sec] = 0
            effective power exponent at 611.311 kcal/mol = 11.9725
         interpolating states number/density done, cpu time[sec] = 0.016291, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01636, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001414, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000467, elapsed time[sec] = 0
            effective power exponent at 609.396 kcal/mol = 11.972
         interpolating states number/density done, cpu time[sec] = 0.016277, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016345, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001412, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000481, elapsed time[sec] = 0
            effective power exponent at 607.789 kcal/mol = 11.9714
         interpolating states number/density done, cpu time[sec] = 0.016269, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016338, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001431, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000497, elapsed time[sec] = 0
            effective power exponent at 606.494 kcal/mol = 11.9706
         interpolating states number/density done, cpu time[sec] = 0.016345, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016414, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001428, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000483, elapsed time[sec] = 0
            effective power exponent at 605.53 kcal/mol = 11.9698
         interpolating states number/density done, cpu time[sec] = 0.016289, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016357, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001424, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000464, elapsed time[sec] = 0
            effective power exponent at 604.858 kcal/mol = 11.9691
         interpolating states number/density done, cpu time[sec] = 0.016287, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016355, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001418, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000465, elapsed time[sec] = 0
            effective power exponent at 604.472 kcal/mol = 11.9684
         interpolating states number/density done, cpu time[sec] = 0.016193, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016263, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001399, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00048, elapsed time[sec] = 0
            effective power exponent at 604.404 kcal/mol = 11.9683
         interpolating states number/density done, cpu time[sec] = 0.016191, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016259, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001392, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000454, elapsed time[sec] = 0
            effective power exponent at 604.572 kcal/mol = 11.9685
         interpolating states number/density done, cpu time[sec] = 0.016118, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016187, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001393, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000474, elapsed time[sec] = 0
            effective power exponent at 604.93 kcal/mol = 11.9692
         interpolating states number/density done, cpu time[sec] = 0.01616, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016232, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001397, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000444, elapsed time[sec] = 0
            effective power exponent at 605.433 kcal/mol = 11.9702
         interpolating states number/density done, cpu time[sec] = 0.01624, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016314, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001403, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000485, elapsed time[sec] = 0
            effective power exponent at 606.042 kcal/mol = 11.9715
         interpolating states number/density done, cpu time[sec] = 0.016209, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.016294, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.50718, elapsed time[sec] = 2
      effective power exponent at 604.404 kcal/mol = 12.2165
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.79817, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.00155, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000529, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 7.2078, elapsed time[sec] = 7
         effective power exponent at 669.903 kcal/mol = 13.426
      interpolating states number/density done, cpu time[sec] = 7.22711, elapsed time[sec] = 7
   Model::RRHO::RRHO:  done, cpu time[sec] = 7.2272, elapsed time[sec] = 7
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000974, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000924, elapsed time[sec] = 0
   BIMOLECULAR: P7
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.47873        5.47873        5.47873
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 6e-05, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.000109, elapsed time[sec] = 0
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:         5.47873        5.47873        5.47873
            TST level: E
         Model::PhaseSpaceTheory::PhaseSpaceTheory:  done, cpu time[sec] = 3.8e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 5.6e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   47.9656
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.003004, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00034, elapsed time[sec] = 0
         effective power exponent at 552.034 kcal/mol = 10.6123
      interpolating states number/density done, cpu time[sec] = 0.015653, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.015751, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O            o          CH4           B1           B2           B3           B4           B5           B6           B7           B8
     100  1.33588e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.20275e+25  8.05078e+25  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29  6.30386e+29
     200  1.33895e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28   3.4019e+25  6.44206e+26  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30  8.00719e+30
     300  5.54279e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29   6.2497e+25  2.18681e+27  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31  3.56174e+31
     400  1.62912e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  9.62204e+25  5.31893e+27  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31  1.04946e+32
     500  4.05865e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  1.34472e+26  1.09838e+28  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32   2.5148e+32
     600   9.2058e+30  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  1.76768e+26  2.06944e+28  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32  5.35043e+32
     700  1.96281e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  2.22753e+26  3.68096e+28  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32   1.0547e+33
     800  3.99747e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.72152e+26  6.29237e+28  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33   1.9708e+33
     900  7.84709e+31  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  3.24744e+26   1.0442e+29  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33  3.53766e+33
    1000   1.4932e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  3.80344e+26  1.69248e+29  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33   6.1512e+33
    1100  2.76509e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  4.38799e+26  2.68985e+29  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34  1.04174e+34
    1200  4.99728e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32  4.99976e+26  4.20283e+29   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34   1.7249e+34
    1300  8.83407e+32  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  5.63757e+26  6.46803e+29  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34  2.80008e+34
    1400  1.53029e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  6.30041e+26  9.81784e+29  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34   4.4655e+34
    1500  2.60154e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  6.98737e+26  1.47141e+30  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34  7.00752e+34
    1600    4.346e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  7.69763e+26  2.17922e+30  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35  1.08347e+35
    1700  7.14237e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  8.43044e+26  3.19172e+30  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35  1.65232e+35
    1800  1.15591e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  9.18514e+26  4.62568e+30  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35  2.48767e+35
    1900  1.84385e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   9.9611e+26  6.63727e+30   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35  3.70051e+35
    2000  2.90134e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  1.07578e+27  9.43368e+30  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35  5.44256e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7           B8
     100 2.32011e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966  9.38107e-76
     200 5.58001e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15   3.0889e-22
     300  3.09249e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21   0.00040664
     400  3.32574e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24       651820
     500  1.13849e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26   2.7229e+11
     600  6.87625e+63  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27  1.80785e+15
     700   2.9511e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28  1.11633e+18
     800  1.80615e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29  1.55319e+20
     900  6.46004e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30  7.96585e+21
    1000  7.90845e+51  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30  2.02406e+23
    1100  2.35828e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31  3.07609e+24
    1200  1.36577e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31  3.17068e+25
    1300  1.31356e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32   2.4184e+26
    1400  1.87641e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32  1.45279e+27
    1500  3.66899e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33  7.19572e+27
    1600   9.2379e+45  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33  3.04163e+28
    1700  2.85877e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33  1.12662e+29
    1800  1.04879e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33  3.73294e+29
    1900  4.43367e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34  1.12469e+30
    2000  2.11148e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34  3.12202e+30
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D           B8            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0            1           -0
Model::init:  done, cpu time[sec] = 22.9061, elapsed time[sec] = 11
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 22337 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 7.1e-05
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.003451
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.00299
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.646
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.07821
         W1 Well: minimal relaxation eigenvalue = 0.106474
         W1 Well: maximal relaxation eigenvalue = 0.940983
         W1 Well:       grid size = 506
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -2963 1/cm
         B1 Barrier:        grid size = 447
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 443
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 539
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 571
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23113 1/cm => truncating
         B5 Barrier:        grid size = 909
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23113 1/cm
         B6 Barrier:        grid size = 417
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 353
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4686 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16736 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.236, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 506
      MasterEquation::Barrier::truncate: real weight = 3.39212e+75
      MasterEquation::Barrier::truncate: effective weight = 7.72379e+71
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 506
      MasterEquation::Barrier::truncate: real weight = 8.92539e+78
      MasterEquation::Barrier::truncate: effective weight = 1.7299e+75
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 506
      MasterEquation::Barrier::truncate: real weight = 1.58693e+103
      MasterEquation::Barrier::truncate: effective weight = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -2963  -2963 4.32e+09 1.89e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.16e+14
         B2    187 1.42e+13
         B3  -2963 3.11e+12
         B4  -2963  4.2e+12
         B5  -2963 4.13e+11
         B6   1487 5.47e+13
         B7   4687 3.63e+12
         B8  16737 9.98e+08
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  0.000354   0.00186  1.63e-17  1.41e-22   3.3e-79       151   2.4e+12  4.68e+50
          R  2.83e+03         1      5.26   4.6e-14     4e-19  9.33e-76  4.26e+05  6.79e+15  1.32e+54
         P1       537      0.19         1  8.75e-15   7.6e-20  1.77e-76  8.11e+04  1.29e+15  2.52e+53
         P2  6.14e+16  2.17e+13  1.14e+14         1  8.69e-06  2.03e-62  9.26e+18  1.48e+29  2.87e+67
         P3  7.07e+21   2.5e+18  1.32e+19  1.15e+05         1  2.33e-57  1.07e+24   1.7e+34  3.31e+72
         P4  3.03e+78  1.07e+75  5.64e+75  4.93e+61  4.29e+56         1  4.57e+80  7.28e+90 1.42e+129
         P5   0.00663  2.34e-06  1.23e-05  1.08e-19  9.38e-25  2.19e-81         1  1.59e+10   3.1e+48
         P6  4.16e-13  1.47e-16  7.75e-16  6.78e-30  5.89e-35  1.37e-91  6.28e-11         1  1.95e+38
         P7  2.14e-51  7.56e-55  3.98e-54  3.48e-68  3.02e-73 7.05e-130  3.22e-49  5.13e-39         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.99e+73  2.62e+74   2.3e+60     2e+55    0.0465  2.13e+79  3.39e+89  6.6e+127
          R     2e-74         1      5.26   4.6e-14     4e-19  9.33e-76  4.26e+05  6.79e+15  1.32e+54
         P1  3.81e-75      0.19         1  8.75e-15   7.6e-20  1.77e-76  8.11e+04  1.29e+15  2.52e+53
         P2  4.35e-61  2.17e+13  1.14e+14         1  8.69e-06  2.03e-62  9.26e+18  1.48e+29  2.87e+67
         P3  5.01e-56   2.5e+18  1.32e+19  1.15e+05         1  2.33e-57  1.07e+24   1.7e+34  3.31e+72
         P4      21.5  1.07e+75  5.64e+75  4.93e+61  4.29e+56         1  4.57e+80  7.28e+90 1.42e+129
         P5   4.7e-80  2.34e-06  1.23e-05  1.08e-19  9.38e-25  2.19e-81         1  1.59e+10   3.1e+48
         P6  2.95e-90  1.47e-16  7.75e-16  6.78e-30  5.89e-35  1.37e-91  6.28e-11         1  1.95e+38
         P7 1.51e-128  7.56e-55  3.98e-54  3.48e-68  3.02e-73 7.05e-130  3.22e-49  5.13e-39         1
   MasterEquation::set:  done, cpu time[sec] = 5.25109, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         6.36994e+08
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.498057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.94621, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             2891.8      353.784      77.5215      104.677      10.2821      1363.28      90.5851    0.0248611
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.056222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.87591e-07  1.87591e-07  1.23349e-11
      low eigenvalue method done, cpu time[sec] = 0.061022, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-07  1.23e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-08  1.23e-11         1
         *Z       ---       ---  1.58e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.2335e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.56543, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         6.36994e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.00479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.22809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             289.18      35.3784      7.75215      10.4677      1.02821      136.328      9.05851   0.00248611
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.056115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004121, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060639, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9031e-08   1.9031e-08  1.67371e-13
      low eigenvalue method done, cpu time[sec] = 0.060889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-08  1.68e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-09  1.68e-13         1
         *Z       ---       ---  1.58e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.67866e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.30358, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         1.05104e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.004826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             175.26      21.4414      4.69827      6.34407     0.623155      82.6233         5.49   0.00150673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.056207, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004127, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060734, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15681e-08  1.15681e-08  6.35346e-14
      low eigenvalue method done, cpu time[sec] = 0.060985, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-08  6.44e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-09  6.44e-14         1
         *Z       ---       ---  1.58e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.43929e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.1055, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         2.54798e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.004831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            72.2949       8.8446      1.93804      2.61693     0.257052      34.0821      2.26463  0.000621526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.056305, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004123, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06083, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.79595e-09  4.79595e-09  1.12026e-14
      low eigenvalue method done, cpu time[sec] = 0.061083, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-09  1.15e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-10  1.15e-14         1
         *Z       ---       ---  1.58e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.15463e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.03338, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 25117 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 7.2e-05
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002382
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.001771
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.148848
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.06513
         W1 Well: minimal relaxation eigenvalue = 0.0955763
         W1 Well: maximal relaxation eigenvalue = 0.936138
         W1 Well:       grid size = 384
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -3683 1/cm
         B1 Barrier:        grid size = 335
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 333
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 141 1/cm
         B3 Barrier:        grid size = 397
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 418
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6232 1/cm
         B5 Barrier: nonpositive number of states at -23183 1/cm => truncating
         B5 Barrier:        grid size = 644
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23183 1/cm
         B6 Barrier:        grid size = 315
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1491 1/cm
         B7 Barrier:        grid size = 272
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4716 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16717 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.66384, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 384
      MasterEquation::Barrier::truncate: real weight = 2.2614e+57
      MasterEquation::Barrier::truncate: effective weight = 7.72775e+53
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 384
      MasterEquation::Barrier::truncate: real weight = 3.27226e+59
      MasterEquation::Barrier::truncate: effective weight = 1.11802e+56
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 384
      MasterEquation::Barrier::truncate: real weight = 3.07063e+65
      MasterEquation::Barrier::truncate: effective weight = 5.58821e+55
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -3683  -3683 3.46e+09 3.15e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.86e+14
         B2    142  3.9e+13
         B3  -3683 9.11e+12
         B4  -3683 1.19e+13
         B5  -3683 1.22e+12
         B6   1492 1.56e+14
         B7   4717 1.22e+13
         B8  16717 9.32e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.26e-06  3.81e-06  3.88e-15  1.66e-18  3.75e-56    0.0217  1.76e+05  9.88e+30
          R  7.93e+05         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  2.62e+05     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2  2.58e+14  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  6.04e+17  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  2.67e+55  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5        46   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  5.69e-06  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  1.01e-31  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.53e+40  7.65e+40  7.78e+31  3.32e+28  7.51e-10  4.36e+44  3.53e+51  1.98e+77
          R  3.95e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11  7.83e+36
         P1  1.31e-41     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10  2.59e+36
         P2  1.29e-32  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19  2.55e+45
         P3  3.01e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23  5.97e+48
         P4  1.33e+09  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60  2.64e+86
         P5  2.29e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06  4.54e+32
         P6  2.84e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1  5.62e+25
         P7  5.04e-78  1.28e-37  3.86e-37  3.92e-46  1.68e-49  3.79e-87   2.2e-33  1.78e-26         1
   MasterEquation::set:  done, cpu time[sec] = 1.6766, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.71313e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.290005, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.73445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5765.35      787.187      183.982      240.208      24.6374      3141.72      245.643     0.188038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.026005, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.028344, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07025e-07  1.07025e-07  1.29239e-09
      low eigenvalue method done, cpu time[sec] = 0.028543, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-07  1.29e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-08  1.29e-09         1
         *Z       ---       ---  4.24e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.29239e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.08804, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.71313e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.002752, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.72167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            576.535      78.7187      18.3982      24.0208      2.46374      314.172      24.5643    0.0188038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.025992, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002091, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.028327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11673e-08  1.11673e-08  5.36414e-11
      low eigenvalue method done, cpu time[sec] = 0.028523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-08  5.36e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-09  5.36e-11         1
         *Z       ---       ---  4.24e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.36411e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.75871, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         7.77666e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.002777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.89595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            349.415      47.7083      11.1504      14.5581      1.49318      190.407      14.8875    0.0113963
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.025934, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002099, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.028278, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.81396e-09  6.81397e-09  2.36062e-11
      low eigenvalue method done, cpu time[sec] = 0.028479, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.81e-09  2.36e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.84e-10  2.36e-11         1
         *Z       ---       ---  4.24e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.36058e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.93267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.88525e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.002736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.43077, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            144.134      19.6797      4.59955       6.0052     0.615935      78.5429      6.14108   0.00470096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.025969, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.028291, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83981e-09  2.83982e-09    5.032e-12
      low eigenvalue method done, cpu time[sec] = 0.028486, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-09  5.03e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-10  5.03e-12         1
         *Z       ---       ---  4.24e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.03175e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.46776, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 27897 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 6.4e-05
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001916
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.001278
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.103745
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.700286
         W1 Well: minimal relaxation eigenvalue = 0.0877426
         W1 Well: maximal relaxation eigenvalue = 0.932597
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -4402 1/cm
         B1 Barrier:        grid size = 279
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 277
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 325
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4603 1/cm
         B4 Barrier:        grid size = 341
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6202 1/cm
         B5 Barrier: nonpositive number of states at -23103 1/cm => truncating
         B5 Barrier:        grid size = 510
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23103 1/cm
         B6 Barrier:        grid size = 264
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1496 1/cm
         B7 Barrier:        grid size = 232
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4696 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.18174, elapsed time[sec] = 0
      B3 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 323
      MasterEquation::Barrier::truncate: real weight = 3.04721e+48
      MasterEquation::Barrier::truncate: effective weight = 1.38841e+45
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 323
      MasterEquation::Barrier::truncate: real weight = 1.202e+50
      MasterEquation::Barrier::truncate: effective weight = 5.47669e+46
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 323
      MasterEquation::Barrier::truncate: real weight = 1.03424e+50
      MasterEquation::Barrier::truncate: effective weight = 5.60763e+45
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -4402  -4402 2.76e+09 5.15e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 6.53e+14
         B2    198 9.91e+13
         B3  -4402 2.45e+13
         B4  -4402 3.11e+13
         B5  -4402  3.3e+12
         B6   1497 4.03e+14
         B7   4697 3.61e+13
         B8  16697 5.68e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.53e-08  1.05e-07  3.71e-14  1.12e-16  7.94e-45  0.000158      30.7  9.81e+20
          R  2.21e+07         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  9.48e+06     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2  2.69e+13  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  8.96e+15  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  1.26e+44   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  6.31e+03  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6    0.0326  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  1.02e-21  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.83e+23  1.12e+24  3.96e+17  1.19e+15  8.47e-14  1.69e+27  3.28e+32  1.05e+52
          R  2.07e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08  2.17e+28
         P1  8.89e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08   9.3e+27
         P2  2.52e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14  2.64e+34
         P3  8.39e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17  8.78e+36
         P4  1.18e+13   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45  1.24e+65
         P5  5.92e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05  6.19e+24
         P6  3.05e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1  3.19e+19
         P7  9.56e-53  4.61e-29  1.07e-28  3.79e-35  1.14e-37  8.09e-66  1.62e-25  3.13e-20         1
   MasterEquation::set:  done, cpu time[sec] = 1.19398, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.85898e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.207309, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.28551, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9859.89      1495.42      369.188      468.519      49.8583      6078.45      544.721     0.857205
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.46757, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.137795, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.1588e-07   2.1588e-07  2.73942e-08
      low eigenvalue method done, cpu time[sec] = 1.63622, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-07  2.74e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-08  2.74e-08         1
         *Z       ---       ---  6.58e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.73942e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.34596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.85898e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.001953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.92566, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            985.989      149.542      36.9188      46.8519      4.98583      607.845      54.4721    0.0857205
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49494, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.087663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60051, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.8898e-08   2.8898e-08  2.07344e-09
      low eigenvalue method done, cpu time[sec] = 1.60369, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.89e-08  2.07e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-09  2.07e-09         1
         *Z       ---       ---  6.58e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.07344e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.36731e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.002039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.63825, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            597.569      90.6317       22.375      28.3951      3.02172      368.391      33.0134    0.0519518
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4471, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.121984, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58059, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82383e-08  1.82383e-08  1.03277e-09
      low eigenvalue method done, cpu time[sec] = 1.5957, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-08  1.03e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-09  1.03e-09         1
         *Z       ---       ---  6.58e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.03277e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.27724, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.54359e+10
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.001972, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.0708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            246.497      37.3856      9.22969       11.713      1.24646      151.961       13.618    0.0214301
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.124834, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61183, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.92968e-09  7.92968e-09  2.68511e-10
      low eigenvalue method done, cpu time[sec] = 1.62771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.93e-09  2.69e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-10  2.69e-10         1
         *Z       ---       ---  6.58e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.68511e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.71466, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 33457 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 6.6e-05
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001506
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.00085
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079016
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.419158
         W1 Well: minimal relaxation eigenvalue = 0.0763443
         W1 Well: maximal relaxation eigenvalue = 0.927585
         W1 Well:       grid size = 262
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -5843 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -143 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 265
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6293 1/cm
         B5 Barrier: nonpositive number of states at -23243 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23243 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1357 1/cm
         B7 Barrier:        grid size = 192
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4657 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16657 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.823036, elapsed time[sec] = 0
      B4 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 262
      MasterEquation::Barrier::truncate: real weight = 8.69284e+40
      MasterEquation::Barrier::truncate: effective weight = 5.94112e+37
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 262
      MasterEquation::Barrier::truncate: real weight = 2.56552e+39
      MasterEquation::Barrier::truncate: effective weight = 1.74602e+36
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -5843  -5843 1.73e+09  1.3e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -143 2.87e+15
         B2    157 5.29e+14
         B3  -4643 1.43e+14
         B4  -5843 1.73e+14
         B5  -5843 1.95e+13
         B6   1358 2.16e+15
         B7   4658 2.41e+14
         B8  16657 9.95e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.09e-10  1.33e-09  1.57e-13  3.36e-15  7.72e-34  4.78e-07    0.0024  4.92e+10
          R  1.41e+09         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  7.52e+08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  6.36e+12  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3  2.98e+14  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4   1.3e+33  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5  2.09e+06   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6       417  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7  2.03e-11  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  8.02e+06   1.5e+07  1.78e+03        38  8.73e-18  5.41e+09  2.71e+13  5.56e+26
          R  1.25e-07         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06  6.94e+19
         P1  6.65e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06   3.7e+19
         P2  0.000562  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10  3.13e+23
         P3    0.0263  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11  1.46e+25
         P4  1.15e+17  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30  6.37e+43
         P5  1.85e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03  1.03e+17
         P6  3.68e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1  2.05e+13
         P7   1.8e-27  1.44e-20   2.7e-20   3.2e-24  6.83e-26  1.57e-44  9.72e-18  4.88e-14         1
   MasterEquation::set:  done, cpu time[sec] = 0.837558, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.94788e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.135371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.68602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22453.2      4143.96      1117.36      1355.12      153.056        16910      1885.79      7.79201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.840406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080083, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942336, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.20193e-06  2.20193e-06  8.42046e-07
      low eigenvalue method done, cpu time[sec] = 0.954771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-06  8.42e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-07  8.42e-07         1
         *Z       ---       ---  9.19e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.42045e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.04398, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.94788e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.137797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.5884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2245.32      414.396      111.736      135.512      15.3056         1691      188.579     0.779201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.839619, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.079517, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.3128e-07   5.3128e-07  1.34718e-07
      low eigenvalue method done, cpu time[sec] = 0.942851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.31e-07  1.35e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-08  1.35e-07         1
         *Z       ---       ---  9.19e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.34718e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.91712, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1           4.864e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.138175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55318, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             1360.8      251.149      67.7187      82.1285      9.27614      1024.85       114.29     0.472243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.842592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933936, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.69444e-07  3.69444e-07  8.07183e-08
      low eigenvalue method done, cpu time[sec] = 0.946556, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.69e-07  8.07e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.14e-08  8.07e-08         1
         *Z       ---       ---  9.19e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.07183e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.88587, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.17915e+10
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.138346, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.55558, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            561.331      103.599      27.9339       33.878      3.82641      422.751      47.1447       0.1948
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.842336, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.080267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.85081e-07  1.85081e-07   2.9279e-08
      low eigenvalue method done, cpu time[sec] = 0.946373, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-07  2.93e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-08  2.93e-08         1
         *Z       ---       ---  9.19e+27
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.9279e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.8888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 39018 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -83.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00521
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120845
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.068835
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.196486
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.297385
         W1 Well: minimal relaxation eigenvalue = 0.0678663
         W1 Well: maximal relaxation eigenvalue = 0.924138
         W1 Well:       grid size = 231
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -7181 1/cm
         B1 Barrier:        grid size = 196
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -182 1/cm
         B2 Barrier:        grid size = 195
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 18 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4782 1/cm
         B4 Barrier:        grid size = 226
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6181 1/cm
         B5 Barrier: nonpositive number of states at -23582 1/cm => truncating
         B5 Barrier:        grid size = 313
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23581 1/cm
         B6 Barrier:        grid size = 188
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1417 1/cm
         B7 Barrier:        grid size = 172
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4618 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16618 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.01499, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 1.33608e+35
      MasterEquation::Barrier::truncate: effective weight = 1.21751e+32
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -7181  -7181 1.11e+09 3.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -182 1.04e+16
         B2     19 2.31e+15
         B3  -4782 6.66e+14
         B4  -6181  7.8e+14
         B5  -7181 9.23e+13
         B6   1418 9.21e+15
         B7   4619 1.22e+15
         B8  16618 9.38e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.76e-11  6.57e-11  1.35e-13  7.73e-15  1.03e-28  1.03e-08   8.6e-06  1.56e+05
          R  2.66e+10         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1  1.52e+10     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2  7.42e+12       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3  1.29e+14  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  9.69e+27  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5  9.73e+07   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  1.16e+05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  6.39e-06   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1    0.0322    0.0562  0.000115  6.61e-06  8.82e-20      8.79  7.35e+03  1.34e+14
          R      31.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05  4.16e+15
         P1      17.8     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05  2.38e+15
         P2  8.68e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07  1.16e+18
         P3  1.51e+05  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09  2.02e+19
         P4  1.13e+19  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22  1.52e+33
         P5     0.114   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837  1.52e+13
         P6  0.000136  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1  1.82e+10
         P7  7.47e-15   2.4e-16   4.2e-16  8.61e-19  4.94e-20  6.59e-34  6.57e-14  5.49e-11         1
   MasterEquation::set:  done, cpu time[sec] = 1.03252, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4442e+08
      global relaxation matrix dimension = 231
      setting global matrices ... done, cpu time[sec] = 0.108272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76758, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            41845.1      9242.43      2667.47       3124.8      369.594      36884.7      4877.03      37.5851
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.560973, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.063234, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.627256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41851e-05  1.41852e-05  7.27211e-06
      low eigenvalue method done, cpu time[sec] = 0.632746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-05  7.27e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-06  7.27e-06         1
         *Z       ---       ---  2.86e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 7.27206e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.69392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1          2.4442e+09
      global relaxation matrix dimension = 231
      setting global matrices ... done, cpu time[sec] = 0.098717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.70148, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4184.51      924.243      266.747       312.48      36.9594      3688.47      487.703      3.75851
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.558072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.063097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.624124, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.77955e-06  4.77956e-06  1.81337e-06
      low eigenvalue method done, cpu time[sec] = 0.62962, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.78e-06  1.81e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.79e-07  1.81e-06         1
         *Z       ---       ---  2.86e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.81337e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60242, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         4.03292e+09
      global relaxation matrix dimension = 231
      setting global matrices ... done, cpu time[sec] = 0.098112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2536.07      560.147      161.665      189.382      22.3997      2235.44      295.578      2.27789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.55899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.623943, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.56825e-06  3.56825e-06  1.22352e-06
      low eigenvalue method done, cpu time[sec] = 0.62937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-06  1.22e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.8e-07  1.22e-06         1
         *Z       ---       ---  2.86e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.22352e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.59529, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.77678e+09
      global relaxation matrix dimension = 231
      setting global matrices ... done, cpu time[sec] = 0.098767, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69128, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1046.13      231.061      66.6867      78.1199      9.23986      922.118      121.926     0.939628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.559383, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.624467, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.01821e-06  2.01821e-06  5.57091e-07
      low eigenvalue method done, cpu time[sec] = 0.629981, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-06  5.57e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.56e-07  5.57e-07         1
         *Z       ---       ---  2.86e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1            0

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.57091e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5926, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 44578 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -80.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004465
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.100375
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.055199
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.111744
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.230814
         W1 Well: minimal relaxation eigenvalue = 0.0608869
         W1 Well: maximal relaxation eigenvalue = 0.921661
         W1 Well:       grid size = 213
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -8671 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -171 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 78 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4672 1/cm
         B4 Barrier:        grid size = 204
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6421 1/cm
         B5 Barrier: nonpositive number of states at -23672 1/cm => truncating
         B5 Barrier:        grid size = 273
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23671 1/cm
         B6 Barrier:        grid size = 173
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1328 1/cm
         B7 Barrier:        grid size = 160
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4578 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16578 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.78696, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 6.09148e+32
      MasterEquation::Barrier::truncate: effective weight = 6.9387e+29
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1  -8671  -8671 6.56e+08 6.82e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -171 3.27e+16
         B2     79  8.5e+15
         B3  -4672 2.62e+15
         B4  -6421 2.98e+15
         B5  -8671 3.66e+14
         B6   1329  3.3e+16
         B7   4578 5.02e+15
         B8  16578 5.99e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.63e-12  7.95e-12  8.62e-14  8.99e-15  8.75e-26  6.91e-10  1.99e-07      56.7
          R  2.16e+11         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1  1.26e+11     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  1.16e+13      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  1.11e+14       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  1.14e+25  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5  1.45e+09    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6  5.02e+06  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7    0.0176  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.05e-07  5.23e-07  5.67e-09  5.92e-10  5.76e-21  4.55e-05    0.0131  3.73e+06
          R  3.28e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04  1.23e+13
         P1  1.91e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04  7.13e+12
         P2  1.76e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06  6.58e+14
         P3  1.69e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07  6.31e+15
         P4  1.74e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18  6.49e+26
         P5   2.2e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288  8.21e+10
         P6      76.3  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1  2.85e+08
         P7  2.68e-07  8.15e-14   1.4e-13  1.52e-15  1.58e-16  1.54e-27  1.22e-11  3.51e-09         1
   MasterEquation::set:  done, cpu time[sec] = 0.797719, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.11461e+08
      global relaxation matrix dimension = 213
      setting global matrices ... done, cpu time[sec] = 0.084607, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38587, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            67989.8      17679.9      5444.67      6205.66      761.512      68505.1      10439.4       124.51
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.432235, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.042209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.483729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.67629e-05  4.67642e-05  2.77772e-05
      low eigenvalue method done, cpu time[sec] = 0.488359, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-05  2.78e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-06  2.78e-05         1
         *Z       ---       ---  8.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  4.80838e-13

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.77764e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.09399, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.11461e+09
      global relaxation matrix dimension = 213
      setting global matrices ... done, cpu time[sec] = 0.076416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.272, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6798.98      1767.99      544.467      620.566      76.1512      6850.51      1043.94       12.451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.411741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.042321, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.462497, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9631e-05  1.96312e-05  9.26812e-06
      low eigenvalue method done, cpu time[sec] = 0.467219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-05  9.27e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-06  9.27e-06         1
         *Z       ---       ---  8.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  1.60427e-13

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.26804e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95044, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          3.4891e+09
      global relaxation matrix dimension = 213
      setting global matrices ... done, cpu time[sec] = 0.076565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4120.59      1071.51       329.98      376.101      46.1522      4151.82      632.693      7.54607
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.412652, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.042809, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.463896, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.54539e-05   1.5454e-05  6.77545e-06
      low eigenvalue method done, cpu time[sec] = 0.468362, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-05  6.78e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-06  6.78e-06         1
         *Z       ---       ---  8.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1   1.1724e-13

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 6.7754e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.94272, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.45843e+09
      global relaxation matrix dimension = 213
      setting global matrices ... done, cpu time[sec] = 0.076811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27446, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            1699.74      441.998      136.117      155.141      19.0378      1712.63      260.986      3.11276
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.413893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.042578, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.465076, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.63218e-06  9.63222e-06  3.60938e-06
      low eigenvalue method done, cpu time[sec] = 0.469573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.63e-06  3.61e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.87e-07  3.61e-06         1
         *Z       ---       ---  8.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  6.25056e-14

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.60937e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95513, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 50138 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003707
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.08409
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.044633
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070284
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.191784
         W1 Well: minimal relaxation eigenvalue = 0.0548893
         W1 Well: maximal relaxation eigenvalue = 0.919839
         W1 Well:       grid size = 201
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -10162 1/cm
         B1 Barrier:        grid size = 168
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -261 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 37 1/cm
         B3 Barrier:        grid size = 183
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4761 1/cm
         B4 Barrier:        grid size = 188
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6262 1/cm
         B5 Barrier: nonpositive number of states at -23662 1/cm => truncating
         B5 Barrier:        grid size = 246
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23662 1/cm
         B6 Barrier:        grid size = 163
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1237 1/cm
         B7 Barrier:        grid size = 152
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4537 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16537 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.647933, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 201
      MasterEquation::Barrier::truncate: real weight = 2.32674e+31
      MasterEquation::Barrier::truncate: effective weight = 3.18042e+28
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -10162 -10162 3.79e+08 1.44e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -261 8.95e+16
         B2     38 2.69e+16
         B3  -4761 8.98e+15
         B4  -6262    1e+16
         B5 -10162 1.27e+15
         B6   1238 1.01e+17
         B7   4538 1.75e+16
         B8  16538 2.91e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.63e-13  1.32e-12   4.2e-14  6.55e-15  5.18e-24  7.27e-11  1.03e-08      0.19
          R  1.31e+12         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1  7.58e+11     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  2.38e+13      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  1.53e+14       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  1.93e+23  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5  1.37e+10    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6  9.71e+07   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7      5.25  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.42e-10  2.45e-10  7.81e-12  1.22e-12  9.62e-22  1.35e-08  1.91e-06      35.4
          R  7.06e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04   2.5e+11
         P1  4.08e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03  1.44e+11
         P2  1.28e+11      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05  4.53e+12
         P3  8.22e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06  2.91e+13
         P4  1.04e+21  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15  3.68e+22
         P5   7.4e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142  2.62e+09
         P6  5.22e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1  1.85e+07
         P7    0.0283  4.01e-12  6.93e-12  2.21e-13  3.44e-14  2.72e-23  3.82e-10  5.41e-08         1
   MasterEquation::set:  done, cpu time[sec] = 0.657566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          1.8787e+08
      global relaxation matrix dimension = 201
      setting global matrices ... done, cpu time[sec] = 0.068841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.10208, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            98953.2      29709.6      9925.65      11064.1      1399.17       111863      19317.2      321.997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35164, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.038055, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.391643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000125388  0.000125398  8.25728e-05
      low eigenvalue method done, cpu time[sec] = 0.395798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000125  8.26e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     9e-06  8.26e-05         1
         *Z       ---       ---  8.15e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  6.07255e-10

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 8.2566e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.68739, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          1.8787e+09
      global relaxation matrix dimension = 201
      setting global matrices ... done, cpu time[sec] = 0.068796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.05303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9895.32      2970.96      992.565      1106.41      139.917      11186.3      1931.72      32.1997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.330745, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035906, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.368367, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.17857e-05  6.17878e-05  3.38347e-05
      low eigenvalue method done, cpu time[sec] = 0.372304, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.18e-05  3.38e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-06  3.38e-05         1
         *Z       ---       ---  8.15e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  2.48839e-10

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 3.38336e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60712, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.09985e+09
      global relaxation matrix dimension = 201
      setting global matrices ... done, cpu time[sec] = 0.064724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.04574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5997.16      1800.58      601.554      670.551      84.7981      6779.57      1170.74       19.515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.330728, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035499, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.367996, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.06763e-05  5.06777e-05   2.6193e-05
      low eigenvalue method done, cpu time[sec] = 0.371878, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.07e-05  2.62e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-06  2.62e-05         1
         *Z       ---       ---  8.15e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  1.92639e-10

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 2.61923e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          7.5148e+09
      global relaxation matrix dimension = 201
      setting global matrices ... done, cpu time[sec] = 0.065113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.04647, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            2473.83       742.74      248.141      276.602      34.9792      2796.57      482.929      8.04992
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.331753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.035594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.369048, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41395e-05    3.414e-05  1.56284e-05
      low eigenvalue method done, cpu time[sec] = 0.372953, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.41e-05  1.56e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-06  1.56e-05         1
         *Z       ---       ---  8.15e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  1.14942e-10

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 1.56281e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59756, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 55699 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003585
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.072935
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.038425
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060549
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.167328
         W1 Well: minimal relaxation eigenvalue = 0.0496828
         W1 Well: maximal relaxation eigenvalue = 0.918453
         W1 Well:       grid size = 192
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -11501 1/cm
         B1 Barrier:        grid size = 160
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -300 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 49 1/cm
         B3 Barrier:        grid size = 173
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4851 1/cm
         B4 Barrier:        grid size = 177
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6250 1/cm
         B5 Barrier: nonpositive number of states at -23401 1/cm => truncating
         B5 Barrier:        grid size = 226
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23400 1/cm
         B6 Barrier:        grid size = 155
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 146
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4598 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16498 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.578293, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 192
      MasterEquation::Barrier::truncate: real weight = 2.88039e+30
      MasterEquation::Barrier::truncate: effective weight = 4.5934e+27
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -11501 -11501 2.27e+08 2.92e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -300  2.2e+17
         B2     50 7.52e+16
         B3  -4851 2.75e+16
         B4  -6250 3.01e+16
         B5 -11501 3.91e+15
         B6   1450 2.75e+17
         B7   4599 5.27e+16
         B8  16499 1.16e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.37e-13  2.41e-13  1.62e-14  3.37e-15  6.17e-23  9.18e-12   7.8e-10   0.00209
          R  7.31e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  4.15e+12     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  6.17e+13      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  2.97e+14      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  1.62e+22  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  1.09e+11    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  1.28e+09  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7       479  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.12e-13  1.08e-12  7.25e-14  1.51e-14  2.76e-22   4.1e-11  3.49e-09   0.00933
          R  1.64e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03  1.53e+10
         P1  9.29e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03  8.66e+09
         P2  1.38e+13      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04  1.29e+11
         P3  6.64e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05  6.19e+11
         P4  3.63e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13  3.38e+19
         P5  2.44e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85  2.27e+08
         P6  2.87e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1  2.67e+06
         P7       107  6.56e-11  1.15e-10  7.77e-12  1.62e-12  2.96e-20   4.4e-09  3.74e-07         1
   MasterEquation::set:  done, cpu time[sec] = 0.587142, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.69991e+08
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.059727, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.929641, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             132958      45376.9      16610.7        18178      2357.14       166030      31764.3      699.428
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.297104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.032741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.331475, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000323918  0.000323994  0.000234798
      low eigenvalue method done, cpu time[sec] = 0.335349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000324  0.000235         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-05  0.000235         1
         *Z       ---       ---  1.31e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  8.37672e-08

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000234743
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.43348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.69991e+09
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.05923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.914781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            13295.8      4537.69      1661.07       1817.8      235.714        16603      3176.43      69.9428
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.281518, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031024, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.314088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000180832  0.000180852  0.000112142
      low eigenvalue method done, cpu time[sec] = 0.317794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000181  0.000112         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-05  0.000112         1
         *Z       ---       ---  1.31e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  4.00132e-08

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00011213
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.39022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.80485e+09
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.056022, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.888094, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8058.05      2750.12      1006.71      1101.69      142.857      10062.4      1925.11      42.3896
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031495, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.317033, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000153297  0.000153311  9.06235e-05
      low eigenvalue method done, cpu time[sec] = 0.320818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000153  9.06e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.8e-06  9.06e-05         1
         *Z       ---       ---  1.31e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  3.23358e-08

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 9.06153e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.36368, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         6.79964e+09
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.056201, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.899683, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            3323.95      1134.42      415.267      454.449      58.9286      4150.75      794.108      17.4857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.283572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.031317, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.31658, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000110066  0.000110072  5.88941e-05
      low eigenvalue method done, cpu time[sec] = 0.320384, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00011  5.89e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.87e-06  5.89e-05         1
         *Z       ---       ---  1.31e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1            1  2.10149e-08

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 5.88906e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.37486, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 61260 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -69.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002996
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.067088
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.034557
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050535
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.13987
         W1 Well: minimal relaxation eigenvalue = 0.0451083
         W1 Well: maximal relaxation eigenvalue = 0.91739
         W1 Well:       grid size = 185
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -12740 1/cm
         B1 Barrier:        grid size = 154
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -340 1/cm
         B2 Barrier:        grid size = 153
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 59 1/cm
         B3 Barrier:        grid size = 165
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4741 1/cm
         B4 Barrier:        grid size = 169
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6341 1/cm
         B5 Barrier: nonpositive number of states at -23141 1/cm => truncating
         B5 Barrier:        grid size = 211
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23141 1/cm
         B6 Barrier:        grid size = 150
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1259 1/cm
         B7 Barrier:        grid size = 142
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4458 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16459 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.51739, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 7.25027e+29
      MasterEquation::Barrier::truncate: effective weight = 1.32138e+27
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -12740 -12740 1.38e+08 5.69e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -340 4.98e+17
         B2     60 1.91e+17
         B3  -4741 7.69e+16
         B4  -6341 8.29e+16
         B5 -12740  1.1e+16
         B6   1260 6.79e+17
         B7   4459 1.42e+17
         B8  16459 3.95e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.76e-14  4.97e-14  5.78e-15  1.49e-15  2.89e-22  1.39e-12  8.04e-11  5.11e-05
          R  3.62e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  2.01e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  1.73e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  6.69e+14      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  3.46e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5   7.2e+11    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6  1.24e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7  1.96e+04   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.06e-14  1.91e-14  2.22e-15  5.73e-16  1.11e-22  5.33e-13  3.08e-11  1.96e-05
          R  9.43e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03  1.85e+09
         P1  5.24e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03  1.03e+09
         P2  4.51e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04  8.84e+09
         P3  1.74e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04  3.42e+10
         P4  9.03e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11  1.77e+17
         P5  1.88e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8  3.68e+07
         P6  3.24e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1  6.36e+05
         P7   5.1e+04   5.4e-10  9.73e-10  1.13e-10  2.92e-11  5.65e-18  2.72e-08  1.57e-06         1
   MasterEquation::set:  done, cpu time[sec] = 0.526047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.55885e+08
      global relaxation matrix dimension = 185
      setting global matrices ... done, cpu time[sec] = 0.052732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.802689, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             168272      64464.6      25974.2      28010.4      3709.98       229341      47814.9      1335.66
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.257089, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.028995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.292487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000774016  0.000774495  0.000618296
      low eigenvalue method done, cpu time[sec] = 0.295843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000774  0.000618         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.07e-05  0.000618         1
         *Z       ---       ---  3.04e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999997  2.93416e-06

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000617914
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.2432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.55885e+09
      global relaxation matrix dimension = 185
      setting global matrices ... done, cpu time[sec] = 0.05232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.805197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16827.2      6446.46      2597.42      2801.04      370.998      22934.1      4781.49      133.566
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.180753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.207515, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000477041  0.000477199   0.00033204
      low eigenvalue method done, cpu time[sec] = 0.210025, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000477  0.000332         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.96e-05  0.000332         1
         *Z       ---       ---  3.04e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999998  1.57617e-06

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00033193
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.12716, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1          2.5721e+09
      global relaxation matrix dimension = 185
      setting global matrices ... done, cpu time[sec] = 0.031697, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.524401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            10198.3      3906.95      1574.19       1697.6      224.847      13899.5      2897.87      80.9488
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217823, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.027767, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.249156, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000415451  0.000415566    0.0002774
      low eigenvalue method done, cpu time[sec] = 0.252323, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000416  0.000277         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-05  0.000277         1
         *Z       ---       ---  3.04e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999999  1.31687e-06

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000277323
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.895995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1          6.2354e+09
      global relaxation matrix dimension = 185
      setting global matrices ... done, cpu time[sec] = 0.05024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.767078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            4206.81      1611.62      649.355      700.261      92.7495      5733.52      1195.37      33.3914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.245499, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.027598, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.278792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000314439    0.0003145  0.000192674
      low eigenvalue method done, cpu time[sec] = 0.281987, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000314  0.000193         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-05  0.000193         1
         *Z       ---       ---  3.04e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999999  9.14735e-07

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000192637
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.18739, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 66819 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003064
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.059859
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.03069
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049711
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.127416
         W1 Well: minimal relaxation eigenvalue = 0.0408961
         W1 Well: maximal relaxation eigenvalue = 0.918009
         W1 Well:       grid size = 180
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -14181 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -231 1/cm
         B2 Barrier:        grid size = 149
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -231 1/cm
         B3 Barrier:        grid size = 159
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4731 1/cm
         B4 Barrier:        grid size = 163
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6531 1/cm
         B5 Barrier: nonpositive number of states at -23181 1/cm => truncating
         B5 Barrier:        grid size = 200
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23181 1/cm
         B6 Barrier:        grid size = 146
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1118 1/cm
         B7 Barrier:        grid size = 139
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4268 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16418 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.482593, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 180
      MasterEquation::Barrier::truncate: real weight = 2.88388e+29
      MasterEquation::Barrier::truncate: effective weight = 5.91296e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -14181 -14181 7.53e+07 1.07e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -231 1.05e+18
         B2   -231 4.46e+17
         B3  -4731 1.98e+17
         B4  -6531 2.11e+17
         B5 -14181 2.85e+16
         B6   1119 1.55e+18
         B7   4269 3.47e+17
         B8  16419 1.19e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  6.95e-15  1.28e-14  2.25e-15  6.91e-16  8.34e-22  2.75e-13  1.17e-11  2.47e-06
          R  1.44e+14         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  7.79e+13     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  4.43e+14      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  1.45e+15      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4   1.2e+21  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  3.64e+12    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  8.52e+10  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7  4.05e+05  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  4.64e-16  8.56e-16   1.5e-16  4.61e-17  5.57e-23  1.83e-14  7.83e-13  1.65e-07
          R  2.16e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03  3.55e+08
         P1  1.17e+15     0.542         1     0.176    0.0539   6.5e-08      21.4       915  1.92e+08
         P2  6.65e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03  1.09e+09
         P3  2.17e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04  3.57e+09
         P4   1.8e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10  2.96e+15
         P5  5.46e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8  8.98e+06
         P6  1.28e+12  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1   2.1e+05
         P7  6.08e+06  2.82e-09   5.2e-09  9.14e-10   2.8e-10  3.38e-16  1.11e-07  4.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 0.490749, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.44417e+08
      global relaxation matrix dimension = 180
      setting global matrices ... done, cpu time[sec] = 0.047672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.71853, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             203415      86576.4      38389.7        41000      5530.09       299726      67256.3      2312.26
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.230364, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026859, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.259719, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0015604   0.00156252   0.00135715
      low eigenvalue method done, cpu time[sec] = 0.262858, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00156   0.00136         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.75e-05   0.00136     0.999
         *Z       ---       ---  9.74e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999958   4.1659e-05

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00135531
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.11281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.44417e+09
      global relaxation matrix dimension = 180
      setting global matrices ... done, cpu time[sec] = 0.048352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.733029, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20341.5      8657.64      3838.97         4100      553.009      29972.6      6725.63      231.226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.229889, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.026466, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.257994, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00104125   0.00104209  0.000799483
      low eigenvalue method done, cpu time[sec] = 0.261098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00104  0.000799         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.14e-05  0.000799         1
         *Z       ---       ---  9.74e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999975  2.45546e-05

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000798845
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.12416, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.38289e+09
      global relaxation matrix dimension = 180
      setting global matrices ... done, cpu time[sec] = 0.047282, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.717535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            12328.2      5247.05      2326.65      2484.85      335.157      18165.2      4076.14      140.137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.22508, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.252292, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000926915  0.000927551  0.000685805
      low eigenvalue method done, cpu time[sec] = 0.25535, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000928  0.000685         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.38e-05  0.000685         1
         *Z       ---       ---  9.74e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999979  2.10656e-05

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000685335
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.10283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.77669e+09
      global relaxation matrix dimension = 180
      setting global matrices ... done, cpu time[sec] = 0.046502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.714174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5085.38      2164.41      959.743         1025      138.252      7493.14      1681.41      57.8066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.224342, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025825, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.251608, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  0.000732595  0.000732963  0.000502298
      low eigenvalue method done, cpu time[sec] = 0.254905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000733  0.000502         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-05  0.000502         1
         *Z       ---       ---  9.74e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999985  1.54317e-05

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.000502046
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.09819, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 72380 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -60.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002945
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.058932
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.028637
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045447
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.118015
         W1 Well: minimal relaxation eigenvalue = 0.0371346
         W1 Well: maximal relaxation eigenvalue = 0.924757
         W1 Well:       grid size = 176
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -15619 1/cm
         B1 Barrier:        grid size = 145
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -119 1/cm
         B2 Barrier:        grid size = 145
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -119 1/cm
         B3 Barrier:        grid size = 154
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 158
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6619 1/cm
         B5 Barrier: nonpositive number of states at -23620 1/cm => truncating
         B5 Barrier:        grid size = 192
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23619 1/cm
         B6 Barrier:        grid size = 142
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1380 1/cm
         B7 Barrier:        grid size = 136
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4380 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16380 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.459874, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 176
      MasterEquation::Barrier::truncate: real weight = 1.56224e+29
      MasterEquation::Barrier::truncate: effective weight = 3.55905e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -15619 -15619 3.96e+07 1.95e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -119 2.08e+18
         B2   -119 9.75e+17
         B3  -4619 4.77e+17
         B4  -6619 5.05e+17
         B5 -15619 6.92e+16
         B6   1381 3.29e+18
         B7   4381 7.87e+17
         B8  16381 3.25e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.88e-15  3.57e-15  8.65e-16  3.04e-16  1.59e-21  6.04e-14  2.03e-12  1.77e-07
          R  5.31e+14         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1   2.8e+14     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  1.16e+15      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3  3.29e+15      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  6.29e+20  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  1.65e+13    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6  4.94e+11  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  5.66e+06  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  3.87e-17  7.34e-17  1.78e-17  6.25e-18  3.27e-23  1.24e-15  4.16e-14  3.63e-09
          R  2.58e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03  9.38e+07
         P1  1.36e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568  4.95e+07
         P2  5.62e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03  2.04e+08
         P3   1.6e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03   5.8e+08
         P4  3.06e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09  1.11e+14
         P5  8.05e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5  2.92e+06
         P6   2.4e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1  8.71e+04
         P7  2.76e+08  1.07e-08  2.02e-08   4.9e-09  1.72e-09  9.01e-15  3.42e-07  1.15e-05         1
   MasterEquation::set:  done, cpu time[sec] = 0.467861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.34876e+08
      global relaxation matrix dimension = 176
      setting global matrices ... done, cpu time[sec] = 0.044745, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.664686, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             237222       111209      54338.3      57548.7      7885.57       375000        89698      3707.32
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.210093, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.025287, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.240757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00299115   0.00299966   0.00284507
      low eigenvalue method done, cpu time[sec] = 0.243743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.003   0.00284         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00018   0.00284     0.999
         *Z       ---       ---  3.72e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999686  0.000314484

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.002837
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.03161, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.34876e+09
      global relaxation matrix dimension = 176
      setting global matrices ... done, cpu time[sec] = 0.044413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.675088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            23722.2      11120.9      5433.83      5754.87      788.557        37500       8969.8      370.732
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.210677, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024576, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.240463, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0021393   0.00214318   0.00181469
      low eigenvalue method done, cpu time[sec] = 0.24347, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00214   0.00181         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000121   0.00181     0.999
         *Z       ---       ---  3.72e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999799  0.000200795

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0018114
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.04119, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.22545e+09
      global relaxation matrix dimension = 176
      setting global matrices ... done, cpu time[sec] = 0.044609, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.660685, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            14377.1      6739.93      3293.23       3487.8      477.913      22727.2      5436.24      224.686
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.205512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00194068   0.00194377   0.00159128
      low eigenvalue method done, cpu time[sec] = 0.237525, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00194   0.00159         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000108   0.00159     0.999
         *Z       ---       ---  3.72e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999824  0.000176115

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00158875
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.01971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.39504e+09
      global relaxation matrix dimension = 176
      setting global matrices ... done, cpu time[sec] = 0.043951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.659799, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            5930.54      2780.22      1358.46      1438.72      197.139      9374.99      2242.45       92.683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207509, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.024148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00159204   0.00159398   0.00121782
      low eigenvalue method done, cpu time[sec] = 0.239844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00159   0.00122         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.59e-05   0.00122     0.999
         *Z       ---       ---  3.72e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999865  0.000134832

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00121634
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.02022, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 77940 1/cm
      Energy step      = 550 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -56.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002749
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.053765
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.026994
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042315
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.113768
         W1 Well: minimal relaxation eigenvalue = 0.0337258
         W1 Well: maximal relaxation eigenvalue = 0.935746
         W1 Well:       grid size = 173
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -17209 1/cm
         B1 Barrier:        grid size = 142
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -159 1/cm
         B2 Barrier:        grid size = 142
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -159 1/cm
         B3 Barrier:        grid size = 151
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5109 1/cm
         B4 Barrier:        grid size = 153
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23810 1/cm => truncating
         B5 Barrier:        grid size = 185
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23809 1/cm
         B6 Barrier:        grid size = 139
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1490 1/cm
         B7 Barrier:        grid size = 134
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4239 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16340 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.4411, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 173
      MasterEquation::Barrier::truncate: real weight = 1.04826e+29
      MasterEquation::Barrier::truncate: effective weight = 2.62692e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -17209 -17209 1.86e+07 3.45e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -159 3.92e+18
         B2   -159 2.01e+18
         B3  -5109 1.08e+18
         B4  -6210 1.14e+18
         B5 -17209 1.58e+17
         B6   1490 6.61e+18
         B7   4240 1.67e+18
         B8  16341 8.16e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.61e-16  1.09e-15  3.42e-16  1.35e-16  2.34e-21   1.5e-14  4.12e-13  1.76e-08
          R  1.78e+15         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  9.15e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  2.92e+15      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  7.41e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  4.28e+20   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  6.65e+13    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  2.42e+12   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  5.69e+07   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.16e-18     1e-17  3.15e-18  1.24e-18  2.15e-23  1.38e-16  3.79e-15  1.61e-10
          R  1.94e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735  3.13e+07
         P1  9.96e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377  1.61e+07
         P2  3.18e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03  5.13e+07
         P3  8.07e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03   1.3e+08
         P4  4.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08  7.52e+12
         P5  7.24e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4  1.17e+06
         P6  2.64e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1  4.26e+04
         P7  6.19e+09   3.2e-08  6.22e-08  1.95e-08  7.68e-09  1.33e-13  8.56e-07  2.35e-05         1
   MasterEquation::set:  done, cpu time[sec] = 0.448917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.26789e+08
      global relaxation matrix dimension = 173
      setting global matrices ... done, cpu time[sec] = 0.042344, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.62904, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             268840       137804      74196.5      78007.2      10837.4       453047       114632      5589.74
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.197419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023688, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00539996    0.0054303   0.00561125
      low eigenvalue method done, cpu time[sec] = 0.22558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00543   0.00558         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000313   0.00558     0.997
         *Z       ---       ---  1.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.998478   0.00152159

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00557994
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.975021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.26789e+09
      global relaxation matrix dimension = 173
      setting global matrices ... done, cpu time[sec] = 0.042195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.632358, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
              26884      13780.4      7419.65      7800.72      1083.74      45304.7      11463.2      558.974
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.198043, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.02331, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222725, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00408317   0.00409876   0.00381311
      low eigenvalue method done, cpu time[sec] = 0.225608, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0041    0.0038         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000222    0.0038     0.998
         *Z       ---       ---  1.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.998964   0.00103584

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00379863
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.974435, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.09202e+09
      global relaxation matrix dimension = 173
      setting global matrices ... done, cpu time[sec] = 0.042517, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.620439, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            16293.4      8351.75      4496.76      4727.71      656.815      27457.4      6947.42      338.772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.192392, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.216864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00376245   0.00377527   0.00340457
      low eigenvalue method done, cpu time[sec] = 0.219635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00378   0.00339         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000201   0.00339     0.998
         *Z       ---       ---  1.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999075  0.000925239

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00339302
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.955343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.07156e+09
      global relaxation matrix dimension = 173
      setting global matrices ... done, cpu time[sec] = 0.041364, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.619604, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            6721.01       3445.1      1854.91      1950.18      270.936      11326.2      2865.81      139.744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.192265, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.216339, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00318445   0.00319307   0.00270195
      low eigenvalue method done, cpu time[sec] = 0.21914, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00319   0.00269         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000165   0.00269     0.999
         *Z       ---       ---  1.65e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.999265  0.000734807

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00269467
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.952628, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 83500 1/cm
      Energy step      = 600 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -51.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002698
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.051308
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.025871
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036031
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.111245
         W1 Well: minimal relaxation eigenvalue = 0.0309824
         W1 Well: maximal relaxation eigenvalue = 0.949679
         W1 Well:       grid size = 170
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -18500 1/cm
         B1 Barrier:        grid size = 140
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -500 1/cm
         B2 Barrier:        grid size = 139
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 99 1/cm
         B3 Barrier:        grid size = 147
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4700 1/cm
         B4 Barrier:        grid size = 150
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6500 1/cm
         B5 Barrier: nonpositive number of states at -23900 1/cm => truncating
         B5 Barrier:        grid size = 179
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23900 1/cm
         B6 Barrier:        grid size = 137
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1299 1/cm
         B7 Barrier:        grid size = 132
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4299 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16299 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.42373, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 8.20324e+28
      MasterEquation::Barrier::truncate: effective weight = 2.2426e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -18500 -18500  9.7e+06 5.95e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -500 7.08e+18
         B2    100 3.94e+18
         B3  -4700 2.34e+18
         B4  -6500 2.44e+18
         B5 -18500 3.43e+17
         B6   1300 1.27e+19
         B7   4300 3.36e+18
         B8  16300 1.91e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.67e-16  3.33e-16  1.29e-16  5.57e-17  2.62e-21  3.81e-15  8.83e-14  2.08e-09
          R  5.99e+15         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1     3e+15       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  7.77e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  1.79e+16      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4  3.82e+20  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  2.62e+14    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  1.13e+13   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7  4.81e+08  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  9.76e-19  1.95e-18  7.53e-19  3.26e-19  1.53e-23  2.23e-17  5.17e-16  1.22e-11
          R  1.02e+18         1         2     0.772     0.334  1.57e-05      22.8       529  1.25e+07
         P1  5.13e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265  6.23e+06
         P2  1.33e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686  1.61e+07
         P3  3.07e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03  3.73e+07
         P4  6.53e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07  7.93e+11
         P5  4.49e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2  5.45e+05
         P6  1.94e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1  2.35e+04
         P7  8.23e+10  8.03e-08   1.6e-07   6.2e-08  2.68e-08  1.26e-12  1.83e-06  4.25e-05         1
   MasterEquation::set:  done, cpu time[sec] = 0.431379, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          1.1983e+08
      global relaxation matrix dimension = 170
      setting global matrices ... done, cpu time[sec] = 0.039824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.576827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             297718       165815      98301.9       102687        14441       532004       141515      8017.51
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.183738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.210809, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00979844   0.00991081    0.0114394
      low eigenvalue method done, cpu time[sec] = 0.213546, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00991    0.0113         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000573    0.0113     0.994
         *Z       ---       ---  7.81e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.994715    0.0052852

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.01131
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.900677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          1.1983e+09
      global relaxation matrix dimension = 170
      setting global matrices ... done, cpu time[sec] = 0.039907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.584858, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            29771.8      16581.5      9830.19      10268.7       1444.1      53200.4      14151.5      801.751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.183659, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022228, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.210471, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00774346   0.00780676   0.00815853
      low eigenvalue method done, cpu time[sec] = 0.213224, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00781   0.00809         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000422   0.00809     0.996
         *Z       ---       ---  7.81e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.996218   0.00378165

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00809251
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.907878, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          1.9772e+09
      global relaxation matrix dimension = 170
      setting global matrices ... done, cpu time[sec] = 0.040057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.582268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            18043.5      10049.4      5957.69      6223.43      875.214      32242.7      8576.65       485.91
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.179304, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021728, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205552, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0072303   0.00728386   0.00739324
      low eigenvalue method done, cpu time[sec] = 0.208218, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00728   0.00734         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000387   0.00734     0.996
         *Z       ---       ---  7.81e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1      0.99657   0.00342953

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00733898
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.899182, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.79321e+09
      global relaxation matrix dimension = 170
      setting global matrices ... done, cpu time[sec] = 0.039031, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.572097, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            7442.96      4145.37      2457.55      2567.16      361.026      13300.1      3537.87      200.438
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17956, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021953, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206172, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   0.00628611    0.0063242   0.00604772
      low eigenvalue method done, cpu time[sec] = 0.208868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00632   0.00601         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000325   0.00601     0.997
         *Z       ---       ---  7.81e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.997191   0.00280913

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.00601137
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.888484, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 89061 1/cm
      Energy step      = 650 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -46.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002583
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.047593
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.024227
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034808
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.097468
         W1 Well: minimal relaxation eigenvalue = 0.0285387
         W1 Well: maximal relaxation eigenvalue = 0.972023
         W1 Well:       grid size = 168
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -20138 1/cm
         B1 Barrier:        grid size = 138
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -638 1/cm
         B2 Barrier:        grid size = 137
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 11 1/cm
         B3 Barrier:        grid size = 145
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5188 1/cm
         B4 Barrier:        grid size = 147
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6488 1/cm
         B5 Barrier: nonpositive number of states at -23389 1/cm => truncating
         B5 Barrier:        grid size = 173
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23388 1/cm
         B6 Barrier:        grid size = 135
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1310 1/cm
         B7 Barrier:        grid size = 130
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4561 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16261 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.397711, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 168
      MasterEquation::Barrier::truncate: real weight = 7.1877e+28
      MasterEquation::Barrier::truncate: effective weight = 2.12872e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -20138 -20138 3.97e+06    1e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -638 1.23e+19
         B2     12  7.4e+18
         B3  -5188 4.83e+18
         B4  -6488 5.01e+18
         B5 -20138 7.13e+17
         B6   1311 2.32e+19
         B7   4562 6.46e+18
         B8  16262  4.2e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  5.55e-17  1.14e-16  5.22e-17  2.45e-17  2.68e-21   1.1e-15  2.21e-14  3.15e-10
          R   1.8e+16         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  8.78e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2  1.91e+16      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3  4.08e+16      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  3.73e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5   9.1e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  4.53e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7  3.17e+09  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.42e-19  4.95e-19  2.27e-19  1.07e-19  1.17e-23  4.78e-18   9.6e-17  1.37e-12
          R  4.14e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398  5.68e+06
         P1  2.02e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194  2.77e+06
         P2   4.4e+18      1.06      2.18         1     0.469  5.13e-05        21       423  6.03e+06
         P3  9.38e+18      2.27      4.65      2.13         1  0.000109      44.9       901  1.29e+07
         P4  8.58e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06  1.18e+11
         P5  2.09e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1  2.87e+05
         P6  1.04e+16   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1  1.43e+04
         P7   7.3e+11  1.76e-07  3.61e-07  1.66e-07  7.78e-08   8.5e-12  3.49e-06  7.01e-05         1
   MasterEquation::set:  done, cpu time[sec] = 0.405148, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.13767e+08
      global relaxation matrix dimension = 168
      setting global matrices ... done, cpu time[sec] = 0.038145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.544565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             323539       194729       126948       131854        18745       610289       169799      11035.9
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.172491, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.194757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0163718    0.0167218    0.0212876
      low eigenvalue method done, cpu time[sec] = 0.197325, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0167    0.0208         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000964    0.0208      0.99
         *Z       ---       ---  4.13e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.985812    0.0141885

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0208439
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.847122, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.13767e+09
      global relaxation matrix dimension = 168
      setting global matrices ... done, cpu time[sec] = 0.03779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.551734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            32353.9      19472.9      12694.8      13185.4       1874.5      61028.9      16979.9      1103.59
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175209, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.197406, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0134438    0.0136577     0.015853
      low eigenvalue method done, cpu time[sec] = 0.200168, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0137    0.0156         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000736    0.0156     0.992
         *Z       ---       ---  4.13e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.989377    0.0106228

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0156056
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.856747, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.87715e+09
      global relaxation matrix dimension = 168
      setting global matrices ... done, cpu time[sec] = 0.037898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.559174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            19608.4      11801.7      7693.83      7991.13      1136.06      36987.2      10290.9      668.843
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174271, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.020921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0126937    0.0128791    0.0145494
      low eigenvalue method done, cpu time[sec] = 0.199024, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0129    0.0143         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000681    0.0143     0.993
         *Z       ---       ---  4.13e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.990238   0.00976179

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0143408
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.863278, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.55067e+09
      global relaxation matrix dimension = 168
      setting global matrices ... done, cpu time[sec] = 0.037914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.56444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8088.48      4868.22       3173.7      3296.34      468.624      15257.2      4244.99      275.898
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176094, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.023149, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206033, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0112878    0.0114261     0.012212
      low eigenvalue method done, cpu time[sec] = 0.212275, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0114    0.0121         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000583    0.0121     0.994
         *Z       ---       ---  4.13e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.991788   0.00821243

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0120647
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.886108, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 94621 1/cm
      Energy step      = 700 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -42.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002672
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.047103
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.024326
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035896
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.095273
         W1 Well: minimal relaxation eigenvalue = 0.026725
         W1 Well: maximal relaxation eigenvalue = 1.0017
         W1 Well:       grid size = 166
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -21579 1/cm
         B1 Barrier:        grid size = 136
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -579 1/cm
         B2 Barrier:        grid size = 135
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 121 1/cm
         B3 Barrier:        grid size = 142
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4779 1/cm
         B4 Barrier:        grid size = 144
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23679 1/cm => truncating
         B5 Barrier:        grid size = 169
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23679 1/cm
         B6 Barrier:        grid size = 134
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 820 1/cm
         B7 Barrier:        grid size = 129
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4320 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16220 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.405224, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 6.84327e+28
      MasterEquation::Barrier::truncate: effective weight = 2.18262e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -21579 -21579  1.7e+06 1.65e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -579 2.07e+19
         B2    122 1.34e+19
         B3  -4779 9.57e+18
         B4  -6178 9.89e+18
         B5 -21579 1.42e+18
         B6    821  4.1e+19
         B7   4321 1.19e+19
         B8  16221 8.76e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  1.92e-17  4.05e-17  2.14e-17  1.08e-17  2.43e-21  3.35e-16  5.95e-15  5.54e-11
          R   5.2e+16         1       2.1      1.11      0.56  0.000126      17.4       309  2.88e+06
         P1  2.47e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147  1.37e+06
         P2  4.66e+16     0.897      1.89         1     0.503  0.000113      15.6       277  2.58e+06
         P3  9.28e+16      1.79      3.75      1.99         1  0.000225      31.1       552  5.14e+06
         P4  4.12e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06  2.28e+10
         P5  2.98e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7  1.65e+05
         P6  1.68e+14   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1  9.32e+03
         P7  1.81e+10  3.47e-07  7.31e-07  3.87e-07  1.95e-07  4.39e-11  6.05e-06  0.000107         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.37e-20  1.55e-19  8.22e-20  4.13e-20  9.31e-24  1.28e-18  2.28e-17  2.12e-13
          R  1.36e+19         1       2.1      1.11      0.56  0.000126      17.4       309  2.88e+06
         P1  6.45e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147  1.37e+06
         P2  1.22e+19     0.897      1.89         1     0.503  0.000113      15.6       277  2.58e+06
         P3  2.42e+19      1.79      3.75      1.99         1  0.000225      31.1       552  5.14e+06
         P4  1.07e+23  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06  2.28e+10
         P5  7.79e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7  1.65e+05
         P6  4.39e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1  9.32e+03
         P7  4.71e+12  3.47e-07  7.31e-07  3.87e-07  1.95e-07  4.39e-11  6.05e-06  0.000107         1
   MasterEquation::set:  done, cpu time[sec] = 0.416421, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.08427e+08
      global relaxation matrix dimension = 166
      setting global matrices ... done, cpu time[sec] = 0.039017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.528012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             346167       224073       160371       165597        23789       686595       198960      14675.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170739, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.202951, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0261893    0.0272094    0.0386908
      low eigenvalue method done, cpu time[sec] = 0.209105, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0272    0.0372         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00162    0.0372     0.981
         *Z       ---       ---  2.32e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.969004    0.0309956

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0372496
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.849357, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.08427e+09
      global relaxation matrix dimension = 166
      setting global matrices ... done, cpu time[sec] = 0.038877, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.534711, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            34616.7      22407.3      16037.1      16559.7       2378.9      68659.5        19896      1467.55
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170283, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.022301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.202293, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0      0.02225    0.0229201     0.029933
      low eigenvalue method done, cpu time[sec] = 0.208471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0229    0.0291         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00128    0.0291     0.985
         *Z       ---       ---  2.32e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.975817    0.0241835

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.029063
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.85553, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.78904e+09
      global relaxation matrix dimension = 166
      setting global matrices ... done, cpu time[sec] = 0.038903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.531564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            20979.8      13580.2      9719.44      10036.2      1441.76      41611.8      12058.2      889.425
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.166474, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021773, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.197755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0212082    0.0218006    0.0277656
      low eigenvalue method done, cpu time[sec] = 0.203847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0218     0.027         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00119     0.027     0.986
         *Z       ---       ---  2.32e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1      0.97752    0.0224798

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0270155
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.845709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.33706e+09
      global relaxation matrix dimension = 166
      setting global matrices ... done, cpu time[sec] = 0.038249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.524352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            8654.18      5601.83      4009.27      4139.93      594.725      17164.9      4974.01      366.888
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.166502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021935, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.197999, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0192231    0.0196835    0.0238142
      low eigenvalue method done, cpu time[sec] = 0.204071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0197    0.0233         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00104    0.0233     0.988
         *Z       ---       ---  2.32e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.980645     0.019355

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0232603
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.838018, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 100181 1/cm
      Energy step      = 750 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -37.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.002618
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.045338
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.023192
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034441
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.094292
         W1 Well: minimal relaxation eigenvalue = 0.0254414
         W1 Well: maximal relaxation eigenvalue = 1.04002
         W1 Well:       grid size = 164
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -22818 1/cm
         B1 Barrier:        grid size = 134
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -318 1/cm
         B2 Barrier:        grid size = 134
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -318 1/cm
         B3 Barrier:        grid size = 140
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4818 1/cm
         B4 Barrier:        grid size = 142
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6318 1/cm
         B5 Barrier: nonpositive number of states at -23569 1/cm => truncating
         B5 Barrier:        grid size = 165
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23569 1/cm
         B6 Barrier:        grid size = 132
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1181 1/cm
         B7 Barrier:        grid size = 128
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4181 1/cm
         B8 Barrier:        grid size = 112
         B8 Barrier:      real height = 16776 1/cm
         B8 Barrier: effective height = 16181 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.396171, elapsed time[sec] = 0
      B5 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 164
      MasterEquation::Barrier::truncate: real weight = 6.93933e+28
      MasterEquation::Barrier::truncate: effective weight = 2.37134e+26
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -22818 -22818 7.77e+05 2.67e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -318 3.37e+19
         B2   -318 2.34e+19
         B3  -4818 1.83e+19
         B4  -6318 1.88e+19
         B5 -22818 2.73e+18
         B6   1182 7.01e+19
         B7   4182 2.11e+19
         B8  16182 1.75e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  7.16e-18  1.54e-17  9.24e-18  4.93e-18  2.08e-21  1.11e-16  1.77e-15  1.14e-11
          R   1.4e+17         1      2.15      1.29     0.689  0.000291      15.5       247  1.59e+06
         P1  6.48e+16     0.464         1     0.599      0.32  0.000135      7.19       115  7.38e+05
         P2  1.08e+17     0.775      1.67         1     0.534  0.000225        12       191  1.23e+06
         P3  2.03e+17      1.45      3.13      1.87         1  0.000422      22.5       359  2.31e+06
         P4  4.81e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05  5.47e+09
         P5  9.01e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9  1.03e+05
         P6  5.66e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1  6.44e+03
         P7  8.78e+10  6.29e-07  1.35e-06  8.11e-07  4.33e-07  1.83e-10  9.74e-06  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6        P7
         W1         1  2.66e-20  5.73e-20  3.44e-20  1.83e-20  7.74e-24  4.13e-19  6.57e-18  4.23e-14
          R  3.76e+19         1      2.15      1.29     0.689  0.000291      15.5       247  1.59e+06
         P1  1.74e+19     0.464         1     0.599      0.32  0.000135      7.19       115  7.38e+05
         P2  2.91e+19     0.775      1.67         1     0.534  0.000225        12       191  1.23e+06
         P3  5.46e+19      1.45      3.13      1.87         1  0.000422      22.5       359  2.31e+06
         P4  1.29e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05  5.47e+09
         P5  2.42e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9  1.03e+05
         P6  1.52e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1  6.44e+03
         P7  2.36e+13  6.29e-07  1.35e-06  8.11e-07  4.33e-07  1.83e-10  9.74e-06  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 0.406967, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.03681e+08
      global relaxation matrix dimension = 164
      setting global matrices ... done, cpu time[sec] = 0.037271, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.495788, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
             365611       253446       198775       204027        29608       759928       228531      18955.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.161605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.192403, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.039216    0.0418559    0.0666506
      low eigenvalue method done, cpu time[sec] = 0.198385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0419    0.0625         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00268    0.0625     0.968
         *Z       ---       ---  1.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1      0.94257    0.0574298

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1    0.051        0        0        0        0        0        0        0
      projection error = 0.0624859
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.800883, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.03681e+09
      global relaxation matrix dimension = 164
      setting global matrices ... done, cpu time[sec] = 0.037258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.506213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            36561.1      25344.6      19877.5      20402.7       2960.8      75992.8      22853.1      1895.55
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.161968, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021171, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.192729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0342916    0.0361376    0.0533324
      low eigenvalue method done, cpu time[sec] = 0.19868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0361    0.0506         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00216    0.0506     0.974
         *Z       ---       ---  1.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.953465    0.0465351

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0506321
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
         P7       1.1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.812071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.65 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.71073e+09
      global relaxation matrix dimension = 164
      setting global matrices ... done, cpu time[sec] = 0.037096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.506148, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            22158.2      15360.4      12046.9      12365.2      1794.42      46056.2      13850.4      1148.82
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.162162, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.021102, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.192752, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0     0.032947    0.0346069    0.0499189
      low eigenvalue method done, cpu time[sec] = 0.199045, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0346    0.0475         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00203    0.0475     0.976
         *Z       ---       ---  1.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.956302    0.0436983

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0475455
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.812096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         4.14722e+09
      global relaxation matrix dimension = 164
      setting global matrices ... done, cpu time[sec] = 0.03574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.50578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6       W1->P7
            9140.27      6336.15      4969.36      5100.67        740.2      18998.2      5713.27      473.886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.159688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.019426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183456, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    0.0303442    0.0316788    0.0435949
      low eigenvalue method done, cpu time[sec] = 0.185915, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0317    0.0418         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00179    0.0418     0.979
         *Z       ---       ---  1.39e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      prompt isomerization/dissociation:
          W\W           W1 Dissociation
           W1     0.961606    0.0383936

      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6       P7
         W1        0        0        0        0        0        0        0        0
      projection error = 0.0417738
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
         P7         1
   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.790399, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 179.772, elapsed time[sec] = 4
