Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000977, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.002112, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.000934, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 1.08047, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.08928, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.026959, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000114, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.202148, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3721
      interpolating states number/density done, cpu time[sec] = 1.30897, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 2.40127, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000931, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001291, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002552, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000522, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000845, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002454, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.007973, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000522, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000828, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001791, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000492, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000814, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001739, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.005624, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000474, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000781, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001663, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001036, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001359, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002364, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.006089, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000449, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000763, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001631, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000501, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000956, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001947, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.005619, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000433, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000741, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001613, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000481, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000797, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00178, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.005414, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000838, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001159, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002208, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.004522, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000491, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000801, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.001847, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.003796, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.05414, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.053125, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000471, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000807, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.072397, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.025847, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.963845, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.967421, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000853, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00123, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.075047, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.026433, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.792859, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.795572, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9.9e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000157, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.011946, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.004364, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.060182, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.060567, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001202, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000411, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.014495, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01455, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001192, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000425, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.014308, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014358, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001178, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000415, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.014199, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014255, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001181, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000413, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.01415, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014199, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001169, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000386, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014195, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014242, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001173, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000394, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.014056, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014105, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001164, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000403, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013993, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014042, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001169, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0004, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.014014, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014068, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000397, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.013953, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014002, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0004, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.013973, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01402, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001166, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000427, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014143, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01419, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001162, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000407, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.013986, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014044, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.01392, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013968, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001157, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00039, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.013941, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01399, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.13172, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 3.17782, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001172, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0004, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.014936, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015003, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00116, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.013786, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013839, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000391, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.013695, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013746, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001147, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000414, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.014031, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014081, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001141, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000395, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.01384, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013895, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001137, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000395, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.0137, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01375, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00114, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.013657, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013706, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000408, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.013836, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013883, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001156, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000395, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.01366, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013708, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001138, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.013611, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013658, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001127, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000384, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.013768, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013813, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000399, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.013608, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013653, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001133, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000372, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.013558, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013603, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001128, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.013604, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013649, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000369, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.0136, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013646, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001136, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000408, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.013657, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013714, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.25618, elapsed time[sec] = 2
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.50115, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001283, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000438, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 6.02121, elapsed time[sec] = 6
         effective power exponent at 569.903 kcal/mol = 13.5364
      interpolating states number/density done, cpu time[sec] = 6.03775, elapsed time[sec] = 6
   Model::RRHO::RRHO:  done, cpu time[sec] = 6.03783, elapsed time[sec] = 6
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000866, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000826, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12324e+128  6.66948e+29  2.86822e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52491e+59  8.88053e+30  3.66779e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.86804e+39  4.41749e+31  1.66476e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.56943e+32  1.53178e+32  5.25536e+31
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30  2.00758e+31  4.38422e+32  1.38727e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.38786e+31  1.10962e+33  3.28769e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  1.70118e+31  2.57036e+33  7.23031e+32
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31   2.4846e+31  5.55986e+33  1.50225e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  3.89061e+31  1.13781e+34  2.98133e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  6.27543e+31  2.22341e+34  5.69316e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.02354e+32  4.17722e+34  1.05163e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  1.67205e+32  7.58498e+34  1.88656e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  2.72124e+32  1.33665e+35   3.2971e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  4.39877e+32  2.29366e+35  5.62797e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33  7.04965e+32  3.84301e+35  9.40249e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.11902e+33   6.3014e+35  1.54022e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  1.75837e+33  1.01312e+36  2.47765e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  2.73456e+33  1.59976e+36  3.91921e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  4.20877e+33   2.4845e+36  6.10341e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  6.41151e+33  3.79973e+36  9.36743e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 3.42725e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966
     200 9.31689e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35  2.49608e+59  1.77655e+26  6.67151e+15
     300  5.25428e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.59455e+39  3.25537e+28  2.48065e+21
     400  5.59864e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.12554e+32  6.85118e+29  2.24136e+24
     500  1.88188e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32    2.445e+31  5.78559e+30  1.76233e+26
     600  1.11242e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.63563e+31  3.01222e+31  4.01325e+27
     700  4.66878e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  1.95838e+31  1.16805e+32    4.443e+28
     800   2.7953e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  2.81034e+31  3.71834e+32   3.1024e+29
     900  9.78971e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  4.34087e+31  1.02773e+33  1.58057e+30
    1000  1.17491e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  6.92542e+31  2.55416e+33  6.41678e+30
    1100  3.43911e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.11948e+32  5.84183e+33    2.197e+31
    1200  1.95761e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  1.81518e+32  1.24971e+34  6.59133e+31
    1300  1.85281e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  2.93557e+32  2.52998e+34  1.77997e+32
    1400  2.60764e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  4.71959e+32  4.88948e+34  4.41176e+32
    1500  5.02891e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34   7.5284e+32  9.08149e+34  1.01832e+33
    1600  1.25008e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.19012e+33  1.62959e+35   2.2134e+33
    1700  3.82275e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  1.86332e+33  2.83696e+35  4.56984e+33
    1800  1.38699e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  2.88846e+33  4.80794e+35  9.02403e+33
    1900  5.80323e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  4.43285e+33  7.95467e+35  1.71386e+34
    2000  2.73722e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  6.73537e+33  1.28785e+36  3.14487e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 13.3929, elapsed time[sec] = 9
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 13058 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00014
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007584
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.009455
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.14626
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.90383
         W1 Well: minimal relaxation eigenvalue = 0.0378536
         W1 Well: maximal relaxation eigenvalue = 2.02481
         W1 Well:       grid size = 893
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 262
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -42 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 354
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 385
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6192 1/cm
         B5 Barrier: nonpositive number of states at -23592 1/cm => truncating
         B5 Barrier:        grid size = 733
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23592 1/cm
         B6 Barrier:        grid size = 232
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.2018, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23592 3.42e+05 3.15e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -42 2.63e+12
         B2    208 2.19e+11
         B3  -4642 3.33e+10
         B4  -6192 5.46e+10
         B5 -23592 2.38e+09
         B6   1458 5.82e+11
         B7   4708 1.51e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.88e+44  5.68e+44  5.78e+35  2.47e+32  5.58e-06  3.24e+48  2.62e+55
          R  5.32e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  1.76e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  1.73e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  4.06e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  1.79e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  3.09e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  3.82e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.3e+40   1.3e+41  1.32e+32  5.64e+28  1.28e-09  7.41e+44  5.99e+51
          R  2.33e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  7.69e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  7.56e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  1.77e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  7.83e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  1.35e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  1.67e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.2058, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+08
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 0.528217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.384, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            307.291      25.6107      3.88563      6.38437     0.277882      67.9755       1.7631
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243418, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018906, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262562, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.97083e-12  1.00492e-51  1.32475e-59
      low eigenvalue method done, cpu time[sec] = 0.263511, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-53  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.4091e-46   1.0311e-47   4.7944e-49  3.75915e-47  7.42795e-49   1.5252e-49 -1.52738e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7051, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.36416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             102.43      8.53691      1.29521      2.12812    0.0926275      22.6585     0.587699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243726, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262868, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.00594e-13  3.34973e-52  3.22984e-60
      low eigenvalue method done, cpu time[sec] = 0.263672, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-53  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.18971e-47  2.54903e-47  1.58135e-48  1.53188e-47  1.93967e-49 -3.98461e-50 -5.38684e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4265, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.07644e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.38173, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.4582      5.12215     0.777126      1.27687    0.0555765      13.5951      0.35262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243059, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262186, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.75524e-13  2.00984e-52  1.55266e-60
      low eigenvalue method done, cpu time[sec] = 0.263104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.61e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.40112e-46 -4.79216e-47 -3.52128e-49  1.26929e-47  3.09149e-49 -5.14911e-50   1.4257e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.9498, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         5.70702e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.43565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8834, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.8987      3.65868      0.55509     0.912053    0.0396975      9.71079     0.251871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018895, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261947, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.95357e-13   1.4356e-52   9.3293e-61
      low eigenvalue method done, cpu time[sec] = 0.262653, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.36964e-47 -8.39867e-48 -5.90681e-49 -3.80991e-48 -1.00185e-49  -2.5625e-49  5.33136e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.0156, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1          7.3376e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.44337, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.917, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.1435      2.84564     0.431737     0.709374    0.0308758      7.55284       0.1959
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261489, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4747e-12  1.11658e-52  6.29113e-61
      low eigenvalue method done, cpu time[sec] = 0.262487, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.63186e-47 -3.70321e-47 -1.00161e-48 -4.93289e-48  -1.3316e-49  6.62463e-51  2.43189e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1155, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9276, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.7291      2.56107     0.388563     0.638437    0.0277882      6.79755      0.17631
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01885, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261813, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4732e-14  1.00492e-52  5.31539e-61
      low eigenvalue method done, cpu time[sec] = 0.262644, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.29097e-47 -1.60634e-47 -1.00521e-48 -1.79301e-47 -2.52535e-49 -3.75765e-50 -9.24228e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.135, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.22293e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45108, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9377, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.4861      1.70738     0.259042     0.425625    0.0185255       4.5317      0.11754
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242482, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018767, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261494, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31517e-13  6.69946e-53  2.73023e-61
      low eigenvalue method done, cpu time[sec] = 0.26235, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.7e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.06742e-47   1.4886e-47  3.19838e-49  1.87899e-49  5.85845e-50   1.2192e-49  7.33784e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.2081, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.63058e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.39737, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9215, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.3646      1.28054     0.194282     0.319218    0.0138941      3.39878    0.0881549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242832, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261894, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.11107e-13   5.0246e-53  1.67472e-61
      low eigenvalue method done, cpu time[sec] = 0.26265, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.02e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.80699e-48 -6.20761e-48 -9.59939e-50  3.64284e-48  4.89162e-50  1.19692e-50 -1.68411e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1152, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.03822e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.41522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9496, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.2916      1.02443     0.155425     0.255375    0.0111153      2.71902    0.0705239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018814, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260991, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.98729e-13  4.01968e-53  1.13662e-61
      low eigenvalue method done, cpu time[sec] = 0.261699, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.41389e-48  6.68695e-48 -2.05127e-50 -2.17557e-48 -1.91852e-50   3.7265e-50 -2.20153e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45555, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9504, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             10.243     0.853691     0.129521     0.212812   0.00926275      2.26585    0.0587699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24202, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018853, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.90899e-13  3.34973e-53  8.23862e-62
      low eigenvalue method done, cpu time[sec] = 0.261833, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.17373e-48  2.61047e-48  2.65429e-49  4.79451e-48  8.82011e-50  1.59638e-50 -1.19099e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1555, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.85351e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.46183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9455, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.77974     0.731735     0.111018     0.182411    0.0079395      1.94216    0.0503742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018883, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261572, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26795e-13   2.8712e-53  6.25488e-62
      low eigenvalue method done, cpu time[sec] = 0.262515, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.87e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.92545e-48 -2.07114e-48  -1.5456e-49 -1.72715e-48   -6.182e-50  9.29409e-51  1.31289e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.1587, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.26116e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45879, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.952, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7.68228     0.640268    0.0971408     0.159609   0.00694706      1.69939    0.0440775
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018766, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261031, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.99639e-13   2.5123e-53   4.9154e-62
      low eigenvalue method done, cpu time[sec] = 0.261861, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.51e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.51e-55  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.28205e-47  9.74119e-48  2.25741e-49  9.75478e-49  1.33075e-50  7.11452e-50 -6.62481e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.2189, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 13336 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011586
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.614104
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.303028
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.81932
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.43127
         W1 Well: minimal relaxation eigenvalue = 0.0370967
         W1 Well: maximal relaxation eigenvalue = 2.00674
         W1 Well:       grid size = 864
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 376
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23584 1/cm => truncating
         B5 Barrier:        grid size = 710
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23584 1/cm
         B6 Barrier:        grid size = 228
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.3123, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23584 3.44e+05 3.34e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 3.02e+12
         B2    181 2.54e+11
         B3  -4604 3.92e+10
         B4  -6216 6.39e+10
         B5 -23584 2.79e+09
         B6   1480  6.9e+11
         B7   4705 1.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.26e+42  3.69e+42  7.98e+33  4.38e+30  1.66e-06  1.77e+46  8.83e+52
          R  7.91e-43         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  2.71e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  1.25e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  2.28e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  6.01e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  5.64e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  1.13e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.02e+38   8.8e+38   1.9e+30  1.05e+27  3.97e-10  4.23e+42  2.11e+49
          R  3.32e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  1.14e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  5.25e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  9.57e-28  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  2.52e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  2.36e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  4.75e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+08
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 0.497347, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6536, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             342.72      28.8787      4.45159      7.25421     0.316846      78.3163      2.12485
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217612, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.235787, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.63298e-12  1.13974e-50  1.94252e-57
      low eigenvalue method done, cpu time[sec] = 0.236568, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-52  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.01144e-46 -2.41833e-46  3.93148e-47  1.13149e-45  2.73081e-47  3.55555e-48 -2.50312e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.559, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.47185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             114.24      9.62622      1.48386      2.41807     0.105615      26.1054     0.708282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017249, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234332, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.72753e-12  3.79914e-51  4.92033e-58
      low eigenvalue method done, cpu time[sec] = 0.235049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-52  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.95629e-46  2.11582e-46 -3.51724e-48  -2.2945e-46 -3.56158e-48  2.15529e-48  2.62024e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.0188, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.94873e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.32466, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             68.544      5.77573     0.890317      1.45084    0.0633692      15.6633     0.424969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234447, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.85958e-14  2.27948e-51  2.40531e-58
      low eigenvalue method done, cpu time[sec] = 0.235119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.46e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.17796e-45 -1.91733e-46  2.67988e-48  4.69172e-47  1.07856e-48  -2.3053e-48 -2.46032e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5135, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         5.52822e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.0756, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              48.96      4.12552     0.635941      1.03632    0.0452637       11.188      0.30355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216414, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017247, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23394, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.71161e-13   1.6282e-51  1.46067e-58
      low eigenvalue method done, cpu time[sec] = 0.234608, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.04e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.76305e-46  2.41003e-46  5.03874e-48  9.29881e-48  5.33507e-50   1.0992e-49 -2.11221e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.0501, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.10772e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.5034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              38.08      3.20874     0.494621     0.806024    0.0352051      8.70181     0.236094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216554, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234081, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.33671e-13  1.26638e-51  9.92542e-59
      low eigenvalue method done, cpu time[sec] = 0.234802, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.7e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.02224e-45  3.66139e-46  9.54052e-48  6.65782e-47  1.58282e-48  1.14675e-48 -9.74841e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.718, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7677, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             34.272      2.88787     0.445159     0.725421    0.0316846      7.83163     0.212485
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216174, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233679, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7167e-14  1.13974e-51  8.41222e-59
      low eigenvalue method done, cpu time[sec] = 0.234342, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.23e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.34741e-45  -2.8637e-46 -8.26496e-48 -2.76036e-47 -6.45056e-49 -2.62233e-48 -2.55824e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7524, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.18462e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50412, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             22.848      1.92524     0.296772     0.483614    0.0211231      5.22108     0.141656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216229, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017337, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.02596e-13  7.59828e-52  4.37075e-59
      low eigenvalue method done, cpu time[sec] = 0.234613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.6e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.82e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.40298e-46  1.45798e-46  2.98902e-48  7.01897e-49  4.75097e-49  8.34115e-49 -1.88015e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6943, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.57949e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7169, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             17.136      1.44393     0.222579     0.362711    0.0158423      3.91581     0.106242
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.10438e-13  5.69871e-52  2.70136e-59
      low eigenvalue method done, cpu time[sec] = 0.234269, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.7e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.67516e-46 -1.61874e-46 -2.54837e-48 -1.05297e-47 -2.84762e-49 -6.50143e-49 -1.55578e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7101, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.97437e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50842, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7523, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.7088      1.15515     0.178063     0.290168    0.0126738      3.13265    0.0849939
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.21608, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017234, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233584, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.37288e-13  4.55897e-52   1.8435e-59
      low eigenvalue method done, cpu time[sec] = 0.234258, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.48553e-46  8.44724e-47 -3.57741e-49 -3.66392e-47 -6.08927e-49 -1.60394e-49   2.6347e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7414, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7819, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             11.424     0.962622     0.148386     0.241807    0.0105615      2.61054    0.0708282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233279, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.13494e-13  3.79914e-52   1.3419e-59
      low eigenvalue method done, cpu time[sec] = 0.233983, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.52129e-47  3.57406e-48   3.7297e-49  -8.2184e-48 -4.22959e-49 -2.40489e-49  2.11478e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7547, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.76411e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.51182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.79201     0.825105     0.127188     0.207263   0.00905274      2.23761    0.0607099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017207, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23376, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02657e-14   3.2564e-52  1.02225e-59
      low eigenvalue method done, cpu time[sec] = 0.234427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.26e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.89226e-46 -4.28262e-47 -8.32247e-49 -2.19961e-48   9.3092e-50 -4.76396e-49 -2.26365e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.15898e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.50159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.803, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.56801     0.721966      0.11129     0.181355   0.00792115      1.95791    0.0531212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215943, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233459, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.70711e-14  2.84935e-52  8.05578e-60
      low eigenvalue method done, cpu time[sec] = 0.234122, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.85e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.01987e-47  3.11558e-47  2.93806e-49 -7.16755e-48 -6.83627e-50  2.63567e-49 -2.34412e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.787, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 13615 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.012127
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.874008
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.838845
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.518914
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.20609
         W1 Well: minimal relaxation eigenvalue = 0.0363935
         W1 Well: maximal relaxation eigenvalue = 2.05583
         W1 Well:       grid size = 853
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31594 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -6 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 344
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 374
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 694
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 229
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.58286, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31594 -23167 4.66e+05 3.55e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -6 3.46e+12
         B2    207 2.95e+11
         B3  -4617 4.62e+10
         B4  -6207 7.46e+10
         B5 -23167 3.27e+09
         B6   1478 8.16e+11
         B7   4711 2.31e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e+40  3.35e+40  1.47e+32  1.02e+29  5.46e-07  1.37e+44  4.34e+50
          R  8.45e-41         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  2.99e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  6.81e-33  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3   9.8e-30  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  1.83e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5   7.3e-45  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  2.31e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.88e+36  8.13e+36  3.57e+28  2.48e+25  1.33e-10  3.33e+40  1.05e+47
          R  3.48e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  1.23e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2   2.8e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  4.03e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  7.54e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5     3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  9.49e-48  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.58785, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+08
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 0.476843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3683, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            381.223      32.4815      5.08519      8.22036     0.360268      89.9184      2.54799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016617, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224186, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.89136e-12  1.22199e-49  2.07979e-55
      low eigenvalue method done, cpu time[sec] = 0.225176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.45e-51         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.17806e-44  1.12307e-44  5.52025e-46  1.08201e-44  3.04508e-46 -1.72621e-47 -1.09649e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.3177, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            127.074      10.8272      1.69506      2.74012     0.120089      29.9728      0.84933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206828, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016606, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223663, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.96562e-12  4.07331e-50  5.46058e-56
      low eigenvalue method done, cpu time[sec] = 0.224501, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.07e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-51         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.95122e-45 -2.62326e-45  3.75832e-47  9.46734e-46  1.08171e-47 -1.03606e-47 -1.73651e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3195, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.82985e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.4668, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.2446      6.49629      1.01704      1.64407    0.0720536      17.9837     0.509598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206994, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016623, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223843, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40062e-12  2.44399e-50  2.71267e-56
      low eigenvalue method done, cpu time[sec] = 0.224492, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.89e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00603e-44  5.75598e-45  1.75488e-46    1.602e-45  3.12626e-47   4.4816e-48  4.39221e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3114, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         5.36179e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46622, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4576, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.4604      4.64021     0.726456      1.17434    0.0514669      12.8455     0.363998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206263, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223081, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.69603e-13  1.74571e-50  1.66433e-56
      low eigenvalue method done, cpu time[sec] = 0.223891, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.35e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.19329e-45 -1.76936e-45 -9.37043e-47 -5.94805e-46  -1.3232e-47 -2.75092e-47 -1.36954e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2984, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.89373e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46107, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4364, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.3581      3.60905     0.565021     0.913374    0.0400298      9.99093      0.28311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20665, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01659, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223466, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.65548e-13  1.35777e-50  1.13939e-56
      low eigenvalue method done, cpu time[sec] = 0.224134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.94e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.13289e-45  8.43957e-46  1.05173e-47  9.47065e-47  8.62129e-48  9.39654e-48  9.53472e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3111, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.31636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.1223      3.24815     0.508519     0.822036    0.0360268      8.99184     0.254799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206451, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016527, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223197, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16631e-12    1.222e-50  9.68636e-57
      low eigenvalue method done, cpu time[sec] = 0.223952, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.45e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.16954e-45  6.61828e-46 -5.26219e-47 -1.00753e-45 -1.42635e-47  -6.9576e-49 -3.90452e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1909, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.14896e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4519, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.4149      2.16543     0.339013     0.548024    0.0240179      5.99456     0.169866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016535, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222913, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8123e-13  8.14664e-51  5.09004e-57
      low eigenvalue method done, cpu time[sec] = 0.223898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.15e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.96e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46308e-45  5.48405e-46  2.78866e-47  4.86119e-46  1.24859e-47  2.28484e-48 -9.33334e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3867, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.53194e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4334, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.0611      1.62407      0.25426     0.411018    0.0180134      4.49592     0.127399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206206, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222955, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.70585e-13  6.10998e-51  3.16971e-57
      low eigenvalue method done, cpu time[sec] = 0.2236, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.11e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.69061e-45 -1.86222e-46  9.43298e-48   1.0647e-46  3.78503e-48  2.25587e-47 -5.04288e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3103, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.91493e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.2489      1.29926     0.203408     0.328815    0.0144107      3.59673      0.10192
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206217, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016575, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223032, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.05819e-13  4.88798e-51  2.17508e-57
      low eigenvalue method done, cpu time[sec] = 0.223753, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.34741e-45  6.78558e-46 -2.18293e-48  -1.0098e-46 -3.55109e-48  3.39549e-49  1.16826e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3801, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46216, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.7074      1.08272     0.169506     0.274012    0.0120089      2.99728     0.084933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222837, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.26495e-13  4.07332e-51  1.59004e-57
      low eigenvalue method done, cpu time[sec] = 0.223478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.07e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.58831e-45  9.73476e-46  2.54674e-47  7.87721e-47  3.10703e-48 -4.84732e-48 -1.77986e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2955, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          2.6809e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4402, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.8921     0.928042     0.145291     0.234868    0.0102934       2.5691    0.0727997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.205411, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016511, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222142, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.88262e-14  3.49142e-51  1.21545e-57
      low eigenvalue method done, cpu time[sec] = 0.222798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.30447e-46 -5.32912e-46 -3.02458e-47 -4.16053e-46 -8.52639e-48  1.04917e-47 -1.09728e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6358, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.06388e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.4597, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.476, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.53057     0.812037      0.12713     0.205509    0.0090067      2.24796    0.0636997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.205451, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016599, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222269, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    3.164e-13  3.05499e-51  9.60566e-58
      low eigenvalue method done, cpu time[sec] = 0.222917, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.05e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.60214e-46  1.00686e-46  -1.0528e-47 -2.71833e-46 -3.88477e-48  5.81233e-48 -5.14428e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3492, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 13893 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011741
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.710028
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.932485
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.631984
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.71263
         W1 Well: minimal relaxation eigenvalue = 0.0356984
         W1 Well: maximal relaxation eigenvalue = 1.68436
         W1 Well:       grid size = 827
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 253
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 249
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 337
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 365
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23177 1/cm => truncating
         B5 Barrier:        grid size = 674
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23177 1/cm
         B6 Barrier:        grid size = 226
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.1636, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23177 4.62e+05 3.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 3.96e+12
         B2    198 3.41e+11
         B3  -4642 5.42e+10
         B4  -6182 8.69e+10
         B5 -23177 3.82e+09
         B6   1463 9.63e+11
         B7   4708 2.84e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.44e+38  3.96e+38  3.38e+30  2.93e+27  1.88e-07   1.4e+42  2.89e+48
          R  6.93e-39         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  2.53e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  2.96e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  3.41e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  5.32e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  7.17e-43  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  3.47e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.63e+34  9.96e+34  8.49e+26  7.37e+23  4.73e-11  3.51e+38  7.26e+44
          R  2.75e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1     1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  1.18e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  1.36e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  2.11e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  2.85e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  1.38e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.1685, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+08
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 0.455139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            422.721       36.423      5.78872      9.28504     0.408271      102.821      3.03751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190861, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015291, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.207007, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.24702e-12  1.24822e-48  1.67574e-53
      low eigenvalue method done, cpu time[sec] = 0.20768, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-50         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.14439e-43  1.02762e-43  3.73126e-45  6.19204e-45  1.96322e-46  -2.9554e-46 -2.70299e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.8573, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0598, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            140.907       12.141      1.92957      3.09501      0.13609      34.2736       1.0125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190153, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015276, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205697, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.55044e-12  4.16082e-49   4.5527e-54
      low eigenvalue method done, cpu time[sec] = 0.206365, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-50         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.27106e-43 -1.35996e-43  -3.1465e-45 -7.05467e-45 -4.93723e-46 -2.51144e-46  4.39372e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5728, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.71895e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38707, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0894, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            84.5443       7.2846      1.15774      1.85701    0.0816543      20.5641     0.607502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205374, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76623e-12  2.49651e-49  2.29716e-54
      low eigenvalue method done, cpu time[sec] = 0.205977, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -7.5052e-44 -4.82762e-44 -8.64748e-46  5.59993e-45   6.3271e-47  5.78346e-47  1.98084e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6726, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         5.20654e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0576, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.3888      5.20329     0.826959      1.32643    0.0583245      14.6887      0.43393
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190018, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015223, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205496, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.39936e-12  1.78323e-49  1.42362e-54
      low eigenvalue method done, cpu time[sec] = 0.206392, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.37e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.33106e-44 -2.59597e-45 -3.91454e-46  1.56738e-45  1.99101e-47 -2.56687e-47  2.72557e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5887, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.69412e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0828, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             46.969        4.047     0.643191      1.03167    0.0453635      11.4245     0.337501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190098, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015227, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.58924e-12  1.38696e-49  9.81773e-55
      low eigenvalue method done, cpu time[sec] = 0.206471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.95e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.28019e-44 -1.61212e-44 -6.19559e-46 -1.05053e-44 -2.49937e-46   1.8812e-47  6.43368e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0807, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.2721       3.6423     0.578872     0.928504    0.0408271      10.2821     0.303751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189837, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01522, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205316, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37808e-12  1.24827e-49  8.37165e-55
      low eigenvalue method done, cpu time[sec] = 0.206204, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.31376e-44   1.7885e-44  5.21113e-46  3.13722e-45  1.05159e-46  2.76739e-46  1.11347e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6056, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.11569e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.3876, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0886, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.1814       2.4282     0.385914     0.619003    0.0272181      6.85471     0.202501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189396, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015196, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204854, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.80765e-13  8.32181e-50  4.44895e-55
      low eigenvalue method done, cpu time[sec] = 0.20556, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.32e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.97e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.71255e-45 -4.65984e-45 -3.51949e-46 -6.67734e-45 -1.15697e-46  6.10512e-47  1.94416e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6542, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.48758e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0644, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.1361      1.82115     0.289436     0.464252    0.0204136      5.14103     0.151876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190173, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015268, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.82982e-13  6.24137e-50  2.79149e-55
      low eigenvalue method done, cpu time[sec] = 0.206524, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.24e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.11876e-44  -2.0749e-44 -4.79013e-46 -5.17676e-45 -1.45166e-46 -7.70369e-47 -5.28889e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.5773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.85948e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0946, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.9089      1.45692     0.231549     0.371402    0.0163309      4.11283       0.1215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189145, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015204, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9092e-13  4.99311e-50  1.92624e-55
      low eigenvalue method done, cpu time[sec] = 0.205445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.49914e-44    1.004e-44  2.98642e-46  2.32076e-45  3.59814e-47  9.91448e-47  1.91298e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6152, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.39051, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0916, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.0907       1.2141     0.192957     0.309501     0.013609      3.42736      0.10125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189007, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204447, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02626e-13  4.16093e-50  1.41425e-55
      low eigenvalue method done, cpu time[sec] = 0.205234, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.57898e-44 -1.34847e-44 -3.08496e-46 -1.56605e-45 -4.44893e-47 -1.50295e-46 -1.71433e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.656, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.60327e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.0778      1.04066     0.165392     0.265287    0.0116649      2.93773     0.086786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189058, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015258, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.29206e-14  3.56651e-50  1.08488e-55
      low eigenvalue method done, cpu time[sec] = 0.205175, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.51952e-44 -9.71259e-45 -2.39883e-46 -1.08354e-45 -2.68192e-47  1.49241e-46  6.32735e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6127, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.97516e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0875, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             10.568     0.910575     0.144718     0.232126    0.0102068      2.57052    0.0759378
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.188618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204102, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.23559e-13   3.1207e-50  8.59883e-56
      low eigenvalue method done, cpu time[sec] = 0.20473, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.91248e-46 -5.03976e-45 -2.02062e-46 -8.56133e-46 -1.92581e-47  1.01285e-47 -3.83805e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6106, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 14171 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011303
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.785176
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.876882
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.52773
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.2295
         W1 Well: minimal relaxation eigenvalue = 0.0350281
         W1 Well: maximal relaxation eigenvalue = 2.11885
         W1 Well:       grid size = 803
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 249
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 245
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 330
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 357
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 654
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 223
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1459 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.5895, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23107 4.86e+05 4.01e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 4.52e+12
         B2    206 3.94e+11
         B3  -4639 6.35e+10
         B4  -6178 1.01e+11
         B5 -23107 4.46e+09
         B6   1460 1.13e+12
         B7   4709 3.48e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.27e+36  6.05e+36  9.64e+28  1.03e+26  6.86e-08  1.85e+40  2.56e+46
          R  4.41e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  1.65e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  1.04e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  9.71e-27   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  1.46e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  5.41e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6   3.9e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.92e+32  1.58e+33  2.51e+25  2.69e+22  1.79e-11  4.82e+36  6.69e+42
          R  1.69e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  6.34e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  3.98e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  3.72e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  5.59e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  2.07e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6   1.5e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
   MasterEquation::set:  done, cpu time[sec] = 11.5944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+08
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 0.434781, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.91425, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            467.495       40.737      6.56989      10.4585     0.461346      117.164      3.60298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175722, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014238, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190452, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.85863e-12  1.22899e-47  1.04702e-51
      low eigenvalue method done, cpu time[sec] = 0.191029, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.3e-49         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   4.5654e-42  2.40227e-42  7.71215e-44  7.17665e-43  1.82738e-44  3.36611e-45  9.12835e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.282, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.31232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            155.832       13.579      2.18996      3.48618     0.153782      39.0546      1.20099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189528, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.7787e-12  4.09726e-48  2.93845e-52
      low eigenvalue method done, cpu time[sec] = 0.1901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-49         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.65528e-42  7.81045e-43   1.8278e-44  1.53342e-43  3.73028e-45  3.01527e-45 -3.92296e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6346, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.61529e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4169, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             93.499      8.14739      1.31398      2.09171    0.0922692      23.4328     0.720596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014228, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78595e-12   2.4585e-48   1.5051e-52
      low eigenvalue method done, cpu time[sec] = 0.190144, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.61e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.18028e-43  2.73912e-43  5.89269e-45  7.95337e-44  2.04311e-45   2.0401e-45 -9.01389e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6532, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         5.06141e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             66.785      5.81957     0.938556      1.49408    0.0659066      16.7377     0.514711
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174852, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189309, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.86791e-14  1.75613e-48  9.41917e-53
      low eigenvalue method done, cpu time[sec] = 0.189898, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.15e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.34793e-43  3.11207e-43  9.60009e-45  7.22282e-44  1.61407e-45  3.11373e-45    2.737e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6347, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.50753e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3956, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.9439      4.52633     0.729988      1.16206    0.0512607      13.0182     0.400331
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15351e-12   1.3659e-48  6.54249e-53
      low eigenvalue method done, cpu time[sec] = 0.189804, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.36218e-43 -4.46934e-44 -4.07775e-45 -7.56922e-44 -1.45947e-45 -2.56463e-45 -4.84525e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3858, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.7495       4.0737     0.656989      1.04585    0.0461346      11.7164     0.360298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189266, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18169e-12  1.22932e-48  5.59538e-53
      low eigenvalue method done, cpu time[sec] = 0.189843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.70344e-43 -1.58669e-43 -8.96534e-46  4.65627e-44  4.70043e-46 -4.00246e-48  -1.9524e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6265, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.08459e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.1663       2.7158     0.437993     0.697236    0.0307564      7.81093     0.240199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174533, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014237, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.188996, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.41682e-13  8.19571e-49  3.00677e-53
      low eigenvalue method done, cpu time[sec] = 0.189573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.2e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.20593e-44  6.78258e-44  1.70662e-45  1.51644e-44  1.88724e-46 -9.82405e-46 -3.59802e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6202, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.44612e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.31119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4177, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.3748      2.03685     0.328495     0.522927    0.0230673       5.8582     0.180149
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174672, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189162, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.58879e-13  6.14688e-49  1.90083e-53
      low eigenvalue method done, cpu time[sec] = 0.18976, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.15e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.34687e-43  9.72082e-45  2.85056e-45  6.71836e-44   1.4503e-45 -6.39008e-46  2.92088e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.80765e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4212, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.6998      1.62948     0.262796     0.418341    0.0184538      4.68656     0.144119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174613, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2823e-13  4.91756e-49  1.31898e-53
      low eigenvalue method done, cpu time[sec] = 0.189616, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.92e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.85567e-44  4.77239e-44  1.25729e-45  2.50591e-44  5.43289e-46  -1.1241e-45  1.40208e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6546, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3915, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.5832       1.3579     0.218996     0.348618    0.0153782      3.90546     0.120099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174172, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014284, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.188679, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.46302e-13    4.098e-49  9.72646e-54
      low eigenvalue method done, cpu time[sec] = 0.18926, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.1e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.00038e-43 -2.54828e-44 -2.04722e-45 -3.71769e-44 -6.74943e-46 -4.69569e-46 -9.46225e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.621, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.53071e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.31093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.404, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             13.357      1.16391     0.187711     0.298815    0.0131813      3.34754     0.102942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174334, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014201, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.188755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.75311e-14  3.51259e-49  7.48778e-54
      low eigenvalue method done, cpu time[sec] = 0.189333, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.08988e-43  -7.9845e-44 -1.45698e-45   -5.429e-45  -1.5882e-46  3.96074e-46 -5.33694e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6354, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.89223e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4347, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.6874      1.01842     0.164247     0.261463    0.0115336       2.9291    0.0900745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174067, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014189, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.188477, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.92564e-14  3.07353e-49  5.95248e-54
      low eigenvalue method done, cpu time[sec] = 0.189065, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.07e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.68629e-44  4.06097e-44  1.13294e-45  8.04116e-45  1.09204e-46 -9.37234e-46  3.87313e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6709, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 14450 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011098
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.680819
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.860375
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.55256
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.08771
         W1 Well: minimal relaxation eigenvalue = 0.034407
         W1 Well: maximal relaxation eigenvalue = 2.19421
         W1 Well:       grid size = 794
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 250
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 329
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4633 1/cm
         B4 Barrier:        grid size = 356
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 648
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 224
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.3184, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23135 4.77e+05 4.25e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 5.15e+12
         B2    182 4.54e+11
         B3  -4633 7.42e+10
         B4  -6199 1.17e+11
         B5 -23135 5.19e+09
         B6   1457 1.33e+12
         B7   4705 4.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.59e+34  1.19e+35  3.43e+27  4.46e+24  2.69e-08  3.19e+38  3.04e+44
          R  2.18e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  8.38e-36     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  2.92e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  2.24e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  3.71e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  3.14e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  3.29e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e+31  3.16e+31  9.09e+23  1.18e+21  7.14e-12  8.46e+34  8.05e+40
          R  8.21e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  3.16e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2   1.1e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  8.45e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4   1.4e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  1.18e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  1.24e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
   MasterEquation::set:  done, cpu time[sec] = 11.3229, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+08
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 0.42599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6236, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            515.684      45.4487      7.43516       11.749      0.51989      133.062       4.2533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170826, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18481, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.74896e-11  1.16864e-46  5.14857e-50
      low eigenvalue method done, cpu time[sec] = 0.185373, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.02e-48         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.57978e-41  7.94057e-42  4.21094e-43   4.8823e-42  1.16562e-43  5.04477e-45  1.79264e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.9315, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27498, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1042, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.895      15.1496      2.47839      3.91635     0.173297       44.354      1.41777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013727, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183851, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.95623e-12  3.89861e-47  1.49021e-50
      low eigenvalue method done, cpu time[sec] = 0.184415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.9e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-48         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.68726e-42 -1.64386e-42 -6.73922e-44 -7.10841e-43 -1.10945e-44  4.41308e-45   2.6462e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2084, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          3.5182e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1798, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            103.137      9.08974      1.48703      2.34981     0.103978      26.6124      0.85066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170246, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56166e-12   2.3399e-47  7.74416e-51
      low eigenvalue method done, cpu time[sec] = 0.184738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.05e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.7732e-42  5.04077e-43 -4.40732e-45 -6.59667e-43 -1.05453e-44  1.02142e-44   2.3393e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.36, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.92548e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1453, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.6691      6.49267      1.06217      1.67844      0.07427      19.0088     0.607615
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.16999, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183928, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.33436e-13  1.67165e-47  4.89248e-51
      low eigenvalue method done, cpu time[sec] = 0.184488, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.75e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.96292e-42 -2.79782e-43  1.99349e-44   3.9794e-43  8.25992e-45  2.05704e-44  2.72155e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.243, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.33276e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1853, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.2982      5.04985     0.826129      1.30545    0.0577656      14.7847     0.472589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170045, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18396, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.67108e-13  1.30033e-47  3.42209e-51
      low eigenvalue method done, cpu time[sec] = 0.184523, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.47e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.25404e-43  6.63089e-43  2.46691e-44  5.37446e-43  1.02433e-44 -2.38505e-44 -1.41078e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2791, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.155, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.5684      4.54487     0.743516       1.1749     0.051989      13.3062      0.42533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170061, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.60038e-13  1.17035e-47  2.93519e-51
      low eigenvalue method done, cpu time[sec] = 0.184538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.03914e-42   1.6994e-42  6.28985e-44  4.49008e-43  9.07331e-45  1.41277e-44  2.07456e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2641, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.05546e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1752, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.3789      3.02991     0.495677      0.78327    0.0346593       8.8708     0.283553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.1234e-14  7.80351e-48  1.59456e-51
      low eigenvalue method done, cpu time[sec] = 0.184125, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.8e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.73285e-43  1.00039e-43  -3.4053e-45  -9.9942e-44 -1.13102e-46  5.66457e-45 -1.04779e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3153, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.40728e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27325, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1689, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.7842      2.27243     0.371758     0.587452    0.0259945       6.6531     0.212665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184202, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.76876e-13  5.85315e-48  1.01558e-51
      low eigenvalue method done, cpu time[sec] = 0.184771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.85e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.70464e-43 -6.04152e-44 -1.97922e-45  5.70546e-45  4.20781e-47 -7.83019e-45  8.03971e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          1.7591e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27723, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1894, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.6273      1.81795     0.297406     0.469962    0.0207956      5.32248     0.170132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169723, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013753, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183666, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.40161e-13   4.6828e-48  7.08629e-52
      low eigenvalue method done, cpu time[sec] = 0.184227, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.68e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.11433e-42  -2.0335e-43  4.37881e-45  2.14031e-43  3.67378e-45 -2.13195e-45  2.02304e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2897, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.1895      1.51496     0.247839     0.391635    0.0173297       4.4354     0.141777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169725, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013743, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183655, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.02838e-13   3.9025e-48  5.24846e-52
      low eigenvalue method done, cpu time[sec] = 0.184216, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.9e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.68443e-42 -5.77794e-43 -1.30405e-44 -4.91551e-44 -1.60331e-45 -5.23751e-45 -3.81413e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.285, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.46274e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.7338      1.29853     0.212433     0.335687     0.014854      3.80177     0.121523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169924, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013775, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183889, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.63093e-13  3.34511e-48  4.05488e-52
      low eigenvalue method done, cpu time[sec] = 0.184463, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.4879e-42  3.92174e-43  9.28925e-45  3.52482e-44  9.13681e-46  4.55579e-45 -1.72256e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.81456e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1391, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.8921      1.13622     0.185879     0.293726    0.0129973      3.32655     0.106333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013805, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04295e-13  2.92704e-48  3.23311e-52
      low eigenvalue method done, cpu time[sec] = 0.184261, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.18451e-43  2.84302e-43  9.40929e-45   2.6781e-44  4.90608e-46  1.97113e-46 -1.26246e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3106, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 14727 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01111
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.594413
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.811768
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.798183
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.79459
         W1 Well: minimal relaxation eigenvalue = 0.0337911
         W1 Well: maximal relaxation eigenvalue = 1.46767
         W1 Well:       grid size = 772
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 246
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 242
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 323
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 349
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 631
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 221
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.13208, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23133 4.77e+05 4.51e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 5.85e+12
         B2    207 5.22e+11
         B3  -4653 8.65e+10
         B4  -6213 1.36e+11
         B5 -23133 6.03e+09
         B6   1467 1.55e+12
         B7   4707 5.16e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.14e+33  2.88e+33  1.45e+26  2.27e+23   1.1e-08  6.78e+36  4.53e+42
          R  8.79e-34         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  3.47e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  6.92e-27  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  4.41e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  9.11e+07  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5  1.47e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  2.21e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.11e+29  7.87e+29  3.95e+22  6.19e+19     3e-12  1.85e+33  1.24e+39
          R  3.22e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  1.27e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  2.53e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  1.62e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  3.33e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5   5.4e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  8.08e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
   MasterEquation::set:  done, cpu time[sec] = 8.1367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+08
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 0.391942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.37074, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             567.43      50.5844      8.39132      13.1652     0.584323      150.635      4.99817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.23987e-12  1.09256e-45  2.03327e-48
      low eigenvalue method done, cpu time[sec] = 0.17118, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-45 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.69e-47 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.38724e-40  6.51604e-41   1.4888e-42  2.12562e-41  4.48108e-43   4.0641e-44  9.95109e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4556, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.2025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.99966, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.143      16.8615      2.79711      4.38839     0.194774      50.2116      1.66606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.15726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170445, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.96112e-12  3.65456e-46  6.06158e-49
      low eigenvalue method done, cpu time[sec] = 0.171003, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-47 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.04209e-41 -2.27533e-41 -9.02723e-43 -1.28162e-41  -2.5362e-43  6.19962e-44  7.92323e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.92, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.42709e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.9238, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            113.486      10.1169      1.67826      2.63304     0.116865       30.127     0.999634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.156905, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.17008, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.96165e-12  2.19577e-46  3.19447e-49
      low eigenvalue method done, cpu time[sec] = 0.17062, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.42e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.57337e-41  2.06099e-41  7.14008e-43  5.24977e-42  1.19333e-43 -1.61306e-44  1.53696e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8289, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.79793e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.9356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.0614      7.22634      1.19876      1.88074    0.0834747      21.5193     0.714024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012987, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.83864e-13  1.56965e-46  2.03688e-49
      low eigenvalue method done, cpu time[sec] = 0.171023, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.3e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.18266e-42 -3.58139e-42 -1.24761e-43 -7.38543e-43 -2.69788e-44  6.39169e-44  -1.3205e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8306, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.16877e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.94532, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.0477      5.62049     0.932368       1.4628    0.0649248      16.7372     0.555352
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157321, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170571, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.97823e-12  1.22148e-46   1.4345e-49
      low eigenvalue method done, cpu time[sec] = 0.171115, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.13462e-41   4.3495e-42  3.26712e-43  2.82796e-42  6.55567e-44  9.74793e-44 -1.57991e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8025, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19799, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0168, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             56.743      5.05844     0.839132      1.31652    0.0584323      15.0635     0.499817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157292, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170252, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.6456e-12  1.09956e-46  1.23391e-49
      low eigenvalue method done, cpu time[sec] = 0.170788, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.23678e-41  5.39597e-42  3.20772e-44 -2.31225e-43  1.20687e-45 -2.78418e-44  6.17066e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.02813e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.2014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.97381, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.8286      3.37229     0.559421     0.877679    0.0389549      10.0423     0.333211
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157001, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169998, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66935e-13  7.33547e-47  6.77591e-50
      low eigenvalue method done, cpu time[sec] = 0.170552, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.34e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.01237e-43  -2.5465e-42 -1.09407e-43 -5.83096e-43 -1.91486e-44  3.47295e-44 -1.98532e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8752, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.37084e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.95729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.3715      2.52922     0.419566     0.658259    0.0292162      7.53175     0.249908
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157075, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170017, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.66917e-13  5.50385e-47  4.34762e-50
      low eigenvalue method done, cpu time[sec] = 0.170548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   5.0725e-42  1.37683e-42  1.13531e-44 -3.21693e-43 -7.39602e-45 -1.03273e-45  1.19271e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.868, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.71355e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.95134, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.6972      2.02338     0.335653     0.526607    0.0233729       6.0254     0.199927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.156821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012742, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169744, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.04104e-13  4.40428e-47  3.05048e-50
      low eigenvalue method done, cpu time[sec] = 0.170272, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.22908e-41  4.87479e-42  1.51013e-43  8.72332e-43  2.25379e-44  5.84721e-44 -4.56554e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0675, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 0.740984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4805, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.9143      1.68615     0.279711     0.438839    0.0194774      5.02116     0.166606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.15667, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012786, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.16964, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.00976e-13  3.67096e-47  2.26927e-50
      low eigenvalue method done, cpu time[sec] = 0.170181, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.85593e-41  6.29386e-42  1.71579e-43  1.23291e-42    3.091e-44  1.25456e-44 -1.42389e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8772, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.39896e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19995, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.98448, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.2123      1.44527     0.239752     0.376148    0.0166949      4.30386     0.142805
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.156815, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012749, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28748e-14    3.147e-47  1.75952e-50
      low eigenvalue method done, cpu time[sec] = 0.170286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.75867e-43  1.05901e-42  3.37308e-44  5.27688e-43  1.01708e-44 -2.19932e-44 -2.29575e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8635, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.74167e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.2022, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.1857      1.26461     0.209783      0.32913    0.0146081      3.76587     0.124954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157033, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012925, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170137, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.47785e-13  2.75395e-47  1.40718e-50
      low eigenvalue method done, cpu time[sec] = 0.170672, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-49 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.13695e-43  6.63683e-43   2.1307e-44  5.25938e-43  9.94331e-45  1.82108e-44 -1.03747e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8554, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 15005 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010703
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.621047
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.768984
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.723604
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.53667
         W1 Well: minimal relaxation eigenvalue = 0.0331938
         W1 Well: maximal relaxation eigenvalue = 2.69189
         W1 Well:       grid size = 752
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 317
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4649 1/cm
         B4 Barrier:        grid size = 342
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 615
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 218
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.78406, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23125  4.8e+05 4.79e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 6.64e+12
         B2    187 5.99e+11
         B3  -4649 1.01e+11
         B4  -6199 1.57e+11
         B5 -23125 6.99e+09
         B6   1489 1.81e+12
         B7   4713 6.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.42e+31  8.48e+31   7.2e+24  1.35e+22  4.68e-09  1.77e+35  8.45e+40
          R  2.92e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  1.18e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  1.39e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  7.43e-23  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  2.14e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  5.65e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  1.18e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.64e+27  2.39e+28  2.03e+21  3.79e+18  1.32e-12  4.98e+31  2.38e+37
          R  1.04e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  4.19e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  4.93e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  2.64e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  7.58e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  2.01e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6   4.2e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.78841, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+08
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 0.371089, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.94839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            622.927      56.1721      9.44552       14.716     0.655084      170.008      5.84828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146443, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158696, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.6708e-12  1.04505e-44  6.59367e-47
      low eigenvalue method done, cpu time[sec] = 0.159212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.47e-46         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.28648e-40  2.17929e-40  4.17589e-42  5.89765e-41  1.38401e-42  6.52002e-44  8.85722e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8811, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.14002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            207.642       18.724      3.14851      4.90532     0.218361      56.6692      1.94943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146154, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158376, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.51015e-12  3.52575e-45  2.02211e-47
      low eigenvalue method done, cpu time[sec] = 0.158883, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.53e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-46         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.68299e-40  1.22146e-40  4.54864e-42  5.85115e-41  1.12686e-42  1.13017e-42 -2.23846e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3308, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.34144e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13869, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.65193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.585      11.2344       1.8891      2.94319     0.131017      34.0015      1.16966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.145987, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158247, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.45384e-12  2.12573e-45  1.08021e-47
      low eigenvalue method done, cpu time[sec] = 0.15877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.06e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -9.07015e-41 -7.01098e-41 -1.14012e-42  4.94568e-42  1.48278e-43  7.12289e-43 -2.18884e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.67801e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.14008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.60349, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.9895      8.02459      1.34936      2.10228    0.0935835      24.2868     0.835469
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146263, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158479, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.69204e-12  1.52265e-45  6.94986e-48
      low eigenvalue method done, cpu time[sec] = 0.158991, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.05e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.56885e-40  4.70425e-41  1.59206e-42   2.7706e-41  5.89335e-43  1.31193e-43  -1.7005e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3011, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.01459e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.14038, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.63984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.2141      6.24135       1.0495      1.63511    0.0727872      18.8897     0.649809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012061, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.37123e-13   1.1865e-45  4.92739e-48
      low eigenvalue method done, cpu time[sec] = 0.158984, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.61048e-40 -1.00825e-40 -2.11678e-42 -5.44444e-42 -1.88641e-43 -2.73681e-43 -5.50627e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.14136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62287, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.2927      5.61721     0.944552       1.4716    0.0655084      17.0008     0.584828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14621, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012071, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158453, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.25881e-13  1.06863e-45  4.25021e-48
      low eigenvalue method done, cpu time[sec] = 0.158959, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.56147e-40  3.80922e-41  1.02401e-42  1.10994e-41  2.79887e-43  2.44292e-43 -1.56724e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3361, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.00243e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.14122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.67991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.5284      3.74481     0.629701     0.981065    0.0436723      11.3338     0.389885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15851, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55963e-13  7.14203e-46  2.35883e-48
      low eigenvalue method done, cpu time[sec] = 0.159015, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.14e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.91144e-41  1.70361e-41 -1.55005e-43  -6.2188e-42  -1.1704e-43  2.27981e-43 -2.61502e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3832, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.33658e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6989, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.1463      2.80861     0.472276     0.735799    0.0327542      8.50038     0.292414
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012057, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158574, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.29024e-13  5.36445e-46  1.52461e-48
      low eigenvalue method done, cpu time[sec] = 0.159086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.36e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.54639e-41 -7.16208e-42 -3.06065e-43 -5.11166e-42 -9.19078e-44  4.12321e-43 -2.79153e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4168, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.67072e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13879, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.78438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.9171      2.24689     0.377821     0.588639    0.0262034      6.80031     0.233931
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.145828, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158072, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.57958e-13  4.29583e-46  1.07565e-48
      low eigenvalue method done, cpu time[sec] = 0.158582, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.3e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.24289e-41 -1.45802e-41 -6.46584e-43 -6.98387e-42 -1.41799e-43  1.82406e-43   6.7509e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13808, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.66908, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.7642       1.8724     0.314851     0.490532    0.0218361      5.66692     0.194943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146078, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012066, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15831, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.68995e-13  3.58242e-46  8.03696e-49
      low eigenvalue method done, cpu time[sec] = 0.158817, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.88671e-41  4.28261e-42  3.17593e-43   3.9182e-42  7.75139e-44  4.34165e-43 -1.93469e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3211, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.33901e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13617, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.73301, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.7979      1.60492     0.269872     0.420456    0.0187167      4.85736     0.167094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146259, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.4926e-13  3.07232e-46  6.25412e-49
      low eigenvalue method done, cpu time[sec] = 0.15901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.07e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -9.22371e-41 -1.97288e-41 -5.34876e-43 -1.08553e-42 -3.25463e-44 -2.63178e-43 -1.74455e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4358, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.67315e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.68866, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.5732       1.4043     0.236138     0.367899    0.0163771      4.25019     0.146207
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146026, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158242, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.32147e-13  2.68943e-46  5.01697e-49
      low eigenvalue method done, cpu time[sec] = 0.158751, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.69e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.93e-48         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   4.5639e-42 -7.65761e-42 -4.15421e-43 -5.98723e-42 -1.18623e-43   1.4253e-43 -2.11677e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3948, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 15283 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010456
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.720304
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.754054
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.707735
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.52399
         W1 Well: minimal relaxation eigenvalue = 0.0326611
         W1 Well: maximal relaxation eigenvalue = 1.33693
         W1 Well:       grid size = 744
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 240
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 316
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4625 1/cm
         B4 Barrier:        grid size = 341
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6200 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 610
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23147 1/cm
         B6 Barrier:        grid size = 219
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.87394, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23147 4.72e+05 5.07e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 7.53e+12
         B2    164 6.87e+11
         B3  -4625 1.17e+11
         B4  -6200 1.81e+11
         B5 -23147 8.09e+09
         B6   1487 2.11e+12
         B7   4700 7.52e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.25e+30  3.02e+30  4.23e+23  9.33e+20   2.1e-09  5.62e+33  1.95e+39
          R  8.02e-31         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  3.31e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  2.37e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  1.07e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  4.76e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  1.78e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  5.12e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.59e+26   8.7e+26  1.22e+20  2.69e+17  6.05e-13  1.62e+30  5.63e+35
          R  2.78e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  1.15e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  8.21e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  3.72e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  1.65e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  6.18e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  1.78e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.87836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+08
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 0.363422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93585, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            682.284      62.2396      10.6053      16.4109     0.732637      191.311      6.81475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141978, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011855, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.72856e-11   1.0796e-43  1.79245e-45
      low eigenvalue method done, cpu time[sec] = 0.154505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.53e-45         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.26428e-39  9.28849e-40   -1.235e-41 -5.02034e-40 -1.09126e-41  2.97751e-42  8.74478e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12608, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.55082, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            227.428      20.7465      3.53511      5.47028     0.244212      63.7703      2.27158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141761, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011829, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153758, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.12705e-12  3.71623e-44  5.64729e-46
      low eigenvalue method done, cpu time[sec] = 0.154255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-45         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.20353e-39 -1.56579e-40  -2.9695e-42   5.8312e-41  1.12772e-42 -5.05899e-42  1.06095e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1876, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.26077e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.58835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            136.457      12.4479      2.12106      3.28217     0.146527      38.2622      1.36295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141768, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011846, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15378, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.82521e-12  2.25893e-44   3.0564e-46
      low eigenvalue method done, cpu time[sec] = 0.154281, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.13063e-40  1.81842e-40  2.30048e-42 -5.25974e-41 -8.00937e-43 -3.00365e-43 -4.79487e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.56508e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12305, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.57485, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            97.4692      8.89137      1.51505      2.34441     0.104662      27.3301     0.973536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141725, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.21413e-12  1.62576e-44  1.98358e-46
      low eigenvalue method done, cpu time[sec] = 0.15421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.31e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.23732e-39   2.3837e-40  1.04325e-41  1.07482e-40  2.29357e-42   6.5411e-42 -1.43628e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1892, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         5.86939e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1223, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.57336, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.8094      6.91551      1.17837      1.82343    0.0814041      21.2568     0.757195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141621, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011845, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153636, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.47393e-12  1.27091e-44   1.4155e-46
      low eigenvalue method done, cpu time[sec] = 0.154135, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.38355e-40  2.48986e-40  5.92296e-42   1.6972e-41  5.43537e-43  3.38661e-42  2.32671e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12355, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.5661, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.2284      6.22396      1.06053      1.64109    0.0732637      19.1311     0.681475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141752, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153734, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.58236e-12  1.14608e-44  1.22429e-46
      low eigenvalue method done, cpu time[sec] = 0.154241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.61117e-40  2.88228e-42  3.07941e-43 -2.53766e-42  1.11379e-43  2.50369e-43  2.22499e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2059, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         9.78231e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.57503, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.4856      4.14931     0.707021      1.09406    0.0488424      12.7541     0.454317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14167, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011793, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153635, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.13411e-15  7.69255e-45   6.8654e-47
      low eigenvalue method done, cpu time[sec] = 0.154135, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.69e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.75005e-40  1.39035e-40  5.48849e-42  2.37276e-41  6.05377e-43  1.94705e-42 -1.04948e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.30431e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12322, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.5634, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.1142      3.11198     0.530266     0.820543    0.0366318      9.56554     0.340738
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141761, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153735, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.82947e-13  5.79279e-45  4.46941e-47
      low eigenvalue method done, cpu time[sec] = 0.154239, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.36581e-40  1.83357e-40  5.23276e-42  4.91289e-41  1.15349e-42  7.74993e-43 -1.47835e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1861, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.63039e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12302, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.2914      2.48958     0.424213     0.656434    0.0293055      7.65243      0.27259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14176, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.77202e-13  4.64687e-45  3.17049e-47
      low eigenvalue method done, cpu time[sec] = 0.154241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.65e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -7.6707e-41  -2.4616e-41 -2.81053e-43   1.4652e-41  2.72327e-43 -4.50979e-43  6.54708e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2254, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12366, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.66087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.7428      2.07465     0.353511     0.547028    0.0244212      6.37703     0.227158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153671, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.43996e-13  3.88003e-45  2.37921e-47
      low eigenvalue method done, cpu time[sec] = 0.154182, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.40107e-40 -3.52341e-41 -7.01627e-43  7.55098e-42  9.70734e-44 -7.89212e-43 -1.19397e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2925, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.28254e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12208, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.64106, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.4938      1.77827     0.303009     0.468881    0.0209325      5.46602     0.194707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.38834e-13  3.33074e-45  1.85807e-47
      low eigenvalue method done, cpu time[sec] = 0.153826, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.92496e-40 -3.28862e-41 -1.65673e-44  2.02365e-41  3.81459e-43 -2.30062e-42 -3.87814e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2541, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.60862e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.64395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.0571      1.55599     0.265133     0.410271    0.0183159      4.78277     0.170369
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.141673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.153662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.52039e-13  2.91785e-45  1.49505e-47
      low eigenvalue method done, cpu time[sec] = 0.154163, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.92e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.53e-47         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.2312e-40  3.51881e-42  6.27902e-43  1.69661e-41   3.2614e-43 -6.45326e-43 -4.08796e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2767, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 15561 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010668
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.583022
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.717491
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.74553
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.23868
         W1 Well: minimal relaxation eigenvalue = 0.032088
         W1 Well: maximal relaxation eigenvalue = 3.87846
         W1 Well:       grid size = 726
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31629 1/cm
         B1 Barrier:        grid size = 240
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 311
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4654 1/cm
         B4 Barrier:        grid size = 335
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 596
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23179 1/cm
         B6 Barrier:        grid size = 217
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.41608, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31629 -23179 4.62e+05 5.38e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 8.52e+12
         B2    157 7.86e+11
         B3  -4654 1.36e+11
         B4  -6213 2.09e+11
         B5 -23179 9.34e+09
         B6   1457 2.45e+12
         B7   4706 9.04e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.35e+28  1.27e+29  2.86e+22  7.39e+19  9.76e-10  2.12e+32  5.46e+37
          R  1.87e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  7.87e-30     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2   3.5e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  1.35e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  1.02e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  4.72e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  1.83e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.58e+25  3.75e+25  8.44e+18  2.18e+16  2.88e-13  6.26e+28  1.61e+34
          R  6.33e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  2.66e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  1.19e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  4.58e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  3.47e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5   1.6e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6   6.2e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
   MasterEquation::set:  done, cpu time[sec] = 9.42054, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+08
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 0.351793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48273, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            745.709      68.8182      11.8786      18.2597     0.817463       214.68      7.90977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133012, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145012, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.69474e-11   1.2236e-42    4.061e-44
      low eigenvalue method done, cpu time[sec] = 0.145499, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.93e-44         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.06192e-38 -1.44223e-38 -4.07229e-40 -4.72746e-39 -1.10363e-40 -4.85999e-42 -1.90129e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1634, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31271, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             248.57      22.9394      3.95954      6.08656     0.272488      71.5601      2.63659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132834, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.3096e-12  4.35156e-43  1.31313e-44
      low eigenvalue method done, cpu time[sec] = 0.14531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.35e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-44         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.44287e-39 -1.23936e-39 -5.23915e-41 -6.91352e-40 -1.23574e-41 -2.09823e-41 -3.36699e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.18467e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06726, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            149.142      13.7636      2.37573      3.65194     0.163493       42.936      1.58195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132645, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011136, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.14462, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.33417e-12  2.67998e-43   7.1975e-45
      low eigenvalue method done, cpu time[sec] = 0.145103, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.68e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.96187e-40  1.21813e-39 -1.02764e-42 -2.20187e-40 -1.13175e-42 -2.69924e-41   -1.877e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7179, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         4.45854e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06832, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.34325, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             106.53      9.83117      1.69695      2.60853      0.11678      30.6686      1.12997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011145, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.14466, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.35482e-12  1.94353e-43   4.7109e-45
      low eigenvalue method done, cpu time[sec] = 0.145168, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.24e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.38871e-39  1.83351e-39  3.76098e-41  3.90342e-40  9.08216e-42   5.1102e-43 -8.40933e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.73241e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.34582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82.8566      7.64647      1.31985      2.02885    0.0908292      23.8534     0.878863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132594, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144587, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.80598e-12  1.52711e-43  3.38319e-45
      low eigenvalue method done, cpu time[sec] = 0.145075, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.81045e-40 -4.74645e-40 -1.79735e-41 -3.34691e-40 -6.59937e-42  7.71331e-42 -7.21383e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7392, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.29861, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.5709      6.88182      1.18786      1.82597    0.0817463       21.468     0.790977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132734, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144701, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.19132e-12  1.37987e-43  2.93398e-45
      low eigenvalue method done, cpu time[sec] = 0.145204, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.37306e-40  2.54858e-40  6.05023e-42  1.17572e-40  2.12862e-42  1.86858e-42 -6.73254e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7161, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.55401e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.34227, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.7139      4.58788     0.791909      1.21731    0.0544975       14.312     0.527318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132574, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144597, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69752e-12  9.32565e-44  1.66214e-45
      low eigenvalue method done, cpu time[sec] = 0.145084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.33e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.58857e-40  3.34762e-40  1.03887e-41  2.06341e-40   3.8532e-42  -3.6996e-42   7.2422e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.27387e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06626, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33137, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.2855      3.44091     0.593932     0.912985    0.0408732       10.734     0.395488
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132411, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144377, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11699e-12   7.0516e-44  1.08979e-45
      low eigenvalue method done, cpu time[sec] = 0.144864, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.05e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.80213e-40 -7.46485e-40 -2.85834e-41 -3.16271e-40 -7.07539e-42  1.11726e-41  3.11991e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.726, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.59233e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.07131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.35646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.8284      2.75273     0.475145     0.730388    0.0326985      8.58721     0.316391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132833, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011132, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144744, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.87025e-13  5.67246e-44  7.77267e-46
      low eigenvalue method done, cpu time[sec] = 0.14523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.67e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.35999e-40 -7.10068e-41 -3.56998e-42  1.13028e-41  1.25207e-43  1.37831e-41  7.54823e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06862, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.35784, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             24.857      2.29394     0.395954     0.608656    0.0272488      7.15601     0.263659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132519, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011143, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144524, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.84161e-13  4.74601e-44  5.85812e-46
      low eigenvalue method done, cpu time[sec] = 0.145017, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.75e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.51977e-39 -3.28778e-40 -2.00682e-41 -2.72696e-40 -5.59958e-42 -5.69933e-42  -6.4502e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7615, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.22927e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06882, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.35628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             21.306      1.96623      0.33939     0.521705    0.0233561      6.13372     0.225993
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132453, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011133, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.21252e-13  4.08044e-44   4.5914e-46
      low eigenvalue method done, cpu time[sec] = 0.144909, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.08e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.38514e-39  3.37059e-40  7.59904e-42  4.20985e-41  1.39404e-42  3.07162e-42  3.31965e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7571, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.54774e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06638, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.36002, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.6427      1.72046     0.296966     0.456492    0.0204366        5.367     0.197744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01123, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145185, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78029e-13  3.57902e-44   3.7056e-46
      low eigenvalue method done, cpu time[sec] = 0.145681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.50929e-39  2.82528e-40   1.1573e-41  9.36697e-41  2.28691e-42  1.08334e-41 -8.82527e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7604, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 15839 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010392
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.501261
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.683702
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.677487
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.05803
         W1 Well: minimal relaxation eigenvalue = 0.0315963
         W1 Well: maximal relaxation eigenvalue = 1.41263
         W1 Well:       grid size = 708
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 237
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 306
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4663 1/cm
         B4 Barrier:        grid size = 329
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6204 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 582
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4716 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.04997, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23155  4.7e+05  5.7e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 9.63e+12
         B2    162 8.99e+11
         B3  -4663 1.57e+11
         B4  -6204  2.4e+11
         B5 -23155 1.08e+10
         B6   1501 2.84e+12
         B7   4717 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.64e+27  6.16e+27  2.17e+21  6.53e+18  4.64e-10  9.26e+30   1.8e+36
          R  3.78e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  1.62e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  4.61e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  1.53e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  2.16e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  1.08e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  5.57e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.13e+23  1.89e+24  6.67e+17  2.01e+15  1.43e-13  2.85e+27  5.52e+32
          R  1.23e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  5.28e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2   1.5e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  4.99e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  7.01e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  3.51e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  1.81e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.05432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+08
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.329652, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18861, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            813.337      75.9368      13.2738      20.2728      0.91007      240.257      9.14628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010359, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134104, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.06662e-12  1.52638e-41  7.98905e-43
      low eigenvalue method done, cpu time[sec] = 0.134566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.82e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.43113e-38  -1.7585e-38 -6.77608e-40 -5.29076e-39 -6.65809e-41 -3.67364e-41  7.14165e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01412, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12975, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            271.112      25.3123       4.4246       6.7576     0.303357      80.0855      3.04876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010346, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.6806e-12  5.63642e-42  2.64853e-43
      low eigenvalue method done, cpu time[sec] = 0.1342, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.64e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -8.67846e-39  1.51427e-39  2.48974e-40   4.8344e-39  8.89074e-41 -9.41848e-41 -1.12463e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4033, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.11276e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01171, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            162.667      15.1874      2.65476      4.05456     0.182014      48.0513      1.82926
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123215, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010457, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133843, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.59717e-12  3.52319e-42  1.46962e-43
      low eigenvalue method done, cpu time[sec] = 0.134433, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.03601e-38  2.15467e-39  2.23794e-40  2.00015e-39  5.09573e-41 -3.74215e-41  -2.9151e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3941, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         4.35787e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20208, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.191      10.8481      1.89626      2.89611      0.13001      34.3224      1.30661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123193, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010338, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133682, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31778e-12  2.57705e-42  9.69848e-44
      low eigenvalue method done, cpu time[sec] = 0.134143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.66824e-38 -3.61653e-39 -1.13816e-40 -1.14164e-39 -2.43976e-41 -7.53889e-41 -4.39995e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4376, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.60297e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16341, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            90.3707      8.43742      1.47487      2.25253     0.101119      26.6952      1.01625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123228, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133696, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.16575e-13  2.03659e-42   7.0084e-44
      low eigenvalue method done, cpu time[sec] = 0.134151, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.43e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.99296e-38  -6.6197e-39 -1.61241e-40 -8.21283e-40 -2.44467e-41 -1.23045e-40 -1.53027e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01204, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.17283, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.3337      7.59368      1.32738      2.02728     0.091007      24.0257     0.914628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123163, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010305, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133631, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.36296e-12  1.84437e-42  6.09368e-44
      low eigenvalue method done, cpu time[sec] = 0.134086, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.83e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.68456e-38 -8.41143e-39 -2.34489e-40 -1.73838e-39  -4.1706e-41 -4.09376e-41  -4.0724e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4342, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.33829e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01273, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.2224      5.06245      0.88492      1.35152    0.0606714      16.0171     0.609752
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12354, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010343, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134037, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.41621e-13   1.2562e-42  3.48682e-44
      low eigenvalue method done, cpu time[sec] = 0.134497, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.78268e-38 -7.10616e-39 -1.50761e-40 -6.30832e-40 -1.95561e-41  7.49313e-42 -1.59805e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3415, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1          1.2451e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.17524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.6668      3.79684      0.66369      1.01364    0.0455035      12.0128     0.457314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123198, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010325, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.99837e-13  9.54316e-43  2.30223e-44
      low eigenvalue method done, cpu time[sec] = 0.134134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.54e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.10408e-39  5.88793e-40 -3.51491e-41 -7.45826e-40 -1.28007e-41  1.72697e-41  8.55665e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4079, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.55638e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01327, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1338, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.5335      3.03747     0.530952     0.810912    0.0364028      9.61026     0.365851
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123199, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133689, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.34712e-13  7.70107e-43  1.65081e-44
      low eigenvalue method done, cpu time[sec] = 0.134153, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.7e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.08353e-38 -4.64442e-39 -1.09775e-40 -8.06178e-40 -2.04413e-41  1.19949e-41 -5.19374e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3702, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.99397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16692, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.1112      2.53123      0.44246      0.67576    0.0303357      8.00855     0.304876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123661, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010417, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13425, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00584e-12   6.4582e-43  1.24954e-44
      low eigenvalue method done, cpu time[sec] = 0.134747, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.46e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.87917e-39  1.95063e-39  6.65944e-41  7.47279e-40  1.66462e-41 -2.35159e-42  5.63203e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.17893e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01223, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15448, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.2382      2.16962     0.379251     0.579223     0.026002      6.86447     0.261322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123434, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133902, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.09075e-13  5.56237e-43  9.82848e-45
      low eigenvalue method done, cpu time[sec] = 0.134359, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -8.90435e-39 -2.57527e-39  -5.4958e-41  -1.6918e-40  -6.6823e-42  1.29058e-41 -2.76824e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4206, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.49021e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14618, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.3334      1.89842     0.331845      0.50682    0.0227518      6.00641     0.228657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123236, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010331, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133719, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.36415e-13   4.8857e-43  7.95639e-45
      low eigenvalue method done, cpu time[sec] = 0.13418, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.96905e-38 -4.88453e-39 -1.34179e-40 -8.47623e-40 -2.23113e-41  -5.8828e-41   1.7949e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3922, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 16117 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010559
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.568118
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.67066
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.641507
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.97548
         W1 Well: minimal relaxation eigenvalue = 0.0310981
         W1 Well: maximal relaxation eigenvalue = 2.4848
         W1 Well:       grid size = 702
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 238
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 305
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 328
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23119 1/cm => truncating
         B5 Barrier:        grid size = 577
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23118 1/cm
         B6 Barrier:        grid size = 215
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.98309, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23118 4.82e+05 6.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.09e+13
         B2    206 1.03e+12
         B3  -4622 1.82e+11
         B4  -6186 2.76e+11
         B5 -23118 1.24e+10
         B6   1498 3.29e+12
         B7   4694 1.29e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.55e+26  3.55e+26  1.92e+20  6.66e+17  2.35e-10  4.83e+29  7.15e+34
          R  6.44e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  2.81e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  5.21e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3   1.5e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  4.26e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  2.07e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6   1.4e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.82e+22   1.1e+23  5.96e+16  2.07e+14  7.29e-14   1.5e+26  2.22e+31
          R  2.07e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  9.06e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  1.68e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  4.83e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  1.37e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  6.66e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6   4.5e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 6.98741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+08
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.329222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.13974, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            885.324       83.629      14.7995      22.4609      1.01099      268.186      10.5381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131844, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.66118e-12  1.91706e-40  1.33988e-41
      low eigenvalue method done, cpu time[sec] = 0.132415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-40 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.96e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.50198e-37  1.77441e-37  3.13162e-39 -1.71152e-38 -2.54755e-40  5.70415e-40 -6.24673e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8971, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.996056, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09559, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            295.108      27.8763      4.93318      7.48697     0.336996      89.3955      3.51269
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010262, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.16051e-12   7.3306e-41  4.54897e-42
      low eigenvalue method done, cpu time[sec] = 0.132394, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.43724e-37  1.15192e-37  2.06558e-39  1.83194e-39  1.05997e-40 -3.38317e-40   6.3123e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2465, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.04471e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.999241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.10705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.065      16.7258      2.95991      4.49218     0.202198      53.6373      2.10761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120695, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131704, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.53602e-12  4.64493e-41  2.55406e-42
      low eigenvalue method done, cpu time[sec] = 0.13216, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.64e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.02625e-37  2.09448e-38 -1.43057e-40 -6.76586e-39 -1.23237e-40 -1.22498e-40  4.55254e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2622, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         4.26259e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.998664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.13395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            126.475       11.947      2.11422       3.2087     0.144427      38.3123      1.50544
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120476, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.56015e-12  3.42435e-41  1.69896e-42
      low eigenvalue method done, cpu time[sec] = 0.131945, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.42e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.82913e-37 -5.19079e-38 -1.27521e-39 -8.06483e-39 -2.21326e-40 -3.53182e-40  3.60453e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2824, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         5.48048e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.998719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.13635, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.3693      9.29211      1.64439      2.49566     0.112332      29.7985       1.1709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010284, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131632, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.41583e-12  2.72053e-41  1.23511e-42
      low eigenvalue method done, cpu time[sec] = 0.132086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.46e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -4.1961e-38 -1.30223e-38  -4.3742e-40 -3.24014e-39  -6.5874e-41 -2.67988e-40  -2.0665e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2989, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.996527, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.13344, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.5324       8.3629      1.47995      2.24609     0.101099      26.8186      1.05381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12071, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010207, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131705, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.8947e-13  2.46886e-41  1.07662e-42
      low eigenvalue method done, cpu time[sec] = 0.132154, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.68e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.91532e-38 -1.86274e-38 -4.15377e-40 -3.64619e-39 -7.46308e-41 -2.97593e-41  2.82464e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.13413e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.997086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14102, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.0216      5.57526     0.986636      1.49739    0.0673992      17.8791     0.702538
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131395, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.15934e-12  1.69359e-41  6.22064e-43
      low eigenvalue method done, cpu time[sec] = 0.131846, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.27e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -9.75986e-38  -2.7997e-38 -9.07806e-40 -8.18308e-39 -1.88812e-40 -1.59222e-40  -5.3661e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2931, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.21788e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 1.00162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14902, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.2662      4.18145     0.739977      1.12305    0.0505494      13.4093     0.526904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131567, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.44002e-14  1.29216e-41  4.13551e-43
      low eigenvalue method done, cpu time[sec] = 0.132154, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.02e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.74656e-38 -1.00874e-38 -5.49387e-40 -6.21628e-39 -1.32546e-40  -1.1303e-40  2.31672e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.6796, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.52235e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.998504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             35.413      3.34516     0.591981     0.898436    0.0404395      10.7275     0.421523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131414, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.96926e-12  1.04582e-41  2.98098e-43
      low eigenvalue method done, cpu time[sec] = 0.13188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.09112e-38  5.61851e-39  1.09775e-40  2.80321e-40  1.52726e-41  3.70864e-41  1.47898e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2792, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.997303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.17466, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.5108      2.78763     0.493318     0.748697    0.0336996      8.93955     0.351269
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120501, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010189, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131483, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31768e-13   8.7893e-42  2.26593e-43
      low eigenvalue method done, cpu time[sec] = 0.131938, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.79e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.98396e-38 -8.52208e-39 -4.02979e-40 -4.23811e-39 -9.12459e-41 -1.36713e-40 -7.26129e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3001, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          2.1313e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.998054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             25.295       2.3894     0.422844      0.64174    0.0288854      7.66247     0.301088
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010193, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131731, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.47814e-13  7.58272e-42  1.78859e-43
      low eigenvalue method done, cpu time[sec] = 0.132186, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.58e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.49469e-38 -2.00002e-39   -1.147e-40 -3.23512e-40 -1.04154e-41 -3.25978e-40 -1.67576e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3911, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.43577e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.998181, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.12188, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.1331      2.09072     0.369988     0.561523    0.0252747      6.70466     0.263452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120723, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131657, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.15326e-13  6.66911e-42  1.45226e-43
      low eigenvalue method done, cpu time[sec] = 0.132109, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.14763e-39  2.48332e-39  3.24188e-42  -9.9631e-40 -1.62643e-41  9.34353e-41  3.38742e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2744, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 16395 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010279
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.481263
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.642045
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.693615
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.70976
         W1 Well: minimal relaxation eigenvalue = 0.0306101
         W1 Well: maximal relaxation eigenvalue = 2.68153
         W1 Well:       grid size = 686
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31624 1/cm
         B1 Barrier:        grid size = 235
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 232
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 300
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 323
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6214 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 565
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 213
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.71605, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31624 -23155  4.7e+05  6.4e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 1.22e+13
         B2    156 1.17e+12
         B3  -4604 2.09e+11
         B4  -6214 3.16e+11
         B5 -23155 1.43e+10
         B6   1486  3.8e+12
         B7   4705 1.54e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+25   2.3e+25  1.87e+19  7.43e+16   1.2e-10  2.85e+28  3.26e+33
          R  9.77e-26         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  4.34e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  5.35e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  1.35e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  8.31e+09   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  3.51e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  3.07e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.27e+21  7.37e+21  5.98e+15  2.38e+13  3.85e-14  9.11e+24  1.04e+30
          R  3.06e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  1.36e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  1.67e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  4.21e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4   2.6e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5   1.1e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6   9.6e-31  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
   MasterEquation::set:  done, cpu time[sec] = 6.72105, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+08
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.308953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57304, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            961.874      91.9284       16.465      24.8352      1.12077      298.621      12.1002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122899, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.29956e-11  2.32704e-39  1.97034e-40
      low eigenvalue method done, cpu time[sec] = 0.123329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.12e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    1.876e-36  5.88181e-37  1.04844e-38 -4.73187e-39   1.4492e-40  3.24526e-39 -1.83603e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.29223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.587908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.3408, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            320.625      30.6428      5.48833      8.27841     0.373589      99.5404      4.03339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009566, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122663, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.26047e-11  9.16915e-40  6.84567e-41
      low eigenvalue method done, cpu time[sec] = 0.123095, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.17e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.37507e-38 -2.93968e-38  3.78588e-40 -2.54664e-39 -1.63058e-41  8.55077e-40  1.15296e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.98021e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.957651, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.94644, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            192.375      18.3857        3.293      4.96705     0.224154      59.7243      2.42004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00954, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122583, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.0372e-12  5.87812e-40  3.88798e-41
      low eigenvalue method done, cpu time[sec] = 0.123019, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.88e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.92052e-37 -4.16597e-38 -2.50742e-39 -2.16087e-38 -5.46586e-40  1.56452e-40  4.08496e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9353, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         4.17229e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.95114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.95285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.411      13.1326      2.35214      3.54789      0.16011      42.6602       1.7286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009528, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122626, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.11735e-12  4.36294e-40  2.60647e-41
      low eigenvalue method done, cpu time[sec] = 0.123065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.36e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.25867e-37 -3.34921e-38 -8.15052e-40 -9.68405e-39 -2.65051e-40 -6.02897e-40 -7.42219e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.36437e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.954736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98066, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            106.875      10.2143      1.82944      2.75947      0.12453      33.1801      1.34446
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009515, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.77624e-12  3.48211e-40  1.90603e-41
      low eigenvalue method done, cpu time[sec] = 0.122996, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.48e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.84193e-37 -1.27422e-37 -2.49081e-39 -3.95211e-39  -2.2347e-40 -1.55041e-39  -2.7268e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9856, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.949531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00683, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.1874      9.19284       1.6465      2.48352     0.112077      29.8621      1.21002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112857, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009556, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122558, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78623e-12  3.16566e-40  1.66557e-41
      low eigenvalue method done, cpu time[sec] = 0.122989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.17e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.69e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.21906e-37  1.92455e-38  2.13461e-40  1.34971e-39  5.51616e-41  9.17746e-40  7.59568e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0042, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         8.94062e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.950968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.0088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             64.125      6.12856      1.09767      1.65568    0.0747179      19.9081     0.806679
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009631, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123152, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.32352e-12  2.18519e-40  9.71611e-42
      low eigenvalue method done, cpu time[sec] = 0.123621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.69e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.44475e-37 -7.49704e-38 -1.15447e-39 -1.29499e-40   -7.221e-41 -1.58793e-40  1.46508e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.19208e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.951023, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01019, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.0937      4.59642      0.82325      1.24176    0.0560384      14.9311     0.605009
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112737, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122452, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.46188e-13  1.67361e-40  6.50317e-42
      low eigenvalue method done, cpu time[sec] = 0.122887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.12e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.89404e-37  6.33179e-38   2.2021e-39  1.86449e-38  4.37505e-40  5.99126e-40  7.75095e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0016, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.4901e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.951566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01841, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             38.475      3.67714       0.6586      0.99341    0.0448307      11.9449     0.484007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122412, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.49356e-13   1.3581e-40  4.71208e-42
      low eigenvalue method done, cpu time[sec] = 0.122843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.16e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.81508e-37 -5.20138e-38 -1.49133e-39 -1.30539e-38 -3.11784e-40 -1.50689e-40  2.27601e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.95, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00376, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.0625      3.06428     0.548833     0.827841    0.0373589      9.95404     0.403339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112714, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009577, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122434, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.73598e-14  1.14359e-40  3.59687e-42
      low eigenvalue method done, cpu time[sec] = 0.122871, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.5e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.46386e-38  4.93981e-38  1.50723e-39  1.30476e-38  2.91714e-40 -4.61323e-40  8.17218e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9978, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.08614e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.950146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97889, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.4821      2.62653     0.470428     0.709578     0.032022      8.53204     0.345719
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.28578e-13  9.88082e-41  2.84912e-42
      low eigenvalue method done, cpu time[sec] = 0.123065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.88e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.40179e-37 -5.80032e-38 -1.47013e-39 -6.03208e-39 -1.99995e-40 -6.64183e-40   3.9921e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.9872, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.38416e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.951861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00792, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.0469      2.29821     0.411625     0.620881    0.0280192      7.46553     0.302504
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11281, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12252, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.96863e-13  8.70074e-41   2.3203e-42
      low eigenvalue method done, cpu time[sec] = 0.122952, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.7e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.66e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.82375e-37  5.38311e-38   1.4769e-39  9.55541e-39  2.36779e-40  6.49889e-40  7.27395e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0086, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 16673 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009146
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.519324
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.612512
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.638615
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.52642
         W1 Well: minimal relaxation eigenvalue = 0.0301428
         W1 Well: maximal relaxation eigenvalue = 1.19281
         W1 Well:       grid size = 670
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 229
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 185 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 318
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23143 1/cm => truncating
         B5 Barrier:        grid size = 553
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23142 1/cm
         B6 Barrier:        grid size = 211
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4649 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.54092, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23142 4.74e+05 6.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 1.38e+13
         B2    186 1.33e+12
         B3  -4638 2.41e+11
         B4  -6222 3.62e+11
         B5 -23142 1.64e+10
         B6   1482 4.38e+12
         B7   4650 1.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.64e+23  1.69e+24  2.02e+18  9.16e+15  6.35e-11  1.91e+27  1.71e+32
          R  1.31e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  5.91e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  4.94e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  1.09e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  1.57e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  5.24e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  5.85e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.51e+20  5.57e+20  6.66e+14  3.02e+12  2.09e-14  6.29e+23  5.63e+28
          R  3.98e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1   1.8e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2   1.5e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  3.31e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  4.78e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  1.59e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  1.78e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.54967, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+08
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.315769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72026, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1043.1      100.868      18.2798      27.4074      1.23999      331.718       13.848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009114, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.55781e-11  2.63363e-38  2.55725e-39
      low eigenvalue method done, cpu time[sec] = 0.11628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.94e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.08839e-36 -1.43973e-36 -2.22733e-38  6.98481e-38  2.57727e-40 -4.21372e-39  1.84335e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.99351, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.91296, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              347.7      33.6226      6.09325      9.13581      0.41333      110.573      4.61599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105791, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.03242e-11  1.06491e-38  9.08324e-40
      low eigenvalue method done, cpu time[sec] = 0.116026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.03769e-36  4.56671e-37  1.78217e-38  2.09638e-37   4.7431e-39  8.00771e-39 -2.51358e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6985, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.91898e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.914349, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85745, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             208.62      20.1735      3.65595      5.48149     0.247998      66.3436       2.7696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.1162, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.95658e-12  6.89641e-39  5.21627e-40
      low eigenvalue method done, cpu time[sec] = 0.11662, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.9e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.40949e-36 -7.81571e-37 -1.69914e-38 -1.28614e-37 -3.32141e-39  5.54826e-39 -2.27373e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7155, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         4.08657e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.915244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            149.014      14.4097      2.61139      3.91535     0.177141      47.3883      1.97828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11573, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.08825e-13  5.14916e-39  3.52338e-40
      low eigenvalue method done, cpu time[sec] = 0.116152, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.15e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.69529e-37  1.01393e-37  3.63237e-39  1.67169e-38  4.59011e-40  1.45566e-39  1.73938e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.25417e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.912523, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85741, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              115.9      11.2075      2.03108      3.04527     0.137777      36.8576      1.53866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105798, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.1156, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.45779e-12  4.12618e-39   2.5913e-40
      low eigenvalue method done, cpu time[sec] = 0.116017, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.23376e-37  -9.8023e-38 -5.65782e-39 -7.75154e-38  -1.6929e-39 -3.40832e-39  7.83793e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7105, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.914359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.83553, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             104.31      10.0868      1.82798      2.74074     0.123999      33.1718       1.3848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105892, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115776, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.16779e-12  3.75716e-39  2.26986e-40
      low eigenvalue method done, cpu time[sec] = 0.116288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.76e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.03243e-36  4.19717e-37  1.00508e-38  6.93293e-38   1.7899e-39 -6.03222e-40 -8.01448e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6888, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         8.75694e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.911741, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.84048, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              69.54      6.72451      1.21865      1.82716    0.0826659      22.1145     0.923199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105734, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009031, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115494, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.68563e-13  2.60795e-39  1.33654e-40
      low eigenvalue method done, cpu time[sec] = 0.115912, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.86e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.07643e-36 -3.21933e-37 -8.14298e-39  -5.3612e-38 -1.33576e-39 -2.13445e-39   5.4022e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.16759e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.914997, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.84438, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             52.155      5.04338     0.913988      1.37037    0.0619994      16.5859     0.692399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105867, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009006, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54962e-13  2.00427e-39  9.00521e-41
      low eigenvalue method done, cpu time[sec] = 0.11602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.04e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.84112e-37 -7.99109e-38 -2.27706e-39 -1.00266e-38  -2.4108e-40 -2.27506e-39 -7.26413e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7037, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.45949e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.913454, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.83997, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             41.724      4.03471      0.73119       1.0963    0.0495996      13.2687     0.553919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105653, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.27973e-13  1.63029e-39  6.55845e-41
      low eigenvalue method done, cpu time[sec] = 0.115865, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.38974e-37  1.53044e-37  4.77183e-39  3.34134e-38  8.55333e-40  1.84642e-39  1.62226e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6948, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.913807, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.83446, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              34.77      3.36226     0.609325     0.913581     0.041333      11.0573     0.461599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106132, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009177, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116042, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.82821e-13  1.37522e-39  5.02702e-41
      low eigenvalue method done, cpu time[sec] = 0.116465, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -9.83903e-37 -2.52241e-37 -6.72637e-39 -4.77362e-38 -1.20299e-39 -1.23102e-39  2.66928e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6992, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.04329e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.914529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82908, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.8028      2.88193     0.522279      0.78307    0.0354283      9.47766     0.395657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.48864e-13  1.18985e-39  3.99576e-41
      low eigenvalue method done, cpu time[sec] = 0.116072, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   5.9222e-38   4.7869e-38  1.60166e-39  1.79588e-38  3.83189e-40 -1.14765e-39 -1.40722e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6851, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.33518e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.912009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.84407, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26.0775      2.52169     0.456994     0.685186    0.0309997      8.29296       0.3462
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105964, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115759, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.04511e-13   1.0489e-39  3.26378e-41
      low eigenvalue method done, cpu time[sec] = 0.116179, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.21617e-37 -6.52566e-38 -1.44435e-39 -7.22736e-39 -2.16488e-40  1.46788e-39  7.28467e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6933, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 16951 1/cm
      Energy step      = 73 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009874
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.465556
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.603919
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.655576
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.21417
         W1 Well: minimal relaxation eigenvalue = 0.0296836
         W1 Well: maximal relaxation eigenvalue = 1.34497
         W1 Well:       grid size = 665
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 233
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4656 1/cm
         B4 Barrier:        grid size = 317
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 550
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23198 1/cm
         B6 Barrier:        grid size = 212
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4687 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.26741, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23198 4.55e+05 7.17e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 1.55e+13
         B2    162 1.51e+12
         B3  -4656 2.77e+11
         B4  -6189 4.13e+11
         B5 -23198 1.87e+10
         B6   1476 5.03e+12
         B7   4688 2.16e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.55e+22  1.43e+23  2.48e+17  1.27e+15  3.53e-11  1.48e+26  1.05e+31
          R  1.53e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  6.99e-24     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  4.04e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  7.88e-16  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  2.84e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  6.76e-27  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  9.53e-32  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.17e+19  4.73e+19   8.2e+13   4.2e+11  1.17e-14   4.9e+22  3.47e+27
          R  4.61e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  2.11e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  1.22e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  2.38e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  8.57e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  2.04e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  2.88e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.27876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+08
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.451932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64652, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1129.24      110.484      20.2538      30.1896      1.36925       367.64      15.7983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10396, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113007, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.94879e-11  2.71209e-37  2.92216e-38
      low eigenvalue method done, cpu time[sec] = 0.113422, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.05e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -8.25674e-36 -3.72991e-36 -1.55159e-37 -1.25453e-36 -3.02674e-38  2.87443e-38 -1.08111e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0501, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.891545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85895, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            376.412      36.8281      6.75127      10.0632     0.456417      122.547       5.2661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103791, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112783, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.29235e-11  1.12217e-37   1.0603e-38
      low eigenvalue method done, cpu time[sec] = 0.11319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   3.3478e-38  2.46616e-36  4.96561e-38   5.7323e-37  1.27505e-38 -2.91675e-38  2.31626e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.661, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.86079e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.893484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8594, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            225.847      22.0969      4.05076      6.03792      0.27385      73.5279      3.15966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103604, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008862, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112604, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.11535e-12  7.33357e-38  6.15462e-39
      low eigenvalue method done, cpu time[sec] = 0.113016, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.5369e-36  3.51841e-37  1.84977e-39  5.86227e-38  1.72478e-39  1.37356e-38     -1.6e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6594, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          4.0051e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.892728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.94704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             161.32      15.7835       2.8934       4.3128     0.195607        52.52       2.2569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103739, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008858, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.56687e-12  5.50498e-38  4.18763e-39
      low eigenvalue method done, cpu time[sec] = 0.113137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.23413e-36 -1.71643e-36 -3.91671e-38 -1.55597e-37 -4.33839e-39  1.08116e-38  2.87313e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.14941e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.891734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87638, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.471       12.276      2.25042       3.3544     0.152139      40.8489      1.75537
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008828, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112762, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.12869e-12  4.42752e-38  3.09696e-39
      low eigenvalue method done, cpu time[sec] = 0.11317, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.43e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.71785e-36 -2.15431e-37 -2.33925e-38 -2.43964e-37 -5.28299e-39 -2.71806e-38  -2.4863e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.89195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86243, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            112.924      11.0484      2.02538      3.01896     0.136925       36.764      1.57983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00885, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112861, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.32086e-13   4.0374e-38  2.71916e-39
      low eigenvalue method done, cpu time[sec] = 0.113272, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.04e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.28326e-36  1.13349e-37 -6.78938e-39 -1.77772e-37 -3.15681e-39  3.54984e-39 -6.15019e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.675, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         8.58236e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.895266, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8536, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.2825      7.36563      1.35025      2.01264    0.0912834      24.5093      1.05322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103855, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112784, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.08886e-13  2.81687e-38  1.61573e-39
      low eigenvalue method done, cpu time[sec] = 0.113188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.82e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.36e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.66764e-36  1.10127e-36  2.32279e-38  1.10627e-37    3.337e-39   1.0782e-38  2.45746e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6545, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.14431e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.889667, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8673, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.4618      5.52422      1.01269      1.50948    0.0684625       18.382     0.789916
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.80984e-13  2.17174e-38   1.0957e-39
      low eigenvalue method done, cpu time[sec] = 0.11293, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.17e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.45e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.70197e-36  2.02485e-37  1.51879e-38  1.08438e-37  2.53758e-39  3.13911e-38   -1.723e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.43039e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.89062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8866, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.1695      4.41938     0.810152      1.20758      0.05477      14.7056     0.631933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103574, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008803, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112508, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.73663e-14  1.77046e-38  8.02002e-40
      low eigenvalue method done, cpu time[sec] = 0.112915, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.71324e-36  8.64206e-37  2.76969e-38  2.56569e-37  5.90408e-39 -6.95307e-39 -6.56122e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6872, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.889731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85834, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.6412      3.68281     0.675127      1.00632    0.0456417      12.2547      0.52661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103677, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008828, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112642, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.79263e-12  1.49595e-38  6.17234e-40
      low eigenvalue method done, cpu time[sec] = 0.113051, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.44e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.21998e-36  9.49879e-37  3.05119e-38  1.83134e-37   4.6736e-39  1.86124e-38  2.12031e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6669, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.00255e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.896313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86441, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.2639       3.1567      0.57868     0.862559    0.0391214       10.504      0.45138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103757, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112669, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.69474e-12  1.29599e-38  4.92287e-40
      low eigenvalue method done, cpu time[sec] = 0.113081, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  -3.9868e-37 -2.09433e-39  5.34683e-40  2.72985e-38  4.11924e-40  7.65545e-43  1.37597e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6682, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.28863e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.892346, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87329, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.2309      2.76211     0.506345     0.754739    0.0342313      9.19099     0.394958
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103637, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008787, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112558, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.52536e-13  1.14368e-38  4.03282e-40
      low eigenvalue method done, cpu time[sec] = 0.112972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.36131e-36 -8.98648e-37 -2.67966e-38 -2.34995e-37 -5.41677e-39  6.22423e-39  3.86044e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6791, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 17229 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010004
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.501414
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.575424
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.605562
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.08914
         W1 Well: minimal relaxation eigenvalue = 0.0292529
         W1 Well: maximal relaxation eigenvalue = 1.35157
         W1 Well:       grid size = 651
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 230
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 227
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 292
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4671 1/cm
         B4 Barrier:        grid size = 313
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6246 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 538
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 210
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.09351, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23121 4.81e+05 7.59e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 1.73e+13
         B2    204 1.72e+12
         B3  -4671 3.18e+11
         B4  -6246 4.71e+11
         B5 -23121 2.14e+10
         B6   1479 5.77e+12
         B7   4704 2.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.13e+21  1.32e+22  3.26e+16  1.88e+14  1.97e-11  1.25e+25  7.12e+29
          R  1.63e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  7.58e-23     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  3.07e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  5.32e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  5.09e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  7.97e-26  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6   1.4e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e+18  4.49e+18  1.11e+13  6.39e+10  6.69e-15  4.27e+21  2.42e+26
          R  4.79e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  2.23e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  9.03e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  1.56e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4   1.5e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  2.34e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  4.13e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.10471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+08
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.533811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45122, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1220.42      120.813      22.3976      33.1939      1.50918      406.553       17.969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00843, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.32885e-11  2.57253e-36  3.01817e-37
      low eigenvalue method done, cpu time[sec] = 0.10732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.57e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.53e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.77033e-35  1.26187e-35  3.78165e-37  2.38534e-36  7.82151e-38   1.0913e-37 -7.16298e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.84628, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860609, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70584, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            406.805       40.271      7.46586      11.0646     0.503059      135.518      5.98967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097707, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008433, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106802, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.10002e-11  1.08708e-36  1.11789e-37
      low eigenvalue method done, cpu time[sec] = 0.107199, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.57005e-35 -7.70268e-37  8.69722e-38  2.26232e-36  3.86079e-38  6.68753e-39 -9.03116e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3879, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          2.8054e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.859617, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71011, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            244.083      24.1626      4.47952      6.63877     0.301836      81.3107       3.5938
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008395, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106583, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.91103e-11   7.1642e-37  6.55683e-38
      low eigenvalue method done, cpu time[sec] = 0.106972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.16e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   5.1863e-37  8.46534e-37  6.06494e-38  1.76549e-36   3.6822e-38 -1.87788e-38 -2.04767e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.92755e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.861539, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.7116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            174.345       17.259      3.19966      4.74198     0.215597      58.0791        2.567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008382, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106569, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.42686e-12  5.40473e-37  4.49312e-38
      low eigenvalue method done, cpu time[sec] = 0.106973, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.08965e-35  8.94232e-37  8.44092e-38  8.04166e-37  1.79084e-38  5.54235e-38  -1.4229e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3916, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.04971e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.865657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            135.602      13.4237      2.48862      3.68821     0.167686      45.1726      1.99656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097527, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008397, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.40569e-12  4.36186e-37  3.34093e-38
      low eigenvalue method done, cpu time[sec] = 0.107006, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.36e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67329e-36  2.98176e-37 -1.18702e-38  -1.4138e-37 -2.25067e-39  3.75052e-38  3.76799e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1405, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.861588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.042      12.0813      2.23976      3.31939     0.150918      40.6553       1.7969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097571, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008405, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10661, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.11995e-12  3.98297e-37  2.94011e-38
      low eigenvalue method done, cpu time[sec] = 0.107005, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.98e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.03056e-36  6.71874e-37  2.65305e-38  2.13558e-37  3.87426e-39 -9.51849e-39 -1.16544e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3902, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.41619e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.858086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.73513, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             81.361      8.05421      1.49317      2.21292     0.100612      27.1036      1.19793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.099, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008412, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.108091, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.80324e-13   2.7924e-37  1.76266e-38
      low eigenvalue method done, cpu time[sec] = 0.108487, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.79e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.17e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   7.2829e-36 -3.30312e-37 -6.00216e-39 -4.84686e-37 -9.38732e-39  8.53453e-38  5.70459e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.417, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.12216e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.864101, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00974, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.0208      6.04065      1.11988      1.65969    0.0754589      20.3277     0.898451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097532, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008399, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.66354e-12  2.15945e-37  1.20298e-38
      low eigenvalue method done, cpu time[sec] = 0.107018, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.32e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.38026e-35  4.33603e-36  9.25494e-38   3.2877e-37  1.04595e-38 -8.48158e-40  1.66956e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6943, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          1.4027e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.86137, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72037, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.8166      4.83252     0.895904      1.32775    0.0603671      16.2621     0.718761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097564, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106705, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5002e-14  1.76423e-37  8.84886e-39
      low eigenvalue method done, cpu time[sec] = 0.107098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.16e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.8492e-36  8.42747e-37  2.13315e-38  8.83872e-38  2.57752e-39  5.03382e-39  8.75969e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4001, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.863353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70697, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.6805       4.0271     0.746586      1.10646    0.0503059      13.5518     0.598967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097539, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.31006e-13  1.49309e-37  6.83763e-39
      low eigenvalue method done, cpu time[sec] = 0.106993, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.37e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.92265e-36  -1.6148e-36 -4.02496e-38 -9.10466e-38 -3.80629e-39 -5.00106e-38 -1.11196e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4029, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.96378e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.863569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.73461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             34.869       3.4518     0.639931     0.948396    0.0431194      11.6158     0.513401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106538, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.20529e-12  1.29516e-37  5.47193e-39
      low eigenvalue method done, cpu time[sec] = 0.106931, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.79e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.85223e-37  6.23493e-37  2.22499e-38  3.45108e-37  7.13579e-39 -3.35868e-38 -4.73817e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.414, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.24432e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.8591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.74237, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.5104      3.02033      0.55994     0.829847    0.0377295      10.1638     0.449226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05558e-12  1.14413e-37  4.49563e-39
      low eigenvalue method done, cpu time[sec] = 0.10705, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.26677e-36 -2.74107e-37 -2.05547e-39 -1.08349e-37  -1.9766e-39  5.03228e-38 -3.88203e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4192, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 17507 1/cm
      Energy step      = 77 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009504
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.43467
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.555447
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.604102
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.87036
         W1 Well: minimal relaxation eigenvalue = 0.0288554
         W1 Well: maximal relaxation eigenvalue = 2.30729
         W1 Well:       grid size = 638
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 228
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 288
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4669 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 528
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 208
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1491 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4648 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.78536, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23149 4.72e+05 8.03e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 1.94e+13
         B2    183 1.94e+12
         B3  -4669 3.65e+11
         B4  -6208 5.37e+11
         B5 -23149 2.45e+10
         B6   1492 6.62e+12
         B7   4649    3e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.27e+20  1.33e+21  4.61e+15  2.98e+13  1.11e-11  1.17e+24  5.36e+28
          R  1.59e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  7.51e-22     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  2.17e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  3.36e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  9.02e+10  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  8.57e-25  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  1.87e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.22e+17  4.71e+17  1.63e+12  1.05e+10  3.92e-15  4.13e+20   1.9e+25
          R  4.51e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  2.12e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  6.14e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  9.49e-11  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  2.55e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  2.42e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  5.28e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.79576, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+08
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.683298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1316.82      131.895       24.722      36.4309      1.66042      448.631      20.3784
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092488, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007931, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.61269e-11  2.26084e-35  2.85131e-36
      low eigenvalue method done, cpu time[sec] = 0.100922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.52e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.27898e-35 -3.61357e-35 -4.79767e-37  1.52508e-36 -2.28792e-38 -2.50504e-38 -3.89098e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75533, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.823528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            438.938      43.9651      8.24067      12.1436     0.553475      149.544      6.79282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007944, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100417, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.4503e-12  9.74316e-36  1.07719e-36
      low eigenvalue method done, cpu time[sec] = 0.100792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.74e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.62235e-36 -6.90467e-36  -2.7201e-37 -6.90771e-36  -1.4387e-37  3.60261e-38  5.26967e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2285, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.75261e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.822667, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            263.363      26.3791       4.9444      7.28618     0.332085      89.7263      4.07569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092265, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007895, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100283, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.10443e-12  6.47189e-36  6.38203e-37
      low eigenvalue method done, cpu time[sec] = 0.100666, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.47e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.04162e-35 -5.16496e-36 -1.64262e-37  3.11245e-37 -7.71073e-39 -1.84718e-37  -6.8939e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2093, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.85365e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.821017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            188.116      18.8422      3.53172      5.20442     0.237203      64.0902      2.91121
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100291, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18706e-11  4.90554e-36   4.4036e-37
      low eigenvalue method done, cpu time[sec] = 0.100671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.91e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.40383e-35 -1.08883e-35 -4.24545e-37  -2.1574e-36 -5.91091e-38 -4.89786e-37 -1.03612e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          4.9547e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.822607, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.313       14.655      2.74689      4.04788     0.184492      49.8479      2.26427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092234, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007914, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.38734e-12  3.97195e-36  3.29165e-37
      low eigenvalue method done, cpu time[sec] = 0.100652, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.97e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.47935e-36  1.63479e-36   1.2432e-37   2.5968e-36  5.32043e-38 -7.09918e-38  8.32552e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2191, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.820792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67153, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            131.682      13.1895       2.4722      3.64309     0.166042      44.8631      2.03784
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092232, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007902, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100263, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12524e-12  3.63167e-36  2.90322e-37
      low eigenvalue method done, cpu time[sec] = 0.100645, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.60767e-35  8.53394e-36  3.08113e-37  2.71394e-36  6.07978e-38   9.4892e-38  1.79013e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2212, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.25783e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.811509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6851, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.7877      8.79303      1.64813      2.42873     0.110695      29.9088      1.35856
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09252, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100553, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.14782e-12  2.55799e-36  1.75575e-37
      low eigenvalue method done, cpu time[sec] = 0.100933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.16821e-35  1.36114e-35  2.73601e-37  1.61978e-36   4.1669e-38 -2.42508e-37  7.62551e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2317, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.10104e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.820484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65.8408      6.59477       1.2361      1.82155    0.0830212      22.4316      1.01892
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092223, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007897, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100242, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.27268e-12  1.98403e-36  1.20576e-37
      low eigenvalue method done, cpu time[sec] = 0.100616, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.73e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.94273e-35 -7.57968e-36 -1.68775e-37 -8.30704e-37 -2.35975e-38 -8.45799e-38 -5.84455e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.37631e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67914, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.6726      5.27582      0.98888      1.45724     0.066417      17.9453     0.815138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092209, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62917e-13   1.6243e-36  8.91235e-38
      low eigenvalue method done, cpu time[sec] = 0.10064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.72572e-35 -9.24494e-36 -3.05665e-37 -2.17877e-36 -5.36556e-38 -9.76354e-38  1.40105e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2299, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.823107, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.8938      4.39651     0.824067      1.21436    0.0553475      14.9544     0.679282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092191, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.67968e-12  1.37685e-36  6.91395e-38
      low eigenvalue method done, cpu time[sec] = 0.100605, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.23808e-35 -8.24498e-36 -2.65443e-37 -1.93958e-36 -4.75785e-38 -1.06989e-37  9.04081e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2221, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.92683e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.822124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6452, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.6233      3.76844     0.706343      1.04088    0.0474407       12.818     0.582241
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007939, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.93961e-12  1.19582e-36  5.55142e-38
      low eigenvalue method done, cpu time[sec] = 0.100765, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.45e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.69241e-35 -6.89092e-36 -2.29082e-37 -1.79938e-36 -4.40705e-38 -1.55173e-37 -2.35719e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.20209e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.823384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65705, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.9204      3.29738      0.61805     0.910773    0.0415106      11.2158     0.509461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092223, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007913, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.40078e-12  1.05744e-36  4.57401e-38
      low eigenvalue method done, cpu time[sec] = 0.100635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.10111e-35 -2.47089e-36 -9.78227e-38 -6.77131e-37 -1.50731e-38 -1.18597e-37 -1.04897e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2128, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 17785 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009588
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.489367
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.546463
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.533504
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.71678
         W1 Well: minimal relaxation eigenvalue = 0.0284286
         W1 Well: maximal relaxation eigenvalue = 1.29088
         W1 Well:       grid size = 633
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 229
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -76 1/cm
         B2 Barrier:        grid size = 226
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 287
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6239 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 525
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 209
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.60723, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23165 4.66e+05 8.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -76 2.17e+13
         B2    157  2.2e+12
         B3  -4601 4.17e+11
         B4  -6239 6.11e+11
         B5 -23165 2.79e+10
         B6   1483 7.56e+12
         B7   4681 3.53e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.32e+19  1.54e+20  7.34e+14  5.29e+12  6.64e-12  1.25e+23  4.66e+27
          R  1.37e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  6.51e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  1.36e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  1.89e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  1.51e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  8.03e-24  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  2.14e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.59e+16  5.44e+16   2.6e+11  1.87e+09  2.35e-15  4.41e+19  1.65e+24
          R  3.85e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  1.84e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  3.84e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  5.33e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  4.25e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  2.27e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  6.05e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.61757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+08
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.791035, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1418.65      143.767      27.2384      39.9065      1.82366      494.051      23.0467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090968, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007862, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.35982e-11  1.78078e-34  2.38577e-35
      low eigenvalue method done, cpu time[sec] = 0.099851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.58006e-34  3.32944e-34  9.56058e-36  8.32264e-35  1.96114e-36  5.52367e-37  6.48056e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.76586, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.812422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            472.883      47.9222      9.07946      13.3022     0.607887      164.684      7.68222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090439, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007818, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098908, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -9.041e-12  7.81804e-35  9.18706e-36
      low eigenvalue method done, cpu time[sec] = 0.099283, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.82e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.52409e-35 -1.49556e-35 -2.40796e-37  1.10409e-36 -1.19799e-38 -3.38466e-37  5.82132e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1302, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.70224e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60098, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             283.73      28.7533      5.44768       7.9813     0.364732      98.8102      4.60933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00789, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099191, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22842e-11  5.23224e-35  5.49629e-36
      low eigenvalue method done, cpu time[sec] = 0.099568, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.23e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.11492e-35  -1.2475e-35 -2.43127e-37 -3.47621e-36 -8.71963e-38  5.87232e-37 -8.94717e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.138, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.78314e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60308, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            202.664      20.5381       3.8912      5.70093     0.260523      70.5787      3.29238
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090322, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007823, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098794, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.39617e-12  3.98386e-35  3.81786e-36
      low eigenvalue method done, cpu time[sec] = 0.099167, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.98e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.86723e-34 -1.68696e-35 -6.98859e-37 -9.17637e-37 -5.24584e-38 -1.17271e-36 -1.17089e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1268, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         4.86404e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.811451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60657, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            157.628      15.9741      3.02649      4.43406     0.202629      54.8946      2.56074
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090198, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007859, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098708, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.44952e-12  3.23583e-35  2.86844e-36
      low eigenvalue method done, cpu time[sec] = 0.099083, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.2e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -9.8286e-36  3.61929e-36 -8.62567e-38 -2.27693e-36 -4.04209e-38 -3.75699e-39  9.54637e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.817331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60517, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.865      14.3767      2.72384      3.99065     0.182366      49.4051      2.30467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007851, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098839, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37284e-12  2.96233e-35  2.53544e-36
      low eigenvalue method done, cpu time[sec] = 0.099213, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.42e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.07676e-34 -5.39391e-35 -1.62611e-36 -1.22833e-35 -3.02317e-37 -3.59695e-37 -2.36967e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1323, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.10673e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813854, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.5767      9.58444      1.81589      2.66043     0.121577      32.9367      1.53644
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090298, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007844, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098783, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.60582e-13  2.09598e-35  1.54635e-36
      low eigenvalue method done, cpu time[sec] = 0.099173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.96e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.99641e-35  4.64945e-36   4.5465e-37  4.90024e-36  1.11677e-37  3.66508e-37  2.11397e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0809e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.9325      7.18833      1.36192      1.99533    0.0911831      24.7026      1.15233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090394, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007889, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098931, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.49532e-12  1.63038e-35  1.06844e-36
      low eigenvalue method done, cpu time[sec] = 0.099306, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.63e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   4.8525e-35  4.94068e-36  1.55918e-37 -5.60739e-37 -2.42886e-39  8.16236e-38 -5.94667e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.35112e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61345, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             56.746      5.75066      1.08954      1.59626    0.0729465       19.762     0.921866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09026, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007841, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098744, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.33208e-12  1.33752e-35   7.9348e-37
      low eigenvalue method done, cpu time[sec] = 0.099126, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.54357e-35  1.30919e-35  4.68921e-37  2.41441e-36  6.67391e-38  8.50364e-37  1.92627e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1356, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.812942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61531, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.2883      4.79222     0.907946      1.33022    0.0607887      16.4684     0.768222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007856, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098901, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76614e-12  1.13552e-35  6.17944e-37
      low eigenvalue method done, cpu time[sec] = 0.099277, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.23e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.55616e-35 -4.52183e-36 -6.22518e-38  1.40909e-36  2.22326e-38 -2.49995e-37 -3.03025e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1288, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.89157e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.5329      4.10762      0.77824      1.14019    0.0521046      14.1157     0.658476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090247, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.098737, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7928e-12  9.87442e-36  4.97787e-37
      low eigenvalue method done, cpu time[sec] = 0.099119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.87e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.53407e-35  1.19888e-35  2.41972e-37  1.15878e-36  3.38342e-38 -1.62977e-37 -5.37906e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1323, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.16179e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.81579, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.4662      3.59416      0.68096     0.997663    0.0455916      12.3513     0.576166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007836, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09889, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.92834e-12  8.74062e-36  4.11299e-37
      low eigenvalue method done, cpu time[sec] = 0.099267, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.74e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.70588e-35  1.91943e-35  4.67973e-37  2.78113e-36  7.41837e-38  9.23302e-38 -6.19692e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1432, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 18063 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00852
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.42032
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.528423
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.529732
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.55911
         W1 Well: minimal relaxation eigenvalue = 0.0280655
         W1 Well: maximal relaxation eigenvalue = 1.88514
         W1 Well:       grid size = 621
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 226
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -17 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 284
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4657 1/cm
         B4 Barrier:        grid size = 303
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6177 1/cm
         B5 Barrier: nonpositive number of states at -23137 1/cm => truncating
         B5 Barrier:        grid size = 515
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23137 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.44365, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23137 4.76e+05 8.98e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -17 2.43e+13
         B2    143 2.49e+12
         B3  -4657 4.76e+11
         B4  -6177 6.94e+11
         B5 -23137 3.18e+10
         B6   1503 8.64e+12
         B7   4703 4.13e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.02e+18  1.87e+19  1.22e+14  9.74e+11  3.92e-12  1.41e+22  4.33e+26
          R  1.11e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  5.35e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  8.21e-15   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  1.03e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  2.55e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  7.12e-23  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  2.31e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.32e+15  6.87e+15  4.48e+10  3.58e+08  1.44e-15  5.17e+18  1.59e+23
          R  3.02e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  1.46e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  2.23e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  2.79e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  6.94e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  1.93e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  6.28e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.45412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+08
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.779894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17746, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1526.02      156.469      29.9585       43.632       1.9996      542.997      25.9943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085711, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007507, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093338, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.08332e-11  1.31979e-33   1.8686e-34
      low eigenvalue method done, cpu time[sec] = 0.0937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.83787e-34   6.7861e-35  4.07078e-36  3.67728e-35  6.99743e-37  1.96354e-36 -1.26147e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62268, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            508.673      52.1564      9.98618       14.544     0.666532      180.999      8.66477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085573, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093188, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71437e-11  5.89743e-34   7.3301e-35
      low eigenvalue method done, cpu time[sec] = 0.093549, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.9e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.97295e-34   1.6876e-34  2.85015e-36 -3.81712e-36  1.36758e-37 -1.05865e-36  1.99434e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9863, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.65413e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.779159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58271, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            305.204      31.2939      5.99171       8.7264     0.399919      108.599      5.19886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085529, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007492, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093139, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22036e-11  3.97536e-34   4.4271e-35
      low eigenvalue method done, cpu time[sec] = 0.093513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.98e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.48267e-34  2.27924e-34  6.93091e-36  5.69256e-35  1.33432e-36  1.50333e-36  -2.8266e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.71578e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            218.003      22.3528      4.27979      6.23314     0.285656      77.5709      3.71347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085629, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00751, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.47217e-12  3.04007e-34  3.09529e-35
      low eigenvalue method done, cpu time[sec] = 0.093619, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.04e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.53e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.60349e-34  1.02212e-34  3.01323e-36 -2.49483e-36  7.61536e-38   3.9997e-36 -8.02032e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         4.77743e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.767602, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57728, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            169.558      17.3855      3.32873        4.848     0.222177       60.333      2.88826
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093466, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.63099e-13  2.47679e-34   2.3372e-35
      low eigenvalue method done, cpu time[sec] = 0.093826, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.3077e-34 -1.02307e-34  -2.7421e-36 -1.88235e-35 -4.67732e-37   2.3854e-37 -2.65005e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9814, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59089, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            152.602      15.6469      2.99585       4.3632      0.19996      54.2997      2.59943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085504, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007525, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093145, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.0793e-12  2.27022e-34  2.07025e-35
      low eigenvalue method done, cpu time[sec] = 0.093503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.37e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.48422e-35   1.3008e-36  1.67962e-37  2.70486e-36  4.35241e-38 -7.97315e-37 -7.92118e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9993, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         7.96238e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.778535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59655, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            101.735      10.4313      1.99724       2.9088     0.133306      36.1998      1.73295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085518, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.24445e-12  1.61338e-34  1.27315e-35
      low eigenvalue method done, cpu time[sec] = 0.093513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.53e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.50046e-34  1.50132e-35  8.30964e-37  6.31587e-36  1.68232e-37   9.6708e-37  2.26002e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.06165e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.778735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             76.301      7.82347      1.49793       2.1816    0.0999798      27.1498      1.29972
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085538, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007499, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093155, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.96517e-12  1.25855e-34  8.84944e-36
      low eigenvalue method done, cpu time[sec] = 0.093522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.53e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.20411e-34  6.08567e-35  2.21007e-36  1.33044e-35  3.45191e-37  3.62229e-36   1.0241e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.004, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.32706e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777421, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.0408      6.25877      1.19834      1.74528    0.0799838      21.7199      1.03977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08602, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093739, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.41558e-13  1.03458e-34   6.6028e-36
      low eigenvalue method done, cpu time[sec] = 0.09411, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.9e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.53116e-35   3.3608e-35  7.04637e-37  7.34837e-36  1.63945e-37 -1.48861e-36  1.53239e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0197, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.781067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.8673      5.21564     0.998618       1.4544    0.0666532      18.0999     0.866477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.64432e-13  8.79697e-35  5.16177e-36
      low eigenvalue method done, cpu time[sec] = 0.093588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.8e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.09534e-35 -4.49265e-35 -8.67412e-37 -6.92377e-36 -1.63502e-37  1.30218e-36   1.1758e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9899, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.85789e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.6006      4.47055     0.855958      1.24663    0.0571313      15.5142     0.742695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007485, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.37137e-13  7.65923e-35   4.1715e-36
      low eigenvalue method done, cpu time[sec] = 0.093461, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.66e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.05064e-34   4.1827e-35   1.6623e-36  7.84797e-36  2.22751e-37   2.4806e-36  -2.3801e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0032, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1          2.1233e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777376, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60126, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.1505      3.91173     0.748963       1.0908    0.0499899      13.5749     0.649858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085472, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007473, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093064, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.30472e-14  6.78666e-35  3.45632e-36
      low eigenvalue method done, cpu time[sec] = 0.093427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.79e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.28194e-34   3.7963e-35  1.37379e-36  6.04379e-36  1.70835e-37  1.83584e-36 -4.62246e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0075, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 18341 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009757
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.461314
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.508467
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.86431
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.38562
         W1 Well: minimal relaxation eigenvalue = 0.0276503
         W1 Well: maximal relaxation eigenvalue = 1.32805
         W1 Well:       grid size = 609
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 506
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 206
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.5349, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23151 4.71e+05 9.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 2.71e+13
         B2    137 2.81e+12
         B3  -4619 5.43e+11
         B4  -6176 7.87e+11
         B5 -23151 3.62e+10
         B6   1450 9.84e+12
         B7   4648 4.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.24e+18  2.54e+18  2.23e+13  1.97e+11  2.42e-12  1.78e+21  4.55e+25
          R  8.06e-19         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  3.93e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  4.48e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  5.07e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  4.13e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  5.62e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6   2.2e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.61e+14  9.44e+14  8.28e+09  7.32e+07     9e-16   6.6e+17  1.69e+22
          R  2.17e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  1.06e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  1.21e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  1.37e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  1.11e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  1.51e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  5.92e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.54521, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+08
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.60582, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.24487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1639.17      170.047      32.8947      47.6274      2.18895      595.655      29.2432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088509, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.18798e-11  8.82336e-33  1.30918e-33
      low eigenvalue method done, cpu time[sec] = 0.088858, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-34 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   2.1631e-33  7.39644e-34  3.76322e-35  4.15447e-34  9.00876e-36 -7.22178e-36 -4.54073e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.45667, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.748637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            546.392      56.6822      10.9649      15.8758      0.72965      198.552      9.74772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081283, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.34746e-11  4.00969e-33  5.22821e-34
      low eigenvalue method done, cpu time[sec] = 0.088759, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-34 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.01298e-34 -3.07738e-35  6.12044e-36  5.19896e-35  9.61453e-37  7.71947e-36 -4.20323e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.81, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.60811e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.753479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            327.835      34.0093      6.57895      9.52548      0.43779      119.131      5.84863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081003, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088142, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.00804e-12  2.72161e-33  3.18676e-34
      low eigenvalue method done, cpu time[sec] = 0.08849, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.53e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.74403e-34 -8.07848e-35 -1.68922e-36 -1.76505e-35 -3.69485e-37  5.01517e-36 -1.81912e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.65136e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.755568, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            234.168      24.2924      4.69925      6.80391     0.312707      85.0935       4.1776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081037, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006985, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088135, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.12279e-12  2.09006e-33  2.24223e-34
      low eigenvalue method done, cpu time[sec] = 0.088483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.78e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.35451e-33  3.43126e-34  9.65288e-36  6.45614e-35  1.61378e-36  6.54484e-36 -4.08905e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8448, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          4.6946e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.753394, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            182.131      18.8941      3.65497      5.29193     0.243217      66.1838      3.24924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081093, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.31725e-12  1.70783e-33  1.70131e-34
      low eigenvalue method done, cpu time[sec] = 0.088543, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.96731e-34  8.35835e-35  3.65226e-36  4.53985e-35  9.99821e-37  1.10396e-36 -1.03288e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.834, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.755377, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51579, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.917      17.0047      3.28947      4.76274     0.218895      59.5655      2.92432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006989, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.28818e-12  1.56727e-33  1.51012e-34
      low eigenvalue method done, cpu time[sec] = 0.08847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.33e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.58893e-34  1.37902e-34  3.95577e-36  3.70259e-35  8.26737e-37 -1.83889e-36 -1.30466e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8312, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         7.82434e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.743467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50825, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            109.278      11.3364      2.19298      3.17516      0.14593      39.7103      1.94954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081252, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006961, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.19925e-12  1.11862e-33  9.36226e-35
      low eigenvalue method done, cpu time[sec] = 0.088682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.09e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   6.5893e-34  1.87152e-34  5.14658e-36  2.97538e-35  7.91788e-37  8.55772e-37 -7.62541e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8256, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.04324e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.756362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50643, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.9587      8.50233      1.64474      2.38137     0.109448      29.7827      1.46216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006991, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.85001e-12  8.75038e-34  6.54565e-35
      low eigenvalue method done, cpu time[sec] = 0.08849, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.75e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -9.65033e-34 -2.45215e-34 -6.26228e-36 -3.49933e-35 -9.49887e-37 -1.07986e-36 -6.56562e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8307, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.30406e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.751349, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51557, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             65.567      6.80187      1.31579       1.9051     0.087558      23.8262      1.16973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081067, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088192, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.41266e-13  7.20763e-34  4.90625e-35
      low eigenvalue method done, cpu time[sec] = 0.088538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.21e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.52076e-34 -4.27704e-36 -1.29377e-36 -2.33883e-36 -9.96887e-38 -5.24671e-36 -5.46982e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8302, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.754732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51621, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.6392      5.66822      1.09649      1.58758     0.072965      19.8552     0.974772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081008, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007025, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088145, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.06016e-13  6.13805e-34  3.84987e-35
      low eigenvalue method done, cpu time[sec] = 0.088498, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.98759e-34 -1.76953e-34 -5.33379e-36 -3.16584e-35 -8.29426e-37 -3.66436e-36  1.03894e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.82568e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.755075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51277, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.8336      4.85848      0.93985      1.36078    0.0625415      17.0187     0.835519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081357, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007058, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088546, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14283e-12  5.35077e-34  3.12114e-35
      low eigenvalue method done, cpu time[sec] = 0.088914, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.35e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.10105e-34 -1.05676e-34 -3.17555e-36 -3.13703e-35 -6.92542e-37  7.65343e-37 -4.94222e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8438, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.08649e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.753007, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51227, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.9794      4.25117     0.822369      1.19068    0.0547238      14.8914     0.731079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081043, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088169, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00471e-14  4.74598e-34  2.59314e-35
      low eigenvalue method done, cpu time[sec] = 0.088515, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.75e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.68351e-34  4.89881e-35  6.84624e-37 -1.19507e-35 -1.66764e-37 -1.85399e-37 -6.34644e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8313, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 18619 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009374
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.526262
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.501007
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.474766
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.22492
         W1 Well: minimal relaxation eigenvalue = 0.027294
         W1 Well: maximal relaxation eigenvalue = 1.3246
         W1 Well:       grid size = 605
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 225
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23213 1/cm => truncating
         B5 Barrier:        grid size = 504
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23213 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1438 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4675 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.12993, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23213  4.5e+05    1e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.02e+13
         B2    194 3.17e+12
         B3  -4621 6.19e+11
         B4  -6198 8.91e+11
         B5 -23213 4.11e+10
         B6   1439 1.12e+13
         B7   4676 5.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.84e+17  3.73e+17  4.35e+12  4.24e+10  1.52e-12  2.43e+20  5.21e+24
          R  5.43e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  2.68e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2   2.3e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  2.36e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  6.57e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  4.11e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  1.92e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.93e+13   1.4e+14  1.64e+09  1.59e+07  5.72e-16  9.16e+16  1.96e+21
          R  1.44e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  7.12e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2   6.1e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  6.27e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  1.75e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  1.09e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6   5.1e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.14038, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+08
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.739014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.21859, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1758.23      184.537      36.0597      51.9098      2.39248      652.218      32.8166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006925, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087074, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.3377e-11   5.5534e-32  8.60183e-33
      low eigenvalue method done, cpu time[sec] = 0.087424, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.55e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-33 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.64558e-33  3.01845e-33  5.32821e-35  2.73417e-34  6.64168e-36  1.83219e-35  2.10489e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.56859, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51967, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            586.077      61.5123      12.0199      17.3033     0.797494      217.406      10.9389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079731, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.53934e-12  2.56466e-32  3.49458e-33
      low eigenvalue method done, cpu time[sec] = 0.087098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     7e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.12912e-33 -1.69865e-33 -4.06181e-35 -1.39524e-34 -4.95927e-36 -1.44407e-35 -1.68973e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.56406e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736477, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49722, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            351.646      36.9074      7.21195       10.382     0.478497      130.444      6.56333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079721, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.42164e-12  1.75237e-32  2.14899e-33
      low eigenvalue method done, cpu time[sec] = 0.087087, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.63006e-33 -4.30713e-34 -1.33731e-35  1.44011e-35 -7.38205e-37 -3.98299e-35  1.03003e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7793, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.58968e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            251.176      26.3624      5.15139      7.41569     0.341783      93.1741      4.68809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079831, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086895, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.97272e-12   1.3512e-32  1.52132e-33
      low eigenvalue method done, cpu time[sec] = 0.087251, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.35e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.69e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.15902e-34  9.78601e-34  1.79215e-35   1.1956e-34  3.15134e-36 -1.61398e-35  1.84274e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8502, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          4.6153e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737374, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            195.359      20.5041      4.00664      5.76776     0.265831      72.4687      3.64629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079702, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006937, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086754, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.94434e-12  1.10726e-32  1.15975e-33
      low eigenvalue method done, cpu time[sec] = 0.087102, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.32611e-33  5.32607e-34  1.35607e-35  9.43302e-35  2.25785e-36 -6.34635e-37 -3.05129e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7611, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51216, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            175.823      18.4537      3.60597      5.19098     0.239248      65.2218      3.28166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079724, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086801, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44892e-11   1.0173e-32  1.03147e-33
      low eigenvalue method done, cpu time[sec] = 0.087144, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.12579e-33 -7.96246e-34  -2.3206e-35 -2.50177e-34 -5.59942e-36  1.14309e-35 -5.36463e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7941, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         7.69217e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.735925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50898, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.215      12.3025      2.40398      3.46066     0.159499      43.4812      2.18778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079697, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006935, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086745, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.04924e-12   7.2914e-33  6.44517e-34
      low eigenvalue method done, cpu time[sec] = 0.087094, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.29e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.16237e-34 -9.00186e-35 -3.19585e-36 -2.65212e-35 -6.39488e-37 -4.23599e-37  1.05097e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.02562e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.9115      9.22685      1.80299      2.59549     0.119624      32.6109      1.64083
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079637, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086686, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7418e-12  5.71931e-33  4.53182e-34
      low eigenvalue method done, cpu time[sec] = 0.087028, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.72e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.56e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.83449e-34 -1.07375e-34 -1.49684e-36  1.85105e-35    2.423e-37 -2.49434e-36 -1.01546e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.28203e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50311, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.3292      7.38148      1.44239      2.07639    0.0956993      26.0887      1.31267
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079926, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006957, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.6706e-12  4.72029e-33  3.41195e-34
      low eigenvalue method done, cpu time[sec] = 0.087344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.05639e-33 -2.76433e-34  -6.5228e-36 -2.37748e-35 -7.43538e-37 -4.32253e-37 -9.60804e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737933, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50496, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            58.6077      6.15123      1.20199      1.73033    0.0797494      21.7406      1.09389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079625, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006902, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086641, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.43866e-12  4.02594e-33  2.68711e-34
      low eigenvalue method done, cpu time[sec] = 0.08699, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.03e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.49613e-34  1.20303e-34  5.72442e-36  6.80037e-35  1.44302e-36  2.46973e-36  1.77966e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7851, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.79484e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73418, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50626, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.2351      5.27249      1.03028      1.48314    0.0683567      18.6348     0.937618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079733, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.47504e-12  3.51385e-33  2.18523e-34
      low eigenvalue method done, cpu time[sec] = 0.087117, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.59e-35 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.90631e-34  8.62554e-35  2.01025e-36 -1.82195e-35 -2.03169e-37   6.5727e-36  1.42588e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7829, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.05124e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.739229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.9557      4.61343     0.901494      1.29775    0.0598121      16.3055     0.820416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079678, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006952, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.086737, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.81484e-14  3.11982e-33  1.82042e-34
      low eigenvalue method done, cpu time[sec] = 0.087079, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.52e-35 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.94967e-34  9.18841e-35  3.74333e-36  4.83134e-35  1.05244e-36  1.88218e-36  1.39607e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7984, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 18897 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009203
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.501582
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.483181
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.75074
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.0955
         W1 Well: minimal relaxation eigenvalue = 0.0269346
         W1 Well: maximal relaxation eigenvalue = 1.29465
         W1 Well:       grid size = 594
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 223
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -58 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 277
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4648 1/cm
         B4 Barrier:        grid size = 295
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23263 1/cm => truncating
         B5 Barrier:        grid size = 496
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23263 1/cm
         B6 Barrier:        grid size = 205
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1472 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.14459, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23263 4.34e+05 1.06e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -58 3.36e+13
         B2    198 3.57e+12
         B3  -4648 7.04e+11
         B4  -6178 1.01e+12
         B5 -23263 4.66e+10
         B6   1472 1.27e+13
         B7   4702 6.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.9e+16  5.82e+16  8.93e+11  9.53e+09  9.59e-13  3.55e+19  6.39e+23
          R  3.45e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  1.72e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  1.12e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  1.05e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  1.04e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  2.82e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  1.56e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.12e+13  2.25e+13  3.45e+08  3.68e+06  3.71e-16  1.37e+16  2.47e+20
          R  8.92e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  4.44e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2   2.9e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  2.71e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4   2.7e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  7.29e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  4.05e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.15495, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+08
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.699121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.24298, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1883.37       199.99      39.4668      56.4949      2.61097      712.885      36.7384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075972, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006651, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.06115e-12  3.26403e-31  5.25572e-32
      low eigenvalue method done, cpu time[sec] = 0.083062, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.26e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.79e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.60947e-32  3.38737e-33   1.5754e-34  1.41875e-33   3.2052e-35  3.69381e-35  -1.4168e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.4658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.713465, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4018, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            627.791      66.6632      13.1556      18.8316     0.870324      237.628      12.2461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076012, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082789, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.26257e-13  1.53091e-31   2.1712e-32
      low eigenvalue method done, cpu time[sec] = 0.083125, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.44284e-32  6.66331e-33  1.97088e-34  1.40992e-33  3.54765e-35  9.19029e-35 -1.36578e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.52183e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            376.675      39.9979      7.89335       11.299     0.522194      142.577      7.34767
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006612, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05735e-11  1.05277e-31  1.34677e-32
      low eigenvalue method done, cpu time[sec] = 0.082974, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.06619e-32  3.34969e-33  7.06436e-35   1.7201e-34  5.91241e-36 -7.24301e-36  1.41049e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.53056e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69811, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            269.053      28.5699      5.63811      8.07069     0.372996      101.841      5.24834
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082432, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.88148e-12  8.14967e-32  9.59122e-33
      low eigenvalue method done, cpu time[sec] = 0.082766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.15e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.71281e-34 -1.12929e-34 -2.60228e-35 -4.33772e-34 -8.49158e-36 -1.23385e-37  1.28805e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8948, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.53929e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.717012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44439, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            209.264      22.2211       4.3852      6.27721     0.290108      79.2095      4.08204
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.76466e-12  6.69706e-32  7.34541e-33
      low eigenvalue method done, cpu time[sec] = 0.082742, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.7e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.09744e-32  2.80505e-33   8.2838e-35  5.30975e-34  1.37266e-35  9.36603e-36  1.07126e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.639, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.715717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.436, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            188.337       19.999      3.94668      5.64949     0.261097      71.2885      3.67384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075715, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006605, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082425, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.58299e-12  6.15992e-32  6.54579e-33
      low eigenvalue method done, cpu time[sec] = 0.082777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.16e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -8.15917e-33 -1.54135e-33 -4.56357e-35 -2.28689e-34 -6.25949e-36  -3.9136e-35 -9.17628e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6336, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         7.56549e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41383, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.558      13.3326      2.63112      3.76632     0.174065      47.5257      2.44922
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075916, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006612, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082645, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.6301e-12  4.43337e-32  4.12175e-33
      low eigenvalue method done, cpu time[sec] = 0.082984, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.43e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.97728e-33  1.55597e-33  4.14851e-35  1.70255e-34  5.18849e-36  5.04173e-35 -1.94015e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6257, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.00873e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.717469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42584, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.1687      9.99948      1.97334      2.82474     0.130549      35.6443      1.83692
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075696, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082416, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.9497e-12  3.48693e-32  2.91438e-33
      low eigenvalue method done, cpu time[sec] = 0.082751, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.39e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.85732e-33 -1.30533e-34 -4.02801e-36 -2.14829e-34 -3.88152e-36  5.94699e-35  8.69691e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6248, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.26092e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15791, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             75.335      7.99958      1.57867      2.25979     0.104439      28.5154      1.46953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006613, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082505, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.41309e-12  2.88351e-32  2.20383e-33
      low eigenvalue method done, cpu time[sec] = 0.082841, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.88e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.41219e-34  2.94744e-34  2.93708e-36  7.36381e-36  3.38853e-37  5.82262e-36 -2.59026e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3589, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43089, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.7791      6.66632      1.31556      1.88316    0.0870324      23.7628      1.22461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075833, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006603, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082557, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.72511e-12  2.46309e-32  1.74191e-33
      low eigenvalue method done, cpu time[sec] = 0.082888, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.63e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.72337e-33  8.83524e-34  2.21421e-35  6.03816e-35  2.15533e-36  1.83707e-35  3.76226e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6282, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.76528e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.713968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43831, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.8107      5.71399      1.12762      1.61414    0.0745992      20.3682      1.04967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006625, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082551, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34043e-13  2.15242e-32   1.4209e-33
      low eigenvalue method done, cpu time[sec] = 0.082881, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.8e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.42054e-34 -8.17163e-35 -4.57619e-36 -8.00467e-35  -1.5379e-36  4.97112e-36 -4.66045e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6346, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.01746e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.717576, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43396, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.0844      4.99974     0.986669      1.41237    0.0652743      17.8221     0.918459
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076098, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006622, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.4765e-12  1.91299e-32  1.18683e-33
      low eigenvalue method done, cpu time[sec] = 0.083167, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.15e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   3.4349e-34 -5.90698e-35  1.34244e-36  1.94203e-35  4.16936e-37  3.49844e-37 -4.41154e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6502, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 19175 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009153
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.494653
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.46492
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.442374
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.99313
         W1 Well: minimal relaxation eigenvalue = 0.0266036
         W1 Well: maximal relaxation eigenvalue = 2.49993
         W1 Well:       grid size = 584
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31632 1/cm
         B1 Barrier:        grid size = 221
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 218
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 486
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1427 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4646 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.78573, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31632 -23107 4.86e+05 1.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 3.74e+13
         B2    210 4.01e+12
         B3  -4662    8e+11
         B4  -6228 1.14e+12
         B5 -23107 5.28e+10
         B6   1428 1.44e+13
         B7   4647 7.61e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.87e+15  9.69e+15  1.93e+11  2.25e+09  6.11e-13  5.53e+18  8.45e+22
          R  2.05e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  1.03e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  5.18e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  4.44e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4  1.64e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  1.81e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  1.18e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.95e+12  3.87e+12  7.72e+07     9e+05  2.44e-16  2.21e+15  3.37e+19
          R  5.14e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  2.59e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2   1.3e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  1.11e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4   4.1e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  4.53e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  2.96e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.79612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+08
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.69062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.21123, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2014.82      216.447      43.1295      61.3981      2.84522      777.858      41.0342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072261, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006459, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079266, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.42147e-11  1.80471e-30  3.01185e-31
      low eigenvalue method done, cpu time[sec] = 0.079595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.8e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.83903e-31  7.39769e-32  2.22882e-33  2.11182e-32   4.8439e-34 -7.05757e-35 -2.76864e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32054, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33891, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            671.606      72.1489      14.3765       20.466     0.948408      259.286      13.6781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072067, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006351, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07897, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.03612e-11  8.59118e-31  1.26452e-31
      low eigenvalue method done, cpu time[sec] = 0.079305, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.59e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.68425e-32  3.76042e-32  1.13512e-33  1.01407e-32  2.35889e-34 -4.36955e-35 -2.27598e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4285, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.48132e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33652, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            402.963      43.2894       8.6259      12.2796     0.569045      155.572      8.20683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071908, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078793, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.2595e-12  5.94468e-31  7.90966e-32
      low eigenvalue method done, cpu time[sec] = 0.079119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.94e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.38738e-32  1.79525e-32  5.16356e-34  3.27761e-33  8.47553e-35  1.68338e-34 -2.63818e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4312, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.47385e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.68952, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.38959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            287.831       30.921      6.16136      8.77115      0.40646      111.123      5.86202
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078932, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.56589e-12  4.61954e-31  5.66582e-32
      low eigenvalue method done, cpu time[sec] = 0.079255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.03655e-32  1.49857e-32  4.55249e-34  3.53137e-33  8.53156e-35  8.93615e-35 -2.56429e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4843, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.46638e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.690228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.39151, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            223.869      24.0496      4.79217      6.82201     0.316136      86.4287      4.55935
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072252, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079202, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.87053e-13   3.8065e-31  4.35862e-32
      low eigenvalue method done, cpu time[sec] = 0.079541, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.14023e-32  9.64005e-33  2.71394e-34    2.059e-33  5.06469e-35  3.99742e-35  5.74197e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.39205, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            201.482      21.6447      4.31295      6.13981     0.284522      77.7858      4.10342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071989, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078913, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.6877e-12  3.50507e-31  3.89157e-32
      low eigenvalue method done, cpu time[sec] = 0.079238, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.32e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.05915e-34  2.01001e-33  6.69523e-35  7.61689e-34   1.6539e-35  6.69318e-36  1.49633e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4869, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         7.44396e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.686466, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            134.321      14.4298       2.8753       4.0932     0.189682      51.8572      2.73561
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071917, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078823, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.5274e-13  2.53288e-31  2.46891e-32
      low eigenvalue method done, cpu time[sec] = 0.07915, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.53e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.74e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.9522e-32   3.8402e-33  1.07838e-34  3.82766e-34   1.2381e-35  9.17059e-35   2.6618e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.92528e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.688212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            100.741      10.8223      2.15648       3.0699     0.142261      38.8929      2.05171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071944, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.95282e-13  1.99748e-31  1.75524e-32
      low eigenvalue method done, cpu time[sec] = 0.079176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.31e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.61284e-32  6.60267e-33  1.79695e-34  1.04335e-33  2.78844e-35  3.85027e-35 -1.83637e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4468, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.24066e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.690504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            80.5927      8.65787      1.72518      2.45592     0.113809      31.1143      1.64137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071997, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078891, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.12445e-13  1.65504e-31  1.33301e-32
      low eigenvalue method done, cpu time[sec] = 0.079213, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.92746e-33  3.42901e-34  2.77729e-35  3.16937e-34  6.90835e-36  1.02428e-34 -2.80805e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.277, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.690618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.39495, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.1606      7.21489      1.43765       2.0466    0.0948408      25.9286      1.36781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071985, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006349, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078884, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.03705e-12  1.41587e-31  1.05734e-32
      low eigenvalue method done, cpu time[sec] = 0.079207, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.16394e-32  2.36423e-33  6.10804e-35  2.47741e-34  7.71143e-36  1.77394e-35  -6.4244e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3233, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.73692e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41606, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.5662      6.18419      1.23227      1.75423    0.0812921      22.2245       1.1724
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071994, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078913, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.73636e-13  1.23879e-31  8.65075e-33
      low eigenvalue method done, cpu time[sec] = 0.079247, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.39057e-33  3.31151e-34  9.39568e-36  6.60179e-35  1.76583e-36 -2.41274e-35 -5.60919e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5274, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.98506e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.690505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35351, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.3704      5.41117      1.07824      1.53495    0.0711306      19.4464      1.02585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071979, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006369, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078893, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.34906e-12   1.1021e-31  7.24452e-33
      low eigenvalue method done, cpu time[sec] = 0.079221, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    4.288e-33  1.12727e-33  3.46421e-35  1.95007e-34  5.16607e-36  1.40423e-35  1.44256e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4489, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 19453 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008898
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.510388
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.460328
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.65029
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.91973
         W1 Well: minimal relaxation eigenvalue = 0.0262767
         W1 Well: maximal relaxation eigenvalue = 1.26073
         W1 Well:       grid size = 580
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 222
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -82 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6242 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 484
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.85163, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23139 4.75e+05 1.18e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -82 4.15e+13
         B2    182 4.51e+12
         B3  -4658 9.07e+11
         B4  -6242 1.28e+12
         B5 -23139 5.97e+10
         B6   1501 1.63e+13
         B7   4670 8.81e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.96e+14  1.77e+15  4.54e+10  5.76e+08  4.05e-13  9.45e+17  1.23e+22
          R  1.12e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  5.66e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2   2.2e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  1.74e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  2.47e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  1.06e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6   8.1e-23  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.6e+11  7.11e+11  1.82e+07  2.32e+05  1.63e-16   3.8e+14  4.96e+18
          R  2.77e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  1.41e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  5.48e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  4.31e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  6.13e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  2.63e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  2.01e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.86209, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+08
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.24578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2152.66      233.957      47.0622      66.6355      3.09607      847.344        45.73
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071093, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078026, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.70929e-11  9.24414e-30  1.59276e-30
      low eigenvalue method done, cpu time[sec] = 0.078348, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.24e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-31         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.79668e-31  3.61666e-31  1.09909e-32  9.19674e-32  2.15797e-33  8.47168e-34   -1.749e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34964, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.30832, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            717.553      77.9857      15.6874      22.2118      1.03202      282.448      15.2433
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04963e-11  4.46371e-30  6.79184e-31
      low eigenvalue method done, cpu time[sec] = 0.077736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.46e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-31         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   5.2679e-31  1.58277e-31  4.42428e-33  3.05378e-32  7.60982e-34  8.28684e-34 -6.02641e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.44242e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.32704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            430.532      46.7914      9.41244      13.3271     0.619214      169.469        9.146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070946, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006294, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077356, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76972e-11  3.10716e-30  4.28282e-31
      low eigenvalue method done, cpu time[sec] = 0.077675, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.11e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.16e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.35114e-31  9.41827e-32  2.71214e-33  1.89972e-32  4.67237e-34  9.27428e-34 -2.40018e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4247, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.41939e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.32388, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            307.523      33.4225      6.72317      9.51936     0.442296      121.049      6.53286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070972, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006399, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077511, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05669e-11  2.42349e-30  3.08512e-31
      low eigenvalue method done, cpu time[sec] = 0.07784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.37e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.57011e-31  4.18834e-32  1.18032e-33  6.87654e-33  1.79491e-34  5.64826e-34 -2.65342e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.447, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.39636e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.686973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.3195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            239.184      25.9952      5.22913      7.40395     0.344008      94.1493      5.08111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07083, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.9263e-12  2.00224e-30  2.38363e-31
      low eigenvalue method done, cpu time[sec] = 0.077522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.79592e-31  4.03395e-32  1.15569e-33  6.13852e-33  1.67682e-34  6.63428e-34 -6.45558e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4241, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.31641, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            215.266      23.3957      4.70622      6.66355     0.309607      84.7344        4.573
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070961, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077351, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.52263e-13  1.84567e-30  2.13214e-31
      low eigenvalue method done, cpu time[sec] = 0.077668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.85e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67324e-31  4.04193e-32  1.11593e-33  6.14925e-33  1.66556e-34  4.94228e-34 -1.25096e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4172, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         7.32726e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.685492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            143.511      15.5971      3.13748      4.44237     0.206405      56.4896      3.04867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077282, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.31851e-12  1.33902e-30  1.36256e-31
      low eigenvalue method done, cpu time[sec] = 0.0776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.52e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.28126e-32  1.74893e-32  5.21795e-34  2.62539e-33  7.28303e-35  4.00532e-34  1.90076e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4525, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.76968e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36304, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.633      11.6979      2.35311      3.33178     0.154804      42.3672       2.2865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72013e-12  1.05875e-30  9.73848e-32
      low eigenvalue method done, cpu time[sec] = 0.077646, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.18634e-32  1.88877e-32  5.75222e-34  3.30534e-33  8.71482e-35  4.93629e-34  4.95429e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4656, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.22121e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35233, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.1063      9.35829      1.88249      2.66542     0.123843      33.8938       1.8292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071156, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006295, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077578, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.70778e-12  8.78925e-31  7.42673e-32
      low eigenvalue method done, cpu time[sec] = 0.077916, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.79e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.31e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.34617e-32  1.12153e-32  2.90725e-34  1.96501e-33  4.95214e-35 -8.15111e-35 -3.82648e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.682719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71.7553      7.79857      1.56874      2.22118     0.103202      28.2448      1.52433
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070832, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006274, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077221, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.8418e-15  7.53033e-31  5.91117e-32
      low eigenvalue method done, cpu time[sec] = 0.077539, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.53e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.98e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.64989e-32  8.14962e-33  2.49114e-34  1.45156e-33   3.8096e-35  1.69704e-34 -8.86103e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4582, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.70969e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.33393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.5045      6.68449      1.34463      1.90387    0.0884592      24.2098      1.30657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070862, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006284, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077252, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.96384e-13  6.59648e-31  4.85048e-32
      low eigenvalue method done, cpu time[sec] = 0.077571, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.6e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.15364e-32  2.65608e-33  9.38398e-35  1.36565e-34  7.33191e-36  2.63374e-34  7.84266e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4324, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.95394e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.684076, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35684, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.8165      5.84893      1.17656      1.66589    0.0774018      21.1836      1.14325
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.070931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006295, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077345, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.49208e-12  5.87453e-31  4.07234e-32
      low eigenvalue method done, cpu time[sec] = 0.077664, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.87e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.23857e-32  8.85405e-33  2.90427e-34  1.17983e-33  3.58134e-35  4.01784e-34   4.8653e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4549, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 19731 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009612
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.47908
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.442515
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.357472
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.83284
         W1 Well: minimal relaxation eigenvalue = 0.0259495
         W1 Well: maximal relaxation eigenvalue = 1.21786
         W1 Well:       grid size = 570
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 220
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -69 1/cm
         B2 Barrier:        grid size = 217
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 271
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 288
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23109 1/cm => truncating
         B5 Barrier:        grid size = 476
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23109 1/cm
         B6 Barrier:        grid size = 203
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1461 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.49747, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23109 4.86e+05 1.25e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -69  4.6e+13
         B2    201 5.06e+12
         B3  -4658 1.03e+12
         B4  -6189 1.45e+12
         B5 -23109 6.74e+10
         B6   1462 1.85e+13
         B7   4701 1.02e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.73e+14  3.38e+14  1.11e+10  1.53e+08  2.69e-13   1.7e+17   1.9e+21
          R  5.79e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  2.96e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  9.04e-11  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  6.55e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  3.72e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  5.88e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  5.25e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.11e+10  1.39e+11  4.55e+06  6.28e+04  1.11e-16  6.99e+13  7.84e+17
          R  1.41e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1   7.2e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2   2.2e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  1.59e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  9.04e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  1.43e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  1.28e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.50852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.659826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2297.15      252.567      51.2795      72.2238      3.36438      921.553      50.8535
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067584, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006355, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074471, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.39262e-11  4.47755e-29  7.94414e-30
      low eigenvalue method done, cpu time[sec] = 0.074787, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.48e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-30 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.11536e-30  2.03006e-30  6.18217e-32  5.38087e-31  1.25452e-32  4.12547e-33  2.51799e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25334, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.12663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            765.718      84.1889      17.0932      24.0746      1.12146      307.184      16.9512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067387, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005958, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073863, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5053e-11  2.19197e-29  3.43939e-30
      low eigenvalue method done, cpu time[sec] = 0.074175, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.69e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.40727e-30  7.40561e-31  2.13064e-32  1.54919e-31   3.8102e-33  4.98728e-33 -7.13016e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.40503e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.08288, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            459.431      50.5134      10.2559      14.4448     0.672876      184.311      10.1707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.52986e-12  1.53469e-29  2.18605e-30
      low eigenvalue method done, cpu time[sec] = 0.07444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.72239e-30  5.08625e-31  1.39433e-32  9.49195e-32  2.38161e-33  3.31066e-33  9.66805e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1105, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.36704e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.65986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            328.165       36.081      7.32565      10.3177     0.480626       131.65      7.26478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005925, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073901, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.61669e-11  1.20135e-29  1.58339e-30
      low eigenvalue method done, cpu time[sec] = 0.07421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.12e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.24818e-30    3.396e-31  9.42551e-33  5.98666e-32  1.53768e-33  3.43386e-33  3.23128e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.32905e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.1597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            255.239       28.063      5.69773      8.02487      0.37382      102.395      5.65039
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067409, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005948, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073886, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.97602e-13  9.95104e-30  1.22857e-30
      low eigenvalue method done, cpu time[sec] = 0.074211, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.95e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.16348e-31  2.15297e-31  6.17287e-33   4.0013e-32  1.02004e-33  2.65066e-33  2.31502e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1722, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.13973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            229.715      25.2567      5.12795      7.22238     0.336438      92.1553      5.08535
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067494, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073955, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.89348e-12   9.1826e-30  1.10094e-30
      low eigenvalue method done, cpu time[sec] = 0.074265, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.18e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.67286e-31  2.39026e-31  6.76047e-33  3.98572e-32  1.04979e-33  3.61106e-33  -3.3363e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1538, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.21509e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14617, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            153.144      16.8378      3.41864      4.81492     0.224292      61.4369      3.39023
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067434, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005977, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073936, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.25153e-12  6.68796e-30  7.08609e-31
      low eigenvalue method done, cpu time[sec] = 0.074244, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.69e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.87024e-31  1.08856e-31  3.35932e-33  2.00883e-32  5.24349e-34  2.53031e-33  3.29526e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.162, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.62012e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.858      12.6283      2.56398      3.61119     0.168219      46.0777      2.54267
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067473, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005945, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073955, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18334e-11  5.30183e-30  5.09102e-31
      low eigenvalue method done, cpu time[sec] = 0.074316, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.3e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.53818e-31  7.68556e-32  2.27442e-33   1.2099e-32  3.29493e-34  1.47068e-33 -1.33505e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.20251e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.654294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15376, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.8861      10.1027      2.05118      2.88895     0.134575      36.8621      2.03414
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006016, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.53487e-12  4.40974e-30  3.89848e-31
      low eigenvalue method done, cpu time[sec] = 0.074405, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.41e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.38644e-31   5.6171e-32  1.59675e-33  8.99205e-33  2.39948e-34  8.84988e-34  9.08504e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14231, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.5718      8.41889      1.70932      2.40746     0.112146      30.7184      1.69512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067435, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005937, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073895, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53425e-12  3.78374e-30  3.11346e-31
      low eigenvalue method done, cpu time[sec] = 0.074207, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.78e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.82e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.30751e-31  4.58521e-32  1.38154e-33  7.02084e-33  1.94393e-34  1.32809e-33 -1.40617e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1586, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.68352e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.1354, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             65.633      7.21619      1.46513      2.06354    0.0961251      26.3301      1.45296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067367, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005949, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073836, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.35992e-12  3.31852e-30  2.56217e-31
      low eigenvalue method done, cpu time[sec] = 0.074147, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.32e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.61e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.32176e-31  2.40687e-32  7.51095e-34  3.61384e-33  1.02288e-34   7.9057e-34 -1.86913e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1505, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.92402e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.11227, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.4288      6.31417      1.28199       1.8056    0.0841095      23.0388      1.27134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005956, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.073863, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.97556e-12  2.95831e-30  2.15654e-31
      low eigenvalue method done, cpu time[sec] = 0.074171, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.68e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.26701e-31  4.26415e-32  1.35739e-33  6.59998e-33  1.85151e-34  1.59527e-33  3.94311e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1282, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 20009 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008459
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.465319
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.429505
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.78462
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.63842
         W1 Well: minimal relaxation eigenvalue = 0.0256195
         W1 Well: maximal relaxation eigenvalue = 1.33435
         W1 Well:       grid size = 561
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 218
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 469
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23138 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1425 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.62677, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23138 4.75e+05 1.32e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46  5.1e+13
         B2    137 5.67e+12
         B3  -4646 1.16e+12
         B4  -6210 1.63e+12
         B5 -23138 7.61e+10
         B6   1426 2.09e+13
         B7   4646 1.18e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.55e+13  6.88e+13  2.85e+09  4.25e+07  1.82e-13  3.26e+16  3.15e+20
          R  2.82e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  1.45e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  3.51e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  2.35e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  5.51e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  3.07e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  3.17e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.49e+10  2.88e+10  1.19e+06  1.78e+04  7.61e-17  1.37e+13  1.32e+17
          R  6.73e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  3.47e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  8.38e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  5.61e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  1.31e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  7.32e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  7.56e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
   MasterEquation::set:  done, cpu time[sec] = 5.63768, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+08
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.642189, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2818, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2448.42      272.327      55.7967      78.1799      3.65103       1000.7      56.4339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06465, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005753, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0705, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46581e-12  2.04308e-28  3.72157e-29
      low eigenvalue method done, cpu time[sec] = 0.070812, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.45052e-29  9.53012e-30  2.84913e-31  2.43504e-30  5.71127e-32  2.22253e-32 -4.30554e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24444, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06793, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            816.139      90.7755      18.5989        26.06      1.21701      333.568      18.8113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064659, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005712, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.81747e-11  1.01342e-28  1.63493e-29
      low eigenvalue method done, cpu time[sec] = 0.070777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.13994e-29  3.62453e-30  1.01683e-31  7.45846e-31  1.82989e-32  1.77761e-32  8.79894e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0306, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.36906e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.641626, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09567, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            489.683      54.4653      11.1593       15.636     0.730206      200.141      11.2868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005724, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070396, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.5004e-11  7.13514e-29  1.04712e-29
      low eigenvalue method done, cpu time[sec] = 0.070695, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.14e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.45734e-30  2.14408e-30  6.00305e-32  4.04506e-31  1.01801e-32  1.61871e-32  1.52246e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87815, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.31668e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.11032, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            349.774      38.9038      7.97096      11.1686     0.521576      142.958      8.06198
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005711, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070313, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.30331e-11  5.60494e-29  7.62497e-30
      low eigenvalue method done, cpu time[sec] = 0.070611, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.6e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.86622e-30  1.57341e-30  4.48935e-32  2.89453e-31  7.38421e-33   1.6425e-32  1.11688e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0609, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.26431e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09121, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            272.046      30.2585      6.19964      8.68665      0.40567      111.189      6.27043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064508, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070293, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.41646e-12  4.65438e-29  5.94071e-30
      low eigenvalue method done, cpu time[sec] = 0.070592, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.65e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.49304e-30   1.1706e-30  3.27264e-32  1.99349e-31  5.18863e-33  1.32284e-32  4.72175e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.038, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09469, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            244.842      27.2327      5.57967      7.81799     0.365103       100.07      5.64339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070393, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.65037e-13  4.29938e-29  5.33296e-30
      low eigenvalue method done, cpu time[sec] = 0.070692, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.3e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.80204e-30  9.63433e-31  2.72416e-32  1.64218e-31  4.29072e-33  1.30889e-32 -1.95577e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75311, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.10718e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.393674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64479, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.228      18.1551      3.71978      5.21199     0.243402      66.7135      3.76226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064606, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005709, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.35859e-12  3.14332e-29  3.45646e-30
      low eigenvalue method done, cpu time[sec] = 0.070715, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.05e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.79163e-30  6.34898e-31  1.84051e-32  1.01304e-31  2.72604e-33  1.16749e-32 -3.85246e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3399, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.47624e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.638436, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07598, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.421      13.6163      2.78984      3.90899     0.182552      50.0351      2.82169
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070484, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60631e-13   2.4982e-29  2.49595e-30
      low eigenvalue method done, cpu time[sec] = 0.070785, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.4e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.92486e-30  4.23378e-31  1.25695e-32  6.97345e-32  1.87192e-33   9.5664e-33  6.79793e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0317, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.18453e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.639275, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.10113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            97.9367      10.8931      2.23187       3.1272     0.146041      40.0281      2.25736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.19141e-12  2.08177e-29  1.91898e-30
      low eigenvalue method done, cpu time[sec] = 0.07065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.33e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.86751e-30  4.06324e-31  1.21127e-32  6.63605e-32   1.7884e-33  9.79937e-33 -2.08082e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0293, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.62744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.02439, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.6139      9.07755      1.85989        2.606     0.121701      33.3568      1.88113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064481, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005726, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.9659e-12  1.78888e-29  1.53765e-30
      low eigenvalue method done, cpu time[sec] = 0.070613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.79e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.1091e-30  2.30057e-31  7.08606e-33  3.86224e-32  1.04315e-33  6.81133e-33  2.14602e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.95978, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.65834e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.638354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.08884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.9548      7.78076      1.59419      2.23371     0.104315      28.5915       1.6124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07037, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.37025e-12  1.57081e-29  1.26896e-30
      low eigenvalue method done, cpu time[sec] = 0.070672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.02e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.26003e-31  1.89341e-31  5.87962e-33  3.13991e-32   8.5239e-34  5.63007e-33  1.13354e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61508, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.89525e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.390405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58083, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.2104      6.80816      1.39492       1.9545    0.0912758      25.0176      1.41085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064495, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005709, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070304, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.35227e-12  1.40171e-29   1.0707e-30
      low eigenvalue method done, cpu time[sec] = 0.07061, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.08054e-30  2.04143e-31  6.52488e-33  3.25804e-32  9.06944e-34  8.19454e-33  2.48337e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27123, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 20287 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008725
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.465318
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.424613
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.403991
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.66328
         W1 Well: minimal relaxation eigenvalue = 0.02532
         W1 Well: maximal relaxation eigenvalue = 1.36927
         W1 Well:       grid size = 558
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31606 1/cm
         B1 Barrier:        grid size = 219
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23237 1/cm => truncating
         B5 Barrier:        grid size = 468
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23236 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4663 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.26732, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31606 -23236 4.43e+05 1.39e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 5.65e+13
         B2    200 6.36e+12
         B3  -4637 1.31e+12
         B4  -6217 1.83e+12
         B5 -23236 8.57e+10
         B6   1501 2.35e+13
         B7   4664 1.35e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.76e+12  1.49e+13  7.74e+08  1.25e+07  1.25e-13  6.68e+15  5.61e+19
          R  1.29e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1   6.7e-14      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  1.29e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  8.01e-08  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  7.98e+12  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5   1.5e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  1.78e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.29e+09  6.33e+09  3.28e+05  5.29e+03  5.31e-17  2.83e+12  2.38e+16
          R  3.04e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  1.58e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  3.05e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  0.000189  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  1.88e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  3.53e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6   4.2e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
   MasterEquation::set:  done, cpu time[sec] = 4.27844, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+08
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2606.65      293.287      60.6295      84.5213      3.95695      1085.01       62.501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71673e-10  8.84556e-28  1.65145e-28
      low eigenvalue method done, cpu time[sec] = 0.070626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.85e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-29  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.1023e-28  4.26061e-29  1.27436e-30  1.08902e-29  2.55286e-31  9.75378e-32   -6.728e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.28112, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630085, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.38762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            868.884      97.7623      20.2098      28.1738      1.31898      361.671      20.8337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06386, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.96959e-11   4.4439e-28  7.35928e-29
      low eigenvalue method done, cpu time[sec] = 0.070388, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.44e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-29  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.26192e-29  1.63151e-29  4.57401e-31  3.25993e-30  8.06224e-32  9.68816e-32  1.53648e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.33443e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.621246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84592, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             521.33      58.6574      12.1259      16.9043     0.791389      217.003      12.5002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069946, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.57714e-11  3.14587e-28  4.74861e-29
      low eigenvalue method done, cpu time[sec] = 0.070294, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.97e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.63098e-29   1.0273e-29  2.87201e-31  1.89982e-30  4.81101e-32  8.55755e-32  2.20397e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75872, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          3.2682e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630978, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95922, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            372.379      41.8981      8.66135      12.0745     0.565278      155.002      8.92871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06985, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80563e-11  2.47967e-28  3.47584e-29
      low eigenvalue method done, cpu time[sec] = 0.070149, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.28e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.53612e-29  6.60286e-30  1.86876e-31  1.16665e-30  3.00928e-32  7.48694e-32  -5.6656e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.88387, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.20197e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631124, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            289.628      32.5874      6.73661      9.39125     0.439661      120.557      6.94456
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063934, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005675, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070114, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.93908e-11  2.06422e-28  2.71895e-29
      low eigenvalue method done, cpu time[sec] = 0.070411, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.08997e-29  5.28758e-30  1.51059e-31  9.24578e-31  2.39891e-32  7.05855e-32 -2.84857e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87911, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            260.665      29.3287      6.06295      8.45213     0.395695      108.501       6.2501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063739, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069948, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.61016e-12   1.9087e-28  2.44499e-29
      low eigenvalue method done, cpu time[sec] = 0.070245, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.87137e-29  4.69241e-30  1.33036e-31  7.93666e-31  2.07887e-32  6.39292e-32  5.38985e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.91592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.00328e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.63084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99321, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.777      19.5525      4.04196      5.63475     0.263796      72.3343      4.16673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063615, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005684, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069795, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.16422e-12  1.40071e-28  1.59544e-29
      low eigenvalue method done, cpu time[sec] = 0.070099, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.27766e-29  2.96055e-30  8.63724e-32  4.94701e-31  1.31256e-32  5.39819e-32   1.8533e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.91765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          9.3377e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.632204, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15617, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            130.333      14.6643      3.03147      4.22606     0.197847      54.2507      3.12505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063743, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005751, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069976, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.39199e-12  1.11604e-28  1.15781e-29
      low eigenvalue method done, cpu time[sec] = 0.070284, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.83e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.30118e-30   2.0331e-30  6.05706e-32  3.33324e-31  8.96268e-33  4.52819e-32 -9.94753e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.16721e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.633919, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99431, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.266      11.7315      2.42518      3.38085     0.158278      43.4006      2.50004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063663, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06986, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.01229e-12  9.31741e-29  8.93656e-30
      low eigenvalue method done, cpu time[sec] = 0.070158, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.32e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.79025e-30  1.44532e-30  4.33577e-32  2.33209e-31  6.32342e-33  3.37759e-32 -1.48199e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.92341, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99109, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.8884      9.77623      2.02098      2.81738     0.131898      36.1671      2.08337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06384, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005681, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070017, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.19146e-13  8.01825e-29  7.18398e-30
      low eigenvalue method done, cpu time[sec] = 0.070317, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.02e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.03229e-30   1.2349e-30  3.76318e-32  1.96044e-31  5.37976e-33  3.54324e-32 -3.61984e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.9117, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.6341e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99347, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.4757      8.37962      1.73227      2.41489     0.113056      31.0004      1.78574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063651, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005687, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069837, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78836e-12  7.04922e-29  5.94505e-30
      low eigenvalue method done, cpu time[sec] = 0.070137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.05e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.76888e-30   9.3678e-31  2.88441e-32  1.42684e-31   3.9906e-33   3.0501e-32   1.4985e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.9166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.86754e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65.1663      7.33217      1.51574      2.11303    0.0989237      27.1253      1.56252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06364, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005675, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.069821, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.27552e-12  6.29664e-29  5.02826e-30
      low eigenvalue method done, cpu time[sec] = 0.070119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.87532e-30  7.66001e-31  2.39982e-32  1.25836e-31  3.43847e-33  2.32317e-32  4.32763e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87907, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 20565 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008499
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.452901
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.412099
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.381127
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.53182
         W1 Well: minimal relaxation eigenvalue = 0.0250144
         W1 Well: maximal relaxation eigenvalue = 1.27881
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31590 1/cm
         B1 Barrier:        grid size = 217
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 139 1/cm
         B3 Barrier:        grid size = 265
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4610 1/cm
         B4 Barrier:        grid size = 282
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 460
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23134 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.08253, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31590 -23134 4.77e+05 1.47e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 6.25e+13
         B2    140 7.11e+12
         B3  -4610 1.48e+12
         B4  -6225 2.06e+12
         B5 -23134 9.65e+10
         B6   1470 2.65e+13
         B7   4700 1.56e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.78e+12  3.39e+12  2.19e+08   3.8e+06  8.68e-14  1.43e+15  1.05e+19
          R  5.63e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  2.95e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  4.57e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  2.63e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  1.15e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  6.98e-16   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  9.51e-20  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.66e+08  1.46e+09  9.44e+04  1.64e+03  3.75e-17  6.19e+11  4.54e+15
          R   1.3e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  6.83e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  1.06e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3   0.00061  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  2.67e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.62e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6   2.2e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
   MasterEquation::set:  done, cpu time[sec] = 4.09349, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.613809, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3391, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2772.06      315.493      65.7939       91.266      4.28307      1174.71       69.086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06092, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066438, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27503e-11   3.6335e-27  6.93812e-28
      low eigenvalue method done, cpu time[sec] = 0.066726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.09e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.63701e-28  1.78023e-28  5.33781e-30  4.56049e-29   1.0687e-30  4.51904e-31  2.80862e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26078, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.605128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            924.019      105.164      21.9313       30.422      1.42769       391.57      23.0287
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005416, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.22483e-11  1.84778e-27   3.1344e-28
      low eigenvalue method done, cpu time[sec] = 0.066776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.62e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.28545e-28  7.09951e-29  1.97925e-30  1.39993e-29  3.47086e-31   4.1458e-31  7.07639e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.76924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.30105e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.614544, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            554.411      63.0985      13.1588      18.2532     0.856613      234.942      13.8172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005433, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.67823e-12  1.31492e-27  2.03711e-28
      low eigenvalue method done, cpu time[sec] = 0.066572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52648e-28  4.27553e-29    1.196e-30  7.83918e-30  1.99036e-31   3.8044e-31   5.9435e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60631, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.22147e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612424, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            396.008      45.0704      9.39913       13.038     0.611866      167.816      9.86943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060807, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066295, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.90969e-12  1.03989e-27  1.49863e-28
      low eigenvalue method done, cpu time[sec] = 0.066597, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.1321e-28  2.96865e-29  8.36653e-31  5.21681e-30  1.34669e-31  3.39242e-31  5.64165e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.77261, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.14189e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.615393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89473, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            308.006      35.0547      7.31043      10.1407     0.475896      130.523      7.67623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060726, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066234, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.04192e-11  8.67741e-28  1.17688e-28
      low eigenvalue method done, cpu time[sec] = 0.066523, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.68e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.00815e-29  2.25375e-29  6.40792e-31  3.85194e-30  1.00628e-31  3.05993e-31  4.25509e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75724, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612435, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91825, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            277.206      31.5493      6.57939       9.1266     0.428307      117.471       6.9086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00543, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066225, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4404e-11  8.03155e-28  1.06006e-28
      low eigenvalue method done, cpu time[sec] = 0.066514, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.03e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.1843e-29  1.98398e-29  5.68974e-31  3.35245e-30  8.81896e-32  2.96118e-31 -4.58575e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.77563, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         6.90316e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.915, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            184.804      21.0328      4.38626       6.0844     0.285538      78.3139      4.60574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060819, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005388, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89977e-12  5.91562e-28  6.96316e-29
      low eigenvalue method done, cpu time[sec] = 0.066593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.92e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.39811e-29  1.22434e-29  3.57456e-31  1.99668e-30  5.34781e-32  2.37337e-31  3.72063e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73703, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.20421e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.502078, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.7447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.603      15.7746       3.2897       4.5633     0.214153      58.7354       3.4543
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.38537e-12  4.72506e-28  5.07771e-29
      low eigenvalue method done, cpu time[sec] = 0.06687, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.73e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.03881e-29  8.65734e-30  2.58576e-31  1.39603e-30  3.78229e-32  2.02793e-31 -1.72459e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.15053e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.6052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80878, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.882      12.6197      2.63176      3.65064     0.171323      46.9883      2.76344
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060815, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005417, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066327, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37663e-13  3.95203e-28   3.9343e-29
      low eigenvalue method done, cpu time[sec] = 0.066619, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.95e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.89e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.16506e-29  6.58635e-30  1.99403e-31  1.05365e-30   2.8747e-32  1.77562e-31  3.45234e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6413, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.604279, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.4019      10.5164      2.19313       3.0422     0.142769       39.157      2.30287
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00544, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066322, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60957e-12  3.40591e-28   3.1728e-29
      low eigenvalue method done, cpu time[sec] = 0.066614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.41e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.52e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.51982e-29  5.07119e-30  1.56096e-31  8.05645e-31  2.21661e-32  1.56493e-31  5.96068e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.66111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.61074e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9093, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            79.2016      9.01408      1.87983       2.6076     0.122373      33.5631      1.97389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060783, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066289, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40618e-12  2.99785e-28  2.63276e-29
      low eigenvalue method done, cpu time[sec] = 0.066626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     3e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.5e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.14884e-29  4.23131e-30  1.31742e-31    6.698e-31  1.85085e-32   1.4239e-31   6.1743e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75023, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.84084e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.60294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.3014      7.88732      1.64485      2.28165     0.107077      29.3677      1.72715
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.060786, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005453, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066334, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.85188e-12  2.68045e-28  2.23204e-29
      low eigenvalue method done, cpu time[sec] = 0.066621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.68e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.71e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.77765e-29  3.41609e-30  1.07154e-31  5.33468e-31  1.48689e-32  1.19698e-31  2.44901e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.75705, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 20843 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009222
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.397915
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.400914
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.402594
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.46152
         W1 Well: minimal relaxation eigenvalue = 0.0247344
         W1 Well: maximal relaxation eigenvalue = 2.06722
         W1 Well:       grid size = 541
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 215
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 213
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4668 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6220 1/cm
         B5 Barrier: nonpositive number of states at -23195 1/cm => truncating
         B5 Barrier:        grid size = 454
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23195 1/cm
         B6 Barrier:        grid size = 200
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.97462, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23195 4.56e+05 1.55e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  6.9e+13
         B2    182 7.95e+12
         B3  -4668 1.67e+12
         B4  -6220 2.31e+12
         B5 -23195 1.09e+11
         B6   1444 2.98e+13
         B7   4645 1.79e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.24e+11  8.05e+11   6.4e+07  1.19e+06  6.04e-14  3.22e+14  2.07e+18
          R  2.36e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  1.24e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  1.56e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3  8.38e-07  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  1.65e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  3.11e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  4.83e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.88e+08  3.57e+08  2.83e+04       529  2.68e-17  1.43e+11  9.17e+14
          R  5.32e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1   2.8e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  3.53e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3   0.00189  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  3.73e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  7.01e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  1.09e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 3.98465, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+08
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593435, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28438, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2944.74      339.007      71.3064      98.4325      4.63036      1270.02      76.2215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058492, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26087e-10  1.42982e-26  2.79014e-27
      low eigenvalue method done, cpu time[sec] = 0.064108, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.54e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.87025e-27  7.10892e-28  2.12317e-29  1.79829e-28  4.22472e-30  1.89816e-30  1.47231e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08365, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.594119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9044, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            981.581      113.002      23.7688      32.8108      1.54345      423.339      25.4072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05871, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064037, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.70159e-11  7.35833e-27  1.27768e-27
      low eigenvalue method done, cpu time[sec] = 0.064325, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.36e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   9.1982e-28  2.82465e-28  7.90844e-30  5.56626e-29  1.38185e-30  1.77201e-30  5.08177e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71928, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.26887e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.594401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80547, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            588.949      67.8014      14.2613      19.6865     0.926072      254.004      15.2443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058411, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005202, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063707, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.94151e-11  5.26337e-27  8.36296e-28
      low eigenvalue method done, cpu time[sec] = 0.063988, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.26e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.23654e-28  1.72875e-28  4.84886e-30  3.15807e-29  8.03645e-31  1.60335e-30  2.42724e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.43068, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.17641e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.594937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78785, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            420.678      48.4295      10.1866      14.0618      0.66148      181.431      10.8888
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058392, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005227, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063707, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.15137e-11  4.17608e-27  6.18283e-28
      low eigenvalue method done, cpu time[sec] = 0.063996, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.65627e-28  1.21156e-28  3.42402e-30  2.12462e-29  5.49253e-31  1.42267e-30  1.34646e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.58761, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.08396e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            327.194      37.6674      7.92294      10.9369     0.514484      141.113      8.46905
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058398, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005207, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063692, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.59733e-12  3.49299e-27  4.87402e-28
      low eigenvalue method done, cpu time[sec] = 0.063976, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.64e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.76101e-28   9.2871e-29  2.65394e-30  1.58388e-29  4.14711e-31  1.32821e-30  1.07159e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62786, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593271, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            294.474      33.9007      7.13064      9.84325     0.463036      127.002      7.62215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058435, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005188, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063713, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.83329e-11  3.23615e-27  4.39745e-28
      low eigenvalue method done, cpu time[sec] = 0.064002, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     8e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.39551e-28  8.19276e-29  2.35126e-30    1.376e-29  3.62687e-31  1.26995e-30  6.53423e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1          6.8066e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592969, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            196.316      22.6005      4.75376      6.56217     0.308691      84.6679      5.08143
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058347, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00518, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.57625e-12  2.39226e-27  2.90731e-28
      low eigenvalue method done, cpu time[sec] = 0.063909, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.92e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.29394e-28  5.16408e-29  1.51613e-30  8.46086e-30  2.26603e-31  1.03359e-30  8.42148e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.07547e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80885, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            147.237      16.9503      3.56532      4.92162     0.231518      63.5009      3.81107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058517, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063858, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.29185e-11   1.9155e-27  2.13019e-28
      low eigenvalue method done, cpu time[sec] = 0.064144, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.74e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67436e-28  3.55223e-29  1.06455e-30  5.68626e-30  1.54625e-31  8.75402e-31  1.31754e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.13443e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             117.79      13.5603      2.85226       3.9373     0.185214      50.8007      3.04886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005171, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06365, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7808e-12  1.60507e-27  1.65674e-28
      low eigenvalue method done, cpu time[sec] = 0.063927, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.31274e-28  2.69421e-29   8.2101e-31   4.3036e-30   1.1776e-31  7.50592e-31  1.84161e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.60689, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593643, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.1581      11.3002      2.37688      3.28108     0.154345      42.3339      2.54072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.35828e-12  1.38527e-27  1.34024e-28
      low eigenvalue method done, cpu time[sec] = 0.063924, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.07928e-28  2.14021e-29  6.61734e-31  3.36876e-30  9.31385e-32  6.80975e-31  1.93245e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55644, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.58821e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592691, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79915, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            84.1355      9.68591      2.03733      2.81236     0.132296      36.2862      2.17776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.62652e-12  1.22075e-27  1.11509e-28
      low eigenvalue method done, cpu time[sec] = 0.064061, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.02455e-29  1.75249e-29  5.46871e-31  2.74251e-30  7.62241e-32  5.86791e-31  1.07894e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.81509e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.594411, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.6186      8.47517      1.78266      2.46081     0.115759      31.7504      1.90554
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063647, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.78943e-12  1.09259e-27  9.47569e-29
      low eigenvalue method done, cpu time[sec] = 0.063934, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.74819e-29  1.46523e-29  4.64354e-31  2.29957e-30  6.41805e-32  5.39072e-31  1.46168e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62077, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 21121 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009294
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.435672
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.396019
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.302944
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.39596
         W1 Well: minimal relaxation eigenvalue = 0.0244443
         W1 Well: maximal relaxation eigenvalue = 1.33848
         W1 Well:       grid size = 538
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 216
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -47 1/cm
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 148 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 452
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.83424, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23175 4.63e+05 1.63e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -47 7.62e+13
         B2    149 8.87e+12
         B3  -4653 1.88e+12
         B4  -6221 2.59e+12
         B5 -23175 1.22e+11
         B6   1423 3.34e+13
         B7   4657 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e+11  2.05e+11  1.99e+07  3.98e+05  4.35e-14  7.75e+13   4.4e+17
          R  9.22e-12         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  4.89e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  5.02e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3  2.51e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4   2.3e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  1.29e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  2.28e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.83e+07   9.1e+07  8.86e+03       177  1.93e-17  3.45e+10  1.96e+14
          R  2.07e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1   1.1e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  0.000113  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3   0.00565  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  5.17e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5   2.9e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  5.11e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
   MasterEquation::set:  done, cpu time[sec] = 3.84455, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3124.97       363.88      77.1808       106.04      4.99983      1371.17      83.9408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05768, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005173, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062945, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.48667e-11  5.32179e-26  1.05815e-26
      low eigenvalue method done, cpu time[sec] = 0.063226, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-27         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.14791e-27  2.69965e-27  8.04301e-29  6.77706e-28  1.59444e-29  7.55343e-30  9.12543e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58584, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71432, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1041.66      121.293      25.7269      35.3466      1.66661      457.058      27.9803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057854, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.3278e-11  2.76986e-26  4.90808e-27
      low eigenvalue method done, cpu time[sec] = 0.063489, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.77e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.5748e-27  1.08918e-27  3.04633e-29  2.13121e-28  5.30084e-30  7.10777e-30  4.45463e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50666, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.23781e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            624.994       72.776      15.4362       21.208     0.999966      274.235      16.7882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057589, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005165, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.08904e-14  1.99101e-26  3.23438e-27
      low eigenvalue method done, cpu time[sec] = 0.063127, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.87e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.43231e-27  6.68952e-28  1.87452e-29  1.20987e-28  3.08774e-30  6.42947e-30  7.60265e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49813, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.13293e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.583682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.71929, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            446.424      51.9829      11.0258      15.1485     0.714261      195.882      11.9915
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005165, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062804, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18215e-11  1.58466e-26  2.40259e-27
      low eigenvalue method done, cpu time[sec] = 0.06309, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.58e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.83627e-27  4.72253e-28  1.33632e-29  8.20477e-29  2.12845e-30  5.83077e-30  7.29212e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50017, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.02805e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.588342, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72158, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            347.219      40.4311      8.57564      11.7822     0.555536      152.353      9.32676
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062757, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.19793e-11  1.32847e-26  1.90099e-27
      low eigenvalue method done, cpu time[sec] = 0.063036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46876e-27  3.60226e-28  1.03069e-29   6.1173e-29  1.60476e-30   5.3013e-30  5.27746e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50565, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.588445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72285, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            312.497       36.388      7.71808       10.604     0.499983      137.117      8.39408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062747, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.78894e-12  1.23195e-26  1.71783e-27
      low eigenvalue method done, cpu time[sec] = 0.063026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.01e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.33882e-27  3.21029e-28  9.23935e-30  5.39084e-29  1.42223e-30  5.16039e-30  6.76535e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50234, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         6.71342e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72463, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            208.331      24.2587      5.14539      7.06932     0.333322      91.4116      5.59605
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057549, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062806, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.67773e-12  9.13896e-27  1.14285e-27
      low eigenvalue method done, cpu time[sec] = 0.063092, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.14e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   9.0823e-28  2.01776e-28  5.94486e-30  3.28395e-29  8.82685e-31  4.22382e-30  4.79233e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50336, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.95123e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            156.249       18.194      3.85904      5.30199     0.249991      68.5587      4.19704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005178, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.3967e-12  7.33518e-27  8.41227e-28
      low eigenvalue method done, cpu time[sec] = 0.063086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.34e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.68886e-28  1.41036e-28  4.24812e-30  2.26795e-29  6.16705e-31  3.58332e-30  6.97951e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50529, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1          1.1189e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.69887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.999      14.5552      3.08723      4.24159     0.199993      54.8469      3.35763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057584, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005179, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062861, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.58536e-12  6.15743e-27  6.56651e-28
      low eigenvalue method done, cpu time[sec] = 0.063142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.16e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.24791e-28  1.06504e-28  3.25369e-30  1.68416e-29   4.6296e-31  3.06928e-30  5.37831e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.49092, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72004, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.166      12.1293      2.57269      3.53466     0.166661      45.7058      2.79803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062862, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.58494e-12  5.32177e-27  5.32821e-28
      low eigenvalue method done, cpu time[sec] = 0.063143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.30443e-28  8.47546e-29  2.62645e-30   1.3321e-29  3.68773e-31  2.70969e-30  7.46957e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32948, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.56646e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72589, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.2849      10.3966      2.20517      3.02971     0.142852      39.1764      2.39831
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005192, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.50647e-12  4.69518e-27   4.4446e-28
      low eigenvalue method done, cpu time[sec] = 0.063093, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.7e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.60396e-28  6.93419e-29  2.17621e-30  1.08705e-29   3.0249e-31  2.42857e-30  4.68813e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.5058, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.79025e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.72524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78.1243        9.097      1.92952      2.65099     0.124996      34.2793      2.09852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057492, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062748, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.26979e-12   4.2064e-27  3.78544e-28
      low eigenvalue method done, cpu time[sec] = 0.063026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.21e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.1019e-28  5.83764e-29  1.85092e-30  9.08982e-30  2.54505e-31  2.19495e-30  5.81488e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.50756, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 21399 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009925
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.425176
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.383799
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.319175
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.30705
         W1 Well: minimal relaxation eigenvalue = 0.0241683
         W1 Well: maximal relaxation eigenvalue = 1.32302
         W1 Well:       grid size = 530
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 260
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 276
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6201 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 445
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.74179, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23101 4.88e+05 1.72e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  8.4e+13
         B2    200 9.89e+12
         B3  -4601 2.12e+12
         B4  -6201 2.89e+12
         B5 -23101 1.37e+11
         B6   1500 3.75e+13
         B7   4700 2.34e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.85e+10  5.35e+10  6.33e+06  1.35e+05  3.11e-14  1.93e+13  9.66e+16
          R   3.5e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  1.87e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  1.58e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3  7.39e-06  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  3.22e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  5.19e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  1.04e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.3e+07  2.43e+07  2.88e+03      61.5  1.41e-17  8.75e+09  4.39e+13
          R   7.7e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  4.11e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  0.000347  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3    0.0163  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  7.08e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  1.14e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  2.28e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
   MasterEquation::set:  done, cpu time[sec] = 3.75186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+08
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27786, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3312.83      390.163      83.4183      114.107       5.3925      1478.41      92.2795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005012, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71316e-10  1.90621e-25  3.86002e-26
      low eigenvalue method done, cpu time[sec] = 0.060673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.61e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.60952e-26  9.76787e-27  2.90474e-28  2.43171e-27  5.73162e-29  2.88969e-29  2.82795e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.9996, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569095, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1104.28      130.054      27.8061      38.0358       1.7975      492.804      30.7598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055246, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060285, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34686e-11  1.00315e-25  1.81336e-26
      low eigenvalue method done, cpu time[sec] = 0.060556, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.32549e-26  4.00088e-27  1.11943e-28  7.77526e-28  1.93827e-29  2.73118e-29  1.69305e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32636, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.20781e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            662.566      78.0327      16.6837      22.8215       1.0785      295.682      18.4559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055479, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005027, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060616, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2346e-11  7.24576e-26  1.20302e-26
      low eigenvalue method done, cpu time[sec] = 0.060904, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.25e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.04643e-27  2.46479e-27  6.92189e-29  4.44268e-28  1.13581e-29  2.47601e-29  2.30197e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33968, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.09093e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.570956, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.6037, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            473.261      55.7376      11.9169       16.301     0.770356      211.202      13.1828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055215, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7498e-11  5.78479e-26  8.97828e-27
      low eigenvalue method done, cpu time[sec] = 0.060517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.78e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.85533e-27  1.74785e-27   4.9591e-29  3.02756e-28  7.86797e-30  2.24449e-29  2.52468e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32589, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.97405e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568774, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60992, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            368.092      43.3515       9.2687      12.6786     0.599166      164.268      10.2533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055114, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004958, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060162, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.76225e-12  4.86053e-26  7.12972e-27
      low eigenvalue method done, cpu time[sec] = 0.060435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.51056e-27  1.33723e-27   3.8373e-29  2.26063e-28   5.9452e-30  2.05313e-29   2.4517e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33055, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.570009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            331.283      39.0163      8.34183      11.4107      0.53925      147.841      9.22795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055182, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004957, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.77369e-12  4.51156e-26   6.4528e-27
      low eigenvalue method done, cpu time[sec] = 0.060502, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.01053e-27  1.19147e-27  3.43719e-29  1.99434e-28   5.2717e-30  1.96906e-29  2.41155e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33301, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         6.62342e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.56901, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61321, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            220.855      26.0109      5.56122      7.60715       0.3595      98.5607      6.15197
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004927, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060419, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.99764e-11  3.35854e-26  4.31954e-27
      low eigenvalue method done, cpu time[sec] = 0.060693, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.36e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.41123e-27  7.51174e-28  2.22188e-29   1.2199e-28  3.28559e-30  1.63256e-29  2.33455e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33513, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.83123e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569463, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60914, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            165.641      19.5082      4.17091      5.70536     0.269625      73.9206      4.61398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.0528e-11   2.7021e-26  3.19399e-27
      low eigenvalue method done, cpu time[sec] = 0.06071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.54662e-27  5.31441e-28   1.6052e-29  8.48506e-29  2.31545e-30  1.39153e-29  1.98762e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32951, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          1.1039e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.570436, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61045, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            132.513      15.6065      3.33673      4.56429       0.2157      59.1364      3.69118
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004922, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060342, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80678e-12  2.27231e-26  2.50218e-27
      low eigenvalue method done, cpu time[sec] = 0.060614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.01699e-27  4.04693e-28  1.24387e-29  6.39352e-29  1.76167e-30  1.22006e-29  2.81308e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16979, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.574907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60767, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.428      13.0054      2.78061      3.80358      0.17975      49.2804      3.07598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05535, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004956, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060401, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.25352e-12  1.96671e-26  2.03641e-27
      low eigenvalue method done, cpu time[sec] = 0.060675, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.75e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.64948e-27  3.21129e-28  1.00085e-29  5.03234e-29  1.39736e-30  1.07422e-29  3.05918e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3517, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.54547e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.573008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.6523      11.1475      2.38338      3.26021     0.154071      42.2403      2.63656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055156, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004931, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060184, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4916e-12  1.73718e-26  1.70305e-27
      low eigenvalue method done, cpu time[sec] = 0.060456, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.2e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.38645e-27  2.62601e-28    8.299e-30  4.09333e-29  1.14433e-30  9.63977e-30  2.09098e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33383, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.76625e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.61806, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            82.8207      9.75408      2.08546      2.85268     0.134812      36.9603      2.30699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055214, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004944, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.16649e-12  1.55787e-26  1.45373e-27
      low eigenvalue method done, cpu time[sec] = 0.060527, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.18267e-27  2.19723e-28  7.01656e-30  3.41386e-29  9.58958e-31  8.64924e-30  2.52059e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33801, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 21677 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008214
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.416486
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.372402
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.356611
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.21809
         W1 Well: minimal relaxation eigenvalue = 0.0239299
         W1 Well: maximal relaxation eigenvalue = 1.21867
         W1 Well:       grid size = 522
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6270 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 439
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.66634, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23101 4.88e+05 1.81e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 9.25e+13
         B2    156  1.1e+13
         B3  -4639 2.37e+12
         B4  -6270 3.24e+12
         B5 -23101 1.53e+11
         B6   1481  4.2e+13
         B7   4643 2.67e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.79e+09  1.45e+10  2.08e+06  4.73e+04  2.23e-14  4.96e+12  2.21e+16
          R  1.28e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  6.89e-11     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2  4.82e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3  2.11e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  4.49e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  2.01e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  4.52e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.64e+06  6.79e+06       971      22.1  1.04e-17  2.32e+09  1.03e+13
          R  2.75e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  1.47e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   0.00103  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3    0.0452  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  9.59e+16  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  4.31e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  9.67e-14  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
   MasterEquation::set:  done, cpu time[sec] = 3.67648, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+08
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552544, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3508.53      417.919      90.0262      122.655      5.80942      1591.97      101.274
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053031, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004788, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057905, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05852e-10  6.58683e-25  1.35841e-25
      low eigenvalue method done, cpu time[sec] = 0.058169, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.59e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-26         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.13105e-26  3.39452e-26  1.00729e-27  8.38968e-27  1.98032e-28  1.04816e-28  1.16385e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.96933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51178, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1169.51      139.306      30.0087       40.885      1.93647      530.657      33.7578
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11725e-10  3.50336e-25   6.4601e-26
      low eigenvalue method done, cpu time[sec] = 0.058119, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.5e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.38e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.69032e-26  1.40446e-26  3.93123e-28  2.71493e-27  6.77994e-29   9.9725e-29  1.00101e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18129, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.17882e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.50778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            701.706      83.5837      18.0052       24.531      1.16188      318.394      20.2547
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00479, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.75184e-11  2.54231e-25  4.31357e-26
      low eigenvalue method done, cpu time[sec] = 0.058089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.08e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.22319e-26  8.70801e-27    2.448e-28  1.56078e-27  3.99879e-29  9.07843e-29  1.01173e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18646, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.05034e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.555757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51307, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            501.219      59.7027      12.8609      17.5221     0.829917      227.425      14.4676
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053207, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004783, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.62505e-11  2.03579e-25  3.23391e-26
      low eigenvalue method done, cpu time[sec] = 0.058342, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.87e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.45927e-26  6.21036e-27  1.76558e-28  1.07034e-27  2.78807e-29  8.28791e-29  9.94306e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.19684, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.92187e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70177, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            389.837      46.4354      10.0029      13.6283     0.645491      176.886      11.2526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05322, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058131, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.28269e-11  1.71428e-25  2.57715e-26
      low eigenvalue method done, cpu time[sec] = 0.058397, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.1e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.98219e-26    4.764e-27   1.3705e-28  8.01326e-28   2.1127e-29  7.60592e-29  1.01895e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3953, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5127, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            350.853      41.7919      9.00262      12.2655     0.580942      159.197      10.1274
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057829, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.12835e-12  1.59264e-25    2.336e-26
      low eigenvalue method done, cpu time[sec] = 0.058138, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.81e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.80182e-26  4.24276e-27  1.22752e-28  7.07193e-28  1.87382e-29  7.27659e-29  9.66092e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.02592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         6.53645e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553702, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            233.902      27.8612      6.00174        8.177     0.387294      106.131      6.75157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052958, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004763, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057807, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.66165e-12  1.18967e-25  1.57315e-26
      low eigenvalue method done, cpu time[sec] = 0.058081, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.2365e-26  2.69686e-27  8.00331e-29  4.36277e-28  1.17794e-29  6.07321e-29  1.05619e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18908, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.71526e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51617, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            175.427      20.8959      4.50131      6.13275     0.290471      79.5986      5.06368
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052955, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004786, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.21501e-12  9.59385e-26  1.16838e-26
      low eigenvalue method done, cpu time[sec] = 0.058095, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.59e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.26576e-27  1.91655e-27  5.80982e-29  3.04946e-28  8.34177e-30  5.19648e-29  1.04263e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.08941e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551663, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            140.341      16.7167      3.60105       4.9062     0.232377      63.6789      4.05094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052922, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004793, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057803, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.23962e-13  8.08211e-26  9.18539e-27
      low eigenvalue method done, cpu time[sec] = 0.058076, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.34592e-27  1.45989e-27  4.50593e-29  2.29913e-28  6.35143e-30  4.55067e-29  1.05171e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.19023, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.951      13.9306      3.00087       4.0885     0.193647      53.0657      3.37578
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052909, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004828, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057828, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.16124e-12  7.00499e-26  7.49742e-27
      low eigenvalue method done, cpu time[sec] = 0.058103, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     7e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.01913e-27  1.15908e-27  3.63222e-29  1.81236e-28  5.04603e-30  4.02453e-29  1.09242e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18866, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.52517e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552519, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55992, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            100.244      11.9405      2.57218      3.50443     0.165983      45.4849      2.89353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004784, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.23655e-12  6.19459e-26  6.28581e-27
      low eigenvalue method done, cpu time[sec] = 0.058056, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.19e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.07644e-27  9.52047e-28  3.02385e-29  1.48071e-28  4.15009e-30  3.61845e-29  1.11472e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.05605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.74305e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553337, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.7133       10.448      2.25065      3.06638     0.145235      39.7993      2.53184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004805, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05791, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.23808e-12  5.56063e-26  5.37732e-27
      low eigenvalue method done, cpu time[sec] = 0.058177, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.37247e-27  8.02387e-28  2.57844e-29  1.24274e-28  3.50268e-30  3.29457e-29  1.07808e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.23749, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 21955 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008351
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.416458
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.370493
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.355544
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.19967
         W1 Well: minimal relaxation eigenvalue = 0.0236448
         W1 Well: maximal relaxation eigenvalue = 1.34265
         W1 Well:       grid size = 520
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31605 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -87 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6266 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 438
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.64715, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31605 -23159 4.68e+05 1.91e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -87 1.02e+14
         B2    119 1.23e+13
         B3  -4619 2.66e+12
         B4  -6266 3.61e+12
         B5 -23159 1.72e+11
         B6   1458  4.7e+13
         B7   4651 3.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.27e+09  4.22e+09  7.24e+05  1.76e+04  1.66e-14  1.37e+12  5.45e+15
          R   4.4e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  2.37e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2  1.38e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3   5.7e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  6.03e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  7.29e-13   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  1.83e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e+06  1.97e+06       339      8.22  7.77e-18  6.42e+08  2.55e+12
          R  9.39e-07         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  5.06e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2   0.00295  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3     0.122   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  1.29e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  1.56e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  3.92e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
   MasterEquation::set:  done, cpu time[sec] = 3.65723, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+08
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.550573, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3712.26        447.2       97.038      131.703      6.25167       1712.1       110.96
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052629, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004746, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.09392e-11  2.15577e-24  4.51005e-25
      low eigenvalue method done, cpu time[sec] = 0.057728, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.1e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.06669e-25  1.13203e-25  3.35161e-27  2.77629e-26  6.56324e-28  3.67085e-28  3.85023e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.97361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1237.42      149.067       32.346      43.9011      2.08389        570.7      36.9868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05249, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004719, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.02243e-11  1.15832e-24  2.17023e-25
      low eigenvalue method done, cpu time[sec] = 0.057566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.59235e-25  4.73016e-26  1.32423e-27  9.09096e-27  2.27447e-28  3.49692e-28  3.84183e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.17995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.15078e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48555, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            742.451      89.4401      19.4076      26.3407      1.25033       342.42      22.1921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052415, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057231, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.31367e-11  8.44362e-25   1.4582e-25
      low eigenvalue method done, cpu time[sec] = 0.057498, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.44e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.10109e-25   2.9498e-26  8.30457e-28  5.26238e-27   1.3509e-28  3.19531e-28  3.97394e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14791, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         3.01109e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.552329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            530.322      63.8858      13.8626      18.8148     0.893096      244.586      15.8515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05263, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057446, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9115e-11  6.78097e-25  1.09804e-25
      low eigenvalue method done, cpu time[sec] = 0.057708, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.78e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.42989e-26  2.11095e-26  6.01299e-28  3.62275e-27  9.45593e-29  2.91878e-28  3.80735e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.1469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1          3.8714e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.549444, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48412, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            412.473      49.6889       10.782      14.6337      0.69463      190.233      12.3289
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052738, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00472, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057541, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.35649e-11  5.72221e-25  8.78034e-26
      low eigenvalue method done, cpu time[sec] = 0.057806, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.72e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.81786e-26  1.62428e-26  4.68473e-28  2.72211e-27  7.19172e-29  2.68475e-28  4.26214e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14465, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            371.226        44.72       9.7038      13.1703     0.625167       171.21       11.096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052666, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004718, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057471, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -2.142e-11  5.32089e-25  7.97042e-26
      low eigenvalue method done, cpu time[sec] = 0.057738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.21627e-26   1.4506e-26  4.20862e-28  2.40858e-27  6.39609e-29  2.58125e-28  4.20569e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13001, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         6.45233e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.542424, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49161, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            247.484      29.8134       6.4692      8.78022     0.416778       114.14      7.39736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052528, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004712, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05733, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.52982e-12  3.98783e-25  5.39893e-26
      low eigenvalue method done, cpu time[sec] = 0.057597, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.99e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.43e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.28414e-26  9.25416e-27  2.75648e-28  1.49225e-27   4.0386e-29  2.15943e-28  4.07189e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.60311e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.550131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49237, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            185.613        22.36       4.8519      6.58517     0.312584      85.6049      5.54802
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.09573e-12   3.2233e-25  4.02709e-26
      low eigenvalue method done, cpu time[sec] = 0.057513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.22e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.62e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.22776e-26  6.61403e-27  2.01305e-28  1.04942e-27  2.87749e-29  1.85557e-28  4.20303e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.07539e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.549129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             148.49       17.888      3.88152      5.26813     0.250067       68.484      4.43841
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052312, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.02755e-13  2.72009e-25  3.17679e-26
      low eigenvalue method done, cpu time[sec] = 0.057389, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.43e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.56588e-26  5.05076e-27  1.56548e-28  7.93033e-28  2.19637e-29  1.62581e-28  4.14203e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.550246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49153, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.742      14.9067       3.2346      4.39011     0.208389        57.07      3.69868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052686, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057546, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.31977e-12  2.36083e-25  2.60038e-26
      low eigenvalue method done, cpu time[sec] = 0.057818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.58e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.10947e-26  4.02329e-27  1.26671e-28  6.27566e-28  1.75171e-29   1.4454e-28   4.2551e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14539, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.50554e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.48884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            106.064      12.7772      2.77251      3.76295     0.178619      48.9171       3.1703
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057455, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45005e-11  2.09009e-25  2.18547e-26
      low eigenvalue method done, cpu time[sec] = 0.05772, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.94e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.78314e-26  3.31192e-27  1.05714e-28  5.13855e-28    1.444e-29  1.30262e-28  4.22683e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.72062e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547285, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4895, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.8064        11.18      2.42595      3.29258     0.156292      42.8025      2.77401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052565, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057382, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.20217e-12    1.878e-25   1.8736e-26
      low eigenvalue method done, cpu time[sec] = 0.057646, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.44e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.53416e-26  2.78617e-27  9.00303e-29  4.30747e-28  1.21725e-29  1.18347e-28  4.31606e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.15084, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 22233 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010922
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.4073
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.36685
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.325331
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.12594
         W1 Well: minimal relaxation eigenvalue = 0.0233915
         W1 Well: maximal relaxation eigenvalue = 1.60998
         W1 Well:       grid size = 513
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 183 1/cm
         B3 Barrier:        grid size = 256
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 271
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 432
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.52679, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23127 4.79e+05 2.01e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.12e+14
         B2    184 1.36e+13
         B3  -4646 2.98e+12
         B4  -6221 4.03e+12
         B5 -23127 1.92e+11
         B6   1444 5.25e+13
         B7   4699 3.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.77e+08  1.25e+09  2.56e+05  6.59e+03  1.22e-14  3.87e+11  1.38e+15
          R  1.48e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  8.01e-10     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2  3.91e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3  0.000152  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  8.19e+13  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  2.58e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  7.26e-16  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.24e+05  5.97e+05       122      3.15  5.84e-18  1.85e+08  6.59e+11
          R  3.09e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.67e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   0.00818  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3     0.317  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.71e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5   5.4e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  1.52e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
   MasterEquation::set:  done, cpu time[sec] = 3.53681, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+08
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3924.11      478.069      104.479      141.273      6.72037      1839.04      121.379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050858, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004682, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.79215e-11  6.84435e-24  1.45372e-24
      low eigenvalue method done, cpu time[sec] = 0.055908, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.84e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-25 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   9.8945e-25  3.62441e-25  1.07185e-26  8.83101e-26  2.09083e-27  1.23307e-27  1.48558e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.00755, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533885, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.41776, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1308.04      159.356      34.8264      47.0911      2.24012      613.013      40.4596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004601, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055242, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.10932e-10   3.7148e-24  7.07813e-25
      low eigenvalue method done, cpu time[sec] = 0.055503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.69e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.19516e-25  1.53079e-25  4.28936e-27  2.92791e-26  7.33834e-28  1.17792e-27  1.54455e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.03825, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.12364e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534498, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43064, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            784.821      95.6138      20.8959      28.2547      1.34407      367.808      24.2757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050407, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055085, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.00704e-11  2.72007e-24  4.78544e-25
      low eigenvalue method done, cpu time[sec] = 0.055349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.36e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.61381e-25  9.59766e-26  2.70707e-27  1.70505e-26   4.3856e-28  1.08033e-27  1.52347e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.05308, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          2.9731e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.439, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            560.587      68.2956      14.9256      20.1819     0.960053       262.72      17.3398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050381, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.12087e-12  2.19077e-24  3.61915e-25
      low eigenvalue method done, cpu time[sec] = 0.055297, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.12e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.78078e-25  6.90146e-26   1.9708e-27  1.17998e-26  3.08629e-28  9.90778e-28  1.54417e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         3.82256e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.535344, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            436.012      53.1188      11.6088       15.697     0.746708      204.338      13.4865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004629, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.40053e-12  1.85264e-24  2.90381e-25
      low eigenvalue method done, cpu time[sec] = 0.055345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.33e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.25589e-25  5.32635e-26  1.54054e-27  8.89287e-27  2.35463e-28  9.13104e-28  1.53507e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06801, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44574, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            392.411      47.8069      10.4479      14.1273     0.672037      183.904      12.1379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050413, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004561, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57155e-11  1.72422e-24  2.63978e-25
      low eigenvalue method done, cpu time[sec] = 0.05534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.06118e-25  4.76651e-26  1.38715e-27  7.88771e-27  2.09916e-28   8.7938e-28   1.5734e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.0684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         6.37093e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.535458, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44228, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            261.607      31.8713      6.96529      9.41822     0.448025      122.603      8.09192
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050354, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004583, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05502, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.69086e-11  1.29656e-24  1.79842e-25
      low eigenvalue method done, cpu time[sec] = 0.055282, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.03e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.4264e-25  3.05229e-26  9.12672e-28  4.90727e-27  1.33121e-28  7.38564e-28  1.59578e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06562, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.49458e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45021, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            196.205      23.9034      5.22396      7.06366     0.336019      91.9519      6.06894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00465, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055415, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37595e-11  1.05039e-24  1.34715e-25
      low eigenvalue method done, cpu time[sec] = 0.055691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.07989e-25  2.19056e-26  6.69766e-28  3.46663e-27  9.52911e-29   6.3709e-28  1.58483e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11594, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.06182e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.536353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            156.964      19.1228      4.17917      5.65093     0.268815      73.5616      4.85515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05045, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.63213e-11  8.87951e-25   1.0663e-25
      low eigenvalue method done, cpu time[sec] = 0.055368, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.88e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.60952e-26  1.67787e-26   5.2263e-28  2.62872e-27  7.29862e-29  5.59885e-28  1.62685e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.494966, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36023, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            130.804      15.9356      3.48264      4.70911     0.224012      61.3013      4.04596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055039, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.80216e-12  7.71742e-25   8.7528e-26
      low eigenvalue method done, cpu time[sec] = 0.055299, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.72e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.10748e-26  1.34131e-26  4.24572e-28  2.08718e-27   5.8419e-29  4.99794e-28  1.64423e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.48655e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.535297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43287, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            112.117      13.6591      2.98512      4.03638     0.192011       52.544      3.46796
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050542, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004557, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055184, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.5569e-12  6.84022e-25  7.37395e-26
      low eigenvalue method done, cpu time[sec] = 0.055448, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.84e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.01436e-26  1.10585e-26  3.54872e-28  1.71236e-27  4.82455e-29  4.49996e-28  1.65332e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.06148, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.69892e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.540164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.1027      11.9517      2.61198      3.53183     0.168009       45.976      3.03447
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050664, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055342, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.01036e-12  6.15209e-25  6.33501e-26
      low eigenvalue method done, cpu time[sec] = 0.055603, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.15e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.18237e-26  9.31915e-27  3.02769e-28    1.438e-27  4.07435e-29  4.09395e-28  1.67164e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07102, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 22511 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009935
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.401309
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.350846
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.319557
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.03996
         W1 Well: minimal relaxation eigenvalue = 0.0231513
         W1 Well: maximal relaxation eigenvalue = 1.56239
         W1 Well:       grid size = 506
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 211
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 209
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 147 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4667 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23285 1/cm => truncating
         B5 Barrier:        grid size = 428
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23285 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.35873, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23285 4.27e+05 2.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.23e+14
         B2    148 1.52e+13
         B3  -4667 3.34e+12
         B4  -6272  4.5e+12
         B5 -23285 2.14e+11
         B6   1433 5.86e+13
         B7   4642 3.94e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.11e+08  3.86e+08  9.39e+04  2.57e+03  9.13e-15  1.14e+11  3.65e+14
          R  4.75e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  2.59e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2  1.07e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3   0.00039  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4   1.1e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  8.75e-12   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  2.74e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+05  1.88e+05      45.6      1.25  4.43e-18  5.54e+07  1.77e+11
          R  9.79e-06         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  5.33e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2     0.022  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3     0.803  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  2.26e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5   1.8e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  5.64e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
   MasterEquation::set:  done, cpu time[sec] = 3.36619, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+08
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.433289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31306, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4144.35      510.587       112.37      151.386      7.21666      1973.04      132.568
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048811, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053321, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.69837e-10   2.0832e-23  4.48819e-24
      low eigenvalue method done, cpu time[sec] = 0.053572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.82e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.07579e-24  1.11929e-24  3.30346e-26  2.70793e-25  6.42043e-27  3.98963e-27  5.31715e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75512, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.521694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33106, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1381.45      170.196      37.4567      50.4621      2.40555      657.681      44.1894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048772, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004411, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.42865e-11  1.14153e-23  2.20991e-24
      low eigenvalue method done, cpu time[sec] = 0.053527, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.63273e-24  4.77483e-25  1.33844e-26  9.08495e-26    2.281e-27  3.82176e-27  5.52009e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86194, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.09737e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.521407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32218, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            828.869      102.117       22.474      30.2772      1.44333      394.608      26.5137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049021, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.47445e-11  8.39442e-24  1.50303e-24
      low eigenvalue method done, cpu time[sec] = 0.053882, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.39e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.14272e-24  3.01083e-25  8.50389e-27   5.3246e-26  1.37217e-27   3.5159e-27  5.57806e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86493, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.93632e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.523068, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33367, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             592.05       72.941      16.0529      21.6266      1.03095      281.863      18.9383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048812, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.19625e-11  6.77975e-24  1.14149e-24
      low eigenvalue method done, cpu time[sec] = 0.053557, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.78e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.82247e-25  2.17194e-25  6.21511e-27  3.69943e-26  9.69471e-28  3.23041e-27  5.65823e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86526, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         3.77527e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520673, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3329, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            460.483      56.7319      12.4856      16.8207     0.801851      219.227      14.7298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048771, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004415, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053268, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.23923e-11  5.74509e-24  9.18869e-25
      low eigenvalue method done, cpu time[sec] = 0.053521, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.75e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.18248e-25  1.68169e-25  4.87623e-27  2.79762e-26  7.42272e-28   2.9847e-27  5.66179e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86135, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3417, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            414.435      51.0587       11.237      15.1386     0.721666      197.304      13.2568
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004407, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053279, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.58254e-11  5.35143e-24  8.36493e-25
      low eigenvalue method done, cpu time[sec] = 0.053529, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.35e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    6.569e-25  1.50655e-25  4.39605e-27  2.48447e-26  6.62556e-28   2.8749e-27  5.67226e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86908, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         6.29211e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33988, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             276.29      34.0391      7.49134      10.0924      0.48111      131.536      8.83789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048884, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053367, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.91432e-12  4.03711e-24  5.73074e-25
      low eigenvalue method done, cpu time[sec] = 0.053619, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.04e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.35e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.57433e-25  9.70184e-26  2.91119e-27  1.55515e-26  4.22816e-28  2.42803e-27  5.78542e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.88126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.38948e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.52155, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            207.217      25.5293      5.61851      7.56931     0.360833      98.6521      6.62842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048975, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05345, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.38364e-12  3.27796e-24   4.3105e-25
      low eigenvalue method done, cpu time[sec] = 0.053703, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.59e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.47533e-25  6.98676e-26  2.14476e-27   1.1027e-26  3.03819e-28  2.10087e-27  5.83491e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.04869e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519005, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33792, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            165.774      20.4235       4.4948      6.05545     0.288666      78.9217      5.30273
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004406, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053503, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.72556e-11  2.77573e-24  3.42308e-25
      low eigenvalue method done, cpu time[sec] = 0.053766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.43e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.78072e-25  5.36906e-26  1.67994e-27  8.39244e-27  2.33573e-28  1.85274e-27  5.91248e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86602, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33626, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.145      17.0196      3.74567      5.04621     0.240555      65.7681      4.41894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04869, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004425, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0532, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.84451e-12  2.41575e-24  2.81758e-25
      low eigenvalue method done, cpu time[sec] = 0.053452, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.59e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.30159e-25  4.30364e-26  1.36873e-27  6.68326e-27  1.87509e-28  1.65676e-27  5.96046e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.46816e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520563, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             118.41      14.5882      3.21057      4.32532      0.20619      56.3726      3.78767
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048957, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004435, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.26111e-12  2.14357e-24   2.3793e-25
      low eigenvalue method done, cpu time[sec] = 0.053736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.96e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95215e-25  3.55495e-26  1.14675e-27  5.49454e-27  1.55196e-28  1.49663e-27  6.01559e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8764, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          1.6779e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.52244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3414, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            103.609      12.7647      2.80925      3.78465     0.180416      49.3261      3.31421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004403, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11181e-12  1.92978e-24  2.04829e-25
      low eigenvalue method done, cpu time[sec] = 0.053443, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.47e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.68649e-25  3.00288e-26  9.80964e-28   4.6252e-27  1.31391e-28  1.36476e-27  6.08763e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86995, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 22789 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008631
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.399013
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.349595
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.328953
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.02017
         W1 Well: minimal relaxation eigenvalue = 0.0229333
         W1 Well: maximal relaxation eigenvalue = 1.94346
         W1 Well:       grid size = 504
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31643 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -107 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6263 1/cm
         B5 Barrier: nonpositive number of states at -23111 1/cm => truncating
         B5 Barrier:        grid size = 425
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23111 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1404 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.40178, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31643 -23111 4.85e+05 2.23e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -107 1.35e+14
         B2    109 1.68e+13
         B3  -4643 3.73e+12
         B4  -6263 5.01e+12
         B5 -23111 2.39e+11
         B6   1405 6.53e+13
         B7   4645 4.47e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.78e+07  1.24e+08  3.55e+04  1.03e+03  6.89e-15   3.5e+10  1.01e+14
          R  1.47e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  8.07e-09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2  2.82e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3  0.000973   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  1.45e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  2.86e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  9.92e-15  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.34e+04   6.1e+04      17.5     0.506  3.39e-18  1.72e+07  4.97e+10
          R  2.99e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  1.64e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2    0.0572  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3      1.98   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  2.95e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  5.81e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  2.01e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
   MasterEquation::set:  done, cpu time[sec] = 3.41243, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+08
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30798, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4373.04      544.807       120.73      162.064      7.74169      2114.36      144.571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048203, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052683, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.50951e-10   6.1794e-23  1.34965e-23
      low eigenvalue method done, cpu time[sec] = 0.052942, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.18e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-24  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   9.2228e-24  3.33359e-24  9.82114e-26  8.00993e-25  1.90185e-26  1.24522e-26   1.9718e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85055, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515376, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31284, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1457.68      181.602      40.2434      54.0213      2.58056      704.787      48.1903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048196, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004364, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.03487e-11  3.41751e-23  6.71793e-24
      low eigenvalue method done, cpu time[sec] = 0.05289, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.42e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.84e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.94668e-24  1.43565e-24  4.02676e-26  2.71836e-25  6.83675e-27  1.19579e-26  1.95681e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.07192e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31365, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            874.609      108.961       24.146      32.4128      1.54834      422.872      28.9142
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.79715e-12  2.52359e-23  4.59556e-24
      low eigenvalue method done, cpu time[sec] = 0.052821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.79e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.48103e-24  9.09905e-25  2.57408e-26  1.60259e-25  4.13753e-27  1.10265e-26  1.97298e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85714, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.90068e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.51404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31902, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             624.72      77.8296      17.2472       23.152      1.10596      302.052       20.653
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048271, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052717, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.02848e-11  2.04368e-23  3.50438e-24
      low eigenvalue method done, cpu time[sec] = 0.052966, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.69927e-24  6.58986e-25  1.88991e-26  1.11815e-25   2.9361e-27  1.01611e-26  1.96598e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         3.72945e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.519275, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29178, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            485.894      60.5342      13.4145      18.0071     0.860187      234.929      16.0634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052871, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.26212e-11  1.73526e-23  2.82989e-24
      low eigenvalue method done, cpu time[sec] = 0.053132, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.20467e-24  5.11895e-25   1.4882e-26  8.48628e-26  2.25622e-27  9.40509e-27  1.99733e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.81672, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2685, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            437.304      54.4807       12.073      16.2064     0.774169      211.436      14.4571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048235, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.8016e-12   1.6177e-23  2.57971e-24
      low eigenvalue method done, cpu time[sec] = 0.052954, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.71e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.01892e-24  4.59097e-25  1.34345e-26  7.54601e-26  2.01655e-27  9.06673e-27  1.99681e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8062, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         6.21575e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516649, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28913, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            291.536      36.3205      8.04868      10.8043     0.516112      140.957      9.63805
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048144, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004376, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.18542e-12  1.22426e-23  1.77695e-24
      low eigenvalue method done, cpu time[sec] = 0.052848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.41322e-24  2.97105e-25  8.94721e-27  4.74922e-26  1.29406e-27  7.68778e-27   2.0251e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.65668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.28766e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516878, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            218.652      27.2404      6.03651       8.1032     0.387084      105.718      7.22854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048151, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052587, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.14411e-12  9.96229e-24  1.34195e-24
      low eigenvalue method done, cpu time[sec] = 0.052837, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.96e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.07817e-24  2.14809e-25  6.62137e-27  3.38217e-26  9.33984e-28  6.67532e-27  2.03111e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.83587, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.03596e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516226, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32229, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            174.922      21.7923      4.82921      6.48256     0.309667      84.5744      5.78283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048125, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052571, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.83558e-11  8.45005e-24   1.0691e-24
      low eigenvalue method done, cpu time[sec] = 0.052821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.45e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.65221e-25  1.65544e-25  5.20297e-27  2.58194e-26   7.2028e-28  5.90205e-27  2.06549e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86436, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514781, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32573, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            145.768      18.1602      4.02434      5.40213     0.258056      70.4787      4.81903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048101, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052534, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.75879e-12  7.36401e-24  8.82336e-25
      low eigenvalue method done, cpu time[sec] = 0.052782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.36e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   7.1805e-25  1.33017e-25  4.25111e-27  2.06164e-26  5.79825e-28  5.29065e-27  2.09296e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.45034e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.944      15.5659      3.44943       4.6304     0.221191      60.4103      4.13059
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048143, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052581, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.21831e-12   6.5416e-24  7.46797e-25
      low eigenvalue method done, cpu time[sec] = 0.05283, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.54e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.10234e-25  1.10085e-25  3.56939e-27  1.69845e-26  4.80919e-28  4.78855e-27  2.11462e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86266, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.65753e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.517235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            109.326      13.6202      3.01826       4.0516     0.193542       52.859      3.61427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048133, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004369, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05258, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.04359e-12  5.89473e-24  6.44193e-25
      low eigenvalue method done, cpu time[sec] = 0.05283, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.89e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.28315e-25  9.31795e-26  3.06034e-27  1.43295e-26  4.08081e-28  4.37415e-27  2.12443e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8096, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 23067 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008125
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.38928
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.338767
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.313828
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.9139
         W1 Well: minimal relaxation eigenvalue = 0.0226836
         W1 Well: maximal relaxation eigenvalue = 1.32053
         W1 Well:       grid size = 497
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 252
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 266
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 420
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1396 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.256, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23133 4.77e+05 2.35e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 1.48e+14
         B2    187 1.87e+13
         B3  -4653 4.16e+12
         B4  -6193 5.57e+12
         B5 -23133 2.67e+11
         B6   1397 7.27e+13
         B7   4697 5.06e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.25e+07   4.1e+07  1.38e+04       422  5.22e-15  1.11e+10  2.88e+13
          R  4.44e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  2.44e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2  7.25e-05  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3   0.00237  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  1.92e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  9.05e-11   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  3.47e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e+04  2.05e+04      6.91     0.211  2.62e-18  5.54e+06  1.45e+10
          R  8.85e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  4.87e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2     0.145  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3      4.73  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  3.82e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5   1.8e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  6.92e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
   MasterEquation::set:  done, cpu time[sec] = 3.26674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+08
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502283, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19509, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4610.42      580.799       129.58      173.329      8.29666      2263.26      157.429
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004308, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08014, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72443e-10  1.76393e-22  3.89904e-23
      low eigenvalue method done, cpu time[sec] = 0.081013, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     4e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.67247e-23  9.58774e-24  2.82278e-25  2.29085e-24  5.44693e-26  3.74486e-26  6.60667e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50244, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1536.81        193.6      43.1933      57.7763      2.76555      754.418      52.4763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046397, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004228, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050703, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.86182e-11  9.84522e-23   1.9619e-23
      low eigenvalue method done, cpu time[sec] = 0.050946, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.85e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.44825e-23  4.17002e-24  1.17102e-25  7.86296e-25  1.98088e-26  3.60721e-26  6.64328e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.70408, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.04724e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            922.084       116.16       25.916      34.6658      1.65933      452.651      31.4858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046422, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004224, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050726, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.01614e-12  7.30012e-23  1.34979e-23
      low eigenvalue method done, cpu time[sec] = 0.050971, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.3e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.02483e-23  2.65709e-24  7.53197e-26  4.66307e-25   1.2061e-26  3.33559e-26  6.62938e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.69678, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.86613e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            658.631      82.9713      18.5114      24.7613      1.18524      323.322      22.4898
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046363, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05067, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -6.436e-12  5.92781e-23  1.03344e-23
      low eigenvalue method done, cpu time[sec] = 0.050914, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.93e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.97711e-24  1.93145e-24  5.55346e-26  3.26686e-25  8.59461e-27  3.08138e-26  6.66276e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6999, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         3.68503e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502878, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            512.269      64.5333      14.3978      19.2588     0.921851      251.473      17.4921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.11333e-11  5.04325e-23  8.37156e-24
      low eigenvalue method done, cpu time[sec] = 0.050891, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.04e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.53576e-24  1.50475e-24  4.38784e-26  2.48753e-25   6.6265e-27  2.85849e-26  6.70108e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.70591, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22929, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            461.042      58.0799       12.958      17.3329     0.829666      226.326      15.7429
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004206, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.90183e-13  4.70548e-23  7.64173e-24
      low eigenvalue method done, cpu time[sec] = 0.050898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.71e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.99299e-24  1.35128e-24  3.96669e-26  2.21486e-25  5.93076e-27  2.75843e-26  6.72686e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.14171e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50213, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            307.361        38.72      8.63865      11.5553      0.55311      150.884      10.4953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004281, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050906, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9221e-11  3.57231e-23  5.29203e-24
      low eigenvalue method done, cpu time[sec] = 0.051158, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.1e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.21706e-24  8.78904e-25  2.65684e-26  1.40161e-25   3.8272e-27  2.34834e-26  6.79552e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.70254, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.18895e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502889, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23795, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            230.521        29.04      6.47899      8.66645     0.414833      113.163      7.87145
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04631, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004235, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07218e-12  2.91333e-23  4.01237e-24
      low eigenvalue method done, cpu time[sec] = 0.050869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.61e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.22984e-24  6.37768e-25  1.97438e-26  1.00209e-25  2.77345e-27   2.0466e-26    6.877e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.71692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.02362e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.503263, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.21631, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            184.417       23.232      5.18319      6.93316     0.331866      90.5302      6.29716
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046394, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050746, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.76174e-12  2.47523e-23  3.20666e-24
      low eigenvalue method done, cpu time[sec] = 0.051001, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.61e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.59997e-24  4.92928e-25  1.55658e-26  7.67392e-26  2.14574e-27  1.81462e-26  6.98186e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.71357, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.504168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            153.681        19.36      4.31933      5.77763     0.276555      75.4418      5.24763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046494, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050797, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20168e-12     2.16e-23  2.65347e-24
      low eigenvalue method done, cpu time[sec] = 0.05104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.16316e-24  3.97068e-25   1.2753e-26  6.14377e-26    1.732e-27  1.62998e-26  7.04824e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.71678, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.43307e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23556, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            131.726      16.5943      3.70228      4.95226     0.237047      64.6644      4.49797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04636, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050669, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.58716e-12  1.92092e-23  2.25094e-24
      low eigenvalue method done, cpu time[sec] = 0.050911, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.84324e-24  3.29428e-25  1.07378e-26  5.07513e-26   1.4405e-27  1.47924e-26  7.13776e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.70961, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.63779e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23118, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             115.26        14.52      3.23949      4.33323     0.207416      56.5814      3.93572
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004211, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050619, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.8307e-12  1.73262e-23  1.94553e-24
      low eigenvalue method done, cpu time[sec] = 0.050869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.73e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.93e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.59859e-24  2.79293e-25  9.22338e-27   4.2889e-26  1.22446e-27  1.35343e-26  7.17554e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.70225, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 23345 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008956
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.376083
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.33132
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.313046
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.84085
         W1 Well: minimal relaxation eigenvalue = 0.0224527
         W1 Well: maximal relaxation eigenvalue = 1.9764
         W1 Well:       grid size = 491
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31647 1/cm
         B1 Barrier:        grid size = 209
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4655 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 415
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1392 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.16025, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31647 -23135 4.77e+05 2.48e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 1.62e+14
         B2    161 2.07e+13
         B3  -4655 4.64e+12
         B4  -6223 6.19e+12
         B5 -23135 2.97e+11
         B6   1393 8.09e+13
         B7   4641 5.72e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.73e+06   1.4e+07   5.5e+03       177  3.98e-15  3.61e+09  8.55e+12
          R  1.29e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  7.14e-08     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2  0.000182   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3   0.00563  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  2.51e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  2.77e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  1.17e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.94e+03  7.15e+03      2.81    0.0906  2.03e-18  1.84e+06  4.36e+09
          R  0.000254         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1   0.00014     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2     0.356   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3        11  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  4.92e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  5.42e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  2.29e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
   MasterEquation::set:  done, cpu time[sec] = 3.17099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+08
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.49082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.96368, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4856.64      618.621      138.939      185.204      8.88279      2419.98      171.186
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.185432, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.238519, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.6716e-11  4.87629e-22  1.09057e-22
      low eigenvalue method done, cpu time[sec] = 0.238997, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.88e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-23 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16   7.4949e-23  2.67075e-23  7.85398e-25  6.34345e-24  1.51033e-25   1.0889e-25  2.10198e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.491632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.11075, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1618.88      206.207      46.3131      61.7347      2.96093      806.661       57.062
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044791, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004133, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049325, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9287e-11  2.74567e-22  5.54496e-23
      low eigenvalue method done, cpu time[sec] = 0.049569, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  4.10262e-23  1.17264e-23   3.2959e-25  2.20158e-24  5.55538e-26  1.05198e-25  2.15966e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54623, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          2.0233e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.486921, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0976, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            971.327      123.724      27.7879      37.0408      1.77656      483.996      34.2372
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044787, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049338, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.05866e-11  2.04402e-22  3.83616e-23
      low eigenvalue method done, cpu time[sec] = 0.049577, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.59e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  2.91891e-23  7.51008e-24  2.13266e-25  1.31318e-24  3.40253e-26  9.75713e-26  2.16452e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.38082, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.83262e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.490967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.09906, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            693.805      88.3744      19.8485      26.4577      1.26897      345.712      24.4552
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.51596e-11  1.66411e-22  2.94857e-23
      low eigenvalue method done, cpu time[sec] = 0.049677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  2.28082e-23  5.47922e-24  1.57913e-25   9.2375e-25  2.43476e-26  9.03559e-26   2.1713e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53701, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         3.64194e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.4902, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.88729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            539.626      68.7356      15.4377      20.5782     0.986976      268.887      19.0207
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045184, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049728, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.88625e-11  1.41853e-22  2.39582e-23
      low eigenvalue method done, cpu time[sec] = 0.049969, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.87414e-23  4.28045e-24  1.25164e-25   7.0551e-25  1.88304e-26  8.39946e-26  2.18206e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.491046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            485.664      61.8621      13.8939      18.5204     0.888279      241.998      17.1186
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044979, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049531, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.22664e-11   1.3246e-22  2.18982e-23
      low eigenvalue method done, cpu time[sec] = 0.049774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.97e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16   1.7206e-23  3.84842e-24  1.13303e-25  6.28994e-25  1.68757e-26  8.11238e-26  2.18882e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54037, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          6.0699e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10321, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            323.776      41.2414      9.26263      12.3469     0.592186      161.332      11.4124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04485, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1119e-11  1.00871e-22  1.52441e-23
      low eigenvalue method done, cpu time[sec] = 0.049631, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.21702e-23  2.51538e-24  7.63139e-26  4.00173e-25  1.09498e-26  6.93564e-26  2.21755e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54154, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.09321e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489092, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            242.832       30.931      6.94697      9.26021     0.444139      120.999      8.55931
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044902, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004133, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049426, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.08511e-13  8.24409e-23  1.16027e-23
      low eigenvalue method done, cpu time[sec] = 0.049671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.24e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  9.35651e-24  1.83188e-24  5.69437e-26  2.87233e-25  7.96688e-27  6.06368e-26  2.24144e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53539, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.01165e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.490685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.09947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            194.265      24.7448      5.55758      7.40817     0.355311      96.7993      6.84745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004136, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049404, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.30855e-12  7.01589e-23  9.30143e-24
      low eigenvalue method done, cpu time[sec] = 0.04965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.02e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16   7.5547e-24  1.41999e-24  4.50415e-26  2.20667e-25  6.18385e-27  5.39035e-26  2.26269e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489262, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            161.888      20.6207      4.63131      6.17347     0.296093      80.6661       5.7062
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044837, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004145, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049376, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.79333e-12  6.13049e-23  7.71663e-24
      low eigenvalue method done, cpu time[sec] = 0.049614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.13e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16   6.3016e-24  1.14659e-24  3.70029e-26   1.7712e-25  5.00465e-27   4.8534e-26  2.29559e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.41631e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489278, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.761      17.6749       3.9697      5.29155     0.253794      69.1423      4.89103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049373, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04223e-11  5.45793e-23  6.56052e-24
      low eigenvalue method done, cpu time[sec] = 0.049613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.46e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  5.38071e-24  9.53129e-25  3.12249e-26   1.4662e-25  4.17133e-27   4.4133e-26  2.31068e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53533, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.61864e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.490589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1071, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            121.416      15.4655      3.47349      4.63011      0.22207      60.4995      4.27965
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04941, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82169e-13  4.92753e-23  5.68141e-24
      low eigenvalue method done, cpu time[sec] = 0.049654, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.93e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  4.67653e-24   8.0975e-25  2.68828e-26  1.24185e-25  3.55381e-27  4.04604e-26  2.33452e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53868, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 23623 1/cm
      Energy step      = 113 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008445
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.377715
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.323352
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.853113
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.79263
         W1 Well: minimal relaxation eigenvalue = 0.0222258
         W1 Well: maximal relaxation eigenvalue = 1.55496
         W1 Well:       grid size = 489
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -106 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 414
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1474 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4638 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.64536, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23159 4.68e+05 2.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -106 1.78e+14
         B2    119 2.29e+13
         B3  -4627 5.18e+12
         B4  -6208 6.88e+12
         B5 -23159  3.3e+11
         B6   1475 8.99e+13
         B7   4639 6.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.77e+06     5e+06  2.28e+03      77.5   3.1e-15  1.23e+09  2.66e+12
          R  3.61e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1     2e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2  0.000438  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3    0.0129  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  3.22e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5   8.1e-10   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  3.76e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.42e+03  2.56e+03      1.17    0.0398  1.59e-18  6.34e+05  1.36e+09
          R  0.000704         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1   0.00039     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2     0.853  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3      25.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  6.28e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  1.58e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  7.33e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
   MasterEquation::set:  done, cpu time[sec] = 3.65619, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+08
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486111, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.81817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5111.8      658.344       148.83      197.713      9.50132       2584.8      185.887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.298591, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004407, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.34935, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.68832e-11  1.30477e-21  2.94862e-22
      low eigenvalue method done, cpu time[sec] = 0.349803, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.9e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.03716e-22  7.21703e-23  2.11819e-24  1.70276e-23  4.05958e-25  3.05696e-25  6.76739e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54648, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485336, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07952, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1703.93      219.448      49.6101      65.9043      3.16711      861.601      61.9625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04436, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.56157e-11  7.40837e-22  1.51419e-22
      low eigenvalue method done, cpu time[sec] = 0.049066, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.41e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.65e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.12588e-22  3.19635e-23  8.98766e-25  5.97277e-24  1.50958e-25  2.96503e-25  6.75191e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.00007e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484825, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07993, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1022.36      131.669      29.7661      39.5426      1.90026       516.96      37.1775
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004386, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048975, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.92024e-11  5.53631e-22  1.05316e-22
      low eigenvalue method done, cpu time[sec] = 0.049212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.54e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.05228e-23  2.05706e-23  5.84966e-25  3.58271e-24  9.29918e-26  2.75904e-25  6.78557e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.33147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1          2.8001e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.48507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            730.257      94.0491      21.2615      28.2447      1.35733      369.257      26.5553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048975, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11456e-11  4.51864e-22  8.12537e-23
      low eigenvalue method done, cpu time[sec] = 0.049222, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.52e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.31501e-23  1.50589e-23  4.34878e-25  2.52994e-24  6.68047e-26  2.56166e-25  6.81421e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50962, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         3.60013e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08376, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            567.978      73.1493      16.5367      21.9681       1.0557        287.2      20.6542
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044407, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048881, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16317e-11  3.85901e-22  6.62161e-23
      low eigenvalue method done, cpu time[sec] = 0.049118, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.86e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.20438e-23  1.17971e-23  3.45808e-25  1.93829e-24  5.18319e-26  2.38672e-25  6.82953e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0865, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             511.18      65.8344       14.883      19.7713     0.950132       258.48      18.5887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004384, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048925, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.45844e-11  3.60629e-22  6.05992e-23
      low eigenvalue method done, cpu time[sec] = 0.049163, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.61e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.02e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.78389e-23  1.06185e-23  3.13457e-25  1.73029e-24  4.65124e-26  2.30762e-25  6.86294e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51315, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.00022e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08555, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            340.787      43.8896      9.92202      13.1809     0.633421       172.32      12.3925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048875, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.01206e-11  2.75449e-22  4.23989e-23
      low eigenvalue method done, cpu time[sec] = 0.049113, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.75e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.12e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.40046e-23  6.97288e-24  2.12262e-25  1.10655e-24  3.03395e-26  1.98087e-25  6.94884e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5113, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.00029e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08273, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             255.59      32.9172      7.44152      9.88564     0.475066       129.24      9.29437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004388, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048841, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.56751e-12  2.25594e-22   3.2392e-23
      low eigenvalue method done, cpu time[sec] = 0.049079, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.6241e-23  5.09613e-24  1.59025e-25  7.97318e-25  2.21617e-26  1.73756e-25  7.03381e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4661, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.00004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.453225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08431, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            204.472      26.3338      5.95321      7.90851     0.380053      103.392       7.4355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044626, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.5156e-12  1.92293e-22  2.60453e-23
      low eigenvalue method done, cpu time[sec] = 0.049332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.27e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.12499e-23  3.96114e-24  1.26182e-25  6.14368e-25  1.72545e-26   1.5489e-25  7.12245e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47967, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.09346, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            170.393      21.9448      4.96101      6.59043     0.316711      86.1601      6.19625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048809, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.13853e-12  1.68243e-22  2.16617e-23
      low eigenvalue method done, cpu time[sec] = 0.04905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.77685e-23  3.20593e-24  1.03935e-25  4.94378e-25  1.40004e-26  1.39763e-25  7.18496e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5204, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.40005e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08602, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.051      18.8098      4.25229      5.64894     0.271466      73.8515      5.31107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044372, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004357, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048809, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.80646e-12  1.49948e-22   1.8456e-23
      low eigenvalue method done, cpu time[sec] = 0.049048, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52036e-23  2.67025e-24  8.79026e-26  4.10121e-25  1.16948e-26  1.27345e-25  7.26257e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50904, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.60006e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08365, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            127.795      16.4586      3.72076      4.94282     0.237533      64.6201      4.64718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044322, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048774, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.08509e-12  1.35501e-22  1.60131e-23
      low eigenvalue method done, cpu time[sec] = 0.049021, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.01e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.32381e-23  2.27252e-24  7.58278e-26  3.48025e-25  9.98273e-27  1.16945e-25  7.32332e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50692, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 23901 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00846
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.368293
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.320281
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.3007
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.74029
         W1 Well: minimal relaxation eigenvalue = 0.022013
         W1 Well: maximal relaxation eigenvalue = 1.72772
         W1 Well:       grid size = 483
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 208
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 206
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 211 1/cm
         B3 Barrier:        grid size = 248
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4618 1/cm
         B4 Barrier:        grid size = 262
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23249 1/cm => truncating
         B5 Barrier:        grid size = 410
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23248 1/cm
         B6 Barrier:        grid size = 195
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4696 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.02928, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23248 4.39e+05 2.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 1.95e+14
         B2    212 2.53e+13
         B3  -4618 5.76e+12
         B4  -6228 7.63e+12
         B5 -23248 3.67e+11
         B6   1477 9.98e+13
         B7   4697 7.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.01e+06  1.82e+06       960      34.3   2.4e-15   4.3e+08  8.45e+11
          R   9.9e-07         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1  5.51e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2   0.00104  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3    0.0292  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  4.16e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  2.32e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  1.18e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       527       948     0.501    0.0179  1.26e-18  2.25e+05  4.41e+08
          R    0.0019         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1   0.00105     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2      1.99  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3      55.8  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  7.96e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  4.45e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  2.27e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
   MasterEquation::set:  done, cpu time[sec] = 3.03922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+08
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474369, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.5802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5376.17       700.03      159.274      210.879      10.1535      2757.98      201.579
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.469933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004003, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.521417, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.60791e-10  3.39548e-21  7.75708e-22
      low eigenvalue method done, cpu time[sec] = 0.521868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.4e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.47e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.37409e-22  1.89165e-22  5.54615e-24  4.43794e-23  1.05944e-24  8.35274e-25  2.04864e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.47469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1792.06      233.343      53.0913      70.2929      3.38451      919.327       67.193
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042967, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047341, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.71693e-11  1.94396e-21  4.02303e-22
      low eigenvalue method done, cpu time[sec] = 0.047571, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.99845e-22  8.45303e-23  2.37911e-24  1.57318e-23  3.98234e-25   8.1213e-25  2.05226e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.97752e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.476182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1075.23      140.006      31.8548      42.1758      2.03071      551.596      40.3158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042944, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047305, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.03545e-11  1.45826e-21  2.81291e-22
      low eigenvalue method done, cpu time[sec] = 0.047538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.15551e-22  5.46646e-23  1.55731e-24   9.4885e-24  2.46698e-25  7.57696e-25  2.06195e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.76852e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473767, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00922, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            768.024      100.004      22.7534      30.1255      1.45051      393.997       28.797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042982, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004027, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047394, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.69243e-11  1.19318e-21  2.17831e-22
      low eigenvalue method done, cpu time[sec] = 0.047646, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.6966e-22  4.01562e-23  1.16238e-24   6.7262e-24  1.77926e-25  7.05087e-25   2.0716e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72117, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.55953e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.47574, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02868, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            597.352      77.7811      17.6971       23.431      1.12817      306.442      22.3977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043177, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003994, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047549, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67466e-11  1.02089e-21  1.78033e-22
      low eigenvalue method done, cpu time[sec] = 0.047781, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.25e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.40218e-22   3.1543e-23   9.2717e-25  5.16857e-24  1.38468e-25  6.58244e-25  2.07901e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41729, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473716, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02236, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            537.617       70.003      15.9274      21.0879      1.01535      275.798      20.1579
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043025, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003983, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04739, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.07749e-11  9.54779e-22  1.63135e-22
      low eigenvalue method done, cpu time[sec] = 0.047621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.55e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.29053e-22  2.84261e-23   8.4159e-25  4.62005e-24  1.24426e-25  6.37022e-25  2.08659e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41292, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.93255e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474977, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02038, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            358.411      46.6687      10.6183      14.0586     0.676903      183.865      13.4386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043032, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003997, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047416, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.7869e-11  7.31439e-22  1.14709e-22
      low eigenvalue method done, cpu time[sec] = 0.047649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.31e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.21802e-23  1.87534e-23  5.72913e-25  2.96964e-24  8.15837e-26  5.48917e-25  2.11187e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.23739, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         7.91007e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473655, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            268.808      35.0015       7.9637      10.5439     0.507677      137.899      10.0789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003997, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047368, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46336e-11  6.00305e-22  8.79598e-23
      low eigenvalue method done, cpu time[sec] = 0.047636, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.13897e-23  1.37528e-23   4.3089e-25  2.14777e-24  5.98209e-26  4.82947e-25  2.13684e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.31058, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         9.88758e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            215.047      28.0012      6.37096      8.43515     0.406142      110.319      8.06316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043081, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19919e-11  5.12513e-22  7.09346e-23
      low eigenvalue method done, cpu time[sec] = 0.047692, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.13e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.79786e-23  1.07195e-23  3.42968e-25  1.65993e-24  4.67179e-26  4.31592e-25  2.16103e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.26124, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01918, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            179.206      23.3343      5.30913      7.02929     0.338451      91.9327       6.7193
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04295, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.80569e-12  4.48994e-22  5.91417e-23
      low eigenvalue method done, cpu time[sec] = 0.04756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.88e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.86006e-23  8.69634e-24  2.83253e-25  1.33914e-24  3.80059e-26  3.90329e-25  2.18374e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40578, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.38426e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474015, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01686, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            153.605      20.0009      4.55069      6.02511     0.290101      78.7994       5.7594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043185, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.06328e-12    4.006e-22  5.04965e-23
      low eigenvalue method done, cpu time[sec] = 0.047787, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.82e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.16731e-23  7.25793e-24  2.40105e-25  1.11335e-24  3.18179e-26  3.56344e-25  2.20481e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41323, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.58201e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            134.404      17.5007      3.98185      5.27197     0.253839      68.9495      5.03947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043197, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003983, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047561, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71646e-11  3.62339e-22  4.38943e-23
      low eigenvalue method done, cpu time[sec] = 0.047792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.98e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.63513e-23  6.18752e-24  2.07526e-25  9.46544e-25  2.72119e-26  3.27811e-25  2.22376e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41416, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 24179 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008831
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.363072
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.312296
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.16277
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.70191
         W1 Well: minimal relaxation eigenvalue = 0.0217984
         W1 Well: maximal relaxation eigenvalue = 1.46889
         W1 Well:       grid size = 477
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 207
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -39 1/cm
         B2 Barrier:        grid size = 205
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 194 1/cm
         B3 Barrier:        grid size = 246
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 260
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23323 1/cm => truncating
         B5 Barrier:        grid size = 406
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23323 1/cm
         B6 Barrier:        grid size = 194
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.8386, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23323 4.16e+05 2.88e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -39 2.13e+14
         B2    195  2.8e+13
         B3  -4602 6.41e+12
         B4  -6241 8.46e+12
         B5 -23323 4.08e+11
         B6   1482 1.11e+14
         B7   4641 8.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.79e+05  6.79e+05       413      15.5  1.88e-15  1.54e+08  2.77e+11
          R  2.64e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1  1.47e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2   0.00242       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3    0.0644  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  5.33e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  6.48e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  3.61e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       201       361      0.22   0.00825  9.97e-19   8.2e+04  1.47e+08
          R   0.00497         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1   0.00277     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2      4.55       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3       121  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4     1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  1.22e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  6.79e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
   MasterEquation::set:  done, cpu time[sec] = 3.84876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+08
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.31368, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5649.8      743.744      170.293      224.726      10.8407      2939.78      218.309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.658916, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.709483, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.17849e-10  8.59991e-21  1.98455e-21
      low eigenvalue method done, cpu time[sec] = 0.709934, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.6e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-22  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.37762e-21  4.81677e-22  1.41137e-23  1.12426e-22  2.68733e-24  2.21778e-24  6.00275e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.33401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.75889, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1883.27      247.915      56.7642      74.9087      3.61358      979.928      72.7695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.172968, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.222209, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.72149e-11   4.9636e-21  1.03927e-21
      low eigenvalue method done, cpu time[sec] = 0.222672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.96e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-22  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.75788e-22  2.17155e-22   6.1192e-24  4.02654e-23  1.02085e-24  2.16092e-24  6.02737e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.95561e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.46305, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.91691, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1129.96      148.749      34.0585      44.9452      2.16815      587.957      43.6617
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003798, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53381e-11  3.73734e-21   7.3042e-22
      low eigenvalue method done, cpu time[sec] = 0.067221, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.15e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.60492e-22  1.41106e-22  4.02792e-24  2.44169e-23  6.35888e-25  2.02092e-24  6.05148e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.2882, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.73785e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            807.115      106.249      24.3275      32.1037      1.54868      419.969      31.1869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041612, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003801, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.63254e-12  3.06548e-21  5.67698e-22
      low eigenvalue method done, cpu time[sec] = 0.046018, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.07e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.68e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.42727e-22  1.04008e-22  3.01822e-24   1.7374e-23  4.60391e-25  1.88462e-24  6.08451e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.52009e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462855, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.93686, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            627.756      82.6383      18.9214      24.9696      1.20453      326.643      24.2565
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041583, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003807, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045765, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.75142e-11  2.62766e-21  4.65299e-22
      low eigenvalue method done, cpu time[sec] = 0.045992, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.73e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.66908e-22  8.19151e-23  2.41477e-24  1.33895e-23  3.59359e-25  1.76269e-24  6.11205e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28532, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.464151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94454, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             564.98      74.3744      17.0293      22.4726      1.08407      293.978      21.8309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04586, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.18694e-11  2.45938e-21  4.26884e-22
      low eigenvalue method done, cpu time[sec] = 0.046091, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16    3.381e-22   7.3906e-23  2.19477e-24  1.19838e-23  3.23334e-25  1.70731e-24  6.12775e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.15267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.86682e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            376.653       49.583      11.3528      14.9817     0.722716      195.986      14.5539
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041634, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003813, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12672e-11  1.88963e-21  3.01631e-22
      low eigenvalue method done, cpu time[sec] = 0.046057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.42658e-22  4.89822e-23  1.50189e-24  7.74158e-24  2.13093e-25  1.47662e-24  6.20131e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.82242e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463835, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.98868, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             282.49      37.1872      8.51463      11.2363     0.542037      146.989      10.9154
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003809, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.15078e-12  1.55406e-21  2.32131e-22
      low eigenvalue method done, cpu time[sec] = 0.04596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.88598e-22   3.6044e-23  1.13393e-24  5.61981e-24  1.56841e-25    1.303e-24  6.27554e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.33884, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.77803e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463286, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.92252, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            225.992      29.7498       6.8117      8.98905      0.43363      117.591      8.73234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041783, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003837, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045983, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.71998e-12  1.32889e-21  1.87743e-22
      low eigenvalue method done, cpu time[sec] = 0.046214, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.9e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.53604e-22   2.8171e-23  9.05321e-25  4.35618e-24  1.22856e-25  1.16728e-24  6.34419e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.28809, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.46231, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94832, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            188.327      24.7915      5.67642      7.49087     0.361358      97.9928      7.27695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045954, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19033e-11  1.16569e-21   1.5691e-22
      low eigenvalue method done, cpu time[sec] = 0.04618, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.29063e-22  2.29061e-23  7.49601e-25  3.52296e-24  1.00196e-25  1.05792e-24  6.41322e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.36892e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.464224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            161.423      21.2498       4.8655      6.42075     0.309736      83.9938      6.23739
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003815, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045795, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.34287e-12  1.04117e-21  1.34252e-22
      low eigenvalue method done, cpu time[sec] = 0.046031, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.10892e-22  1.91547e-23  6.36803e-25  2.93509e-24  8.40623e-26  9.67611e-25  6.47138e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29608, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.56448e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462374, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.94977, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.245      18.5936      4.25732      5.61816     0.271019      73.4946      5.45771
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042023, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0571e-12   9.4259e-22  1.16913e-22
      low eigenvalue method done, cpu time[sec] = 0.046435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.43e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.69032e-23  1.63578e-23  5.51456e-25  2.49996e-24  7.20288e-26  8.91601e-25  6.52696e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29997, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 26959 1/cm
      Energy step      = 133 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01013
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.310711
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.26666
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.240153
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.34916
         W1 Well: minimal relaxation eigenvalue = 0.0199642
         W1 Well: maximal relaxation eigenvalue = 4.03054
         W1 Well:       grid size = 441
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31694 1/cm
         B1 Barrier:        grid size = 203
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 92 1/cm
         B3 Barrier:        grid size = 238
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4695 1/cm
         B4 Barrier:        grid size = 250
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23315 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23315 1/cm
         B6 Barrier:        grid size = 192
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4614 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.46572, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31694 -23315 4.18e+05 4.73e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 4.98e+14
         B2     93 7.29e+13
         B3  -4695 1.77e+13
         B4  -6291 2.27e+13
         B5 -23315 1.11e+12
         B6   1423 2.95e+14
         B7   4615 2.53e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1      81.8       143     0.293    0.0168  2.25e-16  2.24e+04  1.87e+07
          R    0.0122         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1   0.00699     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2      3.41       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3      59.4  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  4.45e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5  4.47e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  5.34e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0498     0.087  0.000178  1.02e-05  1.37e-19      13.6  1.14e+04
          R      20.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1      11.5     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2  5.61e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3  9.77e+04  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  7.32e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5    0.0735   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  8.79e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
   MasterEquation::set:  done, cpu time[sec] = 2.47566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+08
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.399845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.04627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8930.91      1308.03      317.312      406.357      19.9428      5292.23      454.047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.60016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.60029e-10  2.51498e-17  6.28922e-18
      low eigenvalue method done, cpu time[sec] = 1.61113, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.51e-17  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.02e-19  6.66e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16   4.4239e-18  1.45725e-18  4.24922e-20   3.2489e-19  7.85797e-21  9.67792e-21  6.47592e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80183, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394339, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.41762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2976.97      436.011      105.771      135.452       6.6476      1764.08      151.349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22894, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23962, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.78811e-10   1.5561e-17   3.5828e-18
      low eigenvalue method done, cpu time[sec] = 1.24003, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.69984e-18  7.09229e-19  2.02372e-20  1.27402e-19  3.27559e-21  9.62872e-21  6.50026e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76031, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.76639e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.397243, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.67663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1786.18      261.607      63.4625      81.2714      3.98856      1058.45      90.8095
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.06135, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07208, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.08089e-12  1.21064e-17  2.63437e-18
      low eigenvalue method done, cpu time[sec] = 1.07284, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   2.0377e-18    4.806e-19  1.39944e-20  8.10305e-20  2.14226e-21  9.20191e-21  6.52576e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85665, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.47295e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.397258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.65171, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1275.84      186.862      45.3303       58.051      2.84897      756.033      64.8639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.985677, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.996533, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.97605e-12  1.01491e-17  2.11396e-18
      low eigenvalue method done, cpu time[sec] = 0.996951, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.66033e-18  3.65011e-19  1.08557e-20   5.9623e-20  1.60498e-21  8.74479e-21  6.55226e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.75395, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.17951e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            992.323      145.337      35.2569      45.1508      2.21587      588.026      50.4497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.903119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003149, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913731, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.57587e-11  8.84367e-18  1.77655e-18
      low eigenvalue method done, cpu time[sec] = 0.914164, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.84e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.40998e-18  2.94331e-19  8.92282e-21  4.71662e-20   1.2866e-21  8.31554e-21  6.57964e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76406, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.77264, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            893.091      130.803      31.7312      40.6357      1.99428      529.223      45.4047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.855831, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.866715, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.20101e-11  8.33473e-18  1.64754e-18
      low eigenvalue method done, cpu time[sec] = 0.867148, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.33e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.31302e-18  2.68269e-19  8.20447e-21  4.26911e-20  1.17095e-21   8.1151e-21  6.59354e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         5.29918e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.398922, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.94656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            595.394      87.2022      21.1542      27.0905      1.32952      352.815      30.2698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.711475, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.722756, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.47674e-11   6.5774e-18  1.21541e-18
      low eigenvalue method done, cpu time[sec] = 0.723187, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.58e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.82948e-19  1.85204e-19  5.87987e-21  2.88416e-20  8.07728e-22  7.24833e-21  6.66385e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77884, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.06557e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.04566, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            446.546      65.4017      15.8656      20.3178      0.99714      264.612      22.7024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.625296, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003127, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.63577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.62496e-11  5.51322e-18  9.65878e-19
      low eigenvalue method done, cpu time[sec] = 0.636206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.51e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.88397e-19  1.40507e-19  4.59424e-21  2.16445e-20  6.14969e-22  6.56363e-21   6.7338e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.83196e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.39568, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.14964, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            357.236      52.3213      12.6925      16.2543     0.797712      211.689      18.1619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.517594, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003127, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.528151, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.99843e-12  4.78438e-18  8.01561e-19
      low eigenvalue method done, cpu time[sec] = 0.528575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.78e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.55e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   6.5856e-19  1.12544e-19  3.77015e-21  1.72301e-20   4.9494e-22  6.00898e-21  6.80101e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78483, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.09116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            297.697      43.6011      10.5771      13.5452      0.66476      176.408      15.1349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.567877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.578441, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14655e-11  4.24744e-18  6.84531e-19
      low eigenvalue method done, cpu time[sec] = 0.578893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.48e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.65194e-19  9.34119e-20  3.19413e-21  1.42475e-20  4.12884e-22  5.54893e-21  6.86413e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78252, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.23647e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.398567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.2067, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            255.169      37.3724      9.06607      11.6102     0.569794      151.207      12.9728
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.451805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.462593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74842e-11  3.83219e-18  5.96685e-19
      low eigenvalue method done, cpu time[sec] = 0.463008, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.83e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.65e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.94593e-19   7.9514e-20  2.76772e-21  1.20996e-20  3.53221e-22  5.15983e-21  6.92228e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78328, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.41311e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.400094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.2407, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            223.273      32.7008      7.93281      10.1589      0.49857      132.306      11.3512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.408898, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.419796, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.48438e-11  3.49966e-18  5.28205e-19
      low eigenvalue method done, cpu time[sec] = 0.420211, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.5e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.99e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.39231e-19  6.89754e-20  2.43888e-21  1.04809e-20  3.07891e-22  4.82548e-21  6.97513e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77553, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 29740 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009298
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.29098
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.229858
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.218961
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.11195
         W1 Well: minimal relaxation eigenvalue = 0.0184968
         W1 Well: maximal relaxation eigenvalue = 1.34157
         W1 Well:       grid size = 409
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31610 1/cm
         B1 Barrier:        grid size = 199
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -110 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 189 1/cm
         B3 Barrier:        grid size = 229
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6260 1/cm
         B5 Barrier: nonpositive number of states at -23211 1/cm => truncating
         B5 Barrier:        grid size = 353
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23211 1/cm
         B6 Barrier:        grid size = 189
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1389 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.14253, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31610 -23211 4.51e+05 7.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -110 1.09e+15
         B2    190 1.77e+14
         B3  -4611 4.52e+13
         B4  -6260 5.64e+13
         B5 -23211 2.81e+12
         B6   1390 7.24e+14
         B7   4689 7.02e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1     0.114     0.197   0.00103  8.19e-05  4.25e-17      22.5  1.04e+04
          R      8.76         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1      5.07     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2       975       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.22e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  2.35e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5    0.0445   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6  9.61e-05   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.84e-05  0.000135  7.04e-07  5.62e-08  2.92e-20    0.0154      7.14
          R  1.28e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1  7.39e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.42e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.78e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.42e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5      64.8   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6      0.14   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
   MasterEquation::set:  done, cpu time[sec] = 2.15299, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.341791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.15762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              13297      2156.51      549.703      686.186      34.1723       8812.1      854.868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.1818, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002829, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.21863, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.63619e-11  1.15962e-14  3.07589e-15
      low eigenvalue method done, cpu time[sec] = 2.21904, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-14  3.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-16  3.11e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.10862e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.10862e-15  2.19758e-15  6.86764e-16  2.00479e-17  1.48011e-16  3.61652e-18  6.25081e-18  8.57018e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.31949, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.332318, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.38546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4432.32      718.838      183.234      228.729      11.3908      2937.37      284.956
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002603, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.95149e-10  7.58001e-15  1.87397e-15
      low eigenvalue method done, cpu time[sec] = 1.42671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.58e-15  1.78e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-16  1.78e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.77636e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.77636e-15  1.42939e-15  3.55581e-16  1.03022e-17  6.24695e-17  1.62549e-18  6.30225e-18  8.59907e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.24463, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.61852e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.33186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.48705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2659.39      431.303      109.941      137.237      6.83446      1762.42      170.974
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.79576, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002637, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.70339e-11  6.05675e-15  1.42875e-15
      low eigenvalue method done, cpu time[sec] = 1.83286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.06e-15  1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-16  1.33e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.33227e-15  1.11714e-15  2.49332e-16  7.41543e-18  4.13111e-17   1.1062e-18  6.11597e-18  8.62934e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.24769, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26593e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.327249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.60122, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1899.57      308.073       78.529      98.0266      4.88175      1258.87      122.124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002635, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71668, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06906e-10  5.17028e-15   1.1764e-15
      low eigenvalue method done, cpu time[sec] = 1.71707, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-15  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.56e-17  8.88e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  9.33226e-16  1.94061e-16   5.9167e-18   3.1244e-17  8.52276e-19  5.89324e-18  8.66075e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.23985, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.91334e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.327137, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.71894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1477.44      239.613      61.0781      76.2429      3.79692      979.122      94.9854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.64829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002682, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68522, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.3189e-12  4.56783e-15  1.00883e-15
      low eigenvalue method done, cpu time[sec] = 1.68565, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-15  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.45e-17  8.88e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  8.08226e-16  1.59539e-16  4.97145e-18  2.52533e-17  6.98309e-19   5.6735e-18  8.69299e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.33369, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.328507, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.67998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1329.7      215.651      54.9703      68.6186      3.41723       881.21      85.4868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.59803, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002643, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63468, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91343e-11  4.33022e-15  9.43776e-16
      low eigenvalue method done, cpu time[sec] = 1.63508, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.01e-17  6.66e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  7.59068e-16  1.46635e-16  4.61473e-18  2.30698e-17  6.41547e-19  5.56824e-18  8.70932e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.24158, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.85556e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.32972, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.75744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            886.464      143.768      36.6469      45.7457      2.27815      587.473      56.9912
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52579, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002616, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56226, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.68573e-11  3.49623e-15  7.21041e-16
      low eigenvalue method done, cpu time[sec] = 1.56268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.5e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.47e-17  2.22e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.87981e-16  1.04702e-16  3.43479e-18  1.61733e-17  4.59488e-19  5.09716e-18   8.7919e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.16039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.47408e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.300643, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.88842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            664.848      107.826      27.4851      34.3093      1.70861      440.605      42.7434
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39596, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002631, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39588e-11  2.97936e-15  5.88221e-16
      low eigenvalue method done, cpu time[sec] = 1.43328, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.51e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.83838e-16  8.14712e-17  2.76051e-18  1.24768e-17  3.59763e-19  4.70884e-18  8.87373e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.21393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          8.0926e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.32795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.95863, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            531.879      86.2605      21.9881      27.4474      1.36689      352.484      34.1947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32773, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002611, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36412, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.79332e-11  2.61917e-15  4.98559e-16
      low eigenvalue method done, cpu time[sec] = 1.36451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.12593e-16  6.66056e-17   2.3172e-18  1.01546e-17  2.96122e-19  4.38449e-18  8.95254e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.25478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.344445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.96397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            443.232      71.8838      18.3234      22.8729      1.13908      293.737      28.4956
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32737, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002644, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36385, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.98495e-12  2.35011e-15  4.33387e-16
      low eigenvalue method done, cpu time[sec] = 1.36425, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-17  2.22e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.60309e-16  5.62429e-17   2.0008e-18  8.55429e-18  2.51727e-19  4.10883e-18  9.02694e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.13296e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.346717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.9737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            379.913      61.6147      15.7058      19.6053     0.976351      251.774      24.4248
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32368, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002623, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11713e-12  2.13959e-15  3.83611e-16
      low eigenvalue method done, cpu time[sec] = 1.36081, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.96e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.20083e-16  4.85944e-17  1.76236e-18   7.3822e-18  2.18883e-19  3.87091e-18  9.09614e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.15655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.29482e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.341752, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.07429, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            332.424      53.9128      13.7426      17.1547     0.854307      220.302      21.3717
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22739, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002621, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.82785e-12  1.96932e-15  3.44215e-16
      low eigenvalue method done, cpu time[sec] = 1.26449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-17  2.22e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.88059e-16  4.27131e-17  1.57558e-18  6.48572e-18  1.93549e-19  3.66286e-18  9.15976e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.29008, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 32520 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008798
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232999
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.203383
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.178277
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.980517
         W1 Well: minimal relaxation eigenvalue = 0.0172776
         W1 Well: maximal relaxation eigenvalue = 1.22198
         W1 Well:       grid size = 384
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31607 1/cm
         B1 Barrier:        grid size = 195
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 122 1/cm
         B3 Barrier:        grid size = 223
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 232
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23425 1/cm => truncating
         B5 Barrier:        grid size = 335
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23424 1/cm
         B6 Barrier:        grid size = 186
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4631 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.88277, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31607 -23424 3.86e+05  1.2e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 2.27e+15
         B2    123 4.05e+14
         B3  -4720 1.08e+14
         B4  -6223 1.32e+14
         B5 -23424 6.64e+12
         B6   1459 1.66e+15
         B7   4631 1.79e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  0.000594   0.00102  1.11e-05  1.15e-06  1.12e-17    0.0887      25.6
          R  1.68e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1       979     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  9.03e+04      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  8.66e+05       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4   8.9e+16  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5      11.3    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6    0.0391  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.52e-07  7.78e-07  8.43e-09  8.79e-10  8.55e-21  6.76e-05    0.0195
          R  2.21e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.29e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  1.19e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  1.14e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.17e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5  1.48e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6      51.4  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
   MasterEquation::set:  done, cpu time[sec] = 1.89248, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301402, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.23826, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18863.3      3372.26      897.344      1095.69      55.2577      13783.4      1487.43
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.19852, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.227973, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.44487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.84704e-11  1.46149e-12  4.06668e-13
      low eigenvalue method done, cpu time[sec] = 2.46189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-12  4.06e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-14  4.06e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.06342e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.06231e-13  2.95783e-13  8.81184e-14  2.58696e-15  1.85179e-14  4.56583e-16  1.05725e-15  2.60251e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.57329, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65528, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6287.75      1124.09      299.115      365.229      18.4192      4594.47       495.81
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.19879, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.207198, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.41308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03951e-10  9.99264e-13  2.61747e-13
      low eigenvalue method done, cpu time[sec] = 2.42964, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.99e-13  2.62e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-14  2.62e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.61791e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.6168e-13  2.02596e-13  4.80391e-14  1.41574e-15  8.30724e-15  2.18452e-16   1.0753e-15  2.61037e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95247, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.49937e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.81644, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3772.65      674.453      179.469      219.137      11.0515      2756.68      297.486
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.19218, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.207357, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.40633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27348e-10  8.16495e-13  2.05582e-13
      low eigenvalue method done, cpu time[sec] = 2.42328, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.16e-13  2.06e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-14  2.06e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.05835e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.05724e-13  1.62912e-13   3.4658e-14  1.05342e-15  5.67478e-15  1.53661e-16   1.0553e-15  2.61861e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.10713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.09912e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.81671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2694.75      481.752      128.192      156.527      7.89395      1969.06       212.49
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.1887, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.136091, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.33116, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.69685e-10  7.07755e-13  1.72892e-13
      low eigenvalue method done, cpu time[sec] = 2.33159, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.08e-13  1.73e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-14  1.73e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.72973e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.72862e-13  1.38897e-13  2.75322e-14  8.60391e-16  4.39145e-15   1.2118e-16  1.02755e-15  2.62712e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.69887e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.79881, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2095.92      374.696      99.7049      121.743      6.13974      1531.49       165.27
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.20239, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.118111, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.32727, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.95139e-11  6.32689e-13  1.50754e-13
      low eigenvalue method done, cpu time[sec] = 2.32771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.33e-13  1.51e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-14  1.51e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.50546e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.50546e-13  1.22246e-13  2.30033e-14  7.36264e-16  3.61376e-15  1.01115e-16  9.98621e-16  2.63584e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96641, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.30456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.85595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1886.33      337.226      89.7344      109.569      5.52577      1378.34      148.743
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.20634, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.083276, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.29607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.23864e-12  6.02793e-13  1.42052e-13
      low eigenvalue method done, cpu time[sec] = 2.29649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.03e-13  1.42e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-14  1.42e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.42109e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.42109e-13  1.15615e-13  2.12916e-14  6.88836e-16  3.32698e-15  9.36284e-17  9.84397e-16  2.64025e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98979, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.49812e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.304314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.99069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1257.55      224.818      59.8229      73.0457      3.68384      918.894      99.1619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.15516, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16325, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.13943e-11  4.96399e-13  1.11712e-13
      low eigenvalue method done, cpu time[sec] = 2.16367, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.96e-13  1.12e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-15  1.12e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1191e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.1191e-13  9.21101e-14  1.56387e-14  5.29103e-16  2.40586e-15  6.91985e-17  9.18546e-16   2.6625e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98788, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          5.9975e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.293155, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.07557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            943.163      168.613      44.8672      54.7843      2.76288       689.17      74.3714
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.07323, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.08123, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.73445e-11   4.2915e-13  9.31345e-14
      low eigenvalue method done, cpu time[sec] = 2.08165, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.29e-13  9.28e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.41e-15  9.28e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.28146e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.28146e-14  7.74172e-14  1.24309e-14  4.35345e-16   1.8995e-15  5.54654e-17  8.62063e-16  2.68452e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98018, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.49687e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.294289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.11539, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             754.53      134.891      35.8938      43.8274      2.21031      551.336      59.4972
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.03366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04168, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.75703e-12  3.81586e-13  8.03339e-14
      low eigenvalue method done, cpu time[sec] = 2.04215, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.82e-13  8.06e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.59e-15  8.06e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.06022e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.06022e-14  6.71575e-14  1.03395e-14  3.72404e-16  1.57505e-15  4.65229e-17  8.13558e-16   2.7058e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98149, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.294662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            628.775      112.409      29.9115      36.5229      1.84192      459.447       49.581
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.00437, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.59302e-11  3.45628e-13  7.08714e-14
      low eigenvalue method done, cpu time[sec] = 2.01309, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-13  7.08e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.97e-15  7.08e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.08322e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.08322e-14  5.95005e-14   8.8589e-15    3.267e-16   1.3478e-15  4.01796e-17  7.71436e-16  2.72601e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.04956e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.29506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.16885, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             538.95      96.3504      25.6384      31.3053      1.57879      393.812       42.498
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98443, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002233, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.08482e-11  3.17207e-13  6.35396e-14
      low eigenvalue method done, cpu time[sec] = 1.99276, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.17e-13  6.39e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.48e-15  6.39e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.39488e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.39488e-14  5.35242e-14   7.7515e-15  2.91747e-16    1.179e-15  3.54193e-17  7.34428e-16  2.74497e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.1995e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.2954, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.21677, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            471.581      84.3066      22.4336      27.3921      1.38144      344.585      37.1857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93098, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00224, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93922, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.43867e-11  2.94018e-13  5.76631e-14
      low eigenvalue method done, cpu time[sec] = 1.93966, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-13   5.8e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.08e-15   5.8e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.79536e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.79536e-14  4.87064e-14  6.88997e-15   2.6401e-16   1.0483e-15   3.1701e-17  7.01569e-16  2.76258e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.984, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 35300 1/cm
      Energy step      = 183 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008594
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.235171
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.179487
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.178774
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.85396
         W1 Well: minimal relaxation eigenvalue = 0.0162864
         W1 Well: maximal relaxation eigenvalue = 1.5862
         W1 Well:       grid size = 366
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31677 1/cm
         B1 Barrier:        grid size = 193
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 164 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4777 1/cm
         B4 Barrier:        grid size = 227
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23443 1/cm => truncating
         B5 Barrier:        grid size = 321
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23442 1/cm
         B6 Barrier:        grid size = 185
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1445 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4556 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.7329, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31677 -23442 3.81e+05 1.86e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 4.48e+15
         B2    165 8.79e+14
         B3  -4777 2.43e+14
         B4  -6241 2.91e+14
         B5 -23442 1.48e+13
         B6   1446 3.57e+15
         B7   4557 4.23e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.04e-06  1.38e-05  2.71e-07  3.52e-08  3.77e-18  0.000946     0.185
          R  1.24e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  7.22e+04     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  3.69e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  2.84e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  2.65e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.06e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6       5.4  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.72e-09  1.16e-08  2.27e-10  2.94e-11  3.15e-21  7.91e-07  0.000155
          R  1.49e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  8.64e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.41e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3   3.4e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.17e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.27e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6  6.47e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
   MasterEquation::set:  done, cpu time[sec] = 1.74262, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.02688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25710.1      5044.75      1393.85      1669.49       85.125      20478.9      2426.93
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92848, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186808, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14423, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.26813e-10  7.22276e-11  2.10121e-11
      low eigenvalue method done, cpu time[sec] = 2.15832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.22e-11   2.1e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-12   2.1e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.10119e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.09622e-11   1.5426e-11   4.4093e-12  1.30273e-13  9.06906e-13   2.2545e-14   6.7398e-14  2.71561e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274853, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.17096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8570.03      1681.58      464.617      556.498       28.375      6826.29      808.977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93731, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185551, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15184, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.78839e-10  5.12647e-11  1.41523e-11
      low eigenvalue method done, cpu time[sec] = 2.16668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.13e-11  1.42e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.35e-13  1.42e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.41522e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.41188e-11  1.10266e-11   2.5084e-12    7.517e-14   4.2831e-13  1.13703e-14  6.90046e-14  2.72305e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.11961, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.40104e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15423, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5142.02      1008.95       278.77      333.899       17.025      4095.77      485.386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93727, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15206, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.26148e-10  4.26882e-11  1.13935e-11
      low eigenvalue method done, cpu time[sec] = 2.1662, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.27e-11  1.14e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-13  1.14e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.13933e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.13664e-11  9.07852e-12  1.85322e-12  5.75157e-14  3.00716e-13   8.2243e-15  6.83085e-14  2.73082e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.10425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.96146e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276622, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.28007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3672.87      720.678      199.121      238.499      12.1607      2925.55      346.704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93656, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185749, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15111, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44142e-10  3.74905e-11  9.75214e-12
      low eigenvalue method done, cpu time[sec] = 2.16519, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-11  9.75e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-13  9.75e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.7522e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.72911e-12  7.87257e-12  1.49764e-12  4.79091e-14  2.37267e-13   6.6148e-15  6.70554e-14  2.73884e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.22933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.52188e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.28915, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2856.68      560.527      154.872      185.499      9.45833      2275.43      269.659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94249, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1565, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9427e-10   3.3855e-11  8.62236e-12
      low eigenvalue method done, cpu time[sec] = 2.17049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-11  8.62e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.51e-13  8.62e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.62266e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.60223e-12   7.0224e-12  1.26842e-12  4.16327e-14   1.9824e-13   5.6052e-15  6.56528e-14  2.74702e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.24228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275082, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.31999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2571.01      504.475      139.385      166.949       8.5125      2047.89      242.693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94212, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185269, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.62255e-10  3.23951e-11  8.17365e-12
      low eigenvalue method done, cpu time[sec] = 2.17148, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-11  8.17e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.28e-13  8.17e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.17324e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.15392e-12  6.68024e-12  1.18098e-12  3.92098e-14  1.83709e-13  5.22477e-15  6.49417e-14  2.75116e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.275, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         4.20313e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276575, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.41416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1714.01      336.316      92.9233        111.3        5.675      1365.26      161.795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.9428, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185832, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15782, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.67489e-11  2.71381e-11  6.58538e-12
      low eigenvalue method done, cpu time[sec] = 2.17219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-11  6.59e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-13  6.59e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.5854e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.56986e-12   5.4486e-12  8.88387e-13  3.09271e-14  1.36386e-13  3.96556e-15  6.15268e-14  2.77195e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.39148, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.60417e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.48367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1285.5      252.237      69.6925      83.4747      4.25625      1023.94      121.347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15702, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.65337e-11  2.37589e-11  5.59115e-12
      low eigenvalue method done, cpu time[sec] = 2.17106, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.38e-11  5.59e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-13  5.59e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.59108e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.57787e-12  4.66138e-12  7.19024e-13  2.59563e-14  1.09821e-13  3.24237e-15  5.84782e-14  2.79252e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.43922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.00522e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.54183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1028.4       201.79       55.754      66.7797        3.405      819.154      97.0773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93525, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15012, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.83979e-11  2.13381e-11  4.89426e-12
      low eigenvalue method done, cpu time[sec] = 2.16444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-11  4.89e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-13  4.89e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.89431e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.88276e-12  4.10216e-12  6.06876e-13  2.25609e-14   9.2519e-14  2.76349e-15  5.57901e-14  2.81241e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.48908, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275023, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.5601, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            857.003      168.158      46.4617      55.6498       2.8375      682.629      80.8977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.186172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1515, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02498e-10  1.94889e-11  4.37179e-12
      low eigenvalue method done, cpu time[sec] = 2.16565, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.95e-11  4.37e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-13  4.37e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.37161e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.36129e-12  3.67885e-12  5.26451e-13  2.00597e-14  8.02336e-14  2.41904e-15  5.34086e-14  2.83137e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.51005, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          9.8073e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27548, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            734.574      144.136      39.8243      47.6998      2.43214       585.11      69.3409
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93914, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185878, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15365, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.92498e-11  1.80145e-11  3.96204e-12
      low eigenvalue method done, cpu time[sec] = 2.16773, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-11  3.96e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-13  3.96e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.9615e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.95217e-12  3.34446e-12  4.65629e-13  1.81231e-14  7.10014e-14  2.15745e-15  5.12819e-14  2.84927e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.55999, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.12083e+10
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276369, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60318, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            642.752      126.119      34.8462      41.7373      2.12812      511.971      60.6733
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94626, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185704, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16069, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.61865e-11  1.68023e-11  3.63014e-12
      low eigenvalue method done, cpu time[sec] = 2.17468, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-11  3.63e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-13  3.63e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.63021e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.62166e-12  3.07202e-12  4.17848e-13  1.65696e-14  6.37788e-14  1.95095e-15  4.93676e-14  2.86602e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.56113, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 38080 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007927
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.226474
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.168928
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.16718
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.748396
         W1 Well: minimal relaxation eigenvalue = 0.0154382
         W1 Well: maximal relaxation eigenvalue = 1.93464
         W1 Well:       grid size = 349
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31720 1/cm
         B1 Barrier:        grid size = 191
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -120 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 79 1/cm
         B3 Barrier:        grid size = 214
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23720 1/cm => truncating
         B5 Barrier:        grid size = 309
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23720 1/cm
         B6 Barrier:        grid size = 183
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.59771, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31720 -23720 3.11e+05 2.85e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -120 8.49e+15
         B2     80 1.82e+15
         B3  -4720  5.2e+14
         B4  -6320 6.13e+14
         B5 -23720 3.16e+13
         B6   1480 7.31e+15
         B7   4680 9.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.23e-07  3.85e-07  1.23e-08  1.91e-09  1.51e-18  2.12e-05   0.00301
          R  4.49e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1   2.6e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.15e+07      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.24e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  6.62e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  4.71e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6       333   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.03e-10  3.51e-10  1.12e-11  1.74e-12  1.38e-21  1.94e-08  2.74e-06
          R  4.92e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.85e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.93e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.73e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.25e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.16e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6  3.64e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
   MasterEquation::set:  done, cpu time[sec] = 1.60738, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.69084, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33891.9       7270.1       2076.6      2445.48        125.9      29158.8      3755.99
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.183108, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91122, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.10785e-10  1.75646e-09  5.33396e-10
      low eigenvalue method done, cpu time[sec] = 1.92401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-09  5.33e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-11  5.33e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.33396e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.32436e-10   3.9574e-10  1.08801e-10   3.2458e-12  2.20285e-11  5.51738e-13  2.06799e-12  1.26962e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.33161, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.853, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11297.3      2423.37        692.2       815.16      41.9667      9719.62         1252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70551, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87808, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.83763e-10  1.28734e-09  3.73383e-10
      low eigenvalue method done, cpu time[sec] = 1.89207, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-09  3.73e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-11  3.73e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.73382e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.72711e-10  2.93228e-10   6.4231e-11  1.95965e-12   1.0872e-11  2.91116e-13  2.12781e-12  1.27278e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.45995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.31828e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.90476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6778.37      1454.02       415.32      489.096        25.18      5831.77      751.199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70707, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165803, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.89282e-10  1.08972e-09  3.06963e-10
      low eigenvalue method done, cpu time[sec] = 1.89221, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-09  3.07e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-11  3.07e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.06963e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.06411e-10  2.46283e-10  4.84397e-11   1.5356e-12  7.81496e-12   2.1567e-13  2.12063e-12  1.27608e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.51042, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.84559e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.92489, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4841.69      1038.59      296.657      349.354      17.9857      4165.55       536.57
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7113, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166472, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88386, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.17534e-10  9.68029e-10  2.66704e-10
      low eigenvalue method done, cpu time[sec] = 1.89715, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.68e-10  2.67e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-11  2.67e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.66704e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.66224e-10  2.16652e-10  3.97292e-11  1.30079e-12  6.26961e-12  1.76417e-13  2.09521e-12  1.27948e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.53589, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          2.3729e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.95986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3765.76      807.789      230.733       271.72      13.9889      3239.87      417.333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71409, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166238, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.00274e-10  8.81932e-10  2.38607e-10
      low eigenvalue method done, cpu time[sec] = 1.90006, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-10  2.39e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-11  2.39e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.38606e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.38177e-10  1.95463e-10  3.40455e-11  1.14533e-12  5.30721e-12  1.51479e-13  2.06359e-12  1.28293e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.57401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252369, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.9991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3389.19       727.01       207.66      244.548        12.59      2915.88      375.599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19593e-09  8.47113e-10  2.27349e-10
      low eigenvalue method done, cpu time[sec] = 1.90113, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.47e-10  2.27e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-11  2.27e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.27349e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.2694e-10  1.86858e-10  3.18605e-11   1.0848e-12  4.94599e-12  1.42005e-13  2.04691e-12  1.28467e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.62128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.95484e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252952, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.0577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2259.46      484.673       138.44      163.032      8.39334      1943.92        250.4
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71622, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88968, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.58763e-10  7.20422e-10  1.86982e-10
      low eigenvalue method done, cpu time[sec] = 1.90404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.2e-10  1.87e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-11  1.87e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.86982e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.86646e-10  1.55474e-10  2.44657e-11  8.75264e-13  3.75585e-12  1.10269e-13  1.96331e-12  1.29342e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.6808, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         5.27312e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252681, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.1493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1694.59      363.505       103.83      122.274        6.295      1457.94        187.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71221, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167237, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.33293e-10   6.3778e-10  1.61234e-10
      low eigenvalue method done, cpu time[sec] = 1.89998, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-10  1.61e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.85e-12  1.61e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.61234e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.60944e-10   1.3503e-10  2.01126e-11  7.47143e-13  3.07594e-12   9.1711e-14  1.88538e-12  1.30205e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.77136, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          6.5914e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.253169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.11612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1355.67      290.804       83.064      97.8192        5.036      1166.35       150.24
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71514, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165893, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.887, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.42689e-10   5.7791e-10  1.42922e-10
      low eigenvalue method done, cpu time[sec] = 1.90134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.78e-10  1.43e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.92e-12  1.43e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.42922e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.42665e-10  1.20293e-10  1.71917e-11  6.58341e-13  2.62694e-12  7.92482e-14  1.81479e-12  1.31042e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.73577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.253437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.18971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1129.73      242.337        69.22       81.516      4.19667      971.962        125.2
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167294, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.59914e-10  5.31756e-10  1.29027e-10
      low eigenvalue method done, cpu time[sec] = 1.9088, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-10  1.29e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.21e-12  1.29e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.29027e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.28795e-10  1.09002e-10   1.5074e-11  5.92125e-13  2.30446e-12  7.01783e-14  1.75102e-12  1.31842e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.8186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         9.22796e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.253007, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.22395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            968.339      207.717      59.3315      69.8709      3.59714       833.11      107.314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71156, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.16674, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8852, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89427e-10  4.94671e-10  1.18018e-10
      low eigenvalue method done, cpu time[sec] = 1.89977, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.95e-10  1.18e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.64e-12  1.18e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.18017e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.17805e-10  9.99906e-11  1.34573e-11  5.40317e-13  2.05972e-12    6.322e-14  1.69319e-12  1.32601e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.85924, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.05462e+10
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251267, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.22172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            847.296      181.752       51.915       61.137       3.1475      728.971      93.8998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71054, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.169579, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88639, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.51659e-10  4.63975e-10  1.09019e-10
      low eigenvalue method done, cpu time[sec] = 1.89978, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.64e-10  1.09e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.16e-12  1.09e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.09019e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.08823e-10   9.2582e-11  1.21766e-11  4.98373e-13  1.86657e-12  5.76784e-14  1.64045e-12  1.33316e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.83366, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 40860 1/cm
      Energy step      = 217 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008431
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.172876
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.155382
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.193503
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.694209
         W1 Well: minimal relaxation eigenvalue = 0.0147175
         W1 Well: maximal relaxation eigenvalue = 1.22709
         W1 Well:       grid size = 334
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 189
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -153 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 63 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4710 1/cm
         B4 Barrier:        grid size = 217
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 295
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 182
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1365 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4620 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.50175, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23155  4.7e+05 4.29e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -153 1.55e+16
         B2     64 3.62e+15
         B3  -4710 1.07e+15
         B4  -6229 1.24e+15
         B5 -23155 6.42e+13
         B6   1366 1.43e+16
         B7   4621 1.99e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e-08  1.86e-08  8.91e-10  1.62e-10  6.96e-19  8.47e-07  9.12e-05
          R  9.35e+07         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.36e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.12e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.17e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.44e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.18e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6   1.1e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.06e-11  1.85e-11  8.83e-13  1.61e-13   6.9e-22   8.4e-10  9.04e-08
          R  9.43e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.41e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.13e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.22e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.45e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.19e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.11e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
   MasterEquation::set:  done, cpu time[sec] = 2.00558, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.232065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39499, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43417.1      10145.2      2985.73      3463.64      179.849      40059.1      5561.53
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51226, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.46576e-08  2.48446e-08  7.88311e-09
      low eigenvalue method done, cpu time[sec] = 1.6812, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-08  7.88e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.66e-10  7.88e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.88311e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   7.8639e-09  5.89432e-09  1.56559e-09  4.71704e-11  3.12712e-10  7.88686e-12  3.61879e-11  3.20282e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.74907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.51716, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14472.4      3381.73      995.243      1154.55      59.9496        13353      1853.84
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51357, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150656, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66984, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82029e-08    1.872e-08  5.70235e-09
      low eigenvalue method done, cpu time[sec] = 1.68221, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-08   5.7e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-10   5.7e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.70235e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.68846e-09  4.50281e-09  9.53948e-10  2.96164e-11  1.60338e-10  4.32745e-12  3.73808e-11  3.21012e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.85134, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.24747e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.58823, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8683.41      2029.04      597.146      692.728      35.9698      8011.81      1112.31
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51547, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49191e-08  1.60746e-08  4.77264e-09
      low eigenvalue method done, cpu time[sec] = 1.68466, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-08  4.77e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-10  4.77e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.77264e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.76101e-09  3.84671e-09  7.32226e-10  2.36904e-11  1.17625e-10  3.27304e-12  3.74572e-11  3.21771e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.9245, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.74645e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.60872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6202.44      1449.31      426.533      494.805      25.6927      5722.72      794.505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151528, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40982e-08  1.44231e-08  4.20012e-09
      low eigenvalue method done, cpu time[sec] = 1.6895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-08   4.2e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-10   4.2e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.20012e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.18988e-09  3.42558e-09  6.08256e-10  2.03606e-11  9.57364e-11  2.71673e-12  3.72015e-11  3.22548e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.94982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.24544e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.64078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4824.12      1127.24      331.748      384.849      19.9832      4451.01      617.948
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51816, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67407, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2862e-08   1.3243e-08  3.79581e-09
      low eigenvalue method done, cpu time[sec] = 1.68609, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-08   3.8e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-10   3.8e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.79581e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.78656e-09  3.12072e-09  5.26537e-10  1.81315e-11  8.19626e-11  2.35955e-12   3.6817e-11  3.23338e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.98021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23103, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.62442, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4341.71      1014.52      298.573      346.364      17.9849      4005.91      556.153
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51745, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67446, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29525e-08  1.27628e-08  3.63259e-09
      low eigenvalue method done, cpu time[sec] = 1.68664, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-08  3.63e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-10  3.63e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.63259e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.62374e-09  2.99595e-09  4.94917e-10  1.72574e-11  7.67581e-11  2.22291e-12  3.66022e-11  3.23736e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.9651, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          3.7424e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231149, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.73416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2894.47      676.347      199.049      230.909      11.9899       2670.6      370.769
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51512, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67313, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0888e-08  1.09996e-08  3.04086e-09
      low eigenvalue method done, cpu time[sec] = 1.68529, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-08  3.04e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-10  3.04e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.04086e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.03344e-09  2.53567e-09  3.86874e-10   1.4199e-11  5.94413e-11  1.76055e-12   3.5463e-11  3.25729e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.07095, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         4.98987e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.75554, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2170.85       507.26      149.286      173.182      8.99244      2002.95      278.077
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51593, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151319, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67289, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.70856e-09  9.83453e-09  2.65731e-09
      low eigenvalue method done, cpu time[sec] = 1.68569, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.83e-09  2.66e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-10  2.66e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.65731e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.65084e-09  2.23091e-09   3.2236e-10  1.22991e-11  4.94009e-11  1.48607e-12   3.4346e-11  3.27695e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.09682, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.23734e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.77872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1736.68      405.808      119.429      138.546      7.19396      1602.36      222.461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52264, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67938, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.99543e-09  8.98213e-09  2.38111e-09
      low eigenvalue method done, cpu time[sec] = 1.69251, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.98e-09  2.38e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-10  2.38e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.38111e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.37531e-09  2.00843e-09  2.78586e-10  1.09659e-11  4.26928e-11  1.29952e-12  3.33047e-11  3.29602e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1282, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231754, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1447.24      338.173      99.5243      115.455      5.99496       1335.3      185.384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52397, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68104, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.42479e-09  8.31969e-09  2.16936e-09
      low eigenvalue method done, cpu time[sec] = 1.69379, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.32e-09  2.17e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-10  2.17e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.16936e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.16407e-09  1.83619e-09  2.46551e-10  9.96143e-12  3.78278e-11   1.1624e-12  3.23448e-11  3.31432e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.14737, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         8.73227e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.83307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1240.49      289.863      85.3065      98.9611      5.13854      1144.54      158.901
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52404, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150981, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.76457e-09  7.78375e-09  2.00009e-09
      low eigenvalue method done, cpu time[sec] = 1.69357, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.78e-09     2e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-10     2e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.00009e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.99522e-09  1.69749e-09  2.21897e-10  9.16849e-12  3.41044e-11   1.0563e-12  3.14607e-11  3.33175e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.18267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         9.97974e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.81743, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1085.43       253.63      74.6432      86.5909      4.49622      1001.48      139.038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150278, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67033, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.41237e-09   7.3375e-09  1.86066e-09
      low eigenvalue method done, cpu time[sec] = 1.68301, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.34e-09  1.86e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-10  1.86e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.86066e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.85612e-09  1.58258e-09  2.02229e-10  8.52144e-12  3.11441e-11  9.71156e-13  3.06443e-11  3.34826e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.15861, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 43640 1/cm
      Energy step      = 233 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007702
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178882
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.144179
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.182574
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.637192
         W1 Well: minimal relaxation eigenvalue = 0.0140948
         W1 Well: maximal relaxation eigenvalue = 1.24282
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 188
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -163 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 69 1/cm
         B3 Barrier:        grid size = 208
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4823 1/cm
         B4 Barrier:        grid size = 214
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23231 1/cm => truncating
         B5 Barrier:        grid size = 287
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23230 1/cm
         B6 Barrier:        grid size = 181
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4496 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.4217, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23230 4.44e+05 6.38e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -163 2.73e+16
         B2     70  6.9e+15
         B3  -4823  2.1e+15
         B4  -6222  2.4e+15
         B5 -23230 1.26e+14
         B6   1467 2.69e+16
         B7   4497    4e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.99e-10  1.41e-09  9.47e-11  1.97e-11   3.6e-19  5.36e-08  4.56e-06
          R  1.25e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  7.11e+08     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.06e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  5.08e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.77e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.87e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.19e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.5e-13   1.5e-12  1.01e-13  2.09e-14  3.83e-22   5.7e-11  4.85e-09
          R  1.18e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  6.69e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  9.93e+12      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  4.78e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.61e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.75e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.06e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
   MasterEquation::set:  done, cpu time[sec] = 1.43164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.214744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18798, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54025.1        13687      4163.55      4765.53      249.345      53287.5      7932.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.23e-07  7.61e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.14e-09  7.61e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.61012e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.59794e-08  5.73592e-08  1.47703e-08  4.49635e-10  2.91648e-09  7.40324e-11  4.09334e-10  4.97755e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7994, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.214748, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.28885, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18008.4      4562.33      1387.85      1588.51      83.1151      17762.5      2644.22
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-07  5.66e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.49e-09  5.66e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.66337e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.65431e-08  4.49874e-08   9.2513e-09  2.92141e-10  1.54614e-09  4.20371e-11  4.23556e-10  4.98795e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.89714, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.18603e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.3466, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              10805       2737.4      832.709      953.105      49.8691      10657.5      1586.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-07  4.81e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-09  4.81e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.81401e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   4.8063e-08  3.90005e-08  7.21107e-09  2.37923e-10  1.15467e-09  3.23764e-11  4.25996e-10  4.99872e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.95768, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.66044e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21586, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39151, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7717.87      1955.28      594.792      680.789      35.6208       7612.5      1133.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-07  4.28e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-09  4.28e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.28373e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.27688e-08  3.51004e-08   6.0571e-09  2.07082e-10  9.51742e-10  2.72194e-11  4.24725e-10  5.00973e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.00168, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.13485e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.214771, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.44434, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6002.79      1520.78      462.616      529.503       27.705      5920.83      881.405
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-07  3.91e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-09  3.91e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.9054e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.89916e-08  3.22463e-08  5.28982e-09  1.86241e-10  8.22924e-10  2.38784e-11  4.21893e-10  5.02088e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.05484, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.43226, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5402.51       1368.7      416.355      476.553      24.9345      5328.75      793.265
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-07  3.75e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-09  3.75e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.75168e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.74568e-08  3.10703e-08  4.99127e-09  1.78018e-10  7.73972e-10  2.25929e-11  4.20174e-10  5.02649e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.04174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         3.55809e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.44052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3601.67      912.466       277.57      317.702       16.623       3552.5      528.843
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-07  3.19e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-09  3.19e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.189e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   3.1839e-08  2.66884e-08  3.96279e-09  1.48986e-10  6.09731e-10  1.82055e-11  4.10378e-10  5.05458e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.05006, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         4.74412e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215921, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.53681, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2701.26       684.35      208.177      238.276      12.4673      2664.37      396.632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.13958, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53694, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.78371e-08  9.78878e-08  2.81918e-08
      low eigenvalue method done, cpu time[sec] = 1.54893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.79e-08  2.82e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-09  2.82e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.81918e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.81467e-08  2.37453e-08  3.34115e-09  1.30708e-10  5.13296e-10  1.55671e-11  4.00205e-10  5.08229e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.69754, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.93015e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.09344, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               2161       547.48      166.542      190.621      9.97381       2131.5      317.306
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40051, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139741, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54586, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.99277e-08  9.00414e-08  2.54997e-08
      low eigenvalue method done, cpu time[sec] = 1.55761, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     9e-08  2.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-09  2.55e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.54997e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.54589e-08  2.15729e-08  2.91529e-09  1.17743e-10  4.48224e-10  1.37556e-11  3.90427e-10   5.1092e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.27994, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.56035, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1800.84      456.233      138.785      158.851      8.31151      1776.25      264.422
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39514, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139193, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.37713e-08  8.38994e-08  2.34172e-08
      low eigenvalue method done, cpu time[sec] = 1.55143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.39e-08  2.34e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-09  2.34e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.34172e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.33797e-08  1.98759e-08  2.60114e-09  1.07888e-10  4.00636e-10  1.24127e-11  3.81227e-10   5.1351e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.72308, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          8.3022e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216864, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.62258, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1543.57      391.057      118.958      136.158      7.12415       1522.5      226.647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39928, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139821, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54467, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.89665e-08  7.88997e-08  2.17397e-08
      low eigenvalue method done, cpu time[sec] = 1.55588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.89e-08  2.17e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-09  2.17e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.17397e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.17049e-08  1.84987e-08   2.3577e-09  1.00048e-10  3.63952e-10  1.13658e-11  3.72622e-10  5.15985e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.78996, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         9.48823e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.61452, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1350.63      342.175      104.089      119.138      6.23363      1332.19      198.316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39595, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.141304, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.48254e-08  7.47143e-08  2.03486e-08
      low eigenvalue method done, cpu time[sec] = 1.55376, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.47e-08  2.03e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-09  2.03e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.03486e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.0316e-08  1.73499e-08   2.1623e-09  9.36076e-11    3.346e-10  1.05203e-11  3.64578e-10  5.18341e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.77738, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 46420 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007611
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188391
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.135504
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.153821
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.571511
         W1 Well: minimal relaxation eigenvalue = 0.0135538
         W1 Well: maximal relaxation eigenvalue = 1.23193
         W1 Well:       grid size = 312
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31579 1/cm
         B1 Barrier:        grid size = 186
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 185
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 170 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4829 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6329 1/cm
         B5 Barrier: nonpositive number of states at -23580 1/cm => truncating
         B5 Barrier:        grid size = 280
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23579 1/cm
         B6 Barrier:        grid size = 180
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4670 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.3308, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31579 -23579 3.45e+05 9.35e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 4.63e+16
         B2    171 1.26e+16
         B3  -4829 3.99e+15
         B4  -6329 4.52e+15
         B5 -23579 2.38e+14
         B6   1421 4.85e+16
         B7   4671 7.73e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.41e-11   1.5e-10  1.35e-11  3.15e-12  2.03e-19  4.85e-09  3.36e-07
          R  1.19e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  6.68e+09     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2   7.4e+10      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  3.17e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.93e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  2.06e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.97e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.61e-14  1.71e-13  1.54e-14   3.6e-15  2.32e-22  5.54e-12  3.84e-10
          R  1.04e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  5.85e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  6.48e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  2.78e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.32e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5   1.8e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.61e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
   MasterEquation::set:  done, cpu time[sec] = 1.34088, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.20333, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.02481, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65495.3      17897.1       5653.9      6393.65      336.835      68694.1      10943.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-06  5.25e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-08  5.25e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.24849e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  5.23669e-07  3.97934e-07  9.94152e-08  3.06681e-09  1.94926e-08  4.97782e-10  3.25693e-09  5.25572e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.61693, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.11365, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21831.8      5965.71      1884.63      2131.22      112.278        22898      3647.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-06     4e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-08     4e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.00389e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.99488e-07  3.19289e-07  6.38345e-08  2.05317e-09  1.06399e-08  2.91262e-10  3.37552e-09  5.26587e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.68538, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.13208e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15841, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13099.1      3579.42      1130.78      1278.73      67.3671      13738.8      2188.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-06  3.45e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-08  3.45e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.44983e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.44207e-07  2.80351e-07  5.04475e-08  1.69864e-09  8.07143e-09  2.27927e-10  3.40558e-09  5.27633e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.73052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.58492e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.200664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.18384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9356.47      2556.73        807.7      913.379      48.1193      9813.44       1563.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.5e-07   3.1e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-08   3.1e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.09974e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.09277e-07  2.54652e-07  4.27974e-08  1.49492e-09  6.72717e-09  1.93787e-10  3.40636e-09  5.28699e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.75768, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.03775e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.22244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7277.25      1988.57      628.211      710.406      37.4262      7632.67      1215.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.85e-07  2.85e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-08  2.85e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.84773e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.84133e-07  2.35666e-07  3.76717e-08  1.35616e-09  5.86756e-09  1.71503e-10  3.39408e-09  5.29777e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.79766, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202802, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.23253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6549.53      1789.71       565.39      639.365      33.6835      6869.41      1094.38
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.57e-07  2.74e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-08  2.74e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.74475e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.73858e-07  2.27796e-07  3.56675e-08  1.30113e-09  5.53933e-09  1.62887e-10  3.38523e-09  5.30318e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.80607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         3.39625e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203035, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.26693, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4366.35      1193.14      376.927      426.244      22.4557       4579.6      729.585
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.56e-07  2.36e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-08  2.36e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3646e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.35928e-07  1.98213e-07   2.8713e-08  1.10534e-09  4.43025e-09  1.33266e-10  3.32856e-09  5.33025e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.84162, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.52834e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.29395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3274.76      894.856      282.695      319.683      16.8418       3434.7      547.189
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.87e-07  2.11e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.35e-09  2.11e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.11169e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.10695e-07  1.78092e-07  2.44643e-08  9.80635e-10  3.77205e-09  1.15257e-10  3.26489e-09  5.35691e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.66042e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202191, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.30623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2619.81      715.885      226.156      255.746      13.4734      2747.76      437.751
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.36e-07  1.93e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.66e-09  1.93e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.92583e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.9215e-07  1.63096e-07  2.15292e-08  8.91372e-10  3.32412e-09  1.02784e-10   3.2014e-09  5.38284e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.87897, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.33941, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2183.18      596.571      188.463      213.122      11.2278       2289.8      364.793
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.96e-07  1.78e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.11e-09  1.78e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.78093e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.77692e-07  1.51287e-07  1.93488e-08  8.22999e-10  2.99421e-09  9.34694e-11  3.14025e-09  5.40784e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91246, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         7.92459e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202915, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.37196, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1871.29      511.346       161.54      182.676      9.62387      1962.69      312.679
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.63e-07  1.66e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.66e-09  1.66e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.66341e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.65967e-07  1.41638e-07  1.76488e-08  7.68247e-10  2.73831e-09  8.61626e-11  3.08209e-09  5.43182e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94581, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         9.05668e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203263, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.46122, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1637.38      447.428      141.348      159.841      8.42089      1717.35      273.595
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.36e-07  1.57e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.29e-09  1.57e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.56538e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.56186e-07  1.33541e-07   1.6277e-08     7.23e-10  2.53243e-09  8.02275e-11  3.02701e-09  5.45472e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.03778, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 49201 1/cm
      Energy step      = 267 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007212
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.181288
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.127742
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.141556
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.539688
         W1 Well: minimal relaxation eigenvalue = 0.0130719
         W1 Well: maximal relaxation eigenvalue = 1.45799
         W1 Well:       grid size = 303
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31699 1/cm
         B1 Barrier:        grid size = 185
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -194 1/cm
         B2 Barrier:        grid size = 184
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 72 1/cm
         B3 Barrier:        grid size = 202
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4733 1/cm
         B4 Barrier:        grid size = 208
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6335 1/cm
         B5 Barrier: nonpositive number of states at -23423 1/cm => truncating
         B5 Barrier:        grid size = 272
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23423 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4611 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.26243, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31699 -23423 3.87e+05 1.36e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -194 7.62e+16
         B2     73 2.23e+16
         B3  -4733 7.36e+15
         B4  -6335 8.23e+15
         B5 -23423 4.36e+14
         B6   1409 8.46e+16
         B7   4612 1.43e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e-11  2.12e-11  2.46e-12  6.37e-13  1.23e-19  5.92e-10  3.43e-08
          R  8.49e+10         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  4.72e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  4.06e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.57e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  8.13e+18  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.69e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  2.92e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.43e-14  2.58e-14     3e-15  7.76e-16   1.5e-22  7.22e-13  4.17e-11
          R  6.97e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  3.87e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  3.33e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.29e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  6.67e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.39e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6   2.4e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 1.2721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.88173, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            77659.5      22785.5       7502.2      8391.58       444.84      86209.3      14602.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.45e-06  2.75e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.85e-08  2.75e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.75356e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999997  2.74894e-06  2.10002e-06  5.11324e-07  1.59603e-08   9.9539e-08  2.55618e-09  1.95015e-08  4.05376e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191577, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98225, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25886.5      7595.17      2500.73      2797.19       148.28      28736.4      4867.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.99e-06  2.15e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.92e-08  2.15e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.14687e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  2.14327e-06  1.71922e-06  3.35495e-07   1.0974e-08  5.57649e-08  1.53625e-09  2.02359e-08  4.06101e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52438, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.08423e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.19146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.01659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15531.9       4557.1      1500.44      1678.32      88.9681      17241.9      2920.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.33e-06  1.87e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-08  1.87e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.87193e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.86879e-06  1.52661e-06  2.68347e-07  9.20668e-09  4.28959e-08  1.21932e-09  2.04677e-08  4.06844e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.55736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.51792e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.19219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03292, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11094.2      3255.07      1071.74       1198.8      63.5486      12315.6      2086.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-06   1.7e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.46e-08   1.7e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.69636e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.69352e-06  1.39797e-06  2.29641e-07  8.18229e-09  3.61056e-08  1.04707e-09  2.05268e-08    4.076e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57533, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.95162e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8628.83      2531.72      833.578      932.398      49.4267      9578.81      1622.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.58e-06  1.57e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.05e-08  1.57e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.56898e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.56635e-06  1.30211e-06  2.03539e-07  7.47984e-09  3.17363e-08  9.33926e-10  2.05052e-08  4.08363e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.19165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07372, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7765.95      2278.55       750.22      839.158       44.484      8620.93      1460.29
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.45e-06  1.52e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.87e-08  1.52e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.51667e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.51413e-06  1.26217e-06   1.9329e-07  7.20004e-09  3.00611e-08  8.89994e-10  2.04769e-08  4.08745e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.61603, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.25269e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5177.3      1519.03      500.147      559.439       29.656      5747.29      973.525
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-06  1.32e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-08  1.32e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.32212e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.31991e-06  1.11081e-06  1.57509e-07  6.19786e-09  2.43663e-08  7.38019e-10  2.02478e-08  4.10655e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.63167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.33693e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.12272, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3882.97      1139.28       375.11      419.579       22.242      4310.47      730.144
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-06  1.19e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.79e-08  1.19e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1913e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999   1.1893e-06   1.0067e-06  1.35449e-07  5.55322e-09  2.09556e-08  6.44753e-10  1.99581e-08  4.12536e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.66521, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.42116e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190853, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3106.38      911.421      300.088      335.663      17.7936      3448.37      584.115
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.38e-06  1.09e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-08  1.09e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.09436e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.09252e-06   9.2844e-07    1.201e-07  5.08813e-09  1.86175e-08  5.79672e-10  1.96549e-08  4.14368e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.69386, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191024, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15747, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2588.65      759.517      250.073      279.719       14.828      2873.64      486.763
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-06  1.02e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.19e-08  1.02e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.01825e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.01654e-06  8.66375e-07  1.08628e-07  4.72951e-09  1.68848e-08  5.30766e-10  1.93546e-08  4.16137e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.6987, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.58962e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2218.84      651.015      214.349       239.76      12.7097      2463.12      417.225
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.02e-06  9.56e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-08  9.56e-07         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.56168e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.54563e-07  8.15354e-07  9.96377e-08  4.44067e-09  1.55337e-08   4.9219e-10  1.90635e-08  4.17839e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.74009, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         8.67385e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191297, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1941.49      569.638      187.555       209.79       11.121      2155.23      365.072
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.88e-06  9.04e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-08  9.04e-07        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.04105e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.02588e-07   7.7231e-07  9.23492e-08  4.20075e-09  1.44415e-08  4.60704e-10  1.87837e-08   4.1947e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.73512, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 51981 1/cm
      Energy step      = 283 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00692
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175891
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.122705
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.143859
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.510725
         W1 Well: minimal relaxation eigenvalue = 0.0126476
         W1 Well: maximal relaxation eigenvalue = 2.20657
         W1 Well:       grid size = 296
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31786 1/cm
         B1 Barrier:        grid size = 184
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 183
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 192 1/cm
         B3 Barrier:        grid size = 200
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6316 1/cm
         B5 Barrier: nonpositive number of states at -23297 1/cm => truncating
         B5 Barrier:        grid size = 266
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23297 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1324 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4437 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.22515, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31786 -23297 4.24e+05 1.94e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.22e+17
         B2    193 3.83e+16
         B3  -4619 1.32e+16
         B4  -6316 1.46e+16
         B5 -23297 7.77e+14
         B6   1325 1.43e+17
         B7   4438 2.56e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e-12  3.81e-12  5.51e-13  1.56e-13  7.95e-20  9.26e-11  4.57e-09
          R  4.79e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.63e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.81e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  6.41e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  1.26e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  1.08e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  2.19e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.7e-15  4.91e-15  7.12e-16  2.01e-16  1.03e-22   1.2e-13   5.9e-12
          R  3.71e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.03e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.41e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  4.97e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  9.74e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  8.36e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6   1.7e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
   MasterEquation::set:  done, cpu time[sec] = 1.23441, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76995, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            90338.2      28343.9      9752.49      10800.9      575.789       105709      18925.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-05  1.16e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-07  1.16e-05         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.15713e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999988  1.15533e-05  8.86376e-06  2.11146e-06  6.66116e-08  4.08118e-07  1.05356e-08  9.25298e-08  2.41631e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.30846, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84782, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30112.7      9447.98      3250.83       3600.3       191.93      35236.3      6308.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.4e-05   9.2e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-07   9.2e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.19526e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999991  9.18093e-06  7.38591e-06   1.4113e-06  4.69001e-08  2.33987e-07  6.48442e-09   9.6105e-08  2.42033e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.36135, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1          1.0414e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.85893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18067.6      5668.79       1950.5      2160.18      115.158      21141.8      3785.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-05   8.1e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-07   8.1e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.10212e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  8.08949e-06  6.62377e-06  1.14079e-06  3.98374e-08  1.82231e-07   5.2119e-09   9.7405e-08  2.42444e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.3723, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.45797e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.8764, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12905.5      4049.13      1393.21      1542.98      82.2556      15101.3      2703.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-05   7.4e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.57e-07   7.4e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.39764e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  7.38611e-06  6.10926e-06  9.83747e-07  3.57141e-08  1.54735e-07  4.51551e-09  9.78985e-08   2.4286e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07441, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.87453e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.88058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10037.6      3149.33      1083.61       1200.1      63.9765      11745.4      2102.84
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-05  6.88e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-07  6.88e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.883e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  6.87227e-06  5.72289e-06  8.77264e-07  3.28707e-08  1.36948e-07  4.05561e-09   9.8003e-08  2.43279e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.3956, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.92235, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9033.82      2834.39      975.249      1080.09      57.5789      10570.9      1892.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-05  6.67e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-07  6.67e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.67073e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  6.66033e-06   5.5611e-06  8.35306e-07  3.17339e-08  1.30105e-07  3.87642e-09  9.79677e-08  2.43489e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.43402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.12421e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.9595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6022.54       1889.6      650.166      720.059      38.3859      7047.25       1261.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-05  5.88e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-07  5.88e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.87611e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999994  5.86695e-06   4.9437e-06  6.88057e-07  2.76389e-08  1.06723e-07  3.25325e-09  9.73295e-08  2.44537e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47252, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.16562e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4516.91       1417.2      487.624      540.044      28.7894      5285.44      946.277
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-05  5.34e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-07  5.34e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.33671e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995   5.3284e-06  4.51479e-06  5.96566e-07  2.49823e-08  9.26087e-08  2.86774e-09  9.63342e-08  2.45568e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46817, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.20702e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.18154, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3613.53      1133.76        390.1      432.036      23.0316      4228.35      757.022
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-05  4.93e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-07  4.93e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.93404e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.92635e-06  4.18985e-06  5.32511e-07  2.30525e-08  8.28725e-08    2.597e-09  9.52203e-08  2.46573e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49185, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00434, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3011.27      944.798      325.083       360.03       19.193      3523.63      630.852
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-05  4.62e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-07  4.62e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.616e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995   4.6088e-06  3.93052e-06  4.84389e-07   2.1556e-08  7.56192e-08  2.39245e-09  9.40771e-08  2.47545e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.28983e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0221, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2581.09      809.827      278.643      308.597      16.4511      3020.25       540.73
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-05  4.36e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-07  4.36e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.35518e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.34839e-06  3.71618e-06  4.46507e-07  2.03445e-08  6.99371e-08  2.23034e-09  9.29428e-08  2.48483e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53795, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         8.33123e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03452, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2258.45      708.599      243.812      270.022      14.3947      2642.72      473.139
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-05  4.14e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-07  4.14e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.13546e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.12901e-06   3.5345e-06  4.15673e-07  1.93338e-08  6.53252e-08  2.09746e-09  9.18345e-08  2.49384e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.54914, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 54761 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007268
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.169698
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.115575
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.130449
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.481572
         W1 Well: minimal relaxation eigenvalue = 0.012268
         W1 Well: maximal relaxation eigenvalue = 1.37452
         W1 Well:       grid size = 288
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 183
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -139 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 198
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 204
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6439 1/cm
         B5 Barrier: nonpositive number of states at -23239 1/cm => truncating
         B5 Barrier:        grid size = 260
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23239 1/cm
         B6 Barrier:        grid size = 178
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1360 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4660 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.17111, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23239 4.42e+05 2.76e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -139 1.91e+17
         B2    161 6.37e+16
         B3  -4639  2.3e+16
         B4  -6439 2.52e+16
         B5 -23239 1.35e+15
         B6   1361 2.34e+17
         B7   4661 4.41e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.48e-13  8.27e-13  1.45e-13  4.45e-14  5.37e-20  1.77e-11  7.56e-10
          R  2.23e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  1.21e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  6.89e+12      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  2.25e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.86e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  5.66e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.32e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.13e-16  1.13e-15  1.99e-16   6.1e-17  7.36e-23  2.42e-14  1.04e-12
          R  1.63e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  8.83e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  5.03e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  1.64e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.36e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  4.13e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  9.66e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
   MasterEquation::set:  done, cpu time[sec] = 1.18115, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             103367      34556.4      12450.3      13664.3      732.185       127047      23920.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.51e-05  4.04e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-06  4.04e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.04391e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99996    4.036e-05  3.10928e-05  7.24078e-06    2.316e-07  1.39543e-06  3.62006e-08  3.61946e-07  1.16268e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.71493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34455.6      11518.8       4150.1      4554.78      244.062        42349      7973.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.93e-05  3.27e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-06  3.27e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.26961e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999967  3.26322e-05  2.63215e-05  4.92723e-06  1.66568e-07  8.16789e-07  2.27619e-08  3.76147e-07  1.16449e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.19873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.00278e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20673.4      6911.27      2490.06      2732.87      146.437      25409.4      4784.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.18e-05  2.91e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.12e-07  2.91e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.90828e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999971  2.90259e-05  2.38157e-05   4.0223e-06  1.43066e-07   6.4324e-07  1.85034e-08  3.81869e-07  1.16634e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.23492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.40389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.7812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14766.7      4936.62      1778.61      1952.05      104.598      18149.6      3417.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.69e-05  2.67e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.49e-07  2.67e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.67343e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999973   2.6682e-05  2.21071e-05  3.49327e-06  1.29264e-07  5.50509e-07  1.61596e-08  3.84502e-07   1.1682e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26643, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1           1.805e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.171896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11485.2      3839.59      1383.37      1518.26      81.3539      14116.3      2657.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.32e-05   2.5e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.02e-07   2.5e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.50079e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999975   2.4959e-05  2.08149e-05  3.13271e-06  1.19699e-07  4.90254e-07  1.46046e-08  3.85603e-07  1.17007e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.25402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79083, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10336.7      3455.64      1245.03      1366.43      73.2185      12704.7      2392.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.17e-05  2.43e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.82e-07  2.43e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.42929e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999976  2.42454e-05  2.02714e-05  2.99017e-06  1.15863e-07  4.67003e-07  1.39969e-08  3.85799e-07  1.17101e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.2763, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.00833e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80937, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6891.12      2303.76      830.019      910.955      48.8124       8469.8      1594.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.59e-05  2.16e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.08e-07  2.16e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.16006e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999978  2.15584e-05  1.81838e-05  2.48751e-06  1.01978e-07  3.87204e-07  1.18741e-08  3.84835e-07  1.17567e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.29409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.01111e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84358, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5168.34      1727.82      622.515      683.216      36.6093      6352.35      1196.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.19e-05  1.98e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.56e-07  1.98e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.97574e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99998  1.97188e-05  1.67202e-05  2.17295e-06  9.29033e-08  3.38709e-07  1.05517e-08  3.82257e-07  1.18026e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.32804, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.01389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.1723, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.87103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4134.67      1382.25      498.012      546.573      29.2874      5081.88      956.827
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-05  1.84e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.17e-07  1.84e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.83722e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999982  1.83363e-05  1.56036e-05  1.95148e-06  8.62721e-08  3.05075e-07  9.61789e-09  3.79038e-07  1.18474e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.35814, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.8809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3445.56      1151.88       415.01      455.478      24.4062       4234.9      797.356
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.64e-05  1.73e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.86e-07  1.73e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.72721e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999983  1.72384e-05  1.47074e-05  1.78432e-06  8.11034e-08  2.79903e-07  8.90901e-09  3.75564e-07  1.18907e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.36696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.01944e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.87899, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2953.34      987.324      355.723      390.409      20.9196      3629.91      683.448
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.44e-05  1.64e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.6e-07  1.64e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.63657e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984  1.63337e-05   1.3963e-05  1.65219e-06  7.69012e-08  2.60105e-07   8.3449e-09   3.7201e-07  1.19326e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.3672, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         8.02222e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89946, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2584.17      863.909      311.257      341.608      18.3046      3176.18      598.017
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.27e-05  1.56e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.38e-07  1.56e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.55989e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984  1.55684e-05  1.33293e-05  1.54426e-06  7.33813e-08  2.43978e-07  7.88083e-09  3.68465e-07  1.19729e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.38743, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 57541 1/cm
      Energy step      = 317 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007186
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1371
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.11004
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.131712
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.467591
         W1 Well: minimal relaxation eigenvalue = 0.0119231
         W1 Well: maximal relaxation eigenvalue = 3.78525
         W1 Well:       grid size = 282
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -152 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4907 1/cm
         B4 Barrier: nonpositive number of states at -6176 1/cm => truncating
         B4 Barrier:        grid size = 201
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23611 1/cm => truncating
         B5 Barrier:        grid size = 256
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23611 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4602 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.1157, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23611 3.37e+05 3.87e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -152 2.91e+17
         B2    164 1.03e+17
         B3  -4907 3.91e+16
         B4  -6176 4.25e+16
         B5 -23611 2.29e+15
         B6   1433 3.75e+17
         B7   4603 7.39e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e-13  2.12e-13  4.41e-14  1.45e-14   3.8e-20  4.02e-12  1.51e-10
          R  8.83e+12         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  4.72e+12     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  2.27e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  6.88e+13      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  2.63e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  2.49e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  6.62e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.64e-16  3.06e-16  6.38e-17   2.1e-17  5.49e-23  5.81e-15  2.19e-13
          R   6.1e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  3.26e+15     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  1.57e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  4.75e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  1.82e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  1.72e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  4.57e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
   MasterEquation::set:  done, cpu time[sec] = 1.12528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54926, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             116588      41395.3      15640.1      17023.2      916.463       150048        29583
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000262  0.000121         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.33e-06  0.000121         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000121057
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999879  0.000120848  9.33986e-05  2.13463e-05  6.90871e-07  4.09597e-06  1.06764e-07  1.20466e-06  4.67291e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.02972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165498, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38862.6      13798.4      5213.36      5674.39      305.488      50015.9      9860.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000221  9.94e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-06  9.94e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.94019e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999901  9.92299e-05  8.02033e-05   1.4751e-05  5.06607e-07  2.44349e-06  6.84579e-08  1.25239e-06  4.67977e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.07481, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.67706e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23317.5      8279.06      3128.01      3404.63      183.293      30009.5      5916.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000202  8.92e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-06  8.92e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.91696e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999911  8.90153e-05  7.31507e-05  1.21471e-05  4.39532e-07  1.94391e-06  5.62269e-08  1.27309e-06   4.6867e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10177, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.35479e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165744, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65049, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16655.4      5913.61       2234.3      2431.88      130.923      21435.4      4226.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00019  8.25e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-06  8.25e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.24691e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999918  8.23264e-05  6.82967e-05  1.06162e-05  3.99941e-07  1.67564e-06  4.94618e-08  1.28375e-06  4.69368e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.11865, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.74187e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12954.2      4599.48      1737.79      1891.46      101.829        16672         3287
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00018  7.75e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-06  7.75e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.75156e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999923  7.73815e-05  6.46011e-05  9.56838e-06  3.72394e-07  1.50065e-06  4.49563e-08  1.28932e-06  4.70068e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.14117, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11658.8      4139.53      1564.01      1702.32      91.6463      15004.8       2958.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000176  7.55e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.22e-06  7.55e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.54569e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999925  7.53264e-05  6.30403e-05  9.15299e-06  3.61316e-07  1.43295e-06   4.3191e-08  1.29091e-06  4.70418e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.14269, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.90312e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69104, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7772.51      2759.69      1042.67      1134.88      61.0975      10003.2       1972.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000161  6.77e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-06  6.77e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.76631e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999932   6.7546e-05  5.70094e-05   7.6821e-06  3.21045e-07  1.19971e-06  3.69999e-08  1.29205e-06  4.72159e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15719, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.87082e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.164059, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.71508, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5829.38      2069.76      782.003      851.158      45.8231      7502.38      1479.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00015  6.23e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-06  6.23e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.22861e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999938  6.21783e-05  5.27455e-05  6.75599e-06  2.94558e-07  1.05714e-06  3.31205e-08  1.28729e-06   4.7387e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.17942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.83853e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.71712, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4663.51      1655.81      625.603      680.927      36.6585       6001.9      1183.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000142  5.82e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-06  5.82e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.8221e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999942  5.81202e-05  4.94715e-05  6.10078e-06  2.75102e-07  9.57789e-07  3.03676e-08  1.27993e-06  4.75539e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.18478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76797, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3886.26      1379.84      521.336      567.439      30.5488      5001.59      986.099
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000136   5.5e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-06   5.5e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.49764e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999945  5.48813e-05  4.68297e-05  5.60422e-06   2.5987e-07  8.83135e-07  2.82692e-08  1.27134e-06  4.77159e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.23506, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         6.77394e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.77866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3331.08      1182.72      446.859      486.376      26.1846      4287.07      845.227
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00013  5.23e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-06  5.23e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.22916e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999948  5.22012e-05  4.46256e-05  5.21034e-06  2.47437e-07  8.24211e-07  2.65934e-08  1.26218e-06  4.78726e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.24602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         7.74165e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165803, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2914.69      1034.88      391.002      425.579      22.9116      3751.19      739.574
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000125     5e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-06     5e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.0012e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99995  4.99254e-05   4.2742e-05  4.88757e-06  2.36988e-07  7.76065e-07  2.52103e-08  1.25278e-06  4.80239e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.25649, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 60322 1/cm
      Energy step      = 333 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006462
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.141814
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.10692
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.1272
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.443274
         W1 Well: minimal relaxation eigenvalue = 0.011614
         W1 Well: maximal relaxation eigenvalue = 1.32929
         W1 Well:       grid size = 276
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -284 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 48 1/cm
         B3 Barrier:        grid size = 195
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 200
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6278 1/cm
         B5 Barrier: nonpositive number of states at -23595 1/cm => truncating
         B5 Barrier:        grid size = 252
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23594 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1380 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4710 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.08708, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23594 3.41e+05 5.39e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -284 4.37e+17
         B2     49 1.64e+17
         B3  -4613 6.51e+16
         B4  -6278 7.03e+16
         B5 -23594  3.8e+15
         B6   1381 5.87e+17
         B7   4711 1.21e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.3e-14  6.26e-14  1.52e-14  5.34e-15  2.79e-20  1.06e-12  3.55e-11
          R  3.03e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1   1.6e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  6.59e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.87e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  3.59e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  9.44e+11    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  2.82e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.02e-17  9.51e-17  2.31e-17  8.11e-18  4.24e-23  1.61e-15   5.4e-14
          R  1.99e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.05e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  4.34e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.23e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  2.36e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  6.21e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  1.85e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
   MasterEquation::set:  done, cpu time[sec] = 1.09668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.51671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             129857      48825.1      19361.9      20917.4      1130.99       174517      35895.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000624  0.000318         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.01e-06  0.000318         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000317521
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999683  0.000317012  0.000245952  5.49084e-05  1.80895e-06  1.05546e-05  2.76408e-07  3.49543e-06  1.61273e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53351, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43285.5        16275      6453.97      6972.47      376.997      58172.3      11965.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000537  0.000265         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.84e-06  0.000265         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000264577
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999736  0.000264153  0.000213954  3.86097e-05  1.35036e-06  6.40792e-06  1.80475e-07   3.6347e-06  1.61497e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98072, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.35673e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158194, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55314, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25971.3      9765.02      3872.38      4183.48      226.198      34903.4       7179.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000494  0.000239         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.27e-06  0.000239        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00023922
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999761  0.000238837  0.000196568  3.20759e-05  1.18251e-06  5.14613e-06  1.49657e-07  3.69881e-06  1.61721e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.00035, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.30994e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158956, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18550.9      6975.01      2765.99       2988.2       161.57        24931      5127.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000466  0.000222         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.89e-06  0.000222         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000222491
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999778  0.000222134  0.000184495  2.82075e-05  1.08301e-06  4.46558e-06  1.32538e-07  3.73447e-06  1.61946e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04969, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.68421e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61336, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14428.5      5425.01      2151.32      2324.16      125.666      19390.8      3988.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000444   0.00021         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.61e-06   0.00021        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000210055
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99979  0.000209719  0.000175245   2.5547e-05  1.01353e-06  4.02012e-06  1.21098e-07  3.75543e-06  1.62172e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06339, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158377, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12985.7      4882.51      1936.19      2091.74      113.099      17451.7      3589.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000435  0.000205         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-06  0.000205         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000204869
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999795  0.000204541  0.000171324  2.44893e-05  9.85525e-07   3.8474e-06  1.16606e-07  3.76239e-06  1.62285e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05224, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.80702e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8657.1      3255.01      1290.79      1394.49      75.3995      11634.5      2393.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000401  0.000185         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.04e-06  0.000185         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000185136
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999815   0.00018484  0.000156085  2.07276e-05  8.83328e-07  3.25027e-06  1.00795e-07  3.77678e-06  1.62845e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05951, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         3.74269e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.157515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.64392, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6492.83      2441.25      968.096      1045.87      56.5496      8725.84      1794.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000376  0.000171         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-06  0.000171        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000171424
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999829  0.000171149  0.000145225  1.83448e-05  8.15727e-07  2.88335e-06  9.08348e-08  3.77277e-06  1.63395e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.09064, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.67837e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158248, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65123, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5194.26         1953      774.477      836.696      45.2397      6980.67      1435.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000358  0.000161         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.48e-06  0.000161         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000160999
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999839  0.000160741  0.000136837  1.66509e-05  7.65838e-07  2.62657e-06  8.37365e-08  3.76013e-06  1.63932e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.09881, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158202, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6506, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4328.55       1627.5      645.397      697.247      37.6997      5817.23      1196.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000343  0.000153         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-06  0.000153        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000152639
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999848  0.000152395  0.000130035  1.53622e-05  7.26624e-07  2.43293e-06  7.83059e-08  3.74299e-06  1.64454e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.12734, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         6.54971e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.160265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68967, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3710.19         1395      553.198       597.64      32.3141      4986.19      1025.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00033  0.000146         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-06  0.000146         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000145695
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999855  0.000145462  0.000124337  1.43366e-05  6.94507e-07  2.27961e-06  7.39549e-08  3.72342e-06  1.64959e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         7.48539e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.157397, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.71108, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3246.41      1220.63      484.048      522.935      28.2748      4362.92      897.388
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000319   0.00014         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-06   0.00014         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000139778
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99986  0.000139554   0.00011945  1.34936e-05  6.67427e-07  2.15398e-06  7.03535e-08  3.70253e-06  1.65449e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15733, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 63101 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007246
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15341
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.10159
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099585
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.415911
         W1 Well: minimal relaxation eigenvalue = 0.0113288
         W1 Well: maximal relaxation eigenvalue = 1.66569
         W1 Well:       grid size = 271
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31749 1/cm
         B1 Barrier:        grid size = 181
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -248 1/cm
         B2 Barrier:        grid size = 180
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 194
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4799 1/cm
         B4 Barrier:        grid size = 198
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23349 1/cm => truncating
         B5 Barrier:        grid size = 247
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23349 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1501 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0429, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31749 -23349 4.08e+05 7.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -248 6.42e+17
         B2    101 2.55e+17
         B3  -4799 1.06e+17
         B4  -6198 1.14e+17
         B5 -23349 6.19e+15
         B6   1502 8.99e+17
         B7   4651 1.92e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e-14  2.08e-14  5.76e-15  2.15e-15  2.11e-20  3.16e-13  9.54e-12
          R  9.25e+13         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  4.81e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.73e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  4.65e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  4.75e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  3.16e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  1.05e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.73e-17  3.32e-17   9.2e-18  3.43e-18  3.36e-23  5.05e-16  1.52e-14
          R  5.79e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  3.01e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.09e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  2.91e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  2.97e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  1.98e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  6.56e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
   MasterEquation::set:  done, cpu time[sec] = 1.0531, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4472, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             143044      56803.9      23619.7      25385.5      1378.07       200251      42831.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00132  0.000745         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-05  0.000745        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000744661
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999256  0.000743598  0.000578319  0.000127033  4.23435e-06  2.43013e-05  6.39534e-07   9.0212e-06  4.88767e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47681.4      18934.6      7873.23      8461.85      459.356      66750.3      14277.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00115  0.000629         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-05  0.000629         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000628545
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999372  0.000627647  0.000509118  9.04541e-05  3.21446e-06  1.50046e-05  4.24863e-07  9.38282e-06  4.89412e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9169, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.06265e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152963, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46786, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28608.9      11360.8      4723.94      5077.11      275.613      40050.2      8566.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00107  0.000572         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-05  0.000572        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000572374
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999428  0.000571556  0.000470894  7.57041e-05  2.83928e-06  1.21575e-05  3.55491e-07  9.55684e-06  4.90054e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.91348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.26877e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20434.9      8114.84      3374.24      3626.51      196.867      28607.3      6118.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00101  0.000535         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-05  0.000535        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000535079
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999466  0.000534315  0.000444124   6.6934e-05  2.61606e-06  1.06158e-05  3.16811e-07  9.65899e-06  4.90697e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.63128e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.51607, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15893.8      6311.54      2624.41      2820.62      153.119      22250.1      4759.06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000969  0.000507         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-05  0.000507        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000507224
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999494    0.0005065  0.000423491  6.08821e-05  2.45972e-06  9.60358e-06  2.90883e-07  9.72347e-06   4.9134e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14304.4      5680.39      2361.97      2538.55      137.807      20025.1      4283.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000951  0.000496         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-05  0.000496        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000495572
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999505  0.000494865  0.000414711  5.84705e-05  2.39655e-06  9.21029e-06  2.80681e-07  9.74659e-06   4.9166e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.71879e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9536.28      3786.93      1574.65      1692.37      91.8711      13350.1      2855.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000882  0.000451         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-05  0.000451        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000451033
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99955  0.000450389  0.000380408  4.98664e-05  2.16534e-06  7.84644e-06  2.44665e-07  9.80824e-06   4.9325e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99846, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.62506e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.1527, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58059, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7152.21      2840.19      1180.98      1269.28      68.9033      10012.5      2141.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000833   0.00042         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-05   0.00042        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000419878
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999581  0.000419279  0.000355782  4.43888e-05  2.01163e-06  7.00444e-06  2.21869e-07  9.82001e-06   4.9481e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.02539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.53132e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60314, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5721.77      2272.16      944.788      1015.42      55.1227      8010.04      1713.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000795  0.000396         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-05  0.000396         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000396071
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999604  0.000395505  0.000336653  4.04797e-05  1.89772e-06  6.41296e-06  2.05561e-07  9.80725e-06  4.96333e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152463, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58939, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4768.14      1893.46      787.323      846.185      45.9356      6675.03      1427.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000764  0.000377         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.65e-06  0.000377        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0003769
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999624  0.000376362  0.000321069  3.74956e-05  1.80786e-06  5.96547e-06  1.93043e-07  9.78097e-06  4.97813e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.03624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.34385e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152785, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.60871, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4086.98      1622.97      674.848      725.301      39.3733      5721.45      1223.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000739  0.000361         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-06  0.000361        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000360916
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99964  0.000360401  0.000307963  3.51137e-05  1.73404e-06  5.61015e-06  1.82984e-07  9.74679e-06   4.9925e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05567, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         7.25012e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62029, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3576.11       1420.1      590.492      634.638      34.4517      5006.27      1070.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000716  0.000347         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.01e-06  0.000347         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000347253
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999653  0.000346757  0.000296684   3.3151e-05  1.67161e-06  5.31826e-06  1.74636e-07  9.70782e-06  5.00642e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.0679, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 65881 1/cm
      Energy step      = 367 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006834
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120552
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.099003
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.128413
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.402528
         W1 Well: minimal relaxation eigenvalue = 0.0110689
         W1 Well: maximal relaxation eigenvalue = 1.6596
         W1 Well:       grid size = 266
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31741 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -179 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 193
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4950 1/cm
         B4 Barrier:        grid size = 197
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6418 1/cm
         B5 Barrier: nonpositive number of states at -23667 1/cm => truncating
         B5 Barrier:        grid size = 244
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23667 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1288 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4591 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02073, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31741 -23667 3.23e+05 1.02e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -179 9.29e+17
         B2    188 3.89e+17
         B3  -4950  1.7e+17
         B4  -6418 1.81e+17
         B5 -23667 9.88e+15
         B6   1289 1.35e+18
         B7   4592    3e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.92e-15  7.64e-15  2.39e-15  9.43e-16  1.63e-20  1.05e-13  2.88e-12
          R  2.55e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  1.31e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  4.18e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  1.06e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  6.12e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  9.51e+12    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  3.47e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.57e-18  1.28e-17  4.01e-18  1.58e-18  2.73e-23  1.76e-16  4.83e-15
          R  1.52e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  7.82e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  2.49e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  6.33e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  3.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  5.68e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  2.07e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
   MasterEquation::set:  done, cpu time[sec] = 1.02991, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             156038      65285.2      28481.1      30464.3      1659.89       227043      50356.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00252   0.00158         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.38e-05   0.00158    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00158444
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998418     0.001582   0.00123156  0.000268329   8.9762e-06  5.06109e-05  1.33897e-06  2.10536e-05  1.32426e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80468, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147296, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41761, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52012.5      21761.7      9493.69      10154.8      553.296      75681.1      16785.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00222   0.00135         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-05   0.00135     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00135328
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998649   0.00135119   0.00109674  0.000192802  6.93007e-06  3.17943e-05  9.05374e-07  2.18913e-05  1.32592e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83324, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          8.7914e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31207.5        13057      5696.21      6092.86      331.977      45408.6      10071.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00208   0.00124         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-05   0.00124     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00124043
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998761   0.00123852   0.00102082  0.000162329  6.17245e-06  2.59878e-05  7.64247e-07  2.23112e-05  1.32757e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.3412, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          1.2308e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44473, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22291.1      9326.46      4068.72      4352.05      237.127      32434.7      7193.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00198   0.00117         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.59e-05   0.00117    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00116508
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998837   0.00116328  0.000967173  0.000144174  5.71992e-06  2.28306e-05  6.85242e-07  2.25684e-05  1.32921e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86004, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.58245e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147149, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17337.5      7253.91      3164.56      3384.92      184.432        25227      5595.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0019   0.00111         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.49e-05   0.00111     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00110856
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998893   0.00110685  0.000925573  0.000131622    5.402e-06  2.07512e-05  6.32124e-07  2.27391e-05  1.33085e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87744, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15603.8      6528.52      2848.11      3046.43      165.989      22704.3      5035.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00187   0.00108         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-05   0.00108     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00108485
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998917   0.00108318  0.000907805  0.000126613  5.27331e-06  1.99416e-05  6.11181e-07  2.28032e-05  1.33166e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85986, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.63742e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148532, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10402.5      4352.35      1898.74      2030.95      110.659      15136.2      3357.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00174  0.000994         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-05  0.000994         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000993851
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999008  0.000992319  0.000838023  0.000108703  4.80073e-06  1.71259e-05  5.37029e-07  2.29966e-05   1.3357e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.90083, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.51656e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.14757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50693, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7801.88      3264.26      1424.05      1523.22      82.9944      11352.2      2517.81
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00166   0.00093         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-05   0.00093         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000929814
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999072  0.000928381  0.000787563  9.72597e-05  4.48505e-06  1.53797e-05  4.89886e-07  2.30694e-05  1.33966e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.92275, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          4.3957e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148147, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6241.5      2611.41      1139.24      1218.57      66.3955      9081.73      2014.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00159  0.000881         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.05e-05  0.000881         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000880648
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999121  0.000879291  0.000748152  8.90687e-05  4.25021e-06  1.41487e-05  4.56036e-07  2.30809e-05  1.34352e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.91475, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5201.25      2176.17      949.369      1015.48      55.3296      7568.11      1678.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00153  0.000841         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-05  0.000841         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000840902
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99916  0.000839607  0.000715906  8.27995e-05  4.06434e-06  1.32145e-05  4.29974e-07  2.30573e-05  1.34728e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.93984, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.15398e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148301, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55075, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4458.22      1865.29      813.745      870.409      47.4254      6486.95      1438.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00148  0.000808         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-05  0.000808         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000807652
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999194  0.000806407  0.000688685  7.77837e-05  3.91118e-06  1.24708e-05  4.08975e-07   2.3012e-05  1.35094e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         7.03312e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147137, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3900.94      1632.13      712.026      761.608      41.4972      5676.08      1258.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00144  0.000779         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-05  0.000779        -1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000779144
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999222  0.000777944  0.000665182   7.3642e-05  3.78133e-06  1.18584e-05  3.91506e-07  2.29528e-05  1.35448e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95413, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 68662 1/cm
      Energy step      = 383 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006242
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119409
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.095555
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.11311
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.398694
         W1 Well: minimal relaxation eigenvalue = 0.0108311
         W1 Well: maximal relaxation eigenvalue = 1.52806
         W1 Well:       grid size = 262
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31684 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -278 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 104 1/cm
         B3 Barrier:        grid size = 192
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4873 1/cm
         B4 Barrier:        grid size = 196
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6406 1/cm
         B5 Barrier: nonpositive number of states at -23641 1/cm => truncating
         B5 Barrier:        grid size = 241
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23641 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1254 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.998206, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31684 -23641 3.29e+05 1.38e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -278 1.32e+18
         B2    105 5.82e+17
         B3  -4873 2.67e+17
         B4  -6406 2.84e+17
         B5 -23641 1.55e+16
         B6   1255    2e+18
         B7   4701 4.59e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.56e-15  3.08e-15  1.08e-15  4.46e-16   1.3e-20  3.85e-14  9.68e-13
          R   6.4e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  3.25e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  9.28e+14      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  2.24e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  7.69e+19   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  2.59e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  1.03e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.73e-18  5.39e-18  1.88e-18  7.79e-19  2.27e-23  6.74e-17  1.69e-15
          R  3.66e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  1.86e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  5.31e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  1.28e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4   4.4e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  1.48e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  5.91e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
   MasterEquation::set:  done, cpu time[sec] = 1.00739, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34787, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             168742      74222.1      33985.1      36190.4      1978.65       254696      58430.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00438   0.00309         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-05   0.00309    -0.998
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00308633
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996919   0.00308136    0.0024076  0.000511579  1.74865e-05  9.67421e-05  2.57409e-06  4.50515e-05  3.25626e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76413, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143556, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36868, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56247.4      24740.7      11328.4      12063.5      659.552      84898.7      19476.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00391   0.00267         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.38e-05   0.00267     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00266723
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997337   0.00266293   0.00216548  0.000373101  1.37061e-05   6.1734e-05  1.76866e-06  4.68151e-05  3.26015e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7727, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          8.5402e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37706, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33748.4      14844.4      6797.02      7238.09      395.731      50939.2      11686.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00368   0.00246         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.02e-05   0.00246    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00246047
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997543    0.0024565    0.0020272   0.00031656  1.23028e-05  5.08797e-05  1.50543e-06   4.7727e-05  3.26397e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7805, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.19563e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143187, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              24106      10603.2      4855.02      5170.06      282.665      36385.2      8347.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00352   0.00232         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-05   0.00232     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00232154
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997682    0.0023178   0.00192871  0.000282678  1.14623e-05  4.49583e-05  1.35762e-06  4.83038e-05  3.26776e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.805, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.53724e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4176, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18749.1       8246.9      3776.12      4021.16      219.851      28299.6      6492.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0034   0.00222         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.59e-05   0.00222     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00221686
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997787   0.00221329   0.00185193  0.000259157  1.08705e-05   4.1048e-05    1.258e-06  4.87004e-05  3.27154e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82177, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143486, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16874.2      7422.21      3398.51      3619.04      197.865      25469.6      5843.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00334   0.00217         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-05   0.00217     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00217283
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997831   0.00216933   0.00181902  0.000249748  1.06305e-05  3.95231e-05  1.21865e-06   4.8854e-05  3.27342e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81912, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         2.56206e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.142934, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11249.5      4948.14      2265.67       2412.7       131.91      16979.7      3895.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00314     0.002         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-05     0.002    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00200307
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1        0.998   0.00199984   0.00168915  0.000215981  9.74688e-06  3.42049e-05  1.07898e-06  4.93511e-05  3.28272e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83572, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.41608e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45165, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8437.11       3711.1      1699.26      1809.52      98.9327      12734.8      2921.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.003   0.00188         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     4e-05   0.00188     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00188289
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99812   0.00187986   0.00159461  0.000194297  9.15416e-06  3.08934e-05  9.89819e-07  4.95872e-05  3.29182e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          4.2701e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45611, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6749.69      2968.88       1359.4      1447.62      79.1462      10187.8      2337.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00289   0.00179         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.83e-05   0.00179     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00179019
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998213    0.0017873   0.00152038  0.000178715  8.71167e-06  2.85511e-05   9.2559e-07  4.96867e-05  3.30071e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.142955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5624.74      2474.07      1132.84      1206.35      65.9552      8489.87      1947.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00279   0.00171         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-05   0.00171    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00171495
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998288   0.00171219    0.0014594   0.00016675  8.36038e-06  2.67687e-05  8.75998e-07  4.97055e-05  3.30936e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84912, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.97814e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.142895, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4821.2      2120.63      971.003      1034.01       56.533      7277.03      1669.45
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00271   0.00165         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.58e-05   0.00165    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00165181
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998351   0.00164914   0.00140774   0.00015715  8.07013e-06  2.53461e-05  8.35942e-07  4.96731e-05  3.31778e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87437, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.83216e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49056, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4218.55      1855.55      849.628      904.761      49.4664       6367.4      1460.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00265    0.0016         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.48e-05    0.0016     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00159751
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998405   0.00159493   0.00136299  0.000149204  7.82347e-06  2.41721e-05  8.02545e-07  4.96066e-05  3.32596e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89517, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 71442 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005956
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132664
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.092626
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.100172
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.378155
         W1 Well: minimal relaxation eigenvalue = 0.0106089
         W1 Well: maximal relaxation eigenvalue = 1.76191
         W1 Well:       grid size = 258
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31757 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -158 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -158 1/cm
         B3 Barrier:        grid size = 191
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4958 1/cm
         B4 Barrier:        grid size = 195
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6557 1/cm
         B5 Barrier: nonpositive number of states at -23758 1/cm => truncating
         B5 Barrier:        grid size = 238
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23758 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.969563, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31757 -23758 3.02e+05 1.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -158 1.86e+18
         B2   -158 8.59e+17
         B3  -4958 4.13e+17
         B4  -6557 4.38e+17
         B5 -23758  2.4e+16
         B6   1442 2.91e+18
         B7   4643 6.88e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.71e-16  1.34e-15  5.18e-16  2.24e-16  1.05e-20  1.53e-14  3.55e-13
          R  1.49e+15         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  7.46e+14       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.93e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  4.46e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  9.49e+19  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  6.53e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  2.82e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e-18  2.45e-18  9.45e-19  4.09e-19  1.92e-23   2.8e-17  6.48e-16
          R  8.17e+17         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  4.09e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.06e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  2.44e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4   5.2e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  3.58e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  1.54e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
   MasterEquation::set:  done, cpu time[sec] = 0.978682, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140789, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             181070      83558.3      40163.8      42593.4      2336.17       282996      67004.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00705   0.00558         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000103   0.00558     0.997
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00557676
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994432   0.00556785   0.00435705  0.000913722  3.15308e-05  0.000170815  4.57408e-06  8.94212e-05  7.36067e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70554, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30276, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60356.8      27852.8      13387.9      14197.8      778.722        94332        22335
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00637   0.00487         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.14e-05   0.00487    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00487188
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995136   0.00486409   0.00395832  0.000673053  2.51074e-05  0.000110846  3.19693e-06  9.28292e-05  7.36907e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70887, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          8.3067e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32961, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36214.1      16711.7      8032.75      8518.68      467.233      56599.2        13401
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00603   0.00452         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.57e-05   0.00452     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0045206
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995487   0.00451337   0.00372601  0.000574398  2.27105e-05  9.21286e-05  2.74405e-06  9.46316e-05  7.37726e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73537, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.16294e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33728, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25867.2      11936.9      5737.68      6084.77      333.738        40428      9572.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00579   0.00428         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.19e-05   0.00428     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00428326
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995724   0.00427641    0.0035591  0.000515135  2.12702e-05  8.18789e-05  2.48883e-06  9.57999e-05  7.38536e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.49521e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20118.9      9284.26      4462.64       4732.6      259.574        31444      7444.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00561    0.0041         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.89e-05    0.0041     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00410369
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995903   0.00409712   0.00342819  0.000473911  2.02533e-05  7.50912e-05  2.31634e-06  9.66245e-05   7.3934e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76715, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139864, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              18107      8355.83      4016.38      4259.34      233.617      28299.6      6700.49
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00553   0.00403         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-05   0.00403    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00402795
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995978   0.00402151   0.00337189  0.000457399  1.98402e-05  7.24392e-05   2.2481e-06  9.69511e-05  7.39739e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76199, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.49201e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139516, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12071.4      5570.56      2677.58      2839.56      155.744      18866.4      4466.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00523   0.00373         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.29e-05   0.00373     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00373487
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996271   0.00372889   0.00314859  0.000398014  1.83152e-05  6.31653e-05   2.0052e-06  9.80579e-05  7.41712e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7835, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.32268e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139327, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9053.52      4177.92      2008.19      2129.67      116.808      14149.8      3350.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00501   0.00353         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-05   0.00353    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00352623
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996479   0.00352059   0.00298493  0.000359753   1.7288e-05  5.73674e-05  1.84952e-06  9.86508e-05  7.43641e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78516, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.15335e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.13991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7242.81      3342.33      1606.55      1703.74      93.4467      11319.8      2680.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00484   0.00336         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.67e-05   0.00336     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00336459
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996641   0.00335921    0.0028558  0.000332184  1.65185e-05  5.32532e-05  1.73702e-06  9.89688e-05  7.45522e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140198, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40926, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6035.68      2785.28      1338.79      1419.78      77.8722       9433.2       2233.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0047   0.00323         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.45e-05   0.00323    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00323295
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996772   0.00322778   0.00274928  0.000310965  1.59058e-05  5.01137e-05  1.64991e-06  9.91208e-05  7.47355e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         5.81469e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140676, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5173.44      2387.38      1147.54      1216.95      66.7476       8085.6      1914.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00458   0.00312         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.26e-05   0.00312     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00312213
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996883   0.00311713   0.00265873  0.000293907  1.53983e-05  4.76022e-05  1.57939e-06  9.91649e-05  7.49137e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.18442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         6.64536e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139019, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4526.76      2088.96      1004.09      1064.83      58.4042       7074.9      1675.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00447   0.00303         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.1e-05   0.00303     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00302658
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996978   0.00302174   0.00258008   0.00027976   1.4966e-05  4.55251e-05  1.52046e-06  9.91354e-05  7.50871e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82378, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 74222 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006644
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124616
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.089393
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.101219
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.371226
         W1 Well: minimal relaxation eigenvalue = 0.0104029
         W1 Well: maximal relaxation eigenvalue = 1.6145
         W1 Well:       grid size = 254
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31695 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -4 1/cm
         B3 Barrier:        grid size = 190
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5008 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6259 1/cm
         B5 Barrier: nonpositive number of states at -23773 1/cm => truncating
         B5 Barrier:        grid size = 235
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23773 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1247 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4583 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.955495, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31695 -23773 2.99e+05 2.48e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.58e+18
         B2     -4 1.25e+18
         B3  -5008 6.29e+17
         B4  -6259 6.65e+17
         B5 -23773 3.66e+16
         B6   1248 4.17e+18
         B7   4583 1.02e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.09e-16  6.25e-16  2.64e-16  1.19e-16  8.69e-21  6.55e-15  1.41e-13
          R  3.24e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1   1.6e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  3.79e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  8.39e+15      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  1.15e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  1.53e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6   7.1e+12   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.87e-19  1.19e-18  5.03e-19  2.27e-19  1.65e-23  1.25e-17  2.68e-16
          R   1.7e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  8.41e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  1.99e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  4.41e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  6.05e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  8.02e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6  3.73e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
   MasterEquation::set:  done, cpu time[sec] = 0.965221, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135672, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             192958      93244.7      47051.8      49705.6      2734.39       311761      76031.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106   0.00941         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000163   0.00941     0.995
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0094067
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990609   0.00939147   0.00738869   0.00149184  5.33394e-05  0.000282536  7.61829e-06  0.000165911  1.54525e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67631, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134766, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27733, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64319.4      31081.6      15683.9      16568.5      911.462       103920      25343.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0097   0.00831         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000146   0.00831    -0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00830528
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991708   0.00829184   0.00676477   0.00111904  4.30499e-05  0.000186015   5.4038e-06  0.000172011  1.54693e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67149, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         8.08894e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38591.6      18648.9      9410.35      9941.13      546.877      62352.1      15206.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00922   0.00775         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000138   0.00775    -0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0077505
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992262   0.00773796   0.00639827  0.000963111  3.92128e-05  0.000155814  4.67436e-06  0.000175323  1.54855e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67976, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.13245e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28869, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27565.4      13320.7      6721.68       7100.8      390.627      44537.2      10861.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0089   0.00737         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000132   0.00737     0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0073734
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992639   0.00736147   0.00613333  0.000868663  3.69037e-05  0.000139235   4.2624e-06  0.000177518  1.55015e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.68209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.45601e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21439.8      10360.5      5227.97      5522.85      303.821      34640.1      8447.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00864   0.00709         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000128   0.00709     0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00708684
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992925   0.00707537   0.00592462  0.000802619  3.52708e-05  0.000128232  3.98344e-06  0.000179101  1.55174e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3146, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19295.8      9324.47      4705.18      4970.56      273.439      31176.1      7603.16
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00854   0.00697         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000126   0.00697    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00696566
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993046   0.00695439   0.00583461  0.000776082  3.46067e-05  0.000123927  3.87293e-06  0.000179739  1.55253e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.42668e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32723, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12863.9      6216.31      3136.78      3313.71      182.292        20784      5068.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00811   0.00649         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000118   0.00649     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00649482
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993516    0.0064843   0.00547606  0.000680243  3.21499e-05  0.000108839  3.47872e-06  0.000181973   1.5564e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72227, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.23558e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             9647.9      4662.23      2352.59      2485.28      136.719        15588      3801.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00781   0.00616         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000113   0.00616     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00615775
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993852   0.00614779   0.00521173  0.000618138  3.04895e-05  9.93735e-05  3.22525e-06  0.000183265  1.56019e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7433, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.04447e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35898, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7718.32      3729.79      1882.07      1988.23      109.375      12470.4      3041.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00756    0.0059         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000109    0.0059    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0058955
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994114   0.00588596   0.00500223  0.000573198  2.92421e-05  9.26379e-05  3.04155e-06  0.000184044  1.56387e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135251, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6431.94      3108.16      1568.39      1656.85      91.1462        10392      2534.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00736   0.00568         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000106   0.00568    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00568117
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994328   0.00567197   0.00482877  0.000538493  2.82465e-05  8.74856e-05  2.89898e-06  0.000184507  1.56747e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75459, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.66226e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5513.09      2664.13      1344.34      1420.16      78.1254      8907.45      2172.33
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00719    0.0055         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000103    0.0055     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00550017
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994509   0.00549127   0.00468086  0.000510512  2.74198e-05   8.3355e-05   2.7833e-06  0.000184763  1.57096e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76778, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         6.47115e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134938, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4823.95      2331.12      1176.29      1242.64      68.3597      7794.02      1900.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00704   0.00534         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0    0.0001   0.00534    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00534372
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994665   0.00533507   0.00455204  0.000487251  2.67142e-05  7.99324e-05  2.68647e-06  0.000184873  1.57436e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76987, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 77002 1/cm
      Energy step      = 433 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006415
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.109601
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.087403
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.105851
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.361287
         W1 Well: minimal relaxation eigenvalue = 0.0102121
         W1 Well: maximal relaxation eigenvalue = 1.64646
         W1 Well:       grid size = 251
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31680 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -71 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -71 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4834 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6566 1/cm
         B5 Barrier: nonpositive number of states at -23887 1/cm => truncating
         B5 Barrier:        grid size = 233
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23886 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1227 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4691 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.928767, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31680 -23886 2.74e+05 3.29e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -71 3.54e+18
         B2    -71 1.79e+18
         B3  -4834 9.46e+17
         B4  -6566 9.96e+17
         B5 -23886 5.49e+16
         B6   1228  5.9e+18
         B7   4692 1.48e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.51e-16   3.1e-16  1.42e-16  6.68e-17   7.3e-21     3e-15  6.01e-14
          R  6.61e+15         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  3.22e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  7.02e+15      1.06      2.18         1     0.469  5.13e-05        21       423
         P3   1.5e+16      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  1.37e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  3.34e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  1.66e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.99e-19  6.13e-19  2.81e-19  1.32e-19  1.44e-23  5.92e-18  1.19e-16
          R  3.35e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  1.63e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  3.55e+18      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  7.58e+18      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  6.93e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  1.69e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  8.41e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
   MasterEquation::set:  done, cpu time[sec] = 0.938167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             204352       103230      54680.3      57555.9      3175.07       340812      85460.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0151     0.015         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000246     0.015    -0.992
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.014974
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98505      0.01495    0.0117924   0.00232808   8.4967e-05  0.000438971  1.19285e-05  0.000290589  3.03976e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68117.2      34409.9      18226.8      19185.3      1058.36       113604      28486.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.014    0.0133         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000223    0.0133    -0.993
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0133473
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.986674    0.0133259    0.0108839    0.0017664  6.95602e-05  0.000293602  8.59726e-06  0.000300801   3.0429e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63672, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         7.88525e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27958, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40870.3      20645.9      10936.1      11511.2      635.014      68162.3        17092
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0133    0.0125         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00021    0.0125    -0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.01252
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1       0.9875    0.0124999    0.0103417    0.0015296  6.37992e-05  0.000247894  7.49523e-06  0.000306448  3.04591e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65258, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.10394e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29193.1      14747.1      7811.48      8222.27      453.582      48687.4      12208.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0129     0.012         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000202     0.012     0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0119548
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988064    0.0119356   0.00994673   0.00138564  6.03246e-05  0.000222724  6.87108e-06  0.000310254  3.04887e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64079, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.41935e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132513, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22705.7        11470      6075.59       6395.1      352.786        37868      9495.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0126    0.0115         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000196    0.0115     0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0115236
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988495    0.0115052   0.00963404   0.00128472  5.78627e-05   0.00020598   6.4475e-06  0.000313044  3.05178e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65151, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29514, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20435.2        10323      5468.03      5755.59      317.507      34081.2      8546.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0124    0.0113         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000193    0.0113     0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0113409
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988677    0.0113227   0.00949879   0.00124411  5.68601e-05  0.000199419  6.27945e-06  0.000314182  3.05323e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66715, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.36558e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13623.4      6881.98      3645.36      3837.06      211.671      22720.8      5697.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0119    0.0106         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000183    0.0106    -0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0106283
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.989389    0.0106113   0.00895766   0.00109707  5.31431e-05   0.00017637  5.67869e-06  0.000318269  3.06035e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69211, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          3.1541e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131618, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10217.6      5161.48      2734.02      2877.79      158.754      17040.6      4273.01
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0115    0.0101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000175    0.0101    -0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0101156
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.989901    0.0100994   0.00855637   0.00100146  5.06227e-05   0.00016186   5.2911e-06  0.000320757  3.06728e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7191, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.94263e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33563, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8174.06      4129.19      2187.21      2302.24      127.003      13632.5      3418.41
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0111   0.00972         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000169   0.00972     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00971523
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1       0.9903   0.00969967   0.00823691  0.000932082  4.87239e-05  0.000151506  5.00944e-06  0.000322361  3.07404e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35824, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6811.72      3440.99      1822.68      1918.53      105.836      11360.4      2848.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0109   0.00939         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000164   0.00939    -0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00938694
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990628    0.0093719   0.00797146   0.00087838  4.72046e-05  0.000143568  4.79034e-06  0.000323414  3.08062e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73232, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         5.51968e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.13219, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35182, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5838.62      2949.42       1562.3      1644.45      90.7164      9737.47      2441.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106   0.00911         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00016   0.00911     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00910896
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990906   0.00909436   0.00774444  0.000834997  4.59404e-05   0.00013719  4.61221e-06  0.000324099  3.08702e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72578, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          6.3082e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36879, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5108.79      2580.74      1367.01       1438.9      79.3768      8520.29       2136.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0104   0.00887         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000156   0.00887    -0.996
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00886809
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991146   0.00885388   0.00754618  0.000798867  4.48592e-05  0.000131896  4.46281e-06  0.000324523  3.09326e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74167, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 79782 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006258
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13195
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.085335
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.098846
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.350963
         W1 Well: minimal relaxation eigenvalue = 0.0100325
         W1 Well: maximal relaxation eigenvalue = 2.02767
         W1 Well:       grid size = 248
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31818 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -317 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 131 1/cm
         B3 Barrier:        grid size = 188
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4818 1/cm
         B4 Barrier:        grid size = 192
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6618 1/cm
         B5 Barrier: nonpositive number of states at -23718 1/cm => truncating
         B5 Barrier:        grid size = 230
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23718 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4632 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.930841, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31818 -23718 3.11e+05 4.34e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -317 4.79e+18
         B2    132 2.53e+18
         B3  -4818  1.4e+18
         B4  -6618 1.47e+18
         B5 -23718 8.15e+16
         B6   1482 8.24e+18
         B7   4633 2.12e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.81e-17  1.62e-16  8.02e-17   3.9e-17  6.21e-21  1.45e-15  2.73e-14
          R  1.28e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1  6.17e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  1.25e+16     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  2.56e+16         2      4.16      2.06         1  0.000159      37.1       699
         P4  1.61e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  6.91e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  3.67e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.6e-19  3.33e-19  1.65e-19  8.01e-20  1.27e-23  2.97e-18   5.6e-17
          R  6.24e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1     3e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  6.07e+18     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  1.25e+19         2      4.16      2.06         1  0.000159      37.1       699
         P4  7.85e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  3.36e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  1.79e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
   MasterEquation::set:  done, cpu time[sec] = 0.940013, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             215209       113463      63078.5      66170.8      3659.86       369983        95239
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0206    0.0227         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000357    0.0227    -0.989
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0226871
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.97735    0.0226496    0.0178525   0.00351694  0.000128363  0.000644971  1.76801e-05  0.000483492  5.64565e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21881, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71736.5        37821      21026.2      22056.9      1219.95       123328      31746.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0191    0.0204         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000325    0.0204     -0.99
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0203766
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979657    0.0203429    0.0166088   0.00267004  0.000106698  0.000439065  1.29689e-05  0.000499676   5.6512e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          7.6942e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128474, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23502, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43041.9      22692.6      12615.7      13234.2      731.971      73996.7      19047.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0184    0.0192         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000308    0.0192      0.99
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0191987
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.980833     0.019167    0.0158497   0.00231926  9.85308e-05  0.000373729  1.13964e-05  0.000508725  5.65647e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.07719e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.127989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25826, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30744.2        16209      9011.21      9452.97      522.837      52854.8      13605.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0178    0.0184         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000296    0.0184     0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0183916
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.981639    0.0183612    0.0152921   0.00210685  9.35884e-05  0.000337608  1.05025e-05  0.000514899  5.66162e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63212, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.38496e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128969, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25587, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23912.2        12607      7008.72      7352.31      406.651      41109.3      10582.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0174    0.0178         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000288    0.0178     0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0177744
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982255    0.0177451    0.0148483   0.00195816  9.00782e-05  0.000313515  9.89424e-06  0.000519483  5.66668e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63289, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128764, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27162, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21520.9      11346.3      6307.85      6617.08      365.986      36998.3       9523.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0172    0.0175         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000284    0.0175     0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0175124
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982517    0.0174834    0.0146557   0.00189834  8.86468e-05  0.000304058  9.65256e-06  0.000521371  5.66919e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.30826e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129363, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28266, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14347.3      7564.21      4205.23      4411.39       243.99      24665.6      6349.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0165    0.0165         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000269    0.0165     0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0164878
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.983539    0.0164605    0.0138819   0.00168183  8.33275e-05  0.000270757  8.78658e-06   0.00052828  5.68151e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65747, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.07768e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28674, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10760.5      5673.16      3153.92      3308.54      182.993      18499.2      4761.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.016    0.0157         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000259    0.0157     0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0157477
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984278    0.0157216    0.0133047   0.00154098  7.97087e-05  0.000249721  8.22599e-06  0.000532643  5.69348e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66113, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          3.8471e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129693, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8608.37      4538.53      2523.14      2646.83      146.394      14799.3      3809.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0156    0.0152         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00025    0.0152    -0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0151677
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984857    0.0151427    0.0128432   0.00143868  7.69749e-05  0.000234668  7.81753e-06  0.000535584  5.70513e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65821, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30344, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7173.65       3782.1      2102.62      2205.69      121.995      12332.8      3174.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0153    0.0147         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000244    0.0147     0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0146909
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985333    0.0146667    0.0124585   0.00135941  7.47824e-05    0.0002231  7.49908e-06  0.000537628  5.71646e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67829, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.38594e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129466, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3351, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6148.84       3241.8      1802.24      1890.59      104.567        10571      2721.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.015    0.0143         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000238    0.0143     0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0142862
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985737    0.0142626    0.0121285   0.00129531  7.29542e-05  0.000213789  7.23966e-06  0.000539065   5.7275e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71125, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         6.15536e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128673, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5380.23      2836.58      1576.96      1654.27      91.4964      9249.58      2380.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0147    0.0139         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000233    0.0139    -0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0139348
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.986088    0.0139118    0.0118397   0.00124187  7.13878e-05  0.000206046  7.02172e-06  0.000540069  5.73825e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69826, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 82562 1/cm
      Energy step      = 467 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -43.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005927
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.10623
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.083124
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.107882
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.343132
         W1 Well: minimal relaxation eigenvalue = 0.00986391
         W1 Well: maximal relaxation eigenvalue = 2.18155
         W1 Well:       grid size = 245
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -97 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -97 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4767 1/cm
         B4 Barrier:        grid size = 191
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6635 1/cm
         B5 Barrier: nonpositive number of states at -23447 1/cm => truncating
         B5 Barrier:        grid size = 227
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23447 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1303 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4572 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.906185, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23447  3.8e+05 5.68e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -97 6.43e+18
         B2    -97 3.53e+18
         B3  -4767 2.06e+18
         B4  -6635 2.15e+18
         B5 -23447 1.19e+17
         B6   1304 1.14e+19
         B7   4573    3e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.23e-17   8.9e-17  4.72e-17  2.37e-17  5.34e-21  7.37e-16  1.31e-14
          R  2.36e+16         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  1.12e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  2.12e+16     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  4.22e+16      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  1.87e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  1.36e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  7.65e+13   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.02e-20   1.9e-19  1.01e-19  5.05e-20  1.14e-23  1.57e-18  2.79e-17
          R  1.11e+19         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  5.27e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  9.95e+18     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  1.98e+19      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  8.78e+22  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  6.37e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  3.59e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
   MasterEquation::set:  done, cpu time[sec] = 0.915505, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17963, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             225501       123897      72273.3        75575      4190.26       399124       105317
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0269    0.0327         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000497    0.0327     0.984
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0326883
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967365    0.0326346    0.0258782   0.00485534  0.000186319  0.000910129  2.51727e-05  0.000769516  9.96363e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53719, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.12705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23126, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75166.9      41298.8      24091.1      25191.7      1396.75       133041      35105.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0251    0.0296         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000454    0.0296     0.985
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0296277
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970421    0.0295791    0.0242078   0.00376482  0.000156652  0.000627675  1.87111e-05  0.000793428  9.97288e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58911, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         7.51455e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45100.2      24779.3      14454.7        15115      838.051      79824.9      21063.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0242     0.028         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000432     0.028    -0.986
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0280467
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.971999    0.0280006    0.0231848   0.00329861  0.000145521  0.000538111  1.65579e-05  0.000806997  9.98161e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59478, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.05204e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.12559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32214.4      17699.5      10324.8      10796.4      598.608      57017.8      15045.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0236     0.027         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000417     0.027     0.986
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0269565
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973088    0.0269123      0.02243   0.00301328  0.000138784  0.000488523  1.53326e-05  0.000816378   9.9901e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59187, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.35262e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2504, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25055.6      13766.3      8030.36      8397.22      465.584      44347.1      11701.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0231    0.0261         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000406    0.0261     0.987
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0261195
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973923    0.0260766     0.021827   0.00281228  0.000133996  0.000455397  1.44977e-05  0.000823426  9.99843e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126694, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22550.1      12389.7      7227.33       7557.5      419.026      39912.4      10531.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0229    0.0258         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000401    0.0258    -0.987
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0257631
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.974279    0.0257209    0.0215648   0.00273114  0.000132042   0.00044238  1.41657e-05  0.000826356  1.00025e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60714, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.25437e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26782, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15033.4      8259.77      4818.22      5038.33       279.35      26608.3      7021.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.022    0.0244         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000382    0.0244     0.988
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.024365
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.975675     0.024325    0.0205074    0.0024361  0.000124771  0.000396465  1.29741e-05  0.000837245  1.00227e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62471, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.00582e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28357, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              11275      6194.83      3613.66      3778.75      209.513      19956.2      5265.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0214    0.0234         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000367    0.0234    -0.988
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0233502
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.976688    0.0233118    0.0197151   0.00224301  0.000119813   0.00036738  1.22007e-05  0.000844324  1.00423e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64033, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.75728e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9020.03      4955.86      2890.93         3023       167.61        15965      4212.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0209    0.0226         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000356    0.0226     0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.022552
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977485     0.022515    0.0190793   0.00210218  0.000116059  0.000346521  1.16359e-05   0.00084925  1.00613e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61603, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30624, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7516.69      4129.88      2409.11      2519.17      139.675      13304.1      3510.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0205    0.0219         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000347    0.0219     0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0218939
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978142    0.0218579    0.0185476   0.00199271  0.000113043   0.00033046  1.11948e-05  0.000852807  1.00798e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         5.26019e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127282, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26989, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6442.88       3539.9      2064.95      2159.28      119.722      11403.6      3009.05
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0201    0.0213         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000339    0.0213     0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0213338
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978701    0.0212988    0.0180905   0.00190394  0.000110523   0.00031751  1.08349e-05  0.000855427  1.00978e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         6.01164e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28885, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5637.52      3097.41      1806.83      1889.37      104.756      9978.11      2632.92
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0198    0.0208         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000333    0.0208     -0.99
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0208465
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979188    0.0208122    0.0176894   0.00182978  0.000108361  0.000306724   1.0532e-05  0.000857371  1.01153e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64613, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 85343 1/cm
      Energy step      = 483 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -40.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005657
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125943
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.08276
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094632
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.336111
         W1 Well: minimal relaxation eigenvalue = 0.00970545
         W1 Well: maximal relaxation eigenvalue = 7.45437
         W1 Well:       grid size = 243
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -32026 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -148 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -148 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4978 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6427 1/cm
         B5 Barrier: nonpositive number of states at -23815 1/cm => truncating
         B5 Barrier:        grid size = 226
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23815 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1300 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.901841, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -32026 -23815 2.89e+05 7.41e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -148 8.54e+18
         B2   -148 4.88e+18
         B3  -4978 2.99e+18
         B4  -6427 3.11e+18
         B5 -23815 1.73e+17
         B6   1301 1.55e+19
         B7   4682  4.2e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.4e-17  5.11e-17  2.88e-17   1.5e-17  4.66e-21  3.94e-16   6.6e-15
          R  4.17e+16         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  1.96e+16      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  3.47e+16     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  6.69e+16       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  2.14e+20  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  2.54e+15     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  1.51e+14   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.29e-20  1.13e-19  6.36e-20   3.3e-20  1.03e-23  8.68e-19  1.46e-17
          R  1.89e+19         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  8.88e+18      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  1.57e+19     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  3.03e+19       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  9.73e+22  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  1.15e+18     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  6.87e+16   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
   MasterEquation::set:  done, cpu time[sec] = 0.910951, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.16939, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             235206       134486      82292.7      85793.9      4767.84       428104       115645
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0339    0.0454         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000671    0.0454    -0.977
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0453689
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954706     0.045294    0.0359748   0.00660418  0.000259541   0.00122891  3.43301e-05   0.00117549  1.68008e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53074, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.123263, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78402.1      44828.7      27430.9        28598      1589.28       142701      38548.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0319    0.0414         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000617    0.0414     0.979
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0414216
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958647    0.0413533     0.033856    0.0051633  0.000221019  0.000860694  2.59132e-05   0.00120957  1.68155e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5395, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         7.34524e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47041.3      26897.2      16458.5      17158.8      953.569      85620.8      23129.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0309    0.0394         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000589    0.0394     -0.98
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0393681
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.960697    0.0393031    0.0325381   0.00454603  0.000206528  0.000743376  2.30964e-05   0.00122912  1.68292e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.02833e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124247, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18684, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33600.9      19212.3      11756.1      12256.3      681.121      61157.7      16520.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0301    0.0379         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000569    0.0379     0.981
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0379466
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.962116     0.037884    0.0315592   0.00416769  0.000197743  0.000678241  2.14892e-05   0.00124277  1.68425e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.32214e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.123797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              26134      14942.9      9143.63      9532.66       529.76      47567.1      12849.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0296    0.0369         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000554    0.0369     0.981
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.036852
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963209    0.0367911    0.0307738   0.00390084  0.000191489   0.00063464  2.03922e-05   0.00125311  1.68555e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57292, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23520.6      13448.6      8229.27      8579.39      476.784      42810.4      11564.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0293    0.0364         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000548    0.0364    -0.982
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0363852
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963675    0.0363251    0.0304314   0.00379302  0.000188934  0.000617485  1.99554e-05   0.00125745   1.6862e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         2.20357e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.121347, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90585, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15680.4      8965.75      5486.18       5719.6      317.856      28540.3      7709.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0283    0.0345         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000523    0.0345    -0.983
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0345485
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.965509    0.0344915    0.0290458   0.00340043  0.000179413  0.000556854  1.83848e-05   0.00127374  1.68934e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26991, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.9381e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21821, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11760.3      6724.31      4114.63       4289.7      238.392      21405.2      5782.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0276    0.0332         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000505    0.0332    -0.983
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0332102
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.966845    0.0331554    0.0280024   0.00314293  0.000172903  0.000518336  1.73626e-05   0.00128456  1.69238e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         3.67262e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.123844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9408.25      5379.45      3291.71      3431.76      190.714      17124.2      4625.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.027    0.0322         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00049    0.0322    -0.984
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0321545
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967899    0.0321014    0.0271622   0.00295478  0.000167965  0.000490649  1.66147e-05   0.00129228  1.69534e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59391, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.123953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23384, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7840.21      4482.87      2743.09       2859.8      158.928      14270.1      3854.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0265    0.0313         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000478    0.0313     0.984
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0312817
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.96877    0.0312301    0.0264575    0.0028083  0.000163989  0.000469291  1.60293e-05   0.00129799  1.69821e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.14167e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.122318, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6720.18      3842.46      2351.22      2451.26      136.224      12231.5      3304.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0261    0.0305         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000468    0.0305    -0.985
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0305375
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969513    0.0304871    0.0258502   0.00268936  0.000160663   0.00045204  1.55509e-05   0.00130233    1.701e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61863, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.87619e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124135, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5880.16      3362.16      2057.32      2144.85      119.196      10702.6      2891.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0257    0.0299         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000459    0.0299    -0.985
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0298887
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970161    0.0298393    0.0253162   0.00258985  0.000157804  0.000437652  1.51478e-05   0.00130568  1.70373e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61564, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 88123 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -38.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00651
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.10489
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.079789
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.102719
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.325107
         W1 Well: minimal relaxation eigenvalue = 0.00955724
         W1 Well: maximal relaxation eigenvalue = 2.36185
         W1 Well:       grid size = 240
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31876 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -376 1/cm
         B2 Barrier:        grid size = 176
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 123 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4876 1/cm
         B4 Barrier:        grid size = 189
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6376 1/cm
         B5 Barrier: nonpositive number of states at -23377 1/cm => truncating
         B5 Barrier:        grid size = 223
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23376 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1123 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4623 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.882646, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31876 -23376    4e+05 9.59e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -376 1.12e+19
         B2    124 6.68e+18
         B3  -4876 4.28e+18
         B4  -6376 4.45e+18
         B5 -23376 2.48e+17
         B6   1124  2.1e+19
         B7   4624  5.8e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.41e-17  3.04e-17  1.82e-17  9.72e-18   4.1e-21  2.19e-16  3.48e-15
          R  7.09e+16         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  3.29e+16     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  5.49e+16     0.775      1.67         1     0.534  0.000225        12       191
         P3  1.03e+17      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  2.44e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5  4.57e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  2.87e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.22e-20  6.94e-20  4.16e-20  2.22e-20  9.36e-24  4.99e-19  7.95e-18
          R  3.11e+19         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  1.44e+19     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  2.41e+19     0.775      1.67         1     0.534  0.000225        12       191
         P3  4.51e+19      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  1.07e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5     2e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  1.26e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
   MasterEquation::set:  done, cpu time[sec] = 0.89187, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.14056, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             244310       145183      93153.6      96842.2      5393.56       456785       126171
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0416    0.0609         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000884    0.0609     0.969
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0609223
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.93918    0.0608203    0.0482419   0.00883019  0.000348868   0.00159668  4.51059e-05   0.00173031  2.72013e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.48101, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120867, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.16361, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81436.6      48394.3      31051.2      32280.7      1797.85       152262      42056.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0393    0.0559         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000815    0.0559    -0.972
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.05593
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.944164    0.0558363    0.0456694   0.00688838  0.000301234   0.00113818  3.46361e-05   0.00177729  2.72237e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.50332, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         7.18534e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120455, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              48862      29036.6      18630.7      19368.4      1078.71      91356.9      25234.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0381    0.0533         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00078    0.0533     0.973
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0533359
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.946753    0.0532465     0.044032   0.00607798   0.00028312  0.000990537  3.10949e-05   0.00180451  2.72445e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51863, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.00595e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17852, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34901.4      20740.4      13307.7      13834.6      770.508      65254.9      18024.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0373    0.0515         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000755    0.0515     0.974
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0515379
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.948548    0.0514515    0.0428069   0.00558431  0.000272098  0.000908231  2.90666e-05   0.00182367  2.72646e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51792, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.29336e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20028, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27145.5      16131.4      10350.4      10760.2      599.284      50753.8        14019
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0367    0.0502         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000736    0.0502     0.975
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0501512
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.949933    0.0500671    0.0418196   0.00523704  0.000264235  0.000852993  2.76788e-05    0.0018383  2.72841e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54141, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121063, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              24431      14518.3      9315.36      9684.22      539.356      45678.5      12617.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0364    0.0496         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000728    0.0496    -0.975
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0495592
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.950524    0.0494761    0.0413881    0.0050969  0.000261019  0.000831226  2.71254e-05   0.00184446  2.72938e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          2.1556e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16287.3      9678.86      6210.24      6456.15       359.57      30452.3      8411.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0353    0.0472         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000696    0.0472    -0.976
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0472257
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.952853    0.0471465     0.039636   0.00458711  0.000249008  0.000754131  2.51315e-05   0.00186785  2.73408e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56266, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.87414e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21005, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12215.5      7259.15      4657.68      4842.11      269.678      22839.2      6308.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0344    0.0455         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000673    0.0455    -0.977
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0455205
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954556    0.0454442    0.0383106   0.00425297  0.000240775  0.000705008  2.38303e-05   0.00188367  2.73862e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.59267e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             9772.4      5807.32      3726.14      3873.69      215.742      18271.4      5046.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0338    0.0442         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000655    0.0442     0.978
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0441721
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.955902    0.0440981    0.0372398   0.00400881  0.000234516   0.00066962  2.28761e-05   0.00189514  2.74301e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5477, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8143.66      4839.43      3105.12      3228.07      179.785      15226.2      4205.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0332    0.0431         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00064    0.0431     0.978
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0430553
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.957017    0.0429831    0.0363393   0.00381865  0.000229468  0.000642269   2.2128e-05   0.00190382  2.74729e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.02974e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121208, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22828, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6980.28      4148.08      2661.53      2766.92      154.102        13051      3604.88
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0327    0.0421         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000627    0.0421    -0.979
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0421012
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.957969    0.0420306    0.0355615   0.00366416  0.000225238  0.000620143  2.15156e-05   0.00191055  2.75144e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5697, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.74827e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.12082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6107.75      3629.57      2328.84      2421.06      134.839      11419.6      3154.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0323    0.0413         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000616    0.0413     0.979
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.041268
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958801    0.0411988    0.0348763   0.00353485  0.000221597  0.000601662  2.09989e-05   0.00191586  2.75549e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56057, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 6683.55, elapsed time[sec] = 196
