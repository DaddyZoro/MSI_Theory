Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001077, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.002563, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.001023, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 1.80485, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.1506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.152943, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.046115, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000901, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.394226, elapsed time[sec] = 0
         effective power exponent at 590.148 kcal/mol = 11.372
      interpolating states number/density done, cpu time[sec] = 2.08979, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 3.91521, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00204, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004042, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007536, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001609, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003619, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.008114, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.022283, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001602, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003598, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006703, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001602, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003576, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006677, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.018983, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001543, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003481, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006494, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002126, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004101, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007329, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.01936, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001529, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003493, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00645, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001592, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003803, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007024, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019029, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001507, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003804, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007654, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001591, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00362, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006903, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019957, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002119, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004102, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00742, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.013248, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001575, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003579, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006849, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012134, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.081961, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.082935, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001466, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003509, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.124168, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.041834, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.435906, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.443425, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001223, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000435, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.014574, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014641, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001205, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000428, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.014529, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014642, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001203, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000412, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.01442, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014479, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.0012, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00043, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.014239, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014357, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001193, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000423, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.014176, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014293, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001184, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000416, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014098, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014207, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001187, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000397, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014018, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014129, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001175, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0004, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.013984, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014095, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001188, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000405, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013978, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014088, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001171, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000404, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.013947, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014012, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001175, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.013918, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014027, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001168, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.013883, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013995, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001173, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000428, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013966, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014023, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001171, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000412, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.013935, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014047, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001175, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000404, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.013958, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014015, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001177, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.013936, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013992, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.13459, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.82984, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001187, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.015216, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.015298, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001173, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000409, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.014003, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014065, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001164, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000393, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.013821, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013878, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001161, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000411, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.01384, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013899, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00115, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013649, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01371, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.013686, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013749, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001148, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000399, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.013639, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013696, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000411, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.013581, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013634, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001138, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.0136, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013656, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001144, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000387, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.013521, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013574, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001134, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000391, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.013505, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013558, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000402, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.013544, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0136, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001141, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000374, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.013485, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013539, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.01363, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013688, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001145, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000375, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.013546, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0136, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001139, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000411, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.013573, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01364, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.2612, elapsed time[sec] = 2
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.50567, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.0013, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000456, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 6.04612, elapsed time[sec] = 6
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 6.0628, elapsed time[sec] = 6
   Model::RRHO::RRHO:  done, cpu time[sec] = 6.0629, elapsed time[sec] = 6
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000893, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.00087, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 2.07205e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966
     200 7.24433e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15
     300  4.44287e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21
     400  4.93681e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24
     500   1.7017e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26
     600  1.02293e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27
     700  4.34492e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28
     800  2.62488e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29
     900  9.25736e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30
    1000  1.11725e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30
    1100  3.28532e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31
    1200  1.87722e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31
    1300  1.78246e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32
    1400  2.51558e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32
    1500    4.863e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33
    1600  1.21138e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33
    1700  3.71125e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33
    1800  1.34875e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33
    1900  5.65154e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34
    2000  2.66921e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 13.7419, elapsed time[sec] = 9
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 13058 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000159
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007594
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.00946
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.17047
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.86466
         W1 Well: minimal relaxation eigenvalue = 0.0378479
         W1 Well: maximal relaxation eigenvalue = 1.28104
         W1 Well:       grid size = 892
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31542 1/cm
         B1 Barrier:        grid size = 262
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -42 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 354
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 385
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6192 1/cm
         B5 Barrier: nonpositive number of states at -23592 1/cm => truncating
         B5 Barrier:        grid size = 733
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23592 1/cm
         B6 Barrier:        grid size = 232
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.1877, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31542 -23592 3.33e+05 3.12e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -42 2.63e+12
         B2    208 2.19e+11
         B3  -4642 3.33e+10
         B4  -6192 5.46e+10
         B5 -23592 4.36e+09
         B6   1458 5.82e+11
         B7   4708 1.51e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.59e+44  4.82e+44   4.9e+35  2.09e+32  4.73e-06  2.75e+48  2.22e+55
          R  6.28e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  2.08e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  2.04e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  4.78e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  2.11e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  3.64e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6   4.5e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.64e+40   1.1e+41  1.12e+32  4.77e+28  1.08e-09  6.27e+44  5.06e+51
          R  2.75e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1   9.1e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  8.95e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3   2.1e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  9.26e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5   1.6e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  1.97e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.1918, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+08
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 0.523351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3022, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            309.656      25.8078      3.91554       6.4335      0.51303      68.4987      1.77667
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.244031, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.263202, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70471e-12  1.20324e-51  1.56579e-59
      low eigenvalue method done, cpu time[sec] = 0.263967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-53         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.44179e-47  7.16159e-47 -1.17678e-48 -9.19336e-47 -1.43231e-48 -1.72869e-49  7.72706e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.657, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+09
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.39796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1712, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            103.219      8.60261      1.30518       2.1445      0.17101      22.8329     0.592222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243949, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018909, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.26313, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.86741e-13  4.01082e-52  3.82437e-60
      low eigenvalue method done, cpu time[sec] = 0.26395, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-53         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   5.2687e-47  1.34733e-47 -1.25108e-48 -3.86844e-47 -1.00706e-48 -1.60717e-49 -3.65474e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4077, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.07644e+09
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.37142, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.1836, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.9312      5.16156     0.783107       1.2867     0.102606      13.6997     0.355333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243565, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01887, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262691, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37841e-12  2.40649e-52  1.84017e-60
      low eigenvalue method done, cpu time[sec] = 0.263493, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.41e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.11e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.95788e-47  1.06695e-47   5.0211e-49  6.09241e-48  2.45076e-49 -1.74003e-49  8.57756e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.3959, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         5.70702e+09
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.37105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2918, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.2366      3.68683     0.559362     0.919072      0.07329      9.78552      0.25381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262811, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.11978e-14  1.71892e-52  1.10635e-60
      low eigenvalue method done, cpu time[sec] = 0.263738, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.51e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.10331e-47  2.59669e-47   2.8102e-49 -9.98381e-49  7.57267e-50  5.27052e-50 -2.68217e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4564, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1          7.3376e+09
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.41852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2907, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.4062      2.86754     0.435059     0.714834    0.0570034      7.61096     0.197407
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243276, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262353, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.77066e-13  1.33694e-52  7.46385e-61
      low eigenvalue method done, cpu time[sec] = 0.263213, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.12073e-47  3.03495e-47  3.01624e-49 -4.65839e-48   -2.375e-50 -5.33682e-50  6.37124e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4986, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+09
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.42523, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2794, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.9656      2.58078     0.391554      0.64335     0.051303      6.84987     0.177667
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243682, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018893, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262831, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02652e-12  1.20324e-52  6.30736e-61
      low eigenvalue method done, cpu time[sec] = 0.263771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.6848e-47 -7.00977e-49  1.73218e-49 -1.83535e-48  5.12577e-50 -5.59629e-51  9.16985e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5467, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.22293e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.36573, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2867, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.6437      1.72052     0.261036       0.4289     0.034202      4.56658     0.118444
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243121, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262152, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.03872e-13  8.02163e-53  3.24187e-61
      low eigenvalue method done, cpu time[sec] = 0.262905, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.02e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.22775e-48 -7.75559e-48 -1.74203e-49 -1.91339e-48 -1.01345e-49  5.17159e-50 -1.26322e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.4581, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.63058e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.40938, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.2905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.4828      1.29039     0.195777     0.321675    0.0256515      3.42493    0.0888333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243522, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018815, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262588, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.20132e-13  6.01622e-53  1.98941e-61
      low eigenvalue method done, cpu time[sec] = 0.263402, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.02e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.67424e-47  -1.6311e-47 -8.28152e-49 -1.26472e-47 -3.47535e-49  9.92045e-51  1.52916e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.522, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.03822e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.38897, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.3862      1.03231     0.156621      0.25734    0.0205212      2.73995    0.0710667
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242983, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262073, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31593e-13  4.81298e-53  1.35062e-61
      low eigenvalue method done, cpu time[sec] = 0.262828, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.82283e-47  8.07448e-48 -9.12072e-50 -3.34729e-48 -4.40086e-50   7.3099e-52 -1.36161e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.61326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.7318, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.3219     0.860261     0.130518      0.21445     0.017101      2.28329    0.0592222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.21101e-13  4.01082e-53  9.79205e-62
      low eigenvalue method done, cpu time[sec] = 0.263029, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.42625e-47 -9.44759e-48 -2.74863e-49 -3.03918e-48  -7.2593e-50  7.58031e-51  5.10145e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 18.1212, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.85351e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.43728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3259, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.84731     0.737366     0.111872     0.183814     0.014658       1.9571    0.0507619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.243015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018803, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262072, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57053e-14  3.43784e-53  7.43567e-62
      low eigenvalue method done, cpu time[sec] = 0.262854, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.22843e-47 -1.18004e-48  1.98282e-49  4.02201e-48  7.19227e-50   -6.204e-50 -8.20145e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5127, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.26116e+10
      global relaxation matrix dimension = 892
      setting global matrices ... done, cpu time[sec] = 1.45984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.3068, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7.7414     0.645196    0.0978884     0.160838    0.0128258      1.71247    0.0444167
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01887, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261673, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.42704e-13  3.00811e-53  5.84422e-62
      low eigenvalue method done, cpu time[sec] = 0.262448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.01e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-54         0         1
         *Z       ---       ---  1.32e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.08911e-47  2.30063e-48  2.58954e-50 -3.78589e-49  3.32036e-51   5.6839e-50  3.98928e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.5499, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 13336 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.012551
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.750698
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.692893
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.76004
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.36864
         W1 Well: minimal relaxation eigenvalue = 0.037088
         W1 Well: maximal relaxation eigenvalue = 1.24953
         W1 Well:       grid size = 863
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31540 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 376
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23584 1/cm => truncating
         B5 Barrier:        grid size = 710
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23584 1/cm
         B6 Barrier:        grid size = 228
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.7184, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31540 -23584 3.35e+05 3.32e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 3.02e+12
         B2    181 2.54e+11
         B3  -4604 3.92e+10
         B4  -6216 6.39e+10
         B5 -23584 5.14e+09
         B6   1480  6.9e+11
         B7   4705 1.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e+42  3.16e+42  6.82e+33  3.75e+30  1.42e-06  1.52e+46  7.55e+52
          R  9.25e-43         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  3.17e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  1.47e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  2.67e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  7.02e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  6.59e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  1.32e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.56e+38  7.48e+38  1.62e+30  8.89e+26  3.38e-10   3.6e+42  1.79e+49
          R   3.9e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  1.34e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  6.18e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  1.13e-27  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  2.96e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  2.78e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  5.58e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.7235, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+08
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 0.493786, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6979, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            345.344      29.0998      4.48567      7.30975     0.587791      78.9159      2.14111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.218312, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017179, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.236388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67866e-11  1.35623e-50   2.2757e-57
      low eigenvalue method done, cpu time[sec] = 0.237286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.03e-52         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.22118e-45  2.07848e-45  1.61815e-47 -6.76379e-46 -1.57068e-47  1.46916e-48 -1.54694e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7104, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+09
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.50673, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            115.115      9.69992      1.49522      2.43658      0.19593      26.3053     0.713705
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216899, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234339, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.67857e-13  4.52077e-51  5.77486e-58
      low eigenvalue method done, cpu time[sec] = 0.235049, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.52e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-52         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.4797e-46  1.54979e-47 -5.09486e-48 -1.52086e-46 -1.45473e-48  1.71817e-48  2.93084e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7091, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.94873e+09
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.51164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7728, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.0688      5.81995     0.897134      1.46195     0.117558      15.7832     0.428223
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.217011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50508e-13  2.71246e-51  2.82572e-58
      low eigenvalue method done, cpu time[sec] = 0.235201, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.71e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-52         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.92161e-46   2.7992e-46  1.25127e-47  2.26488e-46   6.4788e-48  6.12724e-50 -1.17343e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.9271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         5.52822e+09
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.50664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7686, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.3349      4.15711      0.64081      1.04425    0.0839702      11.2737     0.305874
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216775, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01716, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234223, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34664e-13  1.93747e-51  1.71703e-58
      low eigenvalue method done, cpu time[sec] = 0.235196, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.19e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.13422e-46  3.47066e-46  1.02691e-47  1.93606e-46  4.33038e-48 -1.32317e-48  2.06141e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.826, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.10772e+09
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.51241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7189, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.3716      3.23331     0.498408     0.812195    0.0653102      8.76843     0.237902
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216341, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017158, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.75521e-13  1.50692e-51  1.16727e-58
      low eigenvalue method done, cpu time[sec] = 0.234502, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.59e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.02509e-46  2.41059e-46  1.19487e-47  2.02321e-46  4.15287e-48  3.22704e-49  1.56276e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7152, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+09
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.51114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.5344      2.90998     0.448567     0.730975    0.0587791      7.89159     0.214111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216341, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233784, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.04826e-13  1.35623e-51   9.8949e-59
      low eigenvalue method done, cpu time[sec] = 0.234704, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.03e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.94769e-46   5.8727e-47 -1.77703e-48  -4.6757e-47   1.4774e-49  8.44969e-49   -2.753e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8462, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.18462e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.50817, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7155, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.0229      1.93998     0.299045     0.487317    0.0391861      5.26106     0.142741
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216371, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233834, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.3741e-13  9.04155e-52  5.14459e-59
      low eigenvalue method done, cpu time[sec] = 0.234575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.04e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.43248e-46 -5.14361e-47  -2.5841e-48 -3.02459e-47 -1.82571e-49  -9.9581e-49  -1.3883e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.57949e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.5071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7925, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.2672      1.45499     0.224283     0.365488    0.0293896      3.94579     0.107056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017166, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233721, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02742e-14  6.78116e-52  3.18105e-59
      low eigenvalue method done, cpu time[sec] = 0.234528, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.78e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.52e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.53373e-46  -1.0218e-46 -1.49536e-48  -5.7987e-47 -1.08777e-48   1.6911e-48   3.1885e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8248, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.97437e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.51266, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7453, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.8138      1.16399     0.179427      0.29239    0.0235117      3.15663    0.0856446
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216234, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01718, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.71576e-13  5.42493e-52  2.17156e-59
      low eigenvalue method done, cpu time[sec] = 0.234525, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.42e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.5521e-46 -4.76702e-47 -2.34927e-48 -7.35349e-47 -1.92879e-48 -3.38163e-49 -1.70954e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7837, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.51102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.5115     0.969992     0.149522     0.243658     0.019593      2.63053    0.0713705
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216021, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017161, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233462, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.64114e-14  4.52077e-52  1.58109e-59
      low eigenvalue method done, cpu time[sec] = 0.234199, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.52e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00597e-46   1.5445e-47   2.2973e-49 -2.45528e-48 -1.34141e-50  1.52199e-49 -4.81642e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.928, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.76411e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.50674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8019, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.86698     0.831422     0.128162      0.20885     0.016794      2.25474    0.0611747
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216124, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233578, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33514e-13  3.87495e-52   1.2047e-59
      low eigenvalue method done, cpu time[sec] = 0.234322, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.62662e-46   -8.003e-47 -2.16465e-48 -7.58214e-48 -2.61704e-49 -3.66841e-49  1.84071e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.15898e+10
      global relaxation matrix dimension = 863
      setting global matrices ... done, cpu time[sec] = 1.50687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8009, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8.6336     0.727494     0.112142     0.182744    0.0146948       1.9729    0.0535279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216217, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76943e-13  3.39058e-52  9.49519e-60
      low eigenvalue method done, cpu time[sec] = 0.234395, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-53         0         1
         *Z       ---       ---   8.1e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.68599e-47  4.90325e-47  2.44594e-48  3.28028e-47   6.4897e-49  1.05207e-49  5.13811e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.843, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 13615 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.012023
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.876441
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.781983
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.565986
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.14119
         W1 Well: minimal relaxation eigenvalue = 0.0363862
         W1 Well: maximal relaxation eigenvalue = 1.26452
         W1 Well:       grid size = 852
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31541 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -6 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 344
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 374
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 694
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 229
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.51003, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31541 -23167 4.54e+05 3.53e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -6 3.46e+12
         B2    207 2.95e+11
         B3  -4617 4.62e+10
         B4  -6207 7.46e+10
         B5 -23167 6.05e+09
         B6   1478 8.16e+11
         B7   4711 2.31e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+40  2.88e+40  1.26e+32  8.77e+28  4.69e-07  1.18e+44  3.73e+50
          R  9.83e-41         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  3.48e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  7.93e-33  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  1.14e-29  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  2.13e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5  8.49e-45  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  2.68e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.46e+36  6.95e+36  3.05e+28  2.12e+25  1.13e-10  2.85e+40     9e+46
          R  4.07e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  1.44e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  3.28e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  4.72e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  8.82e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5  3.51e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  1.11e-47  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.51528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+08
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 0.478154, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3392, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            384.127      32.7289      5.12393      8.28298     0.671512      90.6032       2.5674
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.225374, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.81827e-12  1.45067e-49  2.42432e-55
      low eigenvalue method done, cpu time[sec] = 0.226199, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.28e-51         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.96671e-44 -1.19998e-44 -1.36261e-46  2.32395e-45  3.08134e-47 -1.66672e-47  2.36684e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.2644, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+09
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.47158, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            128.042      10.9096      1.70798      2.76099     0.223837      30.2011     0.855799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207251, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016703, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.22419, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.94637e-12  4.83557e-50  6.37705e-56
      low eigenvalue method done, cpu time[sec] = 0.224873, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.84e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-51         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.73189e-44 -6.30517e-45 -2.35923e-46 -1.74481e-45 -7.07444e-47 -1.56758e-47 -1.00628e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.249, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.82985e+09
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.47032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.8253      6.54578      1.02479       1.6566     0.134302      18.1206     0.513479
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207816, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016698, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.22475, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.05085e-13  2.90135e-50  3.17099e-56
      low eigenvalue method done, cpu time[sec] = 0.225445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-51         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.05172e-44 -9.04686e-45 -3.93359e-46 -5.07479e-45 -1.11169e-46 -1.89401e-47  8.32072e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.359, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         5.36179e+09
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.47157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3834, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.8752      4.67555     0.731989      1.18328    0.0959303      12.9433     0.366771
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207287, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016701, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224225, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.14862e-13  2.07239e-50  1.94675e-56
      low eigenvalue method done, cpu time[sec] = 0.224925, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.54e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.35175e-45 -1.67655e-45 -5.52003e-47 -9.25699e-46  -2.4454e-47  4.46541e-48  1.93334e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.89373e+09
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.46758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4837, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.6807      3.63654     0.569325     0.920331    0.0746125       10.067     0.285266
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207275, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016711, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224218, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.92338e-13  1.61186e-50  1.33334e-56
      low eigenvalue method done, cpu time[sec] = 0.224894, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.86e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.9425e-44  7.53868e-45  1.89188e-46  1.69492e-45  3.61703e-47  3.37037e-48  2.40758e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5747, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+09
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.31712, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.4127      3.27289     0.512393     0.828298    0.0671512      9.06032      0.25674
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207058, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016694, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223985, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.92568e-13  1.45067e-50  1.13373e-56
      low eigenvalue method done, cpu time[sec] = 0.224679, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.28e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.94783e-45  4.72988e-45   9.8693e-47  5.40315e-46  2.20415e-47  3.40447e-49 -1.29134e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2851, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.14896e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.47148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.6084      2.18193     0.341595     0.552198    0.0447675      6.04022      0.17116
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224263, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.27399e-13  9.67117e-51  5.96175e-57
      low eigenvalue method done, cpu time[sec] = 0.225007, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.67e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.52e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.77452e-46  2.57718e-46 -5.14085e-47 -7.48524e-46 -2.21143e-47 -5.64332e-48  1.96194e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.53194e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.31964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5489, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.2063      1.63644     0.256196     0.414149    0.0335756      4.53016      0.12837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206779, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016689, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.2237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.43114e-13  7.25338e-51  3.71426e-57
      low eigenvalue method done, cpu time[sec] = 0.224407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.25e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.18779e-45  2.21947e-45  3.85287e-47  2.36166e-46  1.00947e-47  7.64508e-48 -8.21869e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2653, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.91493e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.4676, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5037, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.3651      1.30916     0.204957     0.331319    0.0268605      3.62413     0.102696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20687, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223806, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1779e-13   5.8027e-51  2.54962e-57
      low eigenvalue method done, cpu time[sec] = 0.224482, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.8e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.42738e-46  1.07399e-46  3.08783e-47  4.61956e-46  1.18531e-47  7.74008e-49  3.79178e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3996, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.46808, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4948, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.8042      1.09096     0.170798     0.276099    0.0223837      3.02011    0.0855799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206832, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223762, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.65498e-13  4.83559e-51  1.86432e-57
      low eigenvalue method done, cpu time[sec] = 0.224576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.84e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.1496e-45 -6.47401e-46 -1.56303e-47 -6.08004e-48 -5.22067e-49 -1.61444e-49 -2.50658e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3485, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          2.6809e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.46777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5061, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             10.975     0.935111     0.146398     0.236656    0.0191861      2.58866    0.0733542
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223816, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4752e-13  4.14479e-51  1.42542e-57
      low eigenvalue method done, cpu time[sec] = 0.224517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.14e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.09816e-45  7.78813e-46  5.80665e-48 -1.80515e-46 -1.25119e-48  2.64594e-48  -2.0656e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.06388e+10
      global relaxation matrix dimension = 852
      setting global matrices ... done, cpu time[sec] = 1.46904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4459, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.60317     0.818222     0.128098     0.207074    0.0167878      2.26508    0.0641849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206624, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223596, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26624e-13  3.62669e-51   1.1267e-57
      low eigenvalue method done, cpu time[sec] = 0.224433, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-52         0         1
         *Z       ---       ---     6e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.48309e-47  2.73475e-46 -6.86458e-49 -8.57639e-47 -2.01352e-49 -5.48072e-48 -5.09956e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.3517, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 13893 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011737
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.713719
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.769207
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.748392
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.72728
         W1 Well: minimal relaxation eigenvalue = 0.0356883
         W1 Well: maximal relaxation eigenvalue = 1.23103
         W1 Well:       grid size = 826
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31537 1/cm
         B1 Barrier:        grid size = 253
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 249
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 337
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 365
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23177 1/cm => truncating
         B5 Barrier:        grid size = 674
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23177 1/cm
         B6 Barrier:        grid size = 226
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.13761, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31537 -23177 4.51e+05 3.74e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 3.96e+12
         B2    198 3.41e+11
         B3  -4642 5.42e+10
         B4  -6182 8.69e+10
         B5 -23177  7.1e+09
         B6   1463 9.63e+11
         B7   4708 2.84e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.24e+38  3.39e+38  2.89e+30  2.51e+27  1.61e-07   1.2e+42  2.47e+48
          R  8.09e-39         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  2.95e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  3.46e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  3.99e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  6.21e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  8.37e-43  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  4.05e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.12e+34  8.55e+34  7.29e+26  6.33e+23  4.06e-11  3.01e+38  6.23e+44
          R  3.21e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  1.17e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  1.37e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  1.58e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  2.46e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  3.32e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  1.61e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.14274, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+08
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 0.456829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0375, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            425.925       36.699      5.83258       9.3554     0.764499        103.6      3.06053
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190177, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015411, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206459, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.16576e-14  1.49058e-48  1.95929e-53
      low eigenvalue method done, cpu time[sec] = 0.207111, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-50 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.61739e-42  8.97162e-43  6.72209e-44  1.28735e-42  2.54299e-44  2.48996e-48 -1.81883e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6559, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+09
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1173, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.975       12.233      1.94419      3.11847     0.254833      34.5333      1.02018
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189867, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205506, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.07853e-14  4.96873e-49  5.33307e-54
      low eigenvalue method done, cpu time[sec] = 0.206204, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.97e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-50 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.60931e-43 -3.04126e-43 -6.89466e-45  6.79528e-44  1.05238e-45  2.19481e-46  9.89561e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7052, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.71895e+09
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.40003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            85.1849      7.33981      1.16652      1.87108       0.1529        20.72     0.612106
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189457, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015375, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.649e-14  2.98126e-49  2.69352e-54
      low eigenvalue method done, cpu time[sec] = 0.205748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-50 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.48654e-42  -5.7119e-43 -1.91979e-44 -3.12276e-43 -7.43334e-45 -7.05963e-46  1.88968e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         5.20654e+09
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.40114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1252, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.8464      5.24272     0.833226      1.33649     0.109214         14.8     0.437218
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205726, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.61172e-15  2.12948e-49  1.67032e-54
      low eigenvalue method done, cpu time[sec] = 0.206392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.6e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   4.6215e-43   2.6501e-43  1.03327e-44  1.67138e-43  3.59503e-45 -2.34067e-46  1.42756e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6838, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.69412e+09
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39871, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1617, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             47.325      4.07767     0.648065      1.03949    0.0849443      11.5111     0.340059
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189536, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205169, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.14736e-14  1.65627e-49  1.15244e-54
      low eigenvalue method done, cpu time[sec] = 0.205895, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.91e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.13306e-42 -5.31028e-43 -2.09833e-44 -2.65327e-43 -5.76538e-45  4.03967e-47   1.8646e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7031, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+09
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.40429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.5925       3.6699     0.583258      0.93554    0.0764499        10.36     0.306053
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205258, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.19541e-14  1.49064e-49  9.82881e-55
      low eigenvalue method done, cpu time[sec] = 0.205959, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.25083e-42 -4.16198e-43 -1.22401e-44 -1.16949e-43 -3.08644e-45 -8.87251e-46 -4.31648e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.11569e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1118, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             28.395       2.4466     0.388839     0.623693    0.0509666      6.90666     0.204035
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189736, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.22446e-14  9.93767e-50  5.22705e-55
      low eigenvalue method done, cpu time[sec] = 0.206226, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.94e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -9.70169e-44 -4.59473e-45  2.97369e-46  1.27248e-44  2.94622e-46 -3.99834e-46  5.21404e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7106, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.48758e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.29167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.2962      1.83495     0.291629      0.46777    0.0382249      5.17999     0.153026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189756, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205446, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.22009e-15  7.45327e-50  3.28127e-55
      low eigenvalue method done, cpu time[sec] = 0.206155, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.45e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.66e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.92374e-43  -1.6989e-43 -4.58622e-45 -1.42427e-44 -4.11986e-46 -4.96895e-46 -2.57201e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6029, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.85948e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39471, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.3042, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             17.037      1.46796     0.233303     0.374216      0.03058      4.14399     0.122421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189185, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015382, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.204841, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.21483e-14  5.96262e-50    2.265e-55
      low eigenvalue method done, cpu time[sec] = 0.205492, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.96e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.13e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   -6.561e-43  -2.4139e-43 -7.04283e-45 -7.88681e-44  -2.1612e-45 -9.67245e-46 -3.99445e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.8561, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1488, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.1975       1.2233     0.194419     0.311847    0.0254833      3.45333     0.102018
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015377, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205054, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45366e-14  4.96886e-50  1.66343e-55
      low eigenvalue method done, cpu time[sec] = 0.205788, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.97e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.59248e-43 -9.62713e-44 -2.78719e-45 -1.41833e-44 -5.38805e-46  8.46648e-47 -1.70757e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6945, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.60327e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39435, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1554, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.1693      1.04854     0.166645     0.267297    0.0218428         2.96    0.0874437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015407, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205102, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.29575e-14  4.25902e-50   1.2763e-55
      low eigenvalue method done, cpu time[sec] = 0.205943, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.26e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.42481e-43  5.72418e-44  1.20771e-45  6.45075e-45   2.6677e-46 -9.82263e-47    -2.67e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7697, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.97516e+10
      global relaxation matrix dimension = 826
      setting global matrices ... done, cpu time[sec] = 1.39664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.6481     0.917476     0.145815     0.233885    0.0191125         2.59    0.0765132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.18981, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015363, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.6378e-15  3.72665e-50  1.01179e-55
      low eigenvalue method done, cpu time[sec] = 0.206333, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.73e-50 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-51 -4.44e-16         1
         *Z       ---       ---  5.14e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.51429e-43 -1.13459e-43 -3.02186e-45 -1.80305e-44 -5.03046e-46 -5.82104e-46 -2.20818e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7077, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 14171 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011324
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.786046
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.876536
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.56021
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.30778
         W1 Well: minimal relaxation eigenvalue = 0.0350246
         W1 Well: maximal relaxation eigenvalue = 1.25638
         W1 Well:       grid size = 802
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31543 1/cm
         B1 Barrier:        grid size = 249
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 245
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 330
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 357
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 654
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 223
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1459 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.7013, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31543 -23107 4.74e+05 3.98e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 4.52e+12
         B2    206 3.94e+11
         B3  -4639 6.35e+10
         B4  -6178 1.01e+11
         B5 -23107 8.32e+09
         B6   1460 1.13e+12
         B7   4709 3.48e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.96e+36  5.23e+36  8.33e+28  8.91e+25  5.93e-08   1.6e+40  2.22e+46
          R   5.1e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  1.91e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2   1.2e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  1.12e-26   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  1.69e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  6.26e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6  4.51e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   5.1e+32  1.36e+33  2.17e+25  2.32e+22  1.54e-11  4.16e+36  5.77e+42
          R  1.96e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  7.35e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  4.61e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  4.31e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  6.48e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5   2.4e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6  1.73e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
   MasterEquation::set:  done, cpu time[sec] = 11.7067, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+08
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 0.42897, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.92555, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             471.02      41.0441      6.61943      10.5374     0.867782      118.047      3.63014
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176268, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014233, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.19098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.13253e-11  1.45765e-47  1.21262e-51
      low eigenvalue method done, cpu time[sec] = 0.191578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-49 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.56901e-42  1.50205e-42  8.62411e-44  1.29718e-42  2.98031e-44  1.30153e-45 -4.72551e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.28, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+09
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30542, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4231, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            157.007      13.6814      2.20648      3.51246     0.289261      39.3491      1.21005
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175937, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190342, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.60263e-13  4.85955e-48  3.40966e-52
      low eigenvalue method done, cpu time[sec] = 0.190945, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-49 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   2.2487e-42  6.50069e-43  1.67769e-44   7.2997e-44  2.08188e-45  2.49314e-45  5.32517e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6712, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.61529e+09
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30369, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5951, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.2039      8.20882      1.32389      2.10748     0.173556      23.6095     0.726029
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175922, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014174, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190337, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53894e-12   2.9159e-48  1.74816e-52
      low eigenvalue method done, cpu time[sec] = 0.190943, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.92e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-49 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.05666e-42  3.76272e-43   6.4574e-45 -4.44757e-44 -9.75165e-46  6.34884e-46 -1.83623e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.885, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         5.06141e+09
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30542, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4109, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.2885      5.86344     0.945632      1.50534     0.123969      16.8639     0.518592
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175793, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01416, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44152e-12  2.08285e-48  1.09473e-52
      low eigenvalue method done, cpu time[sec] = 0.190862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.3e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.11382e-42 -3.04892e-43 -5.63486e-45 -4.60664e-44 -1.79992e-45 -1.06896e-45 -1.01336e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7188, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.50753e+09
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.31125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4281, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.3355      4.56046     0.735492      1.17082    0.0964202      13.1164     0.403349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176012, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01417, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190416, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29376e-12  1.62003e-48  7.60747e-53
      low eigenvalue method done, cpu time[sec] = 0.191014, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.67e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.15894e-43  6.36906e-44  3.28369e-45  5.34267e-44  1.11903e-45 -1.00288e-45 -1.13051e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6687, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+09
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.508, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             47.102      4.10441     0.661943      1.05374    0.0867782      11.8047     0.363014
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014154, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190281, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.06911e-13  1.45804e-48  6.50747e-53
      low eigenvalue method done, cpu time[sec] = 0.190893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -7.77464e-44  6.54655e-44  2.27315e-45 -3.06618e-44 -5.50132e-46 -1.67397e-45 -3.42199e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7294, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.08459e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.402, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.4013      2.73627     0.441295     0.702492    0.0578521      7.86982      0.24201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175941, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014202, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190387, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.62296e-12   9.7205e-49  3.49943e-53
      low eigenvalue method done, cpu time[sec] = 0.191077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.72e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.4e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -1.0898e-43  -8.8295e-44 -1.62954e-45  -3.0346e-45  -2.4622e-46  6.11046e-47  1.17755e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6962, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.44612e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.414, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             23.551      2.05221     0.330971     0.526869    0.0433891      5.90236     0.181507
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175583, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190049, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.17824e-13  7.29049e-49  2.21336e-53
      low eigenvalue method done, cpu time[sec] = 0.19069, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.29e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.55e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.86897e-43   3.5342e-44  1.18014e-45 -2.15607e-44 -5.78768e-46  7.55089e-46 -2.22876e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6425, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.80765e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30616, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.8408      1.64176     0.264777     0.421495    0.0347113      4.72189     0.145206
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.85741e-15  5.83245e-49   1.5364e-53
      low eigenvalue method done, cpu time[sec] = 0.190461, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.83e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.28724e-43 -1.29374e-43 -2.55232e-45 -1.48438e-44 -4.29956e-46 -1.21389e-45 -3.10062e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6895, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4202, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.7007      1.36814     0.220648     0.351246    0.0289261      3.93491     0.121005
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189889, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.58752e-13  4.86041e-49  1.13329e-53
      low eigenvalue method done, cpu time[sec] = 0.190534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.32183e-44 -2.76738e-44 -5.67015e-46 -3.24644e-45 -1.51735e-46  7.98743e-46  3.74803e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6445, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.53071e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4211, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.4577      1.17269     0.189126     0.301068    0.0247938      3.37278     0.103718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17508, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189501, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.28309e-13  4.16609e-49  8.72651e-54
      low eigenvalue method done, cpu time[sec] = 0.190154, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.17e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.65877e-43  -2.7948e-44 -1.26493e-45 -2.14486e-44 -6.50064e-46 -1.19704e-45 -4.20665e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7013, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.89223e+10
      global relaxation matrix dimension = 802
      setting global matrices ... done, cpu time[sec] = 1.30033, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4015, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.7755       1.0261     0.165486     0.263435    0.0216945      2.95118    0.0907536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174947, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014166, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.52042e-13  3.64534e-49  6.93853e-54
      low eigenvalue method done, cpu time[sec] = 0.189963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-49 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-50 -4.44e-16         1
         *Z       ---       ---  5.12e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.03918e-43 -3.22332e-44  -8.4353e-46  3.17585e-45  1.41454e-47 -1.13454e-46 -3.24537e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6198, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 14450 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010753
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.677026
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.861761
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.63036
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.08873
         W1 Well: minimal relaxation eigenvalue = 0.0344033
         W1 Well: maximal relaxation eigenvalue = 1.27688
         W1 Well:       grid size = 793
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31545 1/cm
         B1 Barrier:        grid size = 250
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 329
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4633 1/cm
         B4 Barrier:        grid size = 356
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 648
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 224
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.3964, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31545 -23135 4.65e+05 4.22e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 5.15e+12
         B2    182 4.54e+11
         B3  -4633 7.42e+10
         B4  -6199 1.17e+11
         B5 -23135 9.73e+09
         B6   1457 1.33e+12
         B7   4705 4.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.98e+34  1.03e+35  2.97e+27  3.87e+24  2.34e-08  2.77e+38  2.63e+44
          R  2.51e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  9.67e-36     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  3.36e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  2.58e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  4.28e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  3.62e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6   3.8e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.05e+31  2.74e+31  7.87e+23  1.02e+21  6.19e-12  7.32e+34  6.97e+40
          R  9.48e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  3.65e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  1.27e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  9.76e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  1.62e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  1.37e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  1.43e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
   MasterEquation::set:  done, cpu time[sec] = 11.4014, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+08
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 0.427731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6621, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            519.552      45.7896      7.49094      11.8372     0.982219       134.06      4.28521
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.171907, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013971, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.186079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.35539e-13  1.38516e-46  5.94243e-50
      low eigenvalue method done, cpu time[sec] = 0.186668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-48 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.56434e-42   2.9281e-42  1.06816e-43  1.18441e-42 -3.28503e-45 -2.31638e-44  2.86992e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.9173, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+09
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.184      15.2632      2.49698      3.94573     0.327406      44.6867       1.4284
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.171109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.185035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.97176e-12  4.62083e-47  1.72325e-50
      low eigenvalue method done, cpu time[sec] = 0.185666, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.62e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-48 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.98019e-41 -7.99077e-42 -2.32728e-43 -2.58449e-42 -6.77601e-44   -8.805e-45  4.32036e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4005, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          3.5182e+09
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2168, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             103.91      9.15792      1.49819      2.36744     0.196444       26.812     0.857041
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170383, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013724, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184303, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.05649e-12  2.77334e-47  8.96396e-51
      low eigenvalue method done, cpu time[sec] = 0.184929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.54e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.14967e-42 -2.37467e-42 -1.88044e-44  7.54962e-43  1.47788e-44  8.74834e-45  5.40389e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3819, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.92548e+09
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27576, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.2217      6.54137      1.07013      1.69103     0.140317      19.1514     0.612172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1704, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01373, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.6758e-13   1.9813e-47  5.66676e-51
      low eigenvalue method done, cpu time[sec] = 0.184923, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.82e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.29405e-42  -7.1936e-43 -2.40373e-44 -3.79411e-43  -7.3766e-45  7.97004e-45  2.35396e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2991, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.33276e+09
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.28055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             57.728      5.08774     0.832326      1.31524     0.109135      14.8956     0.476134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170758, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013753, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184709, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.0412e-15  1.54119e-47  3.96555e-51
      low eigenvalue method done, cpu time[sec] = 0.185289, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.3e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.80857e-42  1.27267e-42  3.27633e-44  1.75056e-43  7.27937e-45  2.93126e-45  3.47496e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2879, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+09
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27688, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.9552      4.57896     0.749094      1.18372    0.0982219       13.406     0.428521
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170281, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013691, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184166, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50563e-12  1.38713e-47  3.40199e-51
      low eigenvalue method done, cpu time[sec] = 0.184747, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.77915e-42  9.00806e-43  4.62817e-44  8.19036e-43  1.78895e-44   1.7106e-44  6.25122e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.4478, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.05546e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1822, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.6368      3.05264     0.499396     0.789145    0.0654813      8.93734      0.28568
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013679, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184401, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.36564e-13  9.24894e-48  1.84952e-51
      low eigenvalue method done, cpu time[sec] = 0.184985, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.25e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.70905e-42  6.53159e-43  2.80933e-44  2.82629e-43  7.76164e-45  1.01625e-44 -2.67984e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2767, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.40728e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.28112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2397, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.9776      2.28948     0.374547     0.591859     0.049111        6.703      0.21426
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170423, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013683, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.92676e-12  6.93731e-48  1.17855e-51
      low eigenvalue method done, cpu time[sec] = 0.184911, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.94e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.85432e-44  -2.8548e-43 -5.04808e-45  4.49806e-44 -4.36931e-46  2.80436e-45  7.47701e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3896, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          1.7591e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.2789, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.7821      1.83158     0.299637     0.473487    0.0392888       5.3624     0.171408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170436, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34153e-13  5.55017e-48  8.22647e-52
      low eigenvalue method done, cpu time[sec] = 0.184969, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.55e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.74345e-43 -4.76521e-44  7.21174e-45  7.09074e-44  1.26088e-45  1.04345e-45 -4.22629e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3898, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27663, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.215, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.3184      1.52632     0.249698     0.394573    0.0327406      4.46867      0.14284
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170393, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01373, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184318, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.63052e-13  4.62533e-48  6.09469e-52
      low eigenvalue method done, cpu time[sec] = 0.184938, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.63e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.11526e-43  1.04997e-44  1.18946e-45 -1.41493e-44  3.39718e-46  4.13227e-45 -1.03947e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.313, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.46274e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.25708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2489, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.8443      1.30827     0.214027     0.338205    0.0280634      3.83029     0.122434
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170436, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013738, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184369, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.84768e-13   3.9647e-48  4.70978e-52
      low eigenvalue method done, cpu time[sec] = 0.184963, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.52263e-42 -1.24534e-43 -6.09747e-45 -1.75077e-44 -4.68134e-46 -9.31409e-45 -3.18431e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3333, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.81456e+10
      global relaxation matrix dimension = 793
      setting global matrices ... done, cpu time[sec] = 1.27517, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.9888      1.14474     0.187273     0.295929    0.0245555       3.3515      0.10713
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169843, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183731, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.83203e-14  3.46919e-48  3.75602e-52
      low eigenvalue method done, cpu time[sec] = 0.184329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-48 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-49 -4.44e-16         1
         *Z       ---       ---  5.85e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.26306e-43  4.84915e-44  3.99312e-45  5.22906e-44  9.94221e-46  2.77565e-45 -4.90776e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.355, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 14727 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009635
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.592912
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.810204
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.803722
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.87023
         W1 Well: minimal relaxation eigenvalue = 0.0337966
         W1 Well: maximal relaxation eigenvalue = 1.19627
         W1 Well:       grid size = 771
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31533 1/cm
         B1 Barrier:        grid size = 246
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 242
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 323
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 349
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 631
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 221
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.20727, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31533 -23133 4.65e+05 4.48e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 5.85e+12
         B2    207 5.22e+11
         B3  -4653 8.65e+10
         B4  -6213 1.36e+11
         B5 -23133 1.14e+10
         B6   1467 1.55e+12
         B7   4707 5.16e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.84e+32  2.49e+33  1.25e+26  1.96e+23   9.5e-09  5.87e+36  3.92e+42
          R  1.02e-33         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  4.01e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  7.99e-27  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3   5.1e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  1.05e+08  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5   1.7e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  2.55e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.7e+29  6.84e+29  3.43e+22  5.38e+19  2.61e-12  1.61e+33  1.08e+39
          R   3.7e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  1.46e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  2.91e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  1.86e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  3.83e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5  6.21e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6   9.3e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
   MasterEquation::set:  done, cpu time[sec] = 8.21195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+08
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 0.39066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.38638, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            571.665      50.9619      8.45395      13.2634      1.10872      151.759      5.03547
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013083, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170915, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.60557e-12  1.30022e-45  2.35171e-48
      low eigenvalue method done, cpu time[sec] = 0.17147, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.39e-47         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -3.9335e-41 -8.55591e-42 -8.02972e-44  1.04441e-41  2.08348e-43 -1.33767e-43 -3.69159e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.5041, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20161, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.96105, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            190.555      16.9873      2.81798      4.42115     0.369573      50.5864      1.67849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.158334, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013081, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171602, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.70721e-12  4.34876e-46   7.0242e-49
      low eigenvalue method done, cpu time[sec] = 0.17217, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.35e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-47         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.46534e-42  6.72195e-42  2.72828e-43  6.47394e-42  1.61597e-43    5.819e-44  2.88685e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.884, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.42709e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.2032, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.96447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.333      10.1924      1.69079      2.65269     0.221744      30.3518      1.00709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170712, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.08106e-12  2.61277e-46   3.7054e-49
      low eigenvalue method done, cpu time[sec] = 0.171273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.83e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.11756e-41  -1.4523e-41 -1.96646e-43 -1.37354e-42 -6.17135e-44  8.53387e-44 -1.64951e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.79793e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20095, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.99365, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.6664      7.28028      1.20771      1.89478     0.158388      21.6799     0.719353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157517, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170728, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.24426e-13  1.86771e-46  2.36419e-49
      low eigenvalue method done, cpu time[sec] = 0.171283, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.13528e-41  4.53317e-42  2.16406e-43  1.62697e-42   2.0348e-44  3.74793e-44 -3.88133e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8507, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.16877e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.19721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.99704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.5183      5.66244     0.939327      1.47372     0.123191      16.8621     0.559497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157459, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170515, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.8566e-12  1.45341e-46  1.66581e-49
      low eigenvalue method done, cpu time[sec] = 0.171071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.28109e-41 -1.45589e-41 -4.57103e-43  -3.4907e-42 -1.04633e-43 -1.67954e-44 -2.92721e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.19666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0004, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.1665      5.09619     0.845395      1.32634     0.110872      15.1759     0.503547
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.158454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013102, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.171743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.56161e-13  1.30833e-46  1.43316e-49
      low eigenvalue method done, cpu time[sec] = 0.172296, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.79804e-42  5.87163e-43 -2.30557e-43 -3.66708e-42 -7.07768e-44  2.30442e-44 -1.39969e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8543, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.02813e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             38.111      3.39746     0.563596      0.88423    0.0739146      10.1173     0.335698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157499, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012849, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170529, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70374e-12  8.72809e-47  7.87593e-50
      low eigenvalue method done, cpu time[sec] = 0.171089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.09923e-41   1.1396e-41  2.58704e-43  1.81471e-42  5.45732e-44   8.9638e-44 -1.56785e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.8659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.37084e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20269, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0097, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.5832       2.5481     0.422697     0.663172     0.055436      7.58796     0.251774
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157519, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012846, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.17055, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2705e-13  6.54869e-47  5.05599e-50
      low eigenvalue method done, cpu time[sec] = 0.171109, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.55e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.00544e-42  6.99665e-43  2.56895e-44 -2.20252e-43 -1.21037e-45  5.78598e-44  1.71529e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.7238, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.71355e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.8666      2.03848     0.338158     0.530538    0.0443488      6.07037     0.201419
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157425, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012832, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170441, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.36407e-13  5.24034e-47  3.54884e-50
      low eigenvalue method done, cpu time[sec] = 0.171009, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.24e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.24612e-42  3.55946e-42  1.07487e-43  1.53386e-42  3.45101e-44 -1.74093e-44  1.29422e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9814, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.19827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0513, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.0555      1.69873     0.281798     0.442115    0.0369573      5.05864     0.167849
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.156957, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01282, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.16996, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -3.103e-13  4.36779e-47  2.64079e-50
      low eigenvalue method done, cpu time[sec] = 0.170519, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -8.3407e-42   -1.693e-42 -2.63609e-44  4.14269e-43  9.87302e-45 -5.34492e-44 -2.11698e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9199, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.39896e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.19661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.85705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.3333      1.45606     0.241541     0.378956    0.0316777      4.33598     0.143871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157324, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170336, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.17867e-13  3.74436e-47  2.04809e-50
      low eigenvalue method done, cpu time[sec] = 0.170909, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.74e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.86912e-42  2.48688e-42  2.77126e-44 -6.50849e-43 -1.03864e-44  9.43748e-45 -1.77368e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.7147, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.74167e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.1986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.2916      1.27405     0.211349     0.331586     0.027718      3.79398     0.125887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157227, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.25758e-14  3.27669e-47  1.63829e-50
      low eigenvalue method done, cpu time[sec] = 0.17084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-48         0         1
         *Z       ---       ---  7.49e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.89472e-42 -1.32333e-42 -7.42041e-44 -5.76329e-43 -1.78636e-44 -6.96532e-44  2.08344e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1024, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 15005 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007709
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.380953
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.453274
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.659883
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.54426
         W1 Well: minimal relaxation eigenvalue = 0.0331974
         W1 Well: maximal relaxation eigenvalue = 1.38929
         W1 Well:       grid size = 751
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31557 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 317
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4649 1/cm
         B4 Barrier:        grid size = 342
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 615
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 218
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.22951, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31557 -23125 4.68e+05 4.75e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 6.64e+12
         B2    187 5.99e+11
         B3  -4649 1.01e+11
         B4  -6199 1.57e+11
         B5 -23125 1.32e+10
         B6   1489 1.81e+12
         B7   4713 6.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.98e+31  7.37e+31  6.26e+24  1.17e+22  4.07e-09  1.54e+35  7.35e+40
          R  3.36e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  1.36e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2   1.6e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  8.54e-23  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  2.46e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5   6.5e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  1.36e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.42e+27  2.08e+28  1.77e+21  3.31e+18  1.15e-12  4.35e+31  2.08e+37
          R  1.19e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1   4.8e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  5.65e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  3.02e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  8.69e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5   2.3e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  4.81e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.23568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+08
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 0.374364, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.02054, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            627.553      56.5893      9.51567      14.8253      1.24824       171.27      5.89171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146361, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012227, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158766, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.14692e-11  1.23772e-44  7.58513e-47
      low eigenvalue method done, cpu time[sec] = 0.159312, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-46  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.03683e-40   1.0072e-40  2.39744e-42 -7.35013e-42 -8.61902e-43 -3.01528e-44 -1.93298e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.904, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+09
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13307, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.72734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            209.184      18.8631      3.17189      4.94175      0.41608      57.0901       1.9639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146245, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    2.815e-12  4.17436e-45  2.33057e-47
      low eigenvalue method done, cpu time[sec] = 0.159144, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.17e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-46  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.73086e-40  -1.2447e-40 -5.66832e-42 -6.41778e-41 -1.38551e-42  5.38634e-43 -2.75111e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3752, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.34144e+09
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.12473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.75409, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.511      11.3179      1.90313      2.96505     0.249648       34.254      1.17834
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146458, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158808, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.21354e-12  2.51648e-45   1.2462e-47
      low eigenvalue method done, cpu time[sec] = 0.159423, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.35e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.63964e-42  3.55377e-41 -1.45513e-42 -4.50634e-41 -9.81991e-43 -6.59879e-43  2.93446e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4018, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.67801e+09
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.72932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.6504      8.08419      1.35938      2.11789      0.17832      24.4672     0.841673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14617, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158509, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.27248e-13  1.80241e-45    8.023e-48
      low eigenvalue method done, cpu time[sec] = 0.159066, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.98e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.30182e-40 -2.26076e-41 -2.41557e-43 -1.26071e-42 -8.45112e-44 -2.26992e-43 -3.23649e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.437, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.01459e+09
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13626, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.72544, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.7281       6.2877       1.0573      1.64725     0.138693        19.03     0.654635
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.3735e-12  1.40444e-45  5.69098e-48
      low eigenvalue method done, cpu time[sec] = 0.159103, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.66982e-40 -7.22405e-41 -1.67019e-42 -3.28607e-42 -1.18104e-43  4.37047e-44 -2.50212e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3605, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+09
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.74228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.7553      5.65893     0.951567      1.48253     0.124824       17.127     0.589171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146289, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012168, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158636, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.76488e-13   1.2649e-45  4.90983e-48
      low eigenvalue method done, cpu time[sec] = 0.159178, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.2e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.28152e-40  2.53848e-41  6.27429e-43 -1.51521e-42 -4.95879e-45  6.36531e-44 -1.52074e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4411, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.00243e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13577, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0062, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.8368      3.77262     0.634378     0.988351     0.083216       11.418     0.392781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146279, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54137e-13  8.45322e-46  2.72697e-48
      low eigenvalue method done, cpu time[sec] = 0.159188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.45e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.20145e-41 -6.43106e-42  2.02884e-44  1.03714e-41  1.73523e-43 -3.11242e-43  -7.1519e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6658, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.33658e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.73053, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.3776      2.82946     0.475783     0.741263     0.062412      8.56351     0.294586
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146382, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.41663e-14  6.34909e-46  1.76346e-48
      low eigenvalue method done, cpu time[sec] = 0.159284, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.35e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.32281e-40  3.46147e-41  9.70854e-43  8.19123e-42  2.50161e-43  1.66567e-43  8.13924e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3831, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.67072e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13822, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.75401, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.1021      2.26357     0.380627      0.59301    0.0499296      6.85081     0.235669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16531e-13   5.0842e-46  1.24464e-48
      low eigenvalue method done, cpu time[sec] = 0.159358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.22725e-41  2.31694e-41  8.46615e-43  7.64443e-42  1.82822e-43 -1.62521e-43  -5.4079e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4106, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.75947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.9184      1.88631     0.317189     0.494175     0.041608      5.70901      0.19639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146081, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.50174e-13  4.23981e-46  9.30247e-49
      low eigenvalue method done, cpu time[sec] = 0.158976, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.24e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.97757e-42  8.11956e-42  5.99471e-44 -3.10874e-42 -7.85615e-44 -1.01587e-43  2.04699e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.33901e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.75451, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.9301      1.61684     0.271876     0.423579     0.035664      4.89344     0.168335
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.145953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012154, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158297, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49946e-13  3.63606e-46   7.2407e-49
      low eigenvalue method done, cpu time[sec] = 0.158844, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.64e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.39096e-42 -1.11397e-42  5.47157e-44  8.10677e-43  3.82301e-44  1.32451e-43  3.41469e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4115, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.67315e+10
      global relaxation matrix dimension = 751
      setting global matrices ... done, cpu time[sec] = 1.13846, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.76927, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.6888      1.41473     0.237892     0.370631     0.031206      4.28176     0.147293
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.46974e-13  3.18288e-46  5.80961e-49
      low eigenvalue method done, cpu time[sec] = 0.159154, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-47  2.22e-16         1
         *Z       ---       ---  1.07e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.48926e-42 -4.46246e-42  3.86479e-46 -4.35858e-43 -5.18561e-45  6.21885e-44 -6.48749e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4348, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 15283 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010444
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.7176
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.756892
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.718819
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.50496
         W1 Well: minimal relaxation eigenvalue = 0.0326423
         W1 Well: maximal relaxation eigenvalue = 3.13477
         W1 Well:       grid size = 744
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 240
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 316
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4625 1/cm
         B4 Barrier:        grid size = 341
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6200 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 610
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23147 1/cm
         B6 Barrier:        grid size = 219
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.86781, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23147 4.61e+05 5.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 7.53e+12
         B2    164 6.87e+11
         B3  -4625 1.17e+11
         B4  -6200 1.81e+11
         B5 -23147 1.54e+10
         B6   1487 2.11e+12
         B7   4700 7.52e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.1e+30  2.66e+30  3.73e+23  8.23e+20  1.85e-09  4.96e+33  1.72e+39
          R  9.09e-31         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  3.75e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  2.68e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  1.21e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4   5.4e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  2.02e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6   5.8e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.15e+26  7.62e+26  1.07e+20  2.36e+17   5.3e-13  1.42e+30  4.93e+35
          R  3.18e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  1.31e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  9.37e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  4.24e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  1.89e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  7.05e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  2.03e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.87291, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+08
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 0.36904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.96712, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            687.326      62.6995      10.6837      16.5321      1.40179      192.725      6.86511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.143139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0119, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.62292e-11  1.25777e-43  2.03202e-45
      low eigenvalue method done, cpu time[sec] = 0.155773, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-45  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.06936e-40  5.72002e-40  2.57852e-41  5.40243e-40  9.41289e-42  9.98935e-43  6.21029e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8462, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.69816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            229.109      20.8998      3.56123      5.51071     0.467263      64.2415      2.28837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1428, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011907, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15489, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.58978e-12  4.32606e-44  6.41415e-46
      low eigenvalue method done, cpu time[sec] = 0.155465, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-45  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.82147e-39  1.05324e-39  3.36138e-41  3.48288e-40  9.24163e-42  4.84204e-42  3.21612e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3254, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.26077e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.465      12.5399      2.13674      3.30642     0.280358      38.5449      1.37302
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142891, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011891, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.50869e-12  2.62883e-44  3.47481e-46
      low eigenvalue method done, cpu time[sec] = 0.155601, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.58e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.10685e-39 -4.58613e-40 -7.34638e-42 -4.18815e-41 -1.09949e-42  -2.3871e-42 -1.29293e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3234, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.56508e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.65632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.1894      8.95707      1.52624      2.36173     0.200256      27.5321      0.98073
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142794, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011891, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.15489, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.36137e-12  1.89167e-44  2.25658e-46
      low eigenvalue method done, cpu time[sec] = 0.15545, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.17e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.82769e-41  5.30103e-41   5.6724e-42  1.04913e-40  2.20855e-42 -3.02018e-42 -2.63508e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.306, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         5.86939e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.64518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.3696      6.96661      1.18708       1.8369     0.155754      21.4138      0.76279
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142844, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011948, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.05482e-13  1.47862e-44   1.6111e-46
      low eigenvalue method done, cpu time[sec] = 0.155531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.83e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -9.16191e-41 -4.73207e-41 -5.48266e-42 -1.04365e-40 -2.11581e-42 -5.02299e-43  8.09613e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62693, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.7326      6.26995      1.06837      1.65321     0.140179      19.2725     0.686511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142527, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011895, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154606, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.16477e-12  1.33334e-44  1.39374e-46
      low eigenvalue method done, cpu time[sec] = 0.155123, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.44398e-41 -1.20428e-40 -4.19284e-42 -5.98529e-41 -1.59014e-42  4.17673e-42 -3.82481e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2467, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         9.78231e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.12122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62427, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.8217      4.17997     0.712246      1.10214    0.0934526      12.8483     0.457674
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142598, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154634, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    -1.84e-12  8.94818e-45  7.82155e-47
      low eigenvalue method done, cpu time[sec] = 0.155206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.95e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.92e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.13017e-39 -3.38341e-40 -1.07935e-41 -6.87667e-41 -2.02385e-42  -2.8557e-42  1.39652e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2505, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.30431e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.118, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.3663      3.13498     0.534184     0.826606    0.0700894      9.63623     0.343255
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142726, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011885, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154794, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00487e-12  6.73779e-45  5.09452e-47
      low eigenvalue method done, cpu time[sec] = 0.155357, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.74e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.2e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.94121e-40  1.93159e-40   4.0438e-42  7.26883e-42  3.83326e-43  3.79211e-42  -1.1656e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.248, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.63039e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11807, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6319, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             27.493      2.50798     0.427347     0.661285    0.0560716      7.70898     0.274604
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142446, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.29814e-13  5.40465e-45  3.61534e-47
      low eigenvalue method done, cpu time[sec] = 0.155149, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.4e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.48412e-40  1.09105e-41  1.47867e-42   2.0875e-41   3.0953e-43  5.95886e-43 -5.52762e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2854, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11872, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.9109      2.08998     0.356123     0.551071    0.0467263      6.42415     0.228837
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14263, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011892, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154722, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.6621e-13   4.5126e-45  2.71388e-47
      low eigenvalue method done, cpu time[sec] = 0.155282, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.37414e-40 -1.23363e-40 -3.33145e-42  -3.7139e-41 -9.02025e-43 -1.08221e-42  1.22342e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2434, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.28254e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.70229, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.6379      1.79141     0.305248     0.472346    0.0400511      5.50642     0.196146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011855, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.6571e-13  3.87365e-45  2.11998e-47
      low eigenvalue method done, cpu time[sec] = 0.155154, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.89725e-40 -7.23489e-41  -2.9092e-42 -1.91127e-41 -4.67661e-43 -1.04104e-42 -2.58348e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3277, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.60862e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.1186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.7033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.1831      1.56749     0.267092     0.413303    0.0350447      4.81811     0.171628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142519, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011848, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154548, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76062e-13  3.39338e-45  1.70614e-47
      low eigenvalue method done, cpu time[sec] = 0.155114, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-46  2.22e-16         1
         *Z       ---       ---  1.72e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.00244e-40 -1.87443e-40 -5.34515e-42 -3.60833e-41 -1.06544e-42 -1.11484e-42  9.08832e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3198, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 15561 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011124
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.58226
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.715716
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.7585
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.24041
         W1 Well: minimal relaxation eigenvalue = 0.0321133
         W1 Well: maximal relaxation eigenvalue = 1.53608
         W1 Well:       grid size = 725
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31564 1/cm
         B1 Barrier:        grid size = 240
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 311
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4654 1/cm
         B4 Barrier:        grid size = 335
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 596
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23179 1/cm
         B6 Barrier:        grid size = 217
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.42681, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31564 -23179  4.5e+05 5.34e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 8.52e+12
         B2    157 7.86e+11
         B3  -4654 1.36e+11
         B4  -6213 2.09e+11
         B5 -23179 1.78e+10
         B6   1457 2.45e+12
         B7   4706 9.04e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.67e+28  1.11e+29  2.49e+22  6.45e+19  8.52e-10  1.85e+32  4.77e+37
          R  2.14e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  9.02e-30     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  4.01e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  1.55e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  1.17e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  5.41e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6   2.1e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.39e+25   3.3e+25  7.41e+18  1.92e+16  2.53e-13   5.5e+28  1.42e+34
          R   7.2e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  3.03e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  1.35e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  5.21e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  3.95e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  1.82e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  7.05e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
   MasterEquation::set:  done, cpu time[sec] = 9.43167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+08
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 0.351886, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            751.192      69.3242       11.966       18.394      1.57043      216.259      7.96793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133665, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145716, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.85642e-11   1.4314e-42  4.65476e-44
      low eigenvalue method done, cpu time[sec] = 0.146245, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-44 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.83489e-39  6.31113e-41 -4.89925e-41 -1.65512e-39 -3.88093e-41  3.43611e-41  3.59164e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.37935, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            250.397      23.1081      3.98866      6.13132     0.523476      72.0862      2.65598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132962, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011121, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144964, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.04241e-12  5.08419e-43  1.50794e-44
      low eigenvalue method done, cpu time[sec] = 0.145498, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-44 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.84961e-39 -2.35311e-39 -1.16987e-40 -1.28723e-39 -3.36385e-41 -1.12366e-42 -3.55253e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7768, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.18467e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.41306, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            150.238      13.8648       2.3932      3.67879     0.314086      43.2517      1.59359
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011102, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145172, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.56025e-12  3.12979e-43  8.27328e-45
      low eigenvalue method done, cpu time[sec] = 0.145725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.13e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-44 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -1.6381e-38  -5.1553e-39 -1.21297e-40  -8.5087e-40 -2.49695e-41 -1.24437e-41  1.20205e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         4.45854e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.05898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.4275, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.313      9.90346      1.70943      2.62771     0.224347      30.8941      1.13828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132994, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011105, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144952, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.48395e-14  2.26918e-43  5.41852e-45
      low eigenvalue method done, cpu time[sec] = 0.145462, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.29e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.04723e-40 -6.51611e-40 -2.78407e-41 -3.70599e-40 -9.14925e-42  4.56458e-42  1.59936e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8112, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.73241e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.05802, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.42195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.4658      7.70269      1.32955      2.04377     0.174492      24.0287     0.885325
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13325, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011134, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145262, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.48379e-13  1.78271e-43  3.89325e-45
      low eigenvalue method done, cpu time[sec] = 0.145792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.72e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.27666e-39  1.43941e-39  5.18238e-41  5.02837e-40  1.24865e-41  1.53195e-41 -7.19636e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8028, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.05751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.42374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.1192      6.93242       1.1966       1.8394     0.157043      21.6259     0.796793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133181, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01111, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145175, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.43962e-12  1.61074e-43  3.37699e-45
      low eigenvalue method done, cpu time[sec] = 0.145694, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.17e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -7.36439e-39 -1.92066e-39 -5.56332e-41 -2.97882e-40 -9.27764e-42 -1.38649e-41  5.30116e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8133, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.55401e+09
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.05761, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.41448, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.0795      4.62161     0.797732      1.22626     0.104695      14.4172     0.531195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133004, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011139, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144983, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29738e-12  1.08838e-43  1.91457e-45
      low eigenvalue method done, cpu time[sec] = 0.145506, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-43 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.5e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.69016e-40 -2.18787e-40 -1.11833e-41 -1.95171e-40  -3.9734e-42  7.69295e-42 -7.74443e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.799, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.27387e+10
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06215, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.5596      3.46621     0.598299     0.919698    0.0785215      10.8129     0.398396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13299, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144983, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.97615e-13  8.22892e-44  1.25596e-45
      low eigenvalue method done, cpu time[sec] = 0.1455, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.23e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.08815e-39  7.70738e-40  1.55311e-41  1.17257e-40  3.23934e-42 -4.43519e-42 -7.59823e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8305, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.59233e+10
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.45079, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.0477      2.77297     0.478639     0.735758    0.0628172      8.65035     0.318717
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132963, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.6382e-13  6.61906e-44  8.96137e-46
      low eigenvalue method done, cpu time[sec] = 0.145575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.13e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.36994e-39   4.0342e-40  1.79576e-41  1.12352e-40  3.29953e-42   1.0728e-41  5.03826e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.83, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+10
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.05864, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.0397      2.31081     0.398866     0.613132    0.0523476      7.20862     0.265598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132902, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.011155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144906, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.09071e-15  5.53772e-44  6.75615e-46
      low eigenvalue method done, cpu time[sec] = 0.14551, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.54e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.92195e-39 -2.94623e-40 -8.21626e-42 -6.53391e-41 -1.70076e-42 -1.26461e-41  2.43161e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8305, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.22927e+10
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06498, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.44518, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.4626      1.98069     0.341885     0.525542    0.0448694      6.17882     0.227655
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132942, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011123, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144963, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.77076e-13  4.76096e-44  5.29663e-46
      low eigenvalue method done, cpu time[sec] = 0.145481, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.76e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -7.36172e-40 -2.01022e-40 -6.94014e-42 -4.57276e-41 -1.60716e-42  1.82741e-42  1.59221e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8309, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.54774e+10
      global relaxation matrix dimension = 725
      setting global matrices ... done, cpu time[sec] = 1.06093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.43509, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.7798      1.73311     0.299149     0.459849    0.0392607      5.40647     0.199198
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.132927, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.144977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.96805e-13  4.17579e-44   4.2757e-46
      low eigenvalue method done, cpu time[sec] = 0.145484, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-44 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-45 -4.44e-16         1
         *Z       ---       ---     3e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   2.6095e-39  5.78923e-40   1.0259e-41 -3.09955e-41  1.11113e-43  1.50464e-41   9.7793e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8371, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 15839 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011323
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.502052
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.685592
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.688907
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.0614
         W1 Well: minimal relaxation eigenvalue = 0.0315505
         W1 Well: maximal relaxation eigenvalue = 4.46132
         W1 Well:       grid size = 708
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 237
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 306
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4663 1/cm
         B4 Barrier:        grid size = 329
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6204 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 582
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4716 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.06673, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23155 4.58e+05 5.66e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 9.63e+12
         B2    162 8.99e+11
         B3  -4663 1.57e+11
         B4  -6204  2.4e+11
         B5 -23155 2.06e+10
         B6   1501 2.84e+12
         B7   4717 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.35e+27  5.48e+27  1.93e+21   5.8e+18  4.12e-10  8.23e+30   1.6e+36
          R  4.25e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  1.83e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  5.18e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  1.72e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  2.42e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  1.21e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  6.27e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.17e+23  1.67e+24  5.88e+17  1.77e+15  1.26e-13  2.51e+27  4.86e+32
          R   1.4e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  5.99e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2   1.7e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  5.66e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  7.95e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  3.99e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  2.06e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.07145, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+08
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.330474, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.20356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            819.288      76.4924      13.3709      20.4211      1.75528      242.014       9.2132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1243, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010597, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.135065, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.40227e-11  1.74482e-41  8.98501e-43
      low eigenvalue method done, cpu time[sec] = 0.13555, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-41  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.5e-43  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.09258e-39 -1.85525e-38  3.53987e-40  2.08519e-38  4.72181e-40  3.78702e-41  -1.5126e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.0111, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18977, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            273.096      25.4975      4.45697      6.80704     0.585092      80.6715      3.07107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12405, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01061, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13484, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.59339e-13  6.43445e-42  2.98425e-43
      low eigenvalue method done, cpu time[sec] = 0.135315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.43e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-43  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.64071e-38 -2.55198e-39 -3.22667e-40 -2.91707e-39 -9.37843e-41 -9.60346e-41 -4.39228e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4645, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.11276e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01527, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16634, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.858      15.2985      2.67418      4.08423     0.351055      48.4029      1.84264
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124157, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010547, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134866, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54467e-12  4.02025e-42  1.65749e-43
      low eigenvalue method done, cpu time[sec] = 0.13536, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-43  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.83937e-38 -7.37853e-39 -3.65746e-40 -5.15378e-39 -1.23278e-40  2.80829e-41  4.69256e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.434, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         4.35787e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.041      10.9275      1.91013       2.9173     0.250754      34.5735      1.31617
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124108, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010505, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.71784e-13  2.93996e-42  1.09454e-43
      low eigenvalue method done, cpu time[sec] = 0.135279, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.28e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.15658e-38 -1.26213e-38 -4.82019e-40 -4.81697e-39  -1.1983e-40 -1.56751e-40  1.72357e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3951, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.60297e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.2161, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             91.032      8.49915      1.48566      2.26901     0.195031      26.8905      1.02369
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010504, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.02159e-12  2.32307e-42  7.91325e-44
      low eigenvalue method done, cpu time[sec] = 0.135171, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.97611e-38  1.52842e-38  4.36143e-40  3.25293e-39  8.40275e-41  1.10263e-41  1.88935e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4238, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01043, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18619, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.9288      7.64924      1.33709      2.04211     0.175528      24.2014      0.92132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134721, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39629e-13   2.1037e-42  6.88181e-44
      low eigenvalue method done, cpu time[sec] = 0.135216, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.64e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.26345e-38 -2.52799e-39 -2.44635e-41  9.49605e-40  1.08513e-41 -8.52294e-41  3.83036e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4695, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.33829e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01355, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15928, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.6192      5.09949     0.891395      1.36141     0.117018      16.1343     0.614213
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124121, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010488, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134768, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -1.012e-12  1.43259e-42   3.9408e-44
      low eigenvalue method done, cpu time[sec] = 0.135246, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.52e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.75506e-39 -2.58839e-39 -5.15872e-41 -1.16412e-40 -9.45857e-42  5.62359e-41  8.98474e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4262, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1          1.2451e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01377, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18676, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.9644      3.82462     0.668546      1.02106    0.0877638      12.1007      0.46066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124034, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010548, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134739, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.45025e-13  1.08822e-42  2.60335e-44
      low eigenvalue method done, cpu time[sec] = 0.135217, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.93058e-38 -3.30004e-39 -9.79543e-41 -4.13803e-40 -1.60213e-41 -1.60814e-40  2.05832e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4439, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.55638e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.19122, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.7715       3.0597     0.534837     0.816845     0.070211      9.68058     0.368528
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1239, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134521, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.91196e-13  8.78112e-43  1.86748e-44
      low eigenvalue method done, cpu time[sec] = 0.135001, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.78e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.77e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -9.19551e-40  4.41516e-40  -9.1545e-42  1.22498e-40  3.27653e-42  -6.2696e-41  5.75842e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4542, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.3096      2.54975     0.445697     0.680704    0.0585092      8.06715     0.307107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124004, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010503, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.02384e-13  7.36366e-43    1.414e-44
      low eigenvalue method done, cpu time[sec] = 0.135137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.36e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.32e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.37263e-38 -5.31233e-39 -1.84346e-40 -1.61399e-39 -4.47524e-41 -1.08049e-40  1.11482e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4443, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.17893e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01333, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18107, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.4082       2.1855     0.382026     0.583461    0.0501507       6.9147     0.263234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01049, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134494, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.08379e-13  6.34205e-43   1.1125e-44
      low eigenvalue method done, cpu time[sec] = 0.134975, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.53131e-40  4.87524e-40  1.72074e-41  4.81264e-40  8.96658e-42 -9.69936e-42 -6.17579e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4017, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.49021e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.22047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.4822      1.91231     0.334273     0.510528    0.0438819      6.05036      0.23033
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010489, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134644, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.33338e-13  5.57041e-43  9.00793e-45
      low eigenvalue method done, cpu time[sec] = 0.135122, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.57e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-44  4.44e-16         1
         *Z       ---       ---  5.73e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -8.99972e-39 -7.55392e-40 -3.71549e-41 -8.77744e-41 -5.19578e-42 -5.80234e-41 -2.93292e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4929, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 16117 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011057
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.567412
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.668149
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.03029
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.88274
         W1 Well: minimal relaxation eigenvalue = 0.0310849
         W1 Well: maximal relaxation eigenvalue = 1.2908
         W1 Well:       grid size = 701
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31551 1/cm
         B1 Barrier:        grid size = 238
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 305
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 328
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23119 1/cm => truncating
         B5 Barrier:        grid size = 577
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23118 1/cm
         B6 Barrier:        grid size = 215
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.44317, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31551 -23118  4.7e+05    6e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.09e+13
         B2    206 1.03e+12
         B3  -4622 1.82e+11
         B4  -6186 2.76e+11
         B5 -23118 2.38e+10
         B6   1498 3.29e+12
         B7   4694 1.29e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.38e+26  3.16e+26  1.71e+20  5.92e+17  2.09e-10   4.3e+29  6.36e+34
          R  7.24e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  3.16e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  5.86e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  1.69e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  4.79e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  2.33e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6  1.57e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.27e+22  9.77e+22  5.28e+16  1.83e+14  6.45e-14  1.33e+26  1.97e+31
          R  2.34e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  1.02e-23     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2   1.9e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  5.46e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  1.55e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  7.53e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6  5.09e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.44852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+08
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.332828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18011, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             891.77      84.2379      14.9073      22.6244       1.9575      270.139      10.6148
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010275, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132233, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.3296e-11    2.176e-40  1.50556e-41
      low eigenvalue method done, cpu time[sec] = 0.132709, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-42         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.57224e-37 -1.03302e-37  5.85366e-40  3.07118e-38  6.14871e-40 -9.93635e-40  4.32998e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6687, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.996088, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15231, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            297.257      28.0793       4.9691      7.54148     0.652499      90.0464      3.53827
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120968, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13198, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.77062e-12  8.31152e-41  5.12088e-42
      low eigenvalue method done, cpu time[sec] = 0.13249, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.31e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-42         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.33065e-37 -1.01762e-38 -4.06055e-40 -3.07923e-39 -4.98952e-41 -2.53032e-40   1.7803e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3037, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.04471e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.99406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15346, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            178.354      16.8476      2.98146      4.52489     0.391499      54.0278      2.12296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120815, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131842, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06141e-11  5.26478e-41  2.87791e-42
      low eigenvalue method done, cpu time[sec] = 0.13231, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.26e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-42         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.02743e-37 -4.15143e-38 -6.92134e-40  1.68036e-39 -3.95993e-41 -1.38508e-40   1.4063e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         4.26259e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.997451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.17285, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            127.396       12.034      2.12961      3.23206     0.279642      38.5913       1.5164
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120919, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010234, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.44802e-13  3.88072e-41  1.91562e-42
      low eigenvalue method done, cpu time[sec] = 0.132405, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-42         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.13972e-38  1.60067e-38  4.49623e-41 -4.95074e-39 -1.01383e-40  4.54085e-42  9.32855e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3253, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         5.48048e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.998837, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            99.0855      9.35976      1.65637      2.51383       0.2175      30.0155      1.17942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120743, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131778, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.61089e-12  3.08283e-41  1.39328e-42
      low eigenvalue method done, cpu time[sec] = 0.132274, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.08e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.58e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.56467e-38  7.43569e-39 -1.83179e-40 -8.99918e-39 -1.82273e-40  2.14664e-40  4.80965e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3345, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.994218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.19508, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             89.177      8.42379      1.49073      2.26244      0.19575      27.0139      1.06148
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120785, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131818, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.54057e-12  2.79755e-41  1.21474e-42
      low eigenvalue method done, cpu time[sec] = 0.132281, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.8e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.7e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.05103e-37   1.8836e-38  5.44343e-40  4.35475e-40  5.26864e-41   4.3066e-40  1.74902e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3497, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.13413e+09
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.995014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18523, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.4513      5.61586     0.993819       1.5083       0.1305      18.0093     0.707653
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12088, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131932, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.00618e-13  1.91889e-41  7.02406e-43
      low eigenvalue method done, cpu time[sec] = 0.132403, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.96e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.18122e-38  2.68563e-39  8.09551e-41 -5.21215e-40  3.76498e-42  3.25069e-40 -7.80045e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.21788e+10
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.998287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.5885      4.21189     0.745365      1.13122    0.0978749       13.507      0.53074
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120853, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010191, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131833, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.91972e-12  1.46399e-41  4.67212e-43
      low eigenvalue method done, cpu time[sec] = 0.13233, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.55e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.02062e-38  1.28033e-38    3.149e-40  2.33989e-39  6.21781e-41 -3.33123e-40 -2.11207e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3203, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.52235e+10
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.996731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16652, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.6708      3.36951     0.596292     0.904978    0.0782999      10.8056     0.424592
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120959, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.02114e-13  1.18486e-41  3.36913e-43
      low eigenvalue method done, cpu time[sec] = 0.132396, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.61262e-38 -4.85097e-39 -1.91165e-40 -1.91647e-39 -5.00931e-41 -4.67145e-41 -1.63084e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3243, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+10
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 1.00046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.16105, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.7257      2.80793      0.49691     0.754148    0.0652499      9.00464     0.353827
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010167, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22539e-13  9.95774e-42  2.56181e-43
      low eigenvalue method done, cpu time[sec] = 0.132156, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.96e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.73729e-38 -6.67494e-39 -2.43478e-40 -1.48425e-39 -4.15901e-41 -1.65224e-40 -5.16341e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3216, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          2.1313e+10
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.999522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14391, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.4791       2.4068     0.425923     0.646413    0.0559285      7.71826      0.30328
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131836, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.29981e-13  8.59068e-42  2.02268e-43
      low eigenvalue method done, cpu time[sec] = 0.132321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.59e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.67e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.80295e-39   -1.071e-39 -1.25828e-41  2.98972e-40  1.12685e-42 -5.19054e-41  6.99431e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6886, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.43577e+10
      global relaxation matrix dimension = 701
      setting global matrices ... done, cpu time[sec] = 0.995496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.46823, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.2942      2.10595     0.372682     0.565611    0.0489374      6.75348      0.26537
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120404, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010251, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13145, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21808e-13  7.55558e-42   1.6427e-43
      low eigenvalue method done, cpu time[sec] = 0.131939, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.56e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.35e-43         0         1
         *Z       ---       ---   1.2e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.46368e-38 -2.25912e-39 -1.61171e-40 -2.32186e-39 -5.75072e-41 -2.69935e-40 -9.17701e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.6185, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 16395 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010405
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.483389
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.644096
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.691968
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.67325
         W1 Well: minimal relaxation eigenvalue = 0.0305961
         W1 Well: maximal relaxation eigenvalue = 1.31355
         W1 Well:       grid size = 685
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31555 1/cm
         B1 Barrier:        grid size = 235
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 232
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 300
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 323
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6214 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 565
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 213
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.74779, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31555 -23155 4.58e+05 6.35e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 1.22e+13
         B2    156 1.17e+12
         B3  -4604 2.09e+11
         B4  -6214 3.16e+11
         B5 -23155 2.75e+10
         B6   1486  3.8e+12
         B7   4705 1.54e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.13e+24  2.06e+25  1.67e+19  6.63e+16  1.07e-10  2.54e+28  2.91e+33
          R  1.09e-25         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  4.87e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  5.99e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  1.51e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  9.31e+09   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  3.93e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  3.44e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.9e+21  6.53e+21   5.3e+15  2.11e+13  3.41e-14  8.08e+24  9.24e+29
          R  3.44e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  1.53e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  1.89e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  4.74e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  2.93e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  1.24e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  1.08e-30  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
   MasterEquation::set:  done, cpu time[sec] = 6.75284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+08
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.309836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92686, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            968.844      92.5945      16.5843      25.0152      2.17832      300.785      12.1879
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113569, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009688, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123419, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.15882e-11  2.62278e-39  2.20597e-40
      low eigenvalue method done, cpu time[sec] = 0.123877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.62e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.02e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.77708e-37 -1.46738e-37 -4.48923e-39 -6.86067e-38 -1.86459e-39  1.63435e-40 -1.61605e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2818, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.948164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            322.948      30.8648       5.5281      8.33839     0.726107      100.262      4.06262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113093, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009616, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12289, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23948e-11  1.03262e-39  7.67831e-41
      low eigenvalue method done, cpu time[sec] = 0.123354, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.01314e-37 -2.51719e-38 -1.88224e-39  -2.6129e-38 -3.95703e-40 -5.85939e-42  3.89873e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0259, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.98021e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.944379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.06991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            193.769      18.5189      3.31686      5.00304     0.435664       60.157      2.43757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113243, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00961, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123011, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.08612e-12  6.61862e-40    4.365e-41
      low eigenvalue method done, cpu time[sec] = 0.123467, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.03e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.07047e-36 -3.15838e-37 -7.74904e-39  -4.1701e-38 -1.42684e-39 -1.75223e-39   -5.135e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0532, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         4.17229e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.946769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.406      13.2278      2.36918       3.5736     0.311189      42.9693      1.74112
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009569, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.09245e-12  4.91221e-40  2.92813e-41
      low eigenvalue method done, cpu time[sec] = 0.12329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.91e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00362e-37  4.85894e-38  1.00093e-39  8.39574e-40  1.43832e-40 -2.32834e-40 -1.81633e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0468, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.36437e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.945849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.649      10.2883       1.8427      2.77946     0.242036      33.4206      1.35421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113145, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122861, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.10217e-12  3.92035e-40  2.14228e-41
      low eigenvalue method done, cpu time[sec] = 0.123321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.92e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.3864e-37  1.13847e-37  3.22815e-39  2.72577e-38  7.34422e-40  1.11247e-39 -1.96707e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.947181, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.03742, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.8844      9.25945      1.65843      2.50152     0.217832      30.0785      1.21879
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113323, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12309, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.37533e-12  3.56404e-40  1.87239e-41
      low eigenvalue method done, cpu time[sec] = 0.123566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-41         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.79668e-37  2.39423e-37  8.31823e-39  7.14996e-38  1.94588e-39  2.64515e-39  8.52213e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0298, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         8.94062e+09
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.948474, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.5896      6.17297      1.10562      1.66768     0.145221      20.0523     0.812523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009561, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.40043e-13  2.46014e-40  1.09309e-41
      low eigenvalue method done, cpu time[sec] = 0.123328, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.53e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.60175e-37 -3.65846e-38 -3.37317e-40  1.45084e-38  1.87124e-40  2.17215e-41 -5.45395e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.19208e+10
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.94597, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05012, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.4422      4.62973     0.829215      1.25076     0.108916      15.0392     0.609393
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113175, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009653, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122983, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.74092e-12   1.8842e-40  7.32019e-42
      low eigenvalue method done, cpu time[sec] = 0.123435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.76e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.68084e-41 -3.42875e-39 -6.53361e-40 -7.50587e-39 -1.63377e-40 -4.62887e-40  3.92533e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0406, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.4901e+10
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.947401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05698, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.7537      3.70378     0.663372      1.00061    0.0871329      12.0314     0.487514
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.112997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009601, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.8855e-13  1.52901e-40  5.30624e-42
      low eigenvalue method done, cpu time[sec] = 0.123318, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.68e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.11641e-38 -1.78604e-39 -2.45789e-41 -6.86139e-39 -1.24005e-40  5.77855e-40  1.28877e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+10
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.939087, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.2948      3.08648      0.55281     0.833839    0.0726107      10.0262     0.406262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11311, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009614, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122904, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47075e-12  1.28752e-40  4.05173e-42
      low eigenvalue method done, cpu time[sec] = 0.12336, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.36316e-37 -1.97523e-38 -4.97931e-40  2.57845e-39  4.08333e-42 -1.12404e-39 -3.29115e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0314, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.08614e+10
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.947861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05157, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.6812      2.64556     0.473837      0.71472    0.0622378      8.59386     0.348224
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113176, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009627, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122959, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.85559e-13  1.11245e-40  3.21028e-42
      low eigenvalue method done, cpu time[sec] = 0.123437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.4e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.43953e-38 -2.01662e-38 -4.00037e-40 -6.81628e-39 -1.42837e-40  8.01892e-40  1.59658e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.38416e+10
      global relaxation matrix dimension = 685
      setting global matrices ... done, cpu time[sec] = 0.947246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.07704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.2211      2.31486     0.414607      0.62538    0.0544581      7.51962     0.304696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009613, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.49323e-13  9.79595e-41  2.61503e-42
      low eigenvalue method done, cpu time[sec] = 0.12333, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.8e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     3e-42         0         1
         *Z       ---       ---  2.67e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.80204e-38 -3.18546e-39 -9.77358e-41  -5.9396e-39 -1.14672e-40  1.04695e-39 -4.47012e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0659, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 16673 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008813
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.517921
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.611812
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.632973
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.5228
         W1 Well: minimal relaxation eigenvalue = 0.0301488
         W1 Well: maximal relaxation eigenvalue = 1.44307
         W1 Well:       grid size = 670
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 229
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 185 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 318
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23143 1/cm => truncating
         B5 Barrier:        grid size = 553
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23142 1/cm
         B6 Barrier:        grid size = 211
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4649 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.61056, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23142 4.62e+05 6.73e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 1.38e+13
         B2    186 1.33e+12
         B3  -4638 2.41e+11
         B4  -6222 3.62e+11
         B5 -23142 3.17e+10
         B6   1482 4.38e+12
         B7   4650 1.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.79e+23   1.5e+24   1.8e+18  8.15e+15  5.65e-11   1.7e+27  1.52e+32
          R  1.47e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  6.65e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  5.56e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  1.23e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  1.77e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  5.89e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  6.58e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.24e+20  4.95e+20  5.93e+14  2.68e+12  1.86e-14  5.59e+23  5.01e+28
          R  4.47e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  2.02e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  1.69e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  3.73e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  5.38e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  1.79e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6     2e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.61603, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+08
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.302336, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.73822, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1050.62      101.595      18.4116      27.6051      2.41904       334.11      13.9478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106639, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.46981e-11  2.97086e-38  2.87367e-39
      low eigenvalue method done, cpu time[sec] = 0.116959, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.96e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.40863e-36  4.87898e-37 -2.09019e-38 -5.79418e-37 -1.11855e-38  5.47186e-40  9.24156e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.98289, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.908125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.90435, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            350.207       33.865      6.13719      9.20168     0.806345       111.37      4.64928
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106294, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116095, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.51195e-12  1.20064e-38  1.02256e-39
      low eigenvalue method done, cpu time[sec] = 0.116526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-38 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.21719e-36  6.57127e-37  2.01632e-38  1.55268e-37  3.88153e-39  5.08953e-39  1.39566e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7623, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.91898e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.9052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            210.124       20.319      3.68231      5.52101     0.483807       66.822      2.78957
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106161, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115989, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.98489e-12  7.77478e-39  5.87783e-40
      low eigenvalue method done, cpu time[sec] = 0.116421, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.11755e-36  1.75568e-37  1.71094e-38  2.07938e-37  5.08082e-39  8.19242e-39 -5.63352e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7633, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         4.08657e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.907795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.90535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            150.089      14.5136      2.63022      3.94358     0.345577        47.73      1.99255
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106539, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.36586e-12  5.80495e-39  3.97275e-40
      low eigenvalue method done, cpu time[sec] = 0.11678, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.8e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.3171e-36  5.75853e-37   1.3791e-38  8.45573e-38   2.5963e-39  1.75851e-40  4.49397e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7547, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.25417e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.91069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.736      11.2883      2.04573      3.06723     0.268782      37.1233      1.54976
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10626, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.53603e-12  4.65174e-39  2.92318e-40
      low eigenvalue method done, cpu time[sec] = 0.116624, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.65e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.44451e-37  2.42064e-37  3.74856e-39 -4.96836e-39  3.97177e-40  3.92321e-39 -1.32738e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.909707, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91498, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            105.062      10.1595      1.84116      2.76051     0.241904       33.411      1.39478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106504, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116315, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.66122e-12  4.23575e-39  2.56109e-40
      low eigenvalue method done, cpu time[sec] = 0.11674, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.24e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-40 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -2.8069e-36 -8.74107e-37 -2.48887e-38 -1.88444e-37 -5.39549e-39 -6.01938e-39 -1.08894e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7457, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         8.75694e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.912409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.0414        6.773      1.22744      1.84034     0.161269       22.274     0.929856
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106342, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00906, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116127, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46367e-13  2.94029e-39  1.50918e-40
      low eigenvalue method done, cpu time[sec] = 0.116555, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.86e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.39245e-36  4.38742e-37  1.15129e-38  9.57466e-38  2.67233e-39   3.4647e-40 -5.65179e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7537, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.16759e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.89212, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             52.531      5.07975     0.920578      1.38025     0.120952      16.7055     0.697392
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106397, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009055, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116168, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.04383e-13  2.25978e-39  1.01738e-40
      low eigenvalue method done, cpu time[sec] = 0.116598, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.81e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.68599e-37 -2.07469e-37  -6.2752e-39 -4.78258e-38 -1.36128e-39 -3.16674e-40  1.90917e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7549, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.45949e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.910848, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85212, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.0248       4.0638     0.736462       1.1042    0.0967614      13.3644     0.557913
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009032, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116141, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.19426e-12   1.8382e-39  7.41257e-41
      low eigenvalue method done, cpu time[sec] = 0.116569, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   1.0754e-36  1.97803e-37  6.69287e-39  4.36095e-38  1.34833e-39  4.27376e-39 -2.64204e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7095, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.91106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.0207       3.3865     0.613719     0.920168    0.0806345       11.137     0.464928
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106384, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116202, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.02568e-13  1.55064e-39  5.68356e-41
      low eigenvalue method done, cpu time[sec] = 0.116625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.39871e-37  1.86111e-37  6.37948e-39  5.99039e-38  1.52486e-39  1.23483e-39  3.80002e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7276, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.04329e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.911205, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87909, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.0177      2.90271     0.526044     0.788716    0.0691153        9.546      0.39851
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009065, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.91998e-13  1.34166e-39  4.51886e-41
      low eigenvalue method done, cpu time[sec] = 0.116714, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.04e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.48505e-37    5.147e-38  1.59968e-39  8.27632e-39  2.36677e-40  1.21428e-39 -4.85853e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7382, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.33518e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.912254, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87505, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26.2655      2.53987     0.460289     0.690126    0.0604759      8.35275     0.348696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46195e-13  1.18276e-39   3.6919e-41
      low eigenvalue method done, cpu time[sec] = 0.116573, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-39 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-41 -4.44e-16         1
         *Z       ---       ---  6.36e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.21575e-37  3.76115e-38  6.41097e-40 -2.21361e-39 -1.14912e-41 -2.49488e-40 -2.53734e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.734, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 16951 1/cm
      Energy step      = 73 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010192
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.464213
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.608859
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.77194
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.32936
         W1 Well: minimal relaxation eigenvalue = 0.0297042
         W1 Well: maximal relaxation eigenvalue = 2.78903
         W1 Well:       grid size = 665
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 233
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4656 1/cm
         B4 Barrier:        grid size = 317
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 550
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23198 1/cm
         B6 Barrier:        grid size = 212
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4687 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.50317, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23198 4.43e+05 7.12e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 1.55e+13
         B2    162 1.51e+12
         B3  -4656 2.77e+11
         B4  -6189 4.13e+11
         B5 -23198 3.64e+10
         B6   1476 5.03e+12
         B7   4688 2.16e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   5.8e+22  1.27e+23  2.19e+17  1.12e+15  3.12e-11  1.31e+26  9.28e+30
          R  1.72e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1   7.9e-24     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  4.56e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3   8.9e-16  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4   3.2e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  7.64e-27  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  1.08e-31  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.94e+19  4.22e+19  7.32e+13  3.75e+11  1.04e-14  4.37e+22   3.1e+27
          R  5.17e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  2.37e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  1.37e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  2.67e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4   9.6e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  2.29e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  3.23e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
   MasterEquation::set:  done, cpu time[sec] = 7.51602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+08
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.368449, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76942, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1137.34      111.277      20.3991      30.4062      2.68098      370.278      15.9117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10443, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008945, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113522, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78103e-11  3.06647e-37  3.29753e-38
      low eigenvalue method done, cpu time[sec] = 0.11396, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.07e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.11e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.19319e-35  7.59851e-36  1.68524e-37 -7.22346e-37 -2.74034e-39 -9.96233e-39  2.73492e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0898, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.894756, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.89589, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            379.113      37.0924      6.79971      10.1354      0.89366      123.426      5.30389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104185, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008883, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113209, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.24079e-11  1.26839e-37  1.19864e-38
      low eigenvalue method done, cpu time[sec] = 0.113635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.84768e-36  3.58954e-36  6.70123e-38  4.53914e-37  1.24769e-38 -1.46087e-38  1.55338e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.86079e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.895596, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.93175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            227.468      22.2554      4.07983      6.08124     0.536196      74.0555      3.18234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00889, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.9764e-12  8.28925e-38  6.96412e-39
      low eigenvalue method done, cpu time[sec] = 0.11385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.29e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.68086e-36   1.3959e-36  3.28232e-38  4.56039e-37  1.09199e-38 -1.76345e-38 -1.05523e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2229, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          4.0051e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.895738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.24953, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            162.477      15.8967      2.91416      4.34374     0.382997      52.8968       2.2731
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104398, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113402, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.87989e-12  6.22264e-38  4.74141e-39
      low eigenvalue method done, cpu time[sec] = 0.113816, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.22e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.41898e-36 -7.20065e-37 -3.24357e-38 -2.98021e-37 -8.00135e-39 -2.20847e-38  8.86613e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4665, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.14941e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.892112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            126.371      12.3641      2.26657      3.37847     0.297887       41.142      1.76796
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104309, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113353, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.70603e-12  5.00494e-38  3.50817e-39
      low eigenvalue method done, cpu time[sec] = 0.113777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     5e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  -2.0546e-36  4.17067e-37  7.41108e-39  7.55157e-38  1.55539e-39 -8.54015e-39  4.76292e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0254, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.893565, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91164, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            113.734      11.1277      2.03991      3.04062     0.268098      37.0278      1.59117
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104273, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008897, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113315, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89139e-12  4.56405e-38  3.08082e-39
      low eigenvalue method done, cpu time[sec] = 0.113752, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-39  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.61706e-38 -2.32446e-38   1.5863e-38  2.20677e-37    4.951e-39 -2.83887e-39  1.97387e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.714, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         8.58236e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.892259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91005, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.8226      7.41848      1.35994      2.02708     0.178732      24.6852      1.06078
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104046, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008918, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113109, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.19869e-13  3.18461e-38  1.83202e-39
      low eigenvalue method done, cpu time[sec] = 0.113567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.18e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.46e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.25658e-37  3.87345e-37 -3.97251e-40 -8.75577e-38 -1.41775e-39  4.02919e-39  1.24729e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7043, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.14431e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.895675, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91593, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             56.867      5.56386      1.01996      1.52031     0.134049      18.5139     0.795584
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104162, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113209, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.45488e-13  2.45544e-38  1.24305e-39
      low eigenvalue method done, cpu time[sec] = 0.11367, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.29e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.34355e-36  8.40255e-37  2.51341e-38  1.08043e-37  3.70512e-39  6.64451e-39  3.19326e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7196, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.43039e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.893841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.92172, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.4936      4.45109     0.815965      1.21625     0.107239      14.8111     0.636467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104276, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.20639e-13  2.00186e-38  9.10225e-40
      low eigenvalue method done, cpu time[sec] = 0.113773, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.95e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.23336e-36 -2.95349e-37 -7.27776e-39  -6.1897e-38 -1.86828e-39  7.18832e-39 -7.51299e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7238, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.892677, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.90448, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.9113      3.70924     0.679971      1.01354     0.089366      12.3426     0.530389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104287, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008867, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113328, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.76733e-13  1.69155e-38  7.00755e-40
      low eigenvalue method done, cpu time[sec] = 0.113751, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.02e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.23289e-37 -3.47205e-37 -8.68289e-39 -9.17167e-38 -2.26009e-39  1.77238e-38 -6.51555e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7005, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.00255e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.89226, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.90949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.4954      3.17935     0.582832     0.868749    0.0765995      10.5794     0.454619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104193, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008948, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113288, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.87804e-13   1.4655e-38  5.59055e-40
      low eigenvalue method done, cpu time[sec] = 0.113715, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.35e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -7.83594e-37  1.04552e-37  2.33523e-39  1.16591e-37   2.2688e-39 -1.19592e-38  1.67473e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7069, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.28863e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.894251, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.91185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28.4335      2.78193     0.509978     0.760155    0.0670245      9.25694     0.397792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10425, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.40354e-13  1.29331e-38  4.58086e-40
      low eigenvalue method done, cpu time[sec] = 0.113737, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-40  4.44e-16         1
         *Z       ---       ---  1.64e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -6.53475e-37  -6.0031e-38 -1.16635e-39  4.73818e-41 -1.95471e-40  5.39379e-39  2.38865e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7158, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 17229 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009988
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.500825
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.579905
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.605085
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.14269
         W1 Well: minimal relaxation eigenvalue = 0.0292615
         W1 Well: maximal relaxation eigenvalue = 2.7991
         W1 Well:       grid size = 651
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 230
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 227
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 292
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4671 1/cm
         B4 Barrier:        grid size = 313
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6246 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 538
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 210
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.15484, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23121 4.69e+05 7.54e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 1.73e+13
         B2    204 1.72e+12
         B3  -4671 3.18e+11
         B4  -6246 4.71e+11
         B5 -23121 4.18e+10
         B6   1479 5.77e+12
         B7   4704 2.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.43e+21  1.17e+22  2.88e+16  1.66e+14  1.74e-11  1.11e+25  6.31e+29
          R  1.84e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  8.56e-23     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  3.47e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  6.01e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  5.74e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5     9e-26  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  1.59e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.86e+18  4.01e+18   9.9e+12  5.71e+10  5.98e-15  3.81e+21  2.17e+26
          R  5.36e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  2.49e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  1.01e-13  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  1.75e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  1.67e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  2.62e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  4.62e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.16748, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+08
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.494102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.49352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1229.13      121.676      22.5575      33.4309      2.96556      409.457      18.0973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107375, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.33011e-11  2.90527e-36  3.40354e-37
      low eigenvalue method done, cpu time[sec] = 0.107784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.91e-36 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.5e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  5.90475e-35  1.99909e-35  6.82277e-37  2.93922e-36  9.33719e-38  8.04539e-38  1.22033e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8527, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.861066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75154, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             409.71      40.5586      7.51918      11.1436     0.988521      136.486      6.03245
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00843, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107144, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.98605e-11  1.22749e-36  1.26286e-37
      low eigenvalue method done, cpu time[sec] = 0.107548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-36 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.68449e-36  8.55031e-36  1.59772e-37  1.29015e-36  3.41494e-38 -1.62277e-37 -1.19502e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4383, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          2.8054e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.859127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75951, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            245.826      24.3352      4.51151      6.68618     0.593112      81.8913      3.61947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098012, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00842, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107108, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.47571e-12  8.09014e-37  7.41395e-38
      low eigenvalue method done, cpu time[sec] = 0.107508, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.09e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.12113e-35 -2.85476e-37 -8.45692e-38 -2.44201e-36 -4.96475e-38  7.47442e-38 -8.17861e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.92755e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             175.59      17.3823      3.22251      4.77585     0.423652      58.4938      2.58533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098151, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.05311e-11  6.10377e-37  5.08365e-38
      low eigenvalue method done, cpu time[sec] = 0.107649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.1e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -9.94873e-36 -1.58888e-36 -6.22733e-38 -7.32018e-37 -1.87643e-38 -9.89454e-39 -5.08183e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4437, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.04971e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.77458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             136.57      13.5195      2.50639      3.71455     0.329507      45.4952      2.01082
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107142, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.3366e-12  4.92637e-37  3.78181e-38
      low eigenvalue method done, cpu time[sec] = 0.107564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.93e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -1.71793e-36  2.43145e-36  8.21109e-38  1.01372e-36  2.24224e-38 -6.11839e-38 -9.02372e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.464, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.913      12.1676      2.25575      3.34309     0.296556      40.9457      1.80973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098034, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107157, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.28209e-12  4.49859e-37  3.32875e-38
      low eigenvalue method done, cpu time[sec] = 0.107561, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.5e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-38 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -2.17124e-35 -7.45432e-36 -1.86023e-37 -1.20365e-36 -3.50715e-38 -1.37475e-38  3.37763e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.41619e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76706, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             81.942      8.11172      1.50384      2.22873     0.197704      27.2971      1.20649
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098153, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107272, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.36552e-13  3.15431e-37  1.99718e-38
      low eigenvalue method done, cpu time[sec] = 0.107675, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.23e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.14985e-36  2.92991e-36  5.55351e-38  3.73513e-37  1.01114e-38 -5.35078e-38 -9.08682e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4515, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.12216e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.859103, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.4565      6.08379      1.12788      1.67155     0.148278      20.4728     0.904867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098248, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008401, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.19953e-13  2.43957e-37  1.36377e-38
      low eigenvalue method done, cpu time[sec] = 0.10774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.14e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -1.03987e-35 -2.60243e-36 -7.18229e-38  -5.0816e-37  -1.5243e-38  2.80315e-38  1.07017e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4548, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          1.4027e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.861813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76482, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.1652      4.86703     0.902302      1.33724     0.118622      16.3783     0.723894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09809, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107184, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.55412e-12  1.99322e-37  1.00357e-38
      low eigenvalue method done, cpu time[sec] = 0.107596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.83e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -1.49525e-36   3.5809e-37  2.12628e-39 -8.06296e-38 -1.81426e-39 -3.40547e-38  1.01029e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4536, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.76538, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             40.971      4.05586     0.751918      1.11436    0.0988521      13.6486     0.603245
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098103, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00845, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107234, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.01032e-12    1.687e-37  7.75728e-39
      low eigenvalue method done, cpu time[sec] = 0.107659, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.94e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  3.36655e-36  9.64584e-37  2.79951e-38  1.55325e-37  5.72826e-39  2.89307e-38 -5.81075e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4596, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.96378e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.860597, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.75472, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             35.118      3.47645     0.644501     0.955169    0.0847304      11.6988     0.517067
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098033, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.07685e-13  1.46343e-37  6.20961e-39
      low eigenvalue method done, cpu time[sec] = 0.107578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.54293e-35  4.40643e-36  1.21375e-37  7.55058e-37  2.34017e-38  6.30596e-38  1.12942e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.24432e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.857003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.77349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.7283       3.0419     0.563938     0.835773    0.0741391      10.2364     0.452434
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098149, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107268, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.18437e-13  1.29282e-37   5.1029e-39
      low eigenvalue method done, cpu time[sec] = 0.107685, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-37 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.78e-39 -8.88e-16         1
         *Z       ---       ---  4.45e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -2.92688e-36 -3.92218e-37 -5.45127e-39   5.6667e-38    3.147e-40 -1.66804e-38  1.90726e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4605, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 17507 1/cm
      Energy step      = 77 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009957
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.43414
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.556965
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.588358
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.84714
         W1 Well: minimal relaxation eigenvalue = 0.0288327
         W1 Well: maximal relaxation eigenvalue = 1.22602
         W1 Well:       grid size = 637
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31542 1/cm
         B1 Barrier:        grid size = 228
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 288
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4669 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 528
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 208
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1491 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4648 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.74917, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31542 -23149  4.6e+05 7.97e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 1.94e+13
         B2    183 1.94e+12
         B3  -4669 3.65e+11
         B4  -6208 5.37e+11
         B5 -23149 4.79e+10
         B6   1492 6.62e+12
         B7   4649    3e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.67e+20   1.2e+21  4.16e+15  2.69e+13     1e-11  1.05e+24  4.84e+28
          R  1.76e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  8.31e-22     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2   2.4e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  3.72e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  9.98e+10  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  9.48e-25  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  2.07e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.99e+17  4.22e+17  1.46e+12  9.44e+09  3.51e-15   3.7e+20   1.7e+25
          R  5.03e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  2.37e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  6.85e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  1.06e-10  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  2.85e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5   2.7e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  5.89e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.76066, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+08
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.70394, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36728, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1326.17      132.833      24.8977      36.6898      3.27424       451.82      20.5233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007997, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10067, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.67038e-11  2.50323e-35  3.15083e-36
      low eigenvalue method done, cpu time[sec] = 0.101056, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.22e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.30779e-34  7.74026e-35  2.15859e-36  2.10748e-35  5.88589e-37  1.89459e-37 -3.53385e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8469, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.821331, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            442.058      44.2776      8.29924      12.2299      1.09141      150.607      6.84109
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100555, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27377e-12  1.07874e-35  1.19243e-36
      low eigenvalue method done, cpu time[sec] = 0.10101, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.89858e-35  1.14506e-35  4.97249e-37  4.06108e-36  1.12002e-37  2.38392e-37 -3.71155e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2632, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.75261e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.821482, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            265.235      26.5666      4.97954      7.33797     0.654849       90.364      4.10466
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007976, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57563e-11  7.16638e-36  7.07125e-37
      low eigenvalue method done, cpu time[sec] = 0.100878, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.17e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.39052e-35  -2.8154e-35 -6.27467e-37 -2.84931e-36 -9.60411e-38 -2.04636e-38  1.65147e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.85365e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.823222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70624, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.453      18.9761      3.55682      5.24141     0.467749      64.5457       2.9319
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100507, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41228e-12  5.43255e-36  4.88219e-37
      low eigenvalue method done, cpu time[sec] = 0.100899, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.43e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.51229e-35  1.12654e-35  1.99541e-37 -6.83135e-39  1.68895e-38  6.51992e-38 -1.91723e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2658, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          4.9547e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.809632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82482, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            147.353      14.7592      2.76641      4.07665     0.363805      50.2022      2.28036
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092341, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007979, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100452, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.11502e-12  4.39907e-36   3.6511e-37
      low eigenvalue method done, cpu time[sec] = 0.10084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.28191e-35  1.39613e-35  3.59862e-37  2.14776e-36  6.79869e-38 -1.52803e-38 -1.33786e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.82194, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            132.617      13.2833      2.48977      3.66898     0.327424       45.182      2.05233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092304, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100426, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -6.632e-12  4.02236e-36  3.22089e-37
      low eigenvalue method done, cpu time[sec] = 0.100815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-37         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.97318e-35  8.53721e-36  3.55605e-37   2.4791e-36  7.26747e-38  1.84706e-37 -4.24324e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2673, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.25783e+09
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.820696, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70391, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.4116      8.85552      1.65985      2.44599     0.218283      30.1213      1.36822
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73271e-12  2.83364e-36  1.94933e-37
      low eigenvalue method done, cpu time[sec] = 0.100771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.17e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.17716e-35  1.61061e-35  4.46857e-37  3.15601e-36  8.99964e-38   3.6271e-38  1.16116e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2616, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.10104e+10
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.820811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72322, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66.3087      6.64164      1.24489      1.83449     0.163712       22.591      1.02616
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100552, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.10786e-12  2.19808e-36  1.33942e-37
      low eigenvalue method done, cpu time[sec] = 0.10094, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.69565e-36  9.28421e-37  2.20254e-38 -4.06369e-37 -3.99239e-39  8.67681e-38  -5.8227e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.37631e+10
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.823008, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70552, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             53.047      5.31331     0.995908      1.46759      0.13097      18.0728     0.820931
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092325, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10047, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.68756e-13   1.7997e-36  9.90439e-38
      low eigenvalue method done, cpu time[sec] = 0.100861, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.01792e-35  8.62683e-38  3.79629e-38  1.00098e-37  4.70836e-39  1.18746e-37 -1.56098e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.268, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+10
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.821003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.2058      4.42776     0.829924      1.22299     0.109141      15.0607     0.684109
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007993, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.58528e-14  1.52564e-36   7.6861e-38
      low eigenvalue method done, cpu time[sec] = 0.100787, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.14207e-36  4.69133e-37 -2.74401e-38 -2.67596e-37 -8.71156e-39 -1.99785e-37   4.4364e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2879, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.92683e+10
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.822925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.70992, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.8907      3.79522     0.711363      1.04828    0.0935498      12.9091     0.586379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007954, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100393, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.22699e-13  1.32512e-36  6.17312e-38
      low eigenvalue method done, cpu time[sec] = 0.100777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.82e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.27265e-35 -1.33794e-35 -4.07993e-37 -2.90597e-36 -8.46837e-38 -1.70057e-37  2.18555e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2694, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.20209e+10
      global relaxation matrix dimension = 637
      setting global matrices ... done, cpu time[sec] = 0.820335, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71353, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.1543      3.32082     0.622443     0.917246    0.0818561      11.2955     0.513082
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092284, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007982, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100397, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.30374e-14  1.17184e-36  5.08747e-38
      low eigenvalue method done, cpu time[sec] = 0.100791, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.38e-38         0         1
         *Z       ---       ---  1.28e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -3.7088e-35 -9.06647e-36 -2.68448e-37  -1.5456e-36 -4.97039e-38 -2.03773e-37  -2.5439e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.275, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 17785 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011335
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.490568
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.550732
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.561782
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.84498
         W1 Well: minimal relaxation eigenvalue = 0.0284558
         W1 Well: maximal relaxation eigenvalue = 2.43009
         W1 Well:       grid size = 633
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 229
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -76 1/cm
         B2 Barrier:        grid size = 226
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 287
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6239 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 525
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 209
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.77325, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23165 4.55e+05 8.43e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -76 2.17e+13
         B2    157  2.2e+12
         B3  -4601 4.17e+11
         B4  -6239 6.11e+11
         B5 -23165 5.49e+10
         B6   1483 7.56e+12
         B7   4681 3.53e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.51e+19  1.37e+20  6.53e+14  4.71e+12   5.9e-12  1.11e+23  4.15e+27
          R  1.54e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  7.32e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  1.53e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  2.12e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  1.69e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  9.03e-24  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  2.41e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.33e+16  4.89e+16  2.34e+11  1.68e+09  2.11e-15  3.96e+19  1.48e+24
          R  4.29e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  2.05e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  4.28e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  5.94e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  4.73e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  2.52e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  6.74e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.78503, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+08
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.676663, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27339, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1428.68      144.784      27.4311      40.1888      3.60855      497.546      23.2097
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.091058, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007882, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099585, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.56047e-11  1.99806e-34  2.67738e-35
      low eigenvalue method done, cpu time[sec] = 0.099973, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.69e-36 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.09651e-36 -3.24272e-37 -3.13318e-36 -4.84195e-35 -9.97925e-37 -1.42819e-38 -2.12909e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.70561, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64293, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            476.228      48.2612      9.14368      13.3963      1.20285      165.849      7.73656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.14042e-11  8.77243e-35  1.03278e-35
      low eigenvalue method done, cpu time[sec] = 0.099748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.77e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.5e-36 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.27281e-34  -7.8173e-35 -1.80514e-36 -1.62901e-36 -1.58696e-37 -6.93955e-37   -1.826e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1782, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.70224e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.816074, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.74828, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            285.737      28.9567      5.48621      8.03776      0.72171      99.5091      4.64194
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099381, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.04747e-12  5.87192e-35  6.18437e-36
      low eigenvalue method done, cpu time[sec] = 0.099769, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.87e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-36 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.08866e-35 -2.90786e-35 -7.02994e-37 -5.18883e-36 -1.28842e-37  4.29032e-37  2.83278e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.279, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.78314e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.814791, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            204.098      20.6834      3.91872      5.74126     0.515507      71.0779      3.31567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090942, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.13593e-12  4.47151e-35  4.29846e-36
      low eigenvalue method done, cpu time[sec] = 0.099848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.47e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-36 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.06824e-34 -6.88362e-35 -1.69269e-36 -1.16967e-35 -3.49952e-37  5.81794e-37  2.07775e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         4.86404e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65121, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            158.743      16.0871      3.04789      4.46542      0.40095      55.2828      2.57885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090799, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90554e-13  3.63232e-35  3.23102e-36
      low eigenvalue method done, cpu time[sec] = 0.099712, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-36 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.94474e-34 -4.35985e-35   -1.302e-36 -3.40688e-36 -1.53724e-37 -6.62294e-37 -1.79856e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1686, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.802197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64321, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            142.868      14.4784      2.74311      4.01888     0.360855      49.7546      2.32097
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090818, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.5082e-12  3.32547e-35  2.85649e-36
      low eigenvalue method done, cpu time[sec] = 0.099714, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.46e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.57828e-34 -3.72113e-35 -1.10252e-36 -6.35234e-36 -1.98465e-37 -4.27537e-37  7.99459e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1649, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.10673e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6533, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            95.2456      9.65223      1.82874      2.67925      0.24057      33.1697      1.54731
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090679, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099207, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   9.1554e-13  2.35335e-35  1.74348e-36
      low eigenvalue method done, cpu time[sec] = 0.099595, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.7e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.62722e-35 -5.25397e-36  -3.2662e-37 -4.39958e-37 -3.50781e-38 -8.16567e-37 -5.55469e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0809e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.816317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6587, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71.4342      7.23918      1.37155      2.00944     0.180428      24.8773      1.16048
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090819, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50409e-12  1.83082e-35  1.20528e-36
      low eigenvalue method done, cpu time[sec] = 0.099726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.21e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.32644e-35 -1.16199e-35 -3.91612e-37 -3.21832e-36 -9.26063e-38  -4.8093e-37  2.37274e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1943, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.35112e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813995, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6529, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.1474      5.79134      1.09724      1.60755     0.144342      19.9018     0.928387
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090779, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.72197e-13   1.5021e-35  8.95476e-37
      low eigenvalue method done, cpu time[sec] = 0.099696, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.27e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -3.2768e-35 -1.45713e-35 -1.91342e-37   3.5058e-37 -1.61715e-38  2.61144e-37 -3.02003e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1868, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.81413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63637, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.6228      4.82612     0.914368      1.33963     0.120285      16.5849     0.773656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00786, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099341, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.00278e-12  1.27535e-35  6.97609e-37
      low eigenvalue method done, cpu time[sec] = 0.099742, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -5.8481e-35 -1.42546e-35 -5.17139e-37 -4.12076e-36 -1.15374e-37 -1.82865e-37  4.84127e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.89157e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.815054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65877, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.8196      4.13667     0.783744      1.14825     0.103101      14.2156     0.663134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090824, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007881, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099346, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.23241e-14  1.10911e-35  5.62117e-37
      low eigenvalue method done, cpu time[sec] = 0.099739, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-35 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   6.3476e-36 -1.21582e-36  1.69186e-38 -1.23272e-37  3.98479e-40  4.96157e-37 -6.42102e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1949, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.16179e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.813506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65285, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.7171      3.61959     0.685776      1.00472    0.0902138      12.4386     0.580242
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09088, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099396, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.93247e-13  9.81811e-36  4.64563e-37
      low eigenvalue method done, cpu time[sec] = 0.099795, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.82e-36 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.79e-37 -4.44e-16         1
         *Z       ---       ---  3.91e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.97108e-35 -1.74264e-35 -4.36033e-37 -2.58848e-36 -8.02442e-38   4.6026e-38  7.28136e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1875, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 18063 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009514
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.42095
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.526239
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.538397
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.60279
         W1 Well: minimal relaxation eigenvalue = 0.0280503
         W1 Well: maximal relaxation eigenvalue = 1.2105
         W1 Well:       grid size = 620
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31537 1/cm
         B1 Barrier:        grid size = 226
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -17 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 284
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4657 1/cm
         B4 Barrier:        grid size = 303
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6177 1/cm
         B5 Barrier: nonpositive number of states at -23137 1/cm => truncating
         B5 Barrier:        grid size = 515
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23137 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.49479, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31537 -23137 4.64e+05 8.92e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -17 2.43e+13
         B2    143 2.49e+12
         B3  -4657 4.76e+11
         B4  -6177 6.94e+11
         B5 -23137 6.27e+10
         B6   1503 8.64e+12
         B7   4703 4.13e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.16e+18  1.69e+19   1.1e+14  8.82e+11  3.55e-12  1.27e+22  3.92e+26
          R  1.22e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  5.91e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  9.07e-15   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  1.13e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  2.82e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  7.86e-23  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  2.55e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.99e+15  6.19e+15  4.03e+10  3.23e+08   1.3e-15  4.65e+18  1.43e+23
          R  3.35e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  1.62e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  2.48e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3   3.1e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  7.71e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  2.15e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  6.97e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.50567, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+08
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.778422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.20497, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1536.76      157.571      30.1694      43.9392      3.97007      546.819      26.1773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093365, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.00544e-11  1.45634e-33  2.05985e-34
      low eigenvalue method done, cpu time[sec] = 0.093744, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.09e-35  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.79833e-34  3.08885e-35 -7.29372e-36 -1.33996e-34 -2.92381e-36 -3.38209e-36   -7.453e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.780166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59857, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            512.254      52.5236      10.0565      14.6464      1.32336      182.273      8.72577
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085661, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007465, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093253, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.8859e-11  6.50846e-34  8.09415e-35
      low eigenvalue method done, cpu time[sec] = 0.093639, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.51e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-35  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.2749e-34 -1.29364e-34 -4.10007e-36 -6.43532e-35 -1.42917e-36  1.38298e-36 -1.44549e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0214, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.65413e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.776756, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59977, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            307.353      31.5142      6.03389      8.78783     0.794015      109.364      5.23546
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0856, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.72565e-11   4.3881e-34  4.89294e-35
      low eigenvalue method done, cpu time[sec] = 0.093553, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.39e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-35  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.41157e-34  1.21146e-34  2.93006e-36  1.00672e-35  3.93608e-37  2.47369e-36 -2.47357e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.71578e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.77769, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            219.538      22.5101      4.30992      6.27702     0.567153       78.117      3.73962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085676, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007436, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.30884e-12  3.35622e-34  3.42307e-35
      low eigenvalue method done, cpu time[sec] = 0.093618, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.36e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.41e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -8.11602e-35 -2.17604e-35 -1.21999e-36 -1.76591e-35 -4.46306e-37 -1.91569e-36 -4.76356e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         4.77743e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.779145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60876, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            170.751      17.5079      3.35216      4.88213     0.441119      60.7577      2.90859
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007442, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09334, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.74751e-12  2.73469e-34  2.58589e-35
      low eigenvalue method done, cpu time[sec] = 0.093725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.67e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.29152e-34  1.12805e-34  2.53741e-36  1.72313e-35  5.12151e-37 -1.43838e-36 -4.07355e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.777602, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6293, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            153.676      15.7571      3.01694      4.39392     0.397007      54.6819      2.61773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085736, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007435, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.06465e-12  2.50675e-34  2.29099e-35
      low eigenvalue method done, cpu time[sec] = 0.093679, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.51e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.90264e-34  5.67683e-35  1.75314e-36  5.82436e-36  2.75385e-37  3.74236e-36  3.87158e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0446, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         7.96238e+09
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.778227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.451      10.5047       2.0113      2.92928     0.264672      36.4546      1.74515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085627, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007441, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09321, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.95198e-12  1.78184e-34  1.40996e-35
      low eigenvalue method done, cpu time[sec] = 0.093608, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     5e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   3.7958e-34  1.44287e-34  3.31228e-36  2.09799e-35  6.12569e-37 -1.44403e-37 -6.53761e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.06165e+10
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.776494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59189, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            76.8382      7.87854      1.50847      2.19696     0.198504       27.341      1.30887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085591, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007441, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093165, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.70872e-12  1.39016e-34  9.80558e-36
      low eigenvalue method done, cpu time[sec] = 0.093547, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.73887e-35  1.19293e-35  5.05542e-37  4.43021e-36  1.09749e-37   1.2376e-36  2.78714e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0088, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.32706e+10
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.777763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59244, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.4705      6.30283      1.20678      1.75757     0.158803      21.8728      1.04709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085717, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093291, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55806e-12  1.14289e-34  7.31921e-36
      low eigenvalue method done, cpu time[sec] = 0.093677, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.98518e-35  3.17369e-35  2.05911e-37 -2.22209e-36 -2.19492e-38 -8.21785e-37  1.21638e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0032, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+10
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.777946, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.2254      5.25236      1.00565      1.46464     0.132336      18.2273     0.872577
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.35913e-12  9.71881e-35  5.72373e-36
      low eigenvalue method done, cpu time[sec] = 0.093659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.72e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.55112e-34 -1.01438e-34 -3.30126e-36  -2.1781e-35  -6.5602e-37 -2.49833e-36 -5.35311e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0011, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.85789e+10
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.778017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.59601, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.9075      4.50202     0.861984       1.2554     0.113431      15.6234     0.747923
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085631, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007429, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093185, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82814e-13  8.46244e-35  4.62694e-36
      low eigenvalue method done, cpu time[sec] = 0.093659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.46e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.03723e-34  3.44507e-35   1.2448e-36   8.4588e-36  2.54339e-37  1.03877e-36 -1.78528e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9928, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1          2.1233e+10
      global relaxation matrix dimension = 620
      setting global matrices ... done, cpu time[sec] = 0.773554, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60299, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.4191      3.93927     0.754236      1.09848    0.0992519      13.6705     0.654433
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085563, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00744, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09313, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.87714e-12   7.4988e-35   3.8346e-36
      low eigenvalue method done, cpu time[sec] = 0.09351, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.5e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-36  2.22e-16         1
         *Z       ---       ---  1.25e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.15573e-34  7.78639e-35  2.23588e-36  1.18141e-35  3.93485e-37  1.10433e-36 -1.16657e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0141, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 18341 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009745
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.465583
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.508355
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.91982
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.46882
         W1 Well: minimal relaxation eigenvalue = 0.0276739
         W1 Well: maximal relaxation eigenvalue = 2.57731
         W1 Well:       grid size = 609
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 506
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 206
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.67729, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23151 4.59e+05 9.43e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 2.71e+13
         B2    137 2.81e+12
         B3  -4619 5.43e+11
         B4  -6176 7.87e+11
         B5 -23151 7.15e+10
         B6   1450 9.84e+12
         B7   4648 4.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.11e+18  2.26e+18  1.99e+13  1.76e+11  2.16e-12  1.58e+21  4.05e+25
          R  9.05e-19         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  4.42e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  5.03e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  5.69e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  4.63e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  6.31e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  2.47e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.16e+14  8.52e+14  7.48e+09  6.61e+07  8.12e-16  5.96e+17  1.52e+22
          R   2.4e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  1.17e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  1.34e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  1.51e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  1.23e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  1.68e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  6.56e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.68814, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+08
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.7528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18838, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1650.66      171.238      33.1252      47.9611      4.36047      599.828      29.4481
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.36215e-11  9.87728e-33  1.46644e-33
      low eigenvalue method done, cpu time[sec] = 0.089188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.88e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-34  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.45438e-33  -2.2733e-33 -4.73498e-35 -2.81277e-34 -9.04446e-36 -6.74829e-36 -3.57847e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.54876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.750168, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53733, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             550.22      57.0794      11.0417       15.987      1.45349      199.943      9.81602
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081675, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007078, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088879, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.84045e-12  4.48952e-33  5.86615e-34
      low eigenvalue method done, cpu time[sec] = 0.089242, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-34  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.87309e-33  8.88742e-34  2.28081e-35  2.05084e-34  5.32729e-36  3.92006e-36  1.14786e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8627, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.60811e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.754839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53693, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            330.132      34.2476      6.62505      9.59222     0.872094      119.966      5.88961
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081476, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007071, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088673, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.21768e-11  3.04796e-33  3.57878e-34
      low eigenvalue method done, cpu time[sec] = 0.089035, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.05e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.43e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.85375e-34  1.64597e-34  3.84123e-36  7.35926e-36  3.44994e-37 -9.87478e-37 -5.36818e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8623, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.65136e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.751341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54496, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            235.809      24.4626      4.73218      6.85159     0.622924      85.6897      4.20687
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081506, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.63744e-12  2.34108e-33  2.51958e-34
      low eigenvalue method done, cpu time[sec] = 0.089076, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.48e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.08034e-34 -1.21399e-34 -4.42295e-36 -5.30665e-35 -1.37242e-36  2.41511e-36  1.25736e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8631, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          4.6946e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            183.407      19.0265      3.68058      5.32901     0.484497      66.6476      3.27201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088695, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.31022e-12  1.91321e-33  1.91263e-34
      low eigenvalue method done, cpu time[sec] = 0.08905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.29e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.57133e-34  1.50424e-34  5.87783e-36  3.13641e-35  9.11246e-37 -2.84792e-36  5.26398e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.756487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53349, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            165.066      17.1238      3.31252      4.79611     0.436047      59.9828      2.94481
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088659, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.52828e-13  1.75584e-33  1.69801e-34
      low eigenvalue method done, cpu time[sec] = 0.089013, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.86e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.37734e-34 -2.52649e-34 -5.81343e-36 -3.52895e-35 -1.04255e-36  -3.5969e-36  1.03177e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8656, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         7.82434e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.753685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.044      11.4159      2.20835      3.19741     0.290698      39.9885       1.9632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081519, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007045, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08869, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.00142e-12  1.25349e-33   1.0535e-34
      low eigenvalue method done, cpu time[sec] = 0.089133, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.47e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -5.5432e-34 -2.58328e-34 -6.52336e-36 -3.49687e-35 -1.04433e-36 -4.24557e-37 -8.28559e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.04324e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             82.533      8.56191      1.65626      2.39805     0.218024      29.9914       1.4724
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007044, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08861, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.50933e-13  9.80693e-34  7.36949e-35
      low eigenvalue method done, cpu time[sec] = 0.088973, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.81e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.85221e-37 -2.45615e-35 -1.16102e-36 -1.66076e-35 -3.79687e-37 -3.18919e-37 -1.29008e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.30406e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752267, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52104, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66.0264      6.84952      1.32501      1.91844     0.174419      23.9931      1.17792
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081396, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007077, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.7464e-13  8.07885e-34  5.52601e-35
      low eigenvalue method done, cpu time[sec] = 0.088972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   -1.269e-34 -9.53724e-35 -2.31995e-36 -1.67571e-35 -4.67941e-37 -1.79407e-36  7.35021e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8445, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.752016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53753, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             55.022      5.70794      1.10417       1.5987     0.145349      19.9943     0.981602
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088727, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.85391e-13  6.88063e-34  4.33764e-35
      low eigenvalue method done, cpu time[sec] = 0.089088, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.88e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.06125e-34 -1.32185e-35 -2.86094e-37 -1.04378e-35 -2.05548e-37  4.52564e-36     1.93e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8681, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.82568e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.757305, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56912, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.1617      4.89252     0.946435      1.37032     0.124585      17.1379     0.841373
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.00498e-12  5.99856e-34  3.51757e-35
      low eigenvalue method done, cpu time[sec] = 0.089015, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.54227e-35 -1.05394e-34  -2.0592e-36  -2.1993e-35 -5.30944e-37  5.41187e-36 -9.63175e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9024, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.08649e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.755656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56773, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.2665      4.28095     0.828131      1.19903     0.109012      14.9957     0.736202
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088656, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.27792e-12  5.32089e-34   2.9232e-35
      low eigenvalue method done, cpu time[sec] = 0.089018, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-35  2.22e-16         1
         *Z       ---       ---  4.19e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.02146e-34 -7.92156e-35 -3.07566e-36 -1.37829e-35 -5.09254e-37   -5.835e-36  2.10562e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0186, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 18619 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009762
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.524613
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.501447
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.462436
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.37324
         W1 Well: minimal relaxation eigenvalue = 0.0273174
         W1 Well: maximal relaxation eigenvalue = 2.53647
         W1 Well:       grid size = 605
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 225
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23213 1/cm => truncating
         B5 Barrier:        grid size = 504
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23213 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1438 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4675 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.26837, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23213 4.39e+05 9.97e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.02e+13
         B2    194 3.17e+12
         B3  -4621 6.19e+11
         B4  -6198 8.91e+11
         B5 -23213 8.15e+10
         B6   1439 1.12e+13
         B7   4676 5.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.64e+17  3.33e+17  3.88e+12  3.78e+10  1.36e-12  2.17e+20  4.64e+24
          R  6.09e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1     3e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2  2.58e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  2.65e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  7.37e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  4.61e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  2.15e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.26e+13  1.27e+14  1.48e+09  1.44e+07  5.18e-16  8.28e+16  1.77e+21
          R   1.6e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  7.87e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2  6.75e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  6.94e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  1.93e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  1.21e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  5.64e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.28106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+08
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.741503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23222, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1770.49      185.824      36.3112      52.2719      4.78146      656.767      33.0455
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080361, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087516, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.32186e-12  6.20721e-32  9.62201e-33
      low eigenvalue method done, cpu time[sec] = 0.087875, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.21e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-33         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    3.711e-33  6.82313e-34 -3.84216e-35 -1.16147e-33 -2.44647e-35  1.18747e-35 -1.09827e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.54806, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.732163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52948, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            590.164      61.9413      12.1037       17.424      1.59382      218.922      11.0152
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080298, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007002, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.00965e-11  2.86732e-32  3.91557e-33
      low eigenvalue method done, cpu time[sec] = 0.087789, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.87e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.83e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.95308e-33  1.36483e-33  2.56649e-35   5.3585e-35  3.11269e-36 -1.86666e-36 -3.21418e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8122, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.56406e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.743013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53301, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            354.098      37.1648      7.26224      10.4544     0.956291      131.353       6.6091
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007002, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087255, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.73613e-12  1.95964e-32  2.40999e-33
      low eigenvalue method done, cpu time[sec] = 0.087627, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.35e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   4.5124e-33  1.15064e-33  3.24696e-35  1.50436e-34  5.01201e-36 -3.04099e-36 -1.73978e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8264, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.58968e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.743457, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5371, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            252.927      26.5463      5.18732      7.46741     0.683065      93.8238      4.72078
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080095, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006974, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08719, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.77064e-12   1.5113e-32   1.7071e-33
      low eigenvalue method done, cpu time[sec] = 0.087549, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.49015e-34  3.93792e-34  1.32451e-35   1.1798e-34   3.0068e-36 -8.87836e-36  1.18169e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          4.6153e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.742967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            196.721      20.6471      4.03458      5.80798     0.531273      72.9741      3.67172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007006, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087216, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.47927e-12  1.23863e-32  1.30197e-33
      low eigenvalue method done, cpu time[sec] = 0.087577, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.38e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.88773e-33 -6.11592e-34 -1.95134e-35 -1.28675e-34 -3.70335e-36 -8.98494e-36  3.55817e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8331, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.749268, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.049      18.5824      3.63112      5.22719     0.478146      65.6767      3.30455
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080009, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006981, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08711, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.46777e-12  1.13807e-32  1.15819e-33
      low eigenvalue method done, cpu time[sec] = 0.087464, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.53145e-34  2.64729e-35   1.9157e-36  1.00227e-34  1.96538e-36 -2.10114e-35 -3.92315e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8363, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         7.69217e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.731907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52905, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            118.033      12.3883      2.42075      3.48479     0.318764      43.7845      2.20303
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080106, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007016, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087242, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.65321e-12  8.15895e-33  7.24231e-34
      low eigenvalue method done, cpu time[sec] = 0.087596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.16e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.23e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.35319e-33   7.7729e-34   1.9982e-35  1.35138e-34  3.96281e-36 -1.98242e-36 -1.70112e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8091, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.02562e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.741406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05881, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.5246       9.2912      1.81556      2.61359     0.239073      32.8383      1.65227
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080291, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00699, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087409, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.83957e-12  6.40087e-33  5.09501e-34
      low eigenvalue method done, cpu time[sec] = 0.087772, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.4e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.51633e-33  6.43213e-34   2.0404e-35  1.37061e-34   4.0676e-36  2.09362e-35  7.79898e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3559, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.28203e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.7407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54158, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.8197      7.43296      1.45245      2.09087     0.191258      26.2707      1.32182
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080054, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.24682e-12  5.28346e-33  3.83753e-34
      low eigenvalue method done, cpu time[sec] = 0.087558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.28e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.38974e-33  5.80767e-34  2.06655e-35  4.75387e-35  2.55089e-36  3.64425e-35  6.96879e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8243, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.742188, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53441, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.0164      6.19413      1.21037       1.7424     0.159382      21.8922      1.10152
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079988, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.49812e-12  4.50672e-33  3.02329e-34
      low eigenvalue method done, cpu time[sec] = 0.087507, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.05615e-34  1.40048e-35  1.67368e-36   3.3055e-36  2.47841e-37  8.60672e-36  2.92869e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8268, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.79484e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.740579, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.5855      5.30926      1.03746      1.49348     0.136613      18.7648     0.944157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.01353e-12  3.93379e-33  2.45931e-34
      low eigenvalue method done, cpu time[sec] = 0.087645, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-34         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.51166e-34  4.77432e-35  1.49009e-36  1.03174e-35  3.37743e-37  2.49152e-36  2.54661e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8391, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.05124e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.742671, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55106, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.2623       4.6456      0.90778       1.3068     0.119536      16.4192     0.826137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006978, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087183, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.21776e-12  3.49292e-33  2.04924e-34
      low eigenvalue method done, cpu time[sec] = 0.087538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.54e-35         0         1
         *Z       ---       ---  1.47e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.75863e-34 -1.00458e-34 -1.69977e-36  1.47868e-35  7.19234e-38 -2.44673e-36  3.15059e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8488, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 18897 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010139
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.441297
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.485266
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.84489
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.2133
         W1 Well: minimal relaxation eigenvalue = 0.0269617
         W1 Well: maximal relaxation eigenvalue = 2.41287
         W1 Well:       grid size = 594
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 223
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -58 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 277
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4648 1/cm
         B4 Barrier:        grid size = 295
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23263 1/cm => truncating
         B5 Barrier:        grid size = 496
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23263 1/cm
         B6 Barrier:        grid size = 205
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1472 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.30064, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23263 4.24e+05 1.05e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -58 3.36e+13
         B2    198 3.57e+12
         B3  -4648 7.04e+11
         B4  -6178 1.01e+12
         B5 -23263 9.27e+10
         B6   1472 1.27e+13
         B7   4702 6.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.6e+16  5.23e+16  8.01e+11  8.56e+09  8.61e-13  3.18e+19  5.74e+23
          R  3.84e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  1.91e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  1.25e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  1.17e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  1.16e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  3.14e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  1.74e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+13  2.04e+13  3.13e+08  3.34e+06  3.36e-16  1.24e+16  2.24e+20
          R  9.85e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1   4.9e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2   3.2e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3     3e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  2.98e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  8.05e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  4.47e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.31186, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+08
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.660881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29829, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1896.45      201.378      39.7407       56.887      5.23482      717.834      36.9934
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006645, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.45897e-12  3.62375e-31  5.84109e-32
      low eigenvalue method done, cpu time[sec] = 0.083577, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.77e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.38215e-32  1.81892e-32   5.3289e-34  4.22746e-33  1.16008e-34  1.41825e-34  7.00356e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47695, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.7172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4878, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            632.149      67.1259      13.2469      18.9623      1.74494      239.278      12.3311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076148, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006685, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082967, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.67589e-11  1.70013e-31  2.41701e-32
      low eigenvalue method done, cpu time[sec] = 0.083314, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.0909e-32  6.41838e-33  1.92647e-34  1.34568e-33  3.78387e-35 -3.73708e-35 -8.00199e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6946, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.52183e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716308, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50216, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             379.29      40.2756      7.94814      11.3774      1.04696      143.567      7.39867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076197, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006636, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082955, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.75314e-11  1.16944e-31  1.50054e-32
      low eigenvalue method done, cpu time[sec] = 0.083386, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.15e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.62587e-33  1.39835e-33  6.84641e-35  6.69646e-34   1.7147e-35  6.06022e-35  9.25461e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.71, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.53056e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.718407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47856, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            270.921      28.7683      5.67725      8.12672     0.747831      102.548      5.28477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076245, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083061, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.46464e-12  9.05462e-32  1.06927e-32
      low eigenvalue method done, cpu time[sec] = 0.083428, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.05e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.05264e-33  4.66398e-34  2.30557e-35  4.75137e-34  9.80232e-36 -4.69276e-35 -1.44846e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6878, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.53929e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.717281, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            210.716      22.3753      4.41564      6.32078     0.581646      79.7593      4.11037
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07617, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006654, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.38861e-12  7.44184e-32  8.19263e-33
      low eigenvalue method done, cpu time[sec] = 0.083347, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.44e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.0201e-32  4.88674e-33  1.27498e-34  7.57757e-34   2.4372e-35  6.68609e-35  -6.5653e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.717541, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49699, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.645      20.1378      3.97407       5.6887     0.523482      71.7834      3.69934
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076223, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006674, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083014, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    -4.94e-12  6.84541e-32  7.30217e-33
      low eigenvalue method done, cpu time[sec] = 0.08339, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.85e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.85e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.43824e-32  4.09289e-33  1.18861e-34   7.7952e-34  2.35146e-35  4.51374e-35   1.4533e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7008, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         7.56549e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49629, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             126.43      13.4252      2.64938      3.79247     0.348988      47.8556      2.46622
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076291, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006635, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083077, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45454e-13  4.92796e-32  4.60142e-33
      low eigenvalue method done, cpu time[sec] = 0.083452, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.93e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.09235e-34  6.21836e-34  1.49307e-35  2.37084e-34  5.37693e-36 -2.54845e-35  -3.6838e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7022, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.00873e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.718364, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47698, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.8224      10.0689      1.98704      2.84435     0.261741      35.8917      1.84967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076163, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006656, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082965, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.88605e-12  3.87661e-32  3.25524e-33
      low eigenvalue method done, cpu time[sec] = 0.083314, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-33         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.33812e-33  3.20571e-34  6.40394e-36 -1.73957e-35   4.3923e-37  4.49078e-36  1.13708e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6889, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.26092e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47537, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.8579      8.05511      1.58963      2.27548     0.209393      28.7134      1.47973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07624, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006643, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083015, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.63035e-12  3.20619e-32  2.46259e-33
      low eigenvalue method done, cpu time[sec] = 0.083367, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.64e-34         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.28714e-33  5.18421e-34  1.96199e-35  8.64416e-35  3.05978e-36  3.97466e-35 -2.83764e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6811, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.718718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48301, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.2149      6.71259      1.32469      1.89623     0.174494      23.9278      1.23311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076213, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082998, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.01123e-12  2.73901e-32  1.94709e-33
      low eigenvalue method done, cpu time[sec] = 0.083437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-34         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.64184e-33 -5.87279e-34 -1.99521e-35 -7.46132e-35 -3.07177e-36  -2.4236e-35  7.95451e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6904, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.76528e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.716564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5188, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.1842      5.75365      1.13545      1.62534     0.149566      20.5095      1.05695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006684, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082977, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.02603e-12  2.39374e-32  1.58871e-33
      low eigenvalue method done, cpu time[sec] = 0.083329, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.45e-34         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.33971e-34 -9.31665e-35  1.99089e-36  8.07794e-36  4.00128e-37  9.83315e-36 -3.12865e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7267, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.01746e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.71768, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5105, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.4112      5.03444     0.993518      1.42218      0.13087      17.9458     0.924834
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076138, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006632, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082894, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.80472e-13  2.12762e-32  1.32732e-33
      low eigenvalue method done, cpu time[sec] = 0.083246, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.74e-34         0         1
         *Z       ---       ---  5.38e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.35889e-33 -8.71091e-34 -2.91742e-35 -6.38043e-35 -3.68426e-36 -7.01762e-35 -1.11112e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7218, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 19175 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009451
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.493506
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.464747
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.416029
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.0438
         W1 Well: minimal relaxation eigenvalue = 0.0266088
         W1 Well: maximal relaxation eigenvalue = 1.23135
         W1 Well:       grid size = 583
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31545 1/cm
         B1 Barrier:        grid size = 221
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 218
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 486
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1427 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4646 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.81243, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31545 -23107 4.74e+05 1.11e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 3.74e+13
         B2    210 4.01e+12
         B3  -4662    8e+11
         B4  -6228 1.14e+12
         B5 -23107 1.05e+11
         B6   1428 1.44e+13
         B7   4647 7.61e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.43e+15  8.81e+15  1.76e+11  2.05e+09  5.56e-13  5.03e+18  7.69e+22
          R  2.26e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  1.13e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  5.69e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  4.88e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4   1.8e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  1.99e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6   1.3e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.77e+12  3.51e+12     7e+07  8.17e+05  2.21e-16     2e+15  3.06e+19
          R  5.66e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  2.85e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  1.43e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  1.22e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4  4.52e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  4.99e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  3.26e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.82316, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+08
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.689018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2028.74      217.942      43.4275      61.8223      5.72241      783.232      41.3177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072379, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00642, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07939, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.17081e-11  1.97829e-30  3.30269e-31
      low eigenvalue method done, cpu time[sec] = 0.079784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.83568e-31  6.73897e-32  2.41918e-33  2.30486e-32  5.95528e-34  3.05085e-34 -3.11078e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39095, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.688232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46348, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            676.246      72.6474      14.4758      20.6074      1.90747      261.077      13.7726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07901, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.27113e-11  9.42067e-31  1.38888e-31
      low eigenvalue method done, cpu time[sec] = 0.079449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.42e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.51e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.09604e-31  3.74923e-32  9.80466e-34  6.59552e-33  1.94075e-34  2.04256e-34 -3.02302e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5643, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.48132e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.688478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46632, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            405.748      43.5885       8.6855      12.3645      1.14448      156.646      8.26354
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006395, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07905, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.25222e-13  6.52045e-31  8.69505e-32
      low eigenvalue method done, cpu time[sec] = 0.079394, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.52e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.22058e-32  1.42887e-32  3.95579e-34  3.67059e-33  9.45383e-35 -2.75887e-35  3.93799e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5644, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.47385e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.689109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             289.82      31.1346      6.20393      8.83176     0.817487       111.89      5.90253
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006394, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.35086e-11  5.06801e-31  6.23206e-32
      low eigenvalue method done, cpu time[sec] = 0.079415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.07e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.90901e-32  1.33559e-32  3.27349e-34  1.70047e-33  5.73134e-35  5.78271e-35 -2.39915e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5657, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.46638e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.690971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46515, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            225.415      24.2158      4.82528      6.86914     0.635823      87.0258      4.59085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006381, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078992, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.22808e-12   4.1767e-31  4.79636e-32
      low eigenvalue method done, cpu time[sec] = 0.079331, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.67858e-32  1.65958e-32  4.74278e-34  2.79199e-33  8.85153e-35  2.80076e-34 -1.40734e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5668, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.690648, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4558, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            202.874      21.7942      4.34275      6.18223     0.572241      78.3232      4.13177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072216, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079136, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.38846e-12  3.84622e-31   4.2832e-32
      low eigenvalue method done, cpu time[sec] = 0.07949, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.85e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-32         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.9234e-32  7.61365e-33   2.1879e-34  1.45056e-33  4.41877e-35  1.72665e-34  3.52376e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5644, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         7.44396e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.692177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            135.249      14.5295      2.89517      4.12149     0.381494      52.2155      2.75451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006385, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.52665e-12  2.78013e-31  2.71936e-32
      low eigenvalue method done, cpu time[sec] = 0.079379, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.4e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.81864e-32   5.2234e-33  1.42354e-34  9.32352e-34  2.83945e-35  6.01006e-35  4.10882e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.92528e+09
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.691067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45439, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            101.437      10.8971      2.17138      3.09111      0.28612      39.1616      2.06588
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072089, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078975, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.24672e-12  2.19287e-31  1.93431e-32
      low eigenvalue method done, cpu time[sec] = 0.079315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.83e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.6148e-32  3.79459e-33  1.11537e-34  6.32519e-34  2.01087e-35  1.04198e-34  1.52699e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.24066e+10
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.688729, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48088, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.1495      8.71769       1.7371      2.47289     0.228896      31.3293      1.65271
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072205, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07911, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.06444e-13  1.81718e-31  1.46959e-32
      low eigenvalue method done, cpu time[sec] = 0.079445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.74625e-32  1.76956e-33  7.59241e-35  1.30838e-34  8.79826e-36  1.35363e-34 -4.31711e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5829, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+10
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.691646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.6246      7.26474      1.44758      2.06074     0.190747      26.1077      1.37726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072101, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.9749e-13  1.55475e-31  1.16606e-32
      low eigenvalue method done, cpu time[sec] = 0.07934, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.18047e-32   4.3089e-33  1.28597e-34    6.363e-34  2.19826e-35  7.71052e-35  2.07644e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.73692e+10
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.690899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             57.964      6.22692      1.24079      1.76635     0.163497      22.3781      1.18051
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73317e-12  1.36042e-31  9.54298e-33
      low eigenvalue method done, cpu time[sec] = 0.079383, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.54543e-32  4.01827e-33   1.0982e-34  6.14759e-34    2.021e-35   9.8004e-35  1.09714e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.98506e+10
      global relaxation matrix dimension = 583
      setting global matrices ... done, cpu time[sec] = 0.692062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46521, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.7185      5.44856      1.08569      1.54556      0.14306      19.5808      1.03294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072146, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079058, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74442e-12  1.21041e-31  7.99364e-33
      low eigenvalue method done, cpu time[sec] = 0.079409, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.21e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.22e-33         0         1
         *Z       ---       ---  2.05e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.78626e-33 -8.60127e-34 -1.65568e-35 -1.80577e-34 -4.58486e-36  1.82544e-35 -3.07842e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5691, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 19453 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010306
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.511044
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.461403
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.67931
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.98607
         W1 Well: minimal relaxation eigenvalue = 0.0262641
         W1 Well: maximal relaxation eigenvalue = 1.74179
         W1 Well:       grid size = 580
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 222
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -82 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6242 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 484
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.94956, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23139 4.63e+05 1.17e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -82 4.15e+13
         B2    182 4.51e+12
         B3  -4658 9.07e+11
         B4  -6242 1.28e+12
         B5 -23139  1.2e+11
         B6   1501 1.63e+13
         B7   4670 8.81e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.19e+14  1.61e+15  4.15e+10  5.27e+08  3.71e-13  8.64e+17  1.13e+22
          R  1.22e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  6.19e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  2.41e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3   1.9e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4   2.7e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  1.16e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  8.86e-23  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.28e+11  6.46e+11  1.66e+07  2.11e+05  1.48e-16  3.46e+14  4.51e+18
          R  3.05e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  1.55e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  6.03e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  4.74e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  6.74e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  2.89e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  2.21e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.96033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+08
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68817, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43059, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2167.46      235.566      47.3859      67.0938      6.24614      853.171      46.0445
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071353, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006309, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077782, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.7281e-12  1.00865e-29  1.73748e-30
      low eigenvalue method done, cpu time[sec] = 0.078116, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-29  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-31  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.23103e-30  4.85055e-31  1.45617e-32  1.28476e-31  3.41983e-33  6.82695e-34  7.02234e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.53746, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.690225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.41108, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            722.488      78.5221      15.7953      22.3646      2.08205       284.39      15.3482
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006315, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077625, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89342e-11  4.87226e-30  7.42087e-31
      low eigenvalue method done, cpu time[sec] = 0.077955, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.87e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-31  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.18851e-31  1.72082e-31   4.8246e-33  3.56618e-32  1.01804e-33  8.29174e-34 -6.36197e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5162, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.44242e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.690112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4006, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            433.493      47.1132      9.47717      13.4188      1.24923      170.634       9.2089
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071196, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006291, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.73457e-11  3.39254e-30  4.68345e-31
      low eigenvalue method done, cpu time[sec] = 0.077927, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.39e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.73103e-31  7.94926e-32  2.21215e-33  1.38792e-32  4.22655e-34  7.07236e-34  2.09058e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.51, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.41939e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.686472, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43532, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            309.638      33.6523      6.76941      9.58483     0.892306      121.882      6.57779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071205, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006291, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077609, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.99551e-12  2.64665e-30  3.37567e-31
      low eigenvalue method done, cpu time[sec] = 0.077937, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.24207e-31  5.85735e-32  1.61089e-33  8.90475e-33  2.86873e-34  9.49696e-34 -5.96253e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5373, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.39636e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.688757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44366, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            240.829       26.174       5.2651      7.45487     0.694016      94.7968      5.11606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071059, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006309, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00318e-11  2.18697e-30  2.60926e-31
      low eigenvalue method done, cpu time[sec] = 0.077812, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.74e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.61399e-31  6.77633e-32  1.92108e-33  1.20339e-32  3.70183e-34  7.45635e-34   1.1199e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5488, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.689193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44178, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            216.746      23.5566      4.73859      6.70938     0.624614      85.3171      4.60445
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006289, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077549, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.93097e-11  2.01609e-30  2.33441e-31
      low eigenvalue method done, cpu time[sec] = 0.077955, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.3e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.33686e-31  3.46281e-32   1.0387e-33  6.87273e-33  2.06334e-34  3.33211e-34  1.45247e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         7.32726e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.689803, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            144.498      15.7044      3.15906      4.47292     0.416409      56.8781      3.06963
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071074, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006311, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077507, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.60434e-12  1.46307e-30  1.49291e-31
      low eigenvalue method done, cpu time[sec] = 0.07784, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.84e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.1174e-31  2.57342e-32  7.75993e-34  4.63374e-33  1.44914e-34  5.23589e-34 -1.56669e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5454, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.76968e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.687809, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.44767, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            108.373      11.7783      2.36929      3.35469     0.312307      42.6586      2.30222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071114, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006309, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.71187e-12  1.15705e-30  1.06756e-31
      low eigenvalue method done, cpu time[sec] = 0.077868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.62161e-32  2.01963e-32  5.53869e-34  3.27985e-33  1.02849e-34  1.44649e-34  2.42906e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.22121e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.687783, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.6985      9.42265      1.89543      2.68375     0.249846      34.1269      1.84178
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071145, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006306, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.27098e-12  9.60666e-31  8.14471e-32
      low eigenvalue method done, cpu time[sec] = 0.077889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.61e-31  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.52e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.06265e-32  9.34033e-33  2.79629e-34  1.78231e-33  5.50102e-35  4.75153e-35  2.96399e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.686352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45634, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.2488      7.85221      1.57953      2.23646     0.208205       28.439      1.53482
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071135, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006308, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077556, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.4516e-12   8.2316e-31  6.48477e-32
      low eigenvalue method done, cpu time[sec] = 0.077886, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.23e-31  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.06142e-31  2.32071e-32  6.74806e-34  3.33948e-33  1.14831e-34  5.14972e-34 -3.29961e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.70969e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.685628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.43521, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.9275      6.73046      1.35388      1.91697     0.178461      24.3763      1.31556
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071246, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006292, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077647, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10883e-12  7.21147e-31  5.32263e-32
      low eigenvalue method done, cpu time[sec] = 0.077973, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.21e-31  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.24198e-32  1.31493e-32  3.85043e-34  1.87073e-33  6.55998e-35   3.6484e-34 -7.75738e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5378, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.95394e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.676734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.42085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54.1866      5.88915      1.18465      1.67735     0.156154      21.3293      1.15111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071195, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006299, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.04577e-12  6.42272e-31  4.46982e-32
      low eigenvalue method done, cpu time[sec] = 0.077933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.42e-31  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-32  4.44e-16         1
         *Z       ---       ---  8.14e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.09295e-32  9.97102e-33  3.18204e-34  1.72645e-33  5.70822e-35  2.43086e-34  4.80487e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5099, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 19731 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008582
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.477994
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.446844
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.418591
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.86104
         W1 Well: minimal relaxation eigenvalue = 0.0259349
         W1 Well: maximal relaxation eigenvalue = 1.35415
         W1 Well:       grid size = 570
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 220
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -69 1/cm
         B2 Barrier:        grid size = 217
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 271
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 288
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23109 1/cm => truncating
         B5 Barrier:        grid size = 476
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23109 1/cm
         B6 Barrier:        grid size = 203
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1461 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.59537, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23109 4.74e+05 1.24e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -69  4.6e+13
         B2    201 5.06e+12
         B3  -4658 1.03e+12
         B4  -6189 1.45e+12
         B5 -23109 1.36e+11
         B6   1462 1.85e+13
         B7   4701 1.02e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.58e+14  3.09e+14  1.01e+10   1.4e+08  2.46e-13  1.55e+17  1.74e+21
          R  6.33e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  3.24e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  9.89e-11  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  7.16e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  4.06e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  6.43e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  5.74e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.48e+10  1.27e+11  4.15e+06  5.72e+04  1.01e-16  6.37e+13  7.14e+17
          R  1.54e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1   7.9e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  2.41e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  1.75e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  9.92e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  1.57e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6   1.4e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.60658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.659721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2312.88      254.296      51.6306      72.7182      6.80801      927.862      51.2016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074765, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.42066e-10  4.88232e-29  8.66011e-30
      low eigenvalue method done, cpu time[sec] = 0.075101, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.88e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-30 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.85696e-30  2.31794e-30  6.92714e-32  5.90758e-31  1.58459e-32  4.64565e-33  2.65397e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.659624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19126, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             770.96      84.7653      17.2102      24.2394      2.26934      309.287      17.0672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067769, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006044, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074339, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.29166e-11  2.39108e-29  3.75533e-30
      low eigenvalue method done, cpu time[sec] = 0.074689, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.63455e-30  8.50569e-31  2.38975e-32  1.73234e-31  4.96495e-33  3.78806e-33 -1.47089e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1901, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.40503e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.21214, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            462.576      50.8592      10.3261      14.5436       1.3616      185.572      10.2403
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00606, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.26491e-13  1.67461e-29  2.38886e-30
      low eigenvalue method done, cpu time[sec] = 0.074665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.34e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.81686e-30   5.3675e-31  1.45861e-32  9.43592e-32  2.84376e-33  3.39899e-33  1.19187e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.211, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.36704e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            330.411       36.328       7.3758      10.3883     0.972573      132.552      7.31452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067796, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00605, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074369, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.41815e-11  1.31117e-29  1.73128e-30
      low eigenvalue method done, cpu time[sec] = 0.074688, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.4e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16    1.306e-30  3.36529e-31  9.54908e-33  5.88183e-32  1.82203e-33  4.27577e-33  1.18415e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.32905e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19335, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            256.987      28.2551      5.73673       8.0798     0.756446      103.096      5.68907
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067755, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006059, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074336, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.01342e-11  1.08626e-29   1.3439e-30
      low eigenvalue method done, cpu time[sec] = 0.07467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.82e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.13578e-30  2.91909e-31  8.13675e-33  4.89375e-32  1.53534e-33  3.48088e-33 -1.35708e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1973, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.22632, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            231.288      25.4296      5.16306      7.27182     0.680801      92.7862      5.12016
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067873, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006045, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074441, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.75553e-13  1.00245e-29  1.20452e-30
      low eigenvalue method done, cpu time[sec] = 0.074771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.61429e-31  2.49002e-31   6.9866e-33  4.32679e-32   1.3374e-33   2.8997e-33  1.52728e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2282, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.21509e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.23191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.192      16.9531      3.44204      4.84788     0.453867      61.8575      3.41344
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067674, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006047, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074247, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.66885e-12  7.30316e-30  7.75836e-31
      low eigenvalue method done, cpu time[sec] = 0.074574, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.3e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.32371e-31  1.39751e-31   4.0776e-33  2.12862e-32  7.16192e-34  2.93899e-33  4.91937e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2363, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.62012e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660279, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.23221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            115.644      12.7148      2.58153      3.63591     0.340401      46.3931      2.56008
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067712, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074265, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.62941e-12  5.79067e-30  5.57689e-31
      low eigenvalue method done, cpu time[sec] = 0.074585, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.50305e-31  1.03209e-31  3.02355e-33  1.70197e-32  5.51156e-34  1.85593e-33  9.24406e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2329, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.20251e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.659061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.28, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.5152      10.1718      2.06522      2.90873      0.27232      37.1145      2.04806
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067709, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006028, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074283, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.46683e-12  4.81704e-30  4.27226e-31
      low eigenvalue method done, cpu time[sec] = 0.074687, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   3.3677e-31  6.94404e-32  2.07374e-33  1.06999e-32  3.62498e-34  1.93253e-33  3.26858e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2792, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.659814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26513, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             77.096      8.47653      1.72102      2.42394     0.226934      30.9287      1.70672
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31874e-12  4.13372e-30   3.4131e-31
      low eigenvalue method done, cpu time[sec] = 0.074593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-31 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.93676e-31  8.11115e-32  2.51057e-33  1.35053e-32  4.47731e-34  2.44028e-33  4.04072e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2667, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.68352e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.661093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.24893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66.0823      7.26559      1.47516      2.07766     0.194515      26.5103       1.4629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067757, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006053, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50629e-12  3.62582e-30  2.80953e-31
      low eigenvalue method done, cpu time[sec] = 0.074654, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.4e-32 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.06575e-31  4.75736e-32  1.36271e-33   7.5136e-33  2.45748e-34  9.74916e-34 -3.62967e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.92402e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.660083, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.2485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             57.822      6.35739      1.29076      1.81796       0.1702      23.1965      1.28004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006036, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074351, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.36653e-12  3.23251e-30  2.36531e-31
      low eigenvalue method done, cpu time[sec] = 0.074667, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.23e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.38e-32 -4.44e-16         1
         *Z       ---       ---  3.32e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.18976e-31  4.57667e-32  1.39415e-33  7.60749e-33  2.51497e-34  1.18195e-33  1.48634e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2438, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 20009 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009507
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.487732
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.432063
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.59185
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.66829
         W1 Well: minimal relaxation eigenvalue = 0.0256318
         W1 Well: maximal relaxation eigenvalue = 2.57482
         W1 Well:       grid size = 561
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 218
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 469
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23138 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1425 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.49097, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23138 4.63e+05 1.31e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46  5.1e+13
         B2    137 5.67e+12
         B3  -4646 1.16e+12
         B4  -6210 1.63e+12
         B5 -23138 1.53e+11
         B6   1426 2.09e+13
         B7   4646 1.18e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.22e+13  6.25e+13  2.59e+09  3.86e+07  1.65e-13  2.96e+16  2.87e+20
          R   3.1e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1   1.6e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  3.87e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  2.59e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  6.06e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  3.38e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  3.49e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.36e+10  2.63e+10  1.09e+06  1.63e+04  6.95e-17  1.25e+13  1.21e+17
          R  7.37e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1   3.8e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  9.18e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  6.15e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  1.44e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  8.02e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  8.28e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
   MasterEquation::set:  done, cpu time[sec] = 5.50228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+08
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640613, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34437, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2465.1      274.182       56.177      78.7126      7.41007      1007.52      56.8185
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064947, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005768, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070818, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.61887e-10  2.24025e-28  4.08419e-29
      low eigenvalue method done, cpu time[sec] = 0.071138, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.74e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.63671e-29  1.02992e-29  3.13184e-31   2.7248e-30  7.26916e-32  2.32955e-32  1.13814e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.30163, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              821.7      91.3941      18.7257      26.2375      2.47002      335.841      18.9395
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064799, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005768, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070674, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.11028e-11   1.1117e-28  1.79705e-29
      low eigenvalue method done, cpu time[sec] = 0.070979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.25179e-29  3.90437e-30  1.09262e-31  7.85685e-31   2.2699e-32  2.23227e-32  4.96921e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.36906e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.639886, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.13812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             493.02      54.8365      11.2354      15.7425      1.48201      201.504      11.3637
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064786, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005769, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.65255e-12  7.82953e-29   1.1519e-29
      low eigenvalue method done, cpu time[sec] = 0.070967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.83e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.34726e-30  2.40168e-30  6.69503e-32  4.47665e-31  1.33451e-32  1.77806e-32 -7.40942e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0941, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.31668e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.641159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17205, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            352.157      39.1689      8.02528      11.2447      1.05858      143.932      8.11692
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005761, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   6.9188e-12  6.15181e-29  8.39277e-30
      low eigenvalue method done, cpu time[sec] = 0.071058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.15e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   5.7934e-30  1.57616e-30  4.40929e-32  2.80857e-31  8.55949e-33  1.60419e-32  3.95211e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.26431e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16609, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              273.9      30.4647      6.24188      8.74585     0.823341      111.947      6.31316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064886, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070765, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.52326e-12  5.10942e-29  6.54174e-30
      low eigenvalue method done, cpu time[sec] = 0.071155, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.11e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.66876e-30  1.23519e-30  3.48979e-32  2.18039e-31  6.70196e-33  1.32031e-32 -2.72546e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1217, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.641212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.20957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             246.51      27.4182       5.6177      7.87126     0.741007      100.752      5.68185
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064817, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005765, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070689, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.3791e-13  4.72006e-29  5.87358e-30
      low eigenvalue method done, cpu time[sec] = 0.071001, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-30  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.44071e-30  1.08027e-30  3.09428e-32  1.84816e-31  5.82147e-33  1.54892e-32 -2.17874e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.10718e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             164.34      18.2788      3.74513      5.24751     0.494005      67.1681       3.7879
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064879, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005748, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070742, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05771e-11  3.45188e-29  3.80957e-30
      low eigenvalue method done, cpu time[sec] = 0.071097, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.85e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.79265e-30  6.54514e-31  1.87531e-32  1.05695e-31  3.42174e-33  1.07017e-32 -1.07202e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1378, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.47624e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.639227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17913, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.255      13.7091      2.80885      3.93563     0.370504      50.3761      2.84092
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005781, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.80519e-12  2.74399e-29  2.75235e-30
      low eigenvalue method done, cpu time[sec] = 0.071076, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.15011e-30  4.59298e-31  1.38343e-32  7.42196e-32    2.466e-33  1.15405e-32 -1.17512e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.77693, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.18453e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.394221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98056, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             98.604      10.9673      2.24708      3.14851     0.296403      40.3009      2.27274
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064944, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005749, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070813, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.81371e-12  2.28694e-29  2.11695e-30
      low eigenvalue method done, cpu time[sec] = 0.071123, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.29e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.86e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.84599e-30  4.03086e-31  1.17446e-32  6.16295e-32  2.06773e-33  9.11076e-33  1.09677e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.68332, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.641496, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              82.17      9.13941      1.87257      2.62375     0.247002      33.5841      1.89395
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064939, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005787, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070841, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.76057e-12  1.96543e-29  1.69684e-30
      low eigenvalue method done, cpu time[sec] = 0.07116, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.04e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.62702e-30  3.37788e-31  1.02859e-32  5.48137e-32  1.82684e-33  8.73241e-33  3.02051e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.65834e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.638253, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.4315      7.83378      1.60506      2.24893     0.211716      28.7863      1.62338
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064837, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005764, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.6802e-12  1.72601e-29  1.40073e-30
      low eigenvalue method done, cpu time[sec] = 0.071012, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.73e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.07745e-30   2.1176e-31  6.49246e-33  3.17434e-32  1.10963e-33  7.16661e-33  2.59182e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1258, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.89525e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.640259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15064, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.6275      6.85456      1.40442      1.96782     0.185252       25.188      1.42046
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07077, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.04758e-13  1.54033e-29  1.18216e-30
      low eigenvalue method done, cpu time[sec] = 0.071089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.95e-31  2.22e-16         1
         *Z       ---       ---   1.4e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  7.59157e-31  1.69506e-31  5.11811e-33  2.94255e-32  9.42823e-34  4.01133e-33 -1.43349e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1042, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 20287 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008792
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.467784
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.425992
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.39702
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.73555
         W1 Well: minimal relaxation eigenvalue = 0.0253385
         W1 Well: maximal relaxation eigenvalue = 2.66407
         W1 Well:       grid size = 558
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31606 1/cm
         B1 Barrier:        grid size = 219
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23237 1/cm => truncating
         B5 Barrier:        grid size = 468
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23236 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4663 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.4142, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31606 -23236 4.31e+05 1.38e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 5.65e+13
         B2    200 6.36e+12
         B3  -4637 1.31e+12
         B4  -6217 1.83e+12
         B5 -23236 1.73e+11
         B6   1501 2.35e+13
         B7   4664 1.35e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.04e+12  1.35e+13  7.02e+08  1.13e+07  1.14e-13  6.06e+15  5.09e+19
          R  1.42e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  7.38e-14      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  1.42e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  8.83e-08  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4   8.8e+12  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  1.65e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  1.96e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.01e+09  5.78e+09     3e+05  4.84e+03  4.85e-17  2.59e+12  2.17e+16
          R  3.33e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  1.73e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  3.33e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  0.000207  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  2.06e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  3.87e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6   4.6e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
   MasterEquation::set:  done, cpu time[sec] = 4.42568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+08
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.633003, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25481, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2624.33      295.276      61.0407      85.0946      8.05445      1092.37       62.925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06442, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005765, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070698, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12904e-10  9.71361e-28   1.8156e-28
      low eigenvalue method done, cpu time[sec] = 0.0711, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.71e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-29         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.22244e-28  4.72757e-29   1.4241e-30  1.22531e-29  3.28319e-31  1.14742e-31  3.57191e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16321, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.63235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            874.778      98.4254      20.3469      28.3649      2.68482      364.125       20.975
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005721, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070259, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.92225e-11  4.88222e-28   8.1033e-29
      low eigenvalue method done, cpu time[sec] = 0.070566, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.88e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-29         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   5.7642e-29  1.82265e-29  5.08926e-31  3.64745e-30  1.05369e-31   1.0159e-31  4.00881e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.98745, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.33443e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631902, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            524.867      59.0553      12.2081      17.0189      1.61089      218.475       12.585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064095, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.64903e-11  3.45727e-28  5.23298e-29
      low eigenvalue method done, cpu time[sec] = 0.070626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.76e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.85231e-29  1.09661e-29  3.06695e-31  2.03451e-30  6.08695e-32  8.89722e-32 -4.84422e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.97628, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          3.2682e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.633434, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.05613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            374.905      42.1823      8.72011      12.1564      1.15064      156.053      8.98928
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063987, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04394e-11  2.72577e-28  3.83254e-29
      low eigenvalue method done, cpu time[sec] = 0.070503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.91e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.81924e-29  7.49277e-30  2.11142e-31  1.33502e-30  4.08629e-32  7.96119e-32  1.08109e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.96836, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.20197e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.633595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.08058, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            291.593      32.8085       6.7823      9.45496     0.894939      121.375      6.99166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064055, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005721, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070287, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.66672e-11  2.26949e-28  2.99926e-29
      low eigenvalue method done, cpu time[sec] = 0.070593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.75e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.22812e-29  5.69533e-30  1.61249e-31  9.82228e-31   3.0592e-32  7.09505e-32  1.44986e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.99162, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.63385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            262.433      29.5276      6.10407      8.50946     0.805445      109.237       6.2925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005709, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070211, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.23759e-12  2.09867e-28  2.69755e-29
      low eigenvalue method done, cpu time[sec] = 0.070518, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.07015e-29  5.10801e-30  1.45144e-31  8.59141e-31  2.71479e-32  6.98731e-32  2.07614e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.9741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.00328e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631946, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07005, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            174.956      19.6851      4.06938      5.67298     0.536963      72.8249        4.195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064051, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005705, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07026, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.48261e-12  1.54058e-28  1.76149e-29
      low eigenvalue method done, cpu time[sec] = 0.070569, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.3673e-29  3.12004e-30  9.17266e-32  5.24112e-31  1.68649e-32   6.0543e-32  6.17529e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.98027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          9.3377e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.634046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.04779, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            131.217      14.7638      3.05204      4.25473     0.402723      54.6187      3.14625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063968, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070196, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07237e-12  1.22774e-28  1.27896e-29
      low eigenvalue method done, cpu time[sec] = 0.070516, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.86052e-30  2.14646e-30  6.39914e-32  3.48804e-31  1.14862e-32  4.87912e-32 -1.38468e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.95677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.16721e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.633169, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.04382, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.973      11.8111      2.44163      3.40379     0.322178       43.695        2.517
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064136, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005711, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070346, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.64003e-12  1.02516e-28  9.87562e-30
      low eigenvalue method done, cpu time[sec] = 0.070662, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.62006e-30  1.62141e-30  4.85922e-32  2.58881e-31  8.62617e-33    4.113e-32  7.42103e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.94904, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.634051, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.01912, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.4778      9.84254      2.03469      2.83649     0.268482      36.4125       2.0975
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06401, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00571, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070217, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62503e-12  8.82327e-29  7.94146e-30
      low eigenvalue method done, cpu time[sec] = 0.070531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.82e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.84322e-30  1.20669e-30  3.67786e-32  1.94682e-31  6.51987e-33  3.32925e-32  3.33668e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.93393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.6341e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.63298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.08668, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.9809      8.43646      1.74402      2.43128     0.230127      31.2107      1.79786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064078, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005721, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070306, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45396e-12  7.75776e-29  6.57371e-30
      low eigenvalue method done, cpu time[sec] = 0.070618, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.76e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.33269e-30  1.07064e-30  3.30436e-32  1.70553e-31  5.77776e-33  3.11752e-32 -4.64187e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.99234, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.86754e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65.6083      7.38191      1.52602      2.12737     0.201361      27.3093      1.57312
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063996, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070221, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26812e-12  6.93014e-29  5.56131e-30
      low eigenvalue method done, cpu time[sec] = 0.070548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.93e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-30         0         1
         *Z       ---       ---  6.11e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.18031e-30  8.21927e-31   2.5615e-32   1.3064e-31  4.46251e-33  2.62652e-32  7.34152e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0021, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 20565 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009175
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.473754
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.413322
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.58623
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.54099
         W1 Well: minimal relaxation eigenvalue = 0.0250165
         W1 Well: maximal relaxation eigenvalue = 1.62476
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31590 1/cm
         B1 Barrier:        grid size = 217
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 139 1/cm
         B3 Barrier:        grid size = 265
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4610 1/cm
         B4 Barrier:        grid size = 282
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 460
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23134 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.32318, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31590 -23134 4.65e+05 1.46e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 6.25e+13
         B2    140 7.11e+12
         B3  -4610 1.48e+12
         B4  -6225 2.06e+12
         B5 -23134 1.96e+11
         B6   1470 2.65e+13
         B7   4700 1.56e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.62e+12   3.1e+12     2e+08  3.47e+06  7.93e-14  1.31e+15  9.61e+18
          R  6.17e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  3.23e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  5.01e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  2.88e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  1.26e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  7.64e-16   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  1.04e-19  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.02e+08  1.34e+09  8.64e+04   1.5e+03  3.43e-17  5.67e+11  4.16e+15
          R  1.43e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  7.46e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  1.16e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  0.000666  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  2.91e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.76e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  2.41e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
   MasterEquation::set:  done, cpu time[sec] = 5.33548, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611309, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32254, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2790.77      317.623      66.2382      91.8823      8.74334      1182.64      69.5526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061212, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00549, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066808, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.70418e-11   3.9628e-27  7.57098e-28
      low eigenvalue method done, cpu time[sec] = 0.067129, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.91e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.07146e-28  1.94797e-28  5.84907e-30  4.99809e-29  1.34251e-30  4.82719e-31  7.33173e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.96219, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            930.258      105.874      22.0794      30.6274      2.91445      394.214      23.1842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061046, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005448, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07011e-11   2.0162e-27  3.42554e-28
      low eigenvalue method done, cpu time[sec] = 0.066905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.04e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.49877e-28  7.75278e-29  2.16584e-30  1.53317e-29  4.45472e-31  4.61713e-31  1.83841e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.82677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.30105e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.96241, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            558.155      63.5246      13.2476      18.3765      1.74867      236.528      13.9105
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00546, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.72992e-11  1.43525e-27  2.22813e-28
      low eigenvalue method done, cpu time[sec] = 0.066968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.62983e-28  4.57784e-29  1.27992e-30    8.411e-30  2.52776e-31  3.97749e-31  3.16815e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.82773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.22147e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            398.682      45.3747       9.4626       13.126      1.24905      168.949      9.93608
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061084, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066632, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.75646e-11  1.13533e-27  1.64007e-28
      low eigenvalue method done, cpu time[sec] = 0.066933, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.25523e-28  3.29372e-29  9.25765e-31  5.73764e-30   1.7724e-31  3.62819e-31 -4.88251e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6412, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.14189e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.00664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            310.086      35.2915       7.3598      10.2091     0.971482      131.405      7.72806
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061125, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.58623e-12   9.4755e-28   1.2885e-28
      low eigenvalue method done, cpu time[sec] = 0.066972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.48e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.37e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.85737e-29  2.47023e-29  7.02234e-31   4.2378e-30  1.32673e-31  3.29624e-31  1.62761e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.86589, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            279.077      31.7623      6.62382      9.18823     0.874334      118.264      6.95526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061326, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066887, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.81322e-11  8.77093e-28  1.16081e-28
      low eigenvalue method done, cpu time[sec] = 0.067191, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.77e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.02045e-29  2.20826e-29  6.31729e-31  3.73759e-30  1.18146e-31  3.30092e-31  3.54479e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85258, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         6.90316e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.052      21.1749      4.41588      6.12549     0.582889      78.8427      4.63684
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061099, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005461, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066661, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.86702e-12  6.46217e-28  7.63031e-29
      low eigenvalue method done, cpu time[sec] = 0.066968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.46e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    5.965e-29   1.3598e-29  3.97605e-31  2.24246e-30   7.2599e-32  2.58558e-31  4.61939e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.85417, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.20421e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610561, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9779, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.539      15.8812      3.31191      4.59411     0.437167      59.1321      3.47763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061082, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005431, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066614, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.13674e-12   5.1627e-28  5.56702e-29
      low eigenvalue method done, cpu time[sec] = 0.066922, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.16e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.42601e-29   9.5925e-30  2.85496e-31  1.54475e-30  5.10929e-32  2.24944e-31  4.28991e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.83917, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.15053e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.612443, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.631      12.7049      2.64953      3.67529     0.349734      47.3056       2.7821
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061089, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066635, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.68192e-12  4.31878e-28  4.31514e-29
      low eigenvalue method done, cpu time[sec] = 0.066933, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.32e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-29         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.3861e-29  7.02653e-30  2.12838e-31  1.11875e-30  3.75592e-32  1.87875e-31  5.73295e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8387, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.533242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.37946, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            93.0258      10.5874      2.20794      3.06274     0.291445      39.4214      2.31842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.14265e-13  3.72246e-28  3.48106e-29
      low eigenvalue method done, cpu time[sec] = 0.067012, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.31e-30         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.80088e-29  5.64801e-30  1.72968e-31  8.93162e-31  3.02854e-32  1.65587e-31  3.43259e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.61074e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.608581, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.14393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            79.7364      9.07494      1.89252      2.62521      0.24981      33.7897      1.98722
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061142, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066691, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.30428e-12  3.27682e-28  2.88934e-29
      low eigenvalue method done, cpu time[sec] = 0.066998, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.2e-30         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.30012e-29  4.50202e-30  1.40123e-31  7.09205e-31  2.43136e-32  1.48162e-31  3.05464e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.84084e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.99338, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.7694      7.94058      1.65596      2.29706     0.218584       29.566      1.73881
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005459, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066756, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.89793e-13  2.93016e-28  2.45015e-29
      low eigenvalue method done, cpu time[sec] = 0.067083, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-30         0         1
         *Z       ---       ---  2.75e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95439e-29  3.74841e-30   1.1789e-31  5.89037e-31  2.03365e-32   1.3288e-31  1.88033e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8494, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 20843 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009061
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.438424
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.400125
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.305419
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.5039
         W1 Well: minimal relaxation eigenvalue = 0.0247393
         W1 Well: maximal relaxation eigenvalue = 1.22623
         W1 Well:       grid size = 540
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31537 1/cm
         B1 Barrier:        grid size = 215
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 213
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4668 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6220 1/cm
         B5 Barrier: nonpositive number of states at -23195 1/cm => truncating
         B5 Barrier:        grid size = 454
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23195 1/cm
         B6 Barrier:        grid size = 200
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.03238, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31537 -23195 4.45e+05 1.54e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  6.9e+13
         B2    182 7.95e+12
         B3  -4668 1.67e+12
         B4  -6220 2.31e+12
         B5 -23195 2.21e+11
         B6   1444 2.98e+13
         B7   4645 1.79e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.88e+11  7.36e+11  5.85e+07  1.09e+06  5.53e-14  2.94e+14  1.89e+18
          R  2.58e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  1.36e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  1.71e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3  9.16e-07  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  1.81e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5   3.4e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  5.28e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.72e+08  3.27e+08   2.6e+04       485  2.45e-17  1.31e+11  8.41e+14
          R  5.81e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  3.06e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  3.85e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3   0.00206  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  4.07e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  7.65e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  1.19e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 4.04386, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+08
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.590238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2964.54      341.286      71.7858      99.0942      9.47901      1278.56      76.7338
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05862, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005311, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064426, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.13878e-10  1.55716e-26  3.04072e-27
      low eigenvalue method done, cpu time[sec] = 0.064746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-26  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-28  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.02759e-27  7.71653e-28  2.30817e-29  1.95901e-28  5.27738e-30  2.03555e-30  2.78163e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.01425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.588136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.77956, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            988.179      113.762      23.9286      33.0314      3.15967      426.185      25.5779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005276, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064157, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.59751e-11  8.01762e-27  1.39453e-27
      low eigenvalue method done, cpu time[sec] = 0.064469, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.02e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.98e-28  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.00554e-27  3.09341e-28  8.64535e-30  6.07993e-29  1.77133e-30  1.91813e-30  1.34208e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37979, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.26887e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.589693, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.77724, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            592.908      68.2571      14.3572      19.8188       1.8958      255.711      15.3468
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058443, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005279, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.09324e-11   5.7369e-27  9.13512e-28
      low eigenvalue method done, cpu time[sec] = 0.064483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.74e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-28  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.79148e-28  1.89043e-28  5.29721e-30  3.45717e-29  1.04229e-30  1.72418e-30  1.12838e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.54837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.17641e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.591291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81027, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            423.505      48.7551      10.2551      14.1563      1.35414      182.651       10.962
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058481, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005277, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.86234e-11   4.5529e-27  6.75741e-28
      low eigenvalue method done, cpu time[sec] = 0.064522, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-28  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.15985e-28  1.34297e-28  3.79281e-30  2.34955e-29  7.26123e-31  1.58205e-30  7.13818e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.58263, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.08396e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.592457, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80093, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            329.393      37.9206       7.9762      11.0105      1.05322      142.062      8.52598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058388, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005279, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064128, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.81695e-13  3.80889e-27  5.32921e-28
      low eigenvalue method done, cpu time[sec] = 0.064419, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.42e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.08137e-28  1.01071e-28  2.88195e-30  1.71926e-29  5.41165e-31  1.42514e-30  1.00044e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57482, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.590026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.77756, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            296.454      34.1286      7.17858      9.90942     0.947901      127.856      7.67338
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058456, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005267, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064198, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03321e-11  3.52911e-27  4.80899e-28
      low eigenvalue method done, cpu time[sec] = 0.06449, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.53e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.73e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.69188e-28  8.94481e-29  2.56814e-30  1.51199e-29  4.79045e-31  1.36662e-30  7.70907e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.5514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1          6.8066e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.591317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            197.636      22.7524      4.78572      6.60628     0.631934       85.237      5.11559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058431, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005274, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064171, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.1574e-12  2.60963e-27  3.18161e-28
      low eigenvalue method done, cpu time[sec] = 0.064465, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.46e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.46463e-28  5.56482e-29  1.63023e-30  9.10013e-30  2.96184e-31  1.09589e-30  1.28676e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57416, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.07547e+09
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.59062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80324, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            148.227      17.0643      3.58929      4.95471     0.473951      63.9278      3.83669
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058407, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005269, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064145, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.11481e-11  2.09001e-27  2.33234e-28
      low eigenvalue method done, cpu time[sec] = 0.064427, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.17e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.82236e-28   3.8891e-29  1.16447e-30   6.2673e-30  2.07934e-31  9.38462e-31  1.36319e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57226, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.13443e+10
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.591722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80798, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            118.582      13.6514      2.87143      3.96377      0.37916      51.1422      3.06935
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058436, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.04558e-12  1.75158e-27  1.81467e-28
      low eigenvalue method done, cpu time[sec] = 0.064483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.33e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.44297e-28  2.96336e-29  9.00361e-31  4.69901e-30  1.58426e-31  8.20038e-31  8.87096e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57554, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+10
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.589711, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78935, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.8179      11.3762      2.39286      3.30314     0.315967      42.6185      2.55779
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058422, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005287, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064175, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.44675e-12  1.51193e-27  1.46848e-28
      low eigenvalue method done, cpu time[sec] = 0.064458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.16813e-28  2.32461e-29  7.16108e-31   3.6501e-30  1.24619e-31  7.10912e-31  7.30135e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55249, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.58821e+10
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.590832, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.79227, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            84.7011      9.75102      2.05102      2.83126     0.270829      36.5302       2.1924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064134, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.0749e-12   1.3325e-27  1.22212e-28
      low eigenvalue method done, cpu time[sec] = 0.064422, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.83733e-29  1.90465e-29  5.95219e-31   2.9776e-30  1.02684e-31  6.52017e-31  1.74476e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55769, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.81509e+10
      global relaxation matrix dimension = 540
      setting global matrices ... done, cpu time[sec] = 0.591308, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82675, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.1135      8.53214      1.79464      2.47735     0.236975      31.9639      1.91835
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058403, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005272, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064146, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.61083e-12  1.19273e-27  1.03877e-28
      low eigenvalue method done, cpu time[sec] = 0.06444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.19e-27  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.95e-29  2.22e-16         1
         *Z       ---       ---  1.27e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.52105e-29  1.62282e-29  5.11361e-31  2.52781e-30  8.77564e-32  5.84293e-31  1.57551e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59907, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 21121 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00907
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.456758
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.398883
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.59772
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.43881
         W1 Well: minimal relaxation eigenvalue = 0.0244653
         W1 Well: maximal relaxation eigenvalue = 2.52822
         W1 Well:       grid size = 538
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 216
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -47 1/cm
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 148 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 452
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.20602, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23175 4.51e+05 1.62e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -47 7.62e+13
         B2    149 8.87e+12
         B3  -4653 1.88e+12
         B4  -6221 2.59e+12
         B5 -23175 2.49e+11
         B6   1423 3.34e+13
         B7   4657 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.89e+10  1.86e+11  1.81e+07  3.63e+05  3.96e-14  7.07e+13  4.01e+17
          R  1.01e-11         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  5.36e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  5.51e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3  2.76e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  2.52e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  1.42e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6   2.5e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.43e+07  8.36e+07  8.14e+03       163  1.78e-17  3.17e+10   1.8e+14
          R  2.26e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1   1.2e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  0.000123  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3   0.00615  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  5.63e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  3.16e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  5.57e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
   MasterEquation::set:  done, cpu time[sec] = 5.21654, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32093, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3145.88      366.315      77.6973      106.749      10.2638      1380.35      84.5026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058043, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005459, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063838, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.69154e-12  5.81206e-26  1.15723e-26
      low eigenvalue method done, cpu time[sec] = 0.064142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.81e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-27         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.72863e-27  2.92305e-27  8.71713e-29  7.35486e-28  1.98572e-29  8.13958e-30  3.35437e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.11569, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587518, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1048.63      122.105      25.8991      35.5831      3.42127      460.117      28.1675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057865, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005233, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063203, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.97499e-11  3.02659e-26  5.37568e-27
      low eigenvalue method done, cpu time[sec] = 0.063487, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.4e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.87834e-27   1.1829e-27  3.31025e-29   2.3182e-28  6.76732e-30  7.71636e-30  6.27399e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.23781e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81254, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            629.177       73.263      15.5395      21.3499      2.05276       276.07      16.9005
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057906, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005224, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063235, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.23281e-12  2.17631e-26  3.54533e-27
      low eigenvalue method done, cpu time[sec] = 0.063533, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.63614e-27  7.26377e-28  2.03496e-29  1.31507e-28  3.98301e-30  6.97693e-30   6.2895e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59984, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.13293e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.81218, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            449.412      52.3307      11.0996      15.2499      1.46626      197.193      12.0718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057798, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005289, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.43038e-11  1.73257e-26    2.635e-27
      low eigenvalue method done, cpu time[sec] = 0.063488, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.73e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.98964e-27  5.12905e-28  1.45141e-29   8.9334e-29  2.76948e-30  6.31027e-30  6.04189e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59736, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.02805e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.78592, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            349.543      40.7017      8.63303       11.861      1.14042      153.372      9.38917
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005221, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063201, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.23451e-12  1.45275e-26  2.08575e-27
      low eigenvalue method done, cpu time[sec] = 0.0635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.55e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.59927e-27   3.9352e-28  1.12478e-29  6.68873e-29  2.10874e-30  5.72346e-30  4.14424e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.57416, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82449, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            314.588      36.6315      7.76973      10.6749      1.02638      138.035      8.45026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063203, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47666e-11   1.3473e-26  1.88512e-27
      low eigenvalue method done, cpu time[sec] = 0.06349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.35e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.45157e-27   3.4962e-28  1.00443e-29  5.88151e-29  1.86863e-30  5.48557e-30  5.58966e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61273, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         6.71342e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.587733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83036, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            209.726       24.421      5.17982      7.11663     0.684253      92.0233       5.6335
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057862, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063176, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.08563e-12  9.99784e-27  1.25501e-27
      low eigenvalue method done, cpu time[sec] = 0.063478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.84178e-28  2.18773e-28   6.4463e-30  3.56008e-29  1.16512e-30  4.58986e-30  5.77358e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61516, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.95123e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586533, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            157.294      18.3158      3.88486      5.33747      0.51319      69.0175      4.22513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057924, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005217, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063252, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.06467e-12  8.02633e-27  9.24247e-28
      low eigenvalue method done, cpu time[sec] = 0.063545, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.03e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   7.2647e-28  1.53491e-28  4.61165e-30  2.45856e-29  8.19626e-31  3.85741e-30   6.6954e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62176, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1          1.1189e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.588405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83452, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.835      14.6526      3.10789      4.26998     0.410552       55.214       3.3801
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058024, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063354, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.32005e-12  6.73873e-27  7.21737e-28
      low eigenvalue method done, cpu time[sec] = 0.063641, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.74e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.65e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.74524e-28   1.1696e-28  3.57053e-30  1.85362e-29  6.26683e-31   3.3343e-30   5.7313e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62438, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586959, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80852, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.863      12.2105      2.58991      3.55831     0.342127      46.0117      2.81675
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005214, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9071e-12  5.82498e-27  5.85821e-28
      low eigenvalue method done, cpu time[sec] = 0.063378, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.82e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.73099e-28  9.30382e-29  2.88348e-30  1.45821e-29  4.99984e-31  2.99296e-30  6.50081e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59844, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.56646e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585965, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.8824      10.4661      2.21992      3.04998     0.293251      39.4386      2.41436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057755, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.52528e-12  5.13971e-27  4.88804e-28
      low eigenvalue method done, cpu time[sec] = 0.063437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.14e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    3.931e-28   7.5673e-29  2.37257e-30  1.18368e-29  4.08887e-31  2.64272e-30  6.72582e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.59418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.79025e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.588136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82974, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78.6471      9.15788      1.94243      2.66873     0.256595      34.5087      2.11256
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057765, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005207, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.66697e-12  4.60509e-27   4.1641e-28
      low eigenvalue method done, cpu time[sec] = 0.06337, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.61e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-28         0         1
         *Z       ---       ---  6.04e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.3668e-28  6.33154e-29  2.00968e-30  9.86959e-30  3.43902e-31  2.39722e-30  7.31019e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.61924, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 21399 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008314
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.424917
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.385583
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.308597
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.37353
         W1 Well: minimal relaxation eigenvalue = 0.0241869
         W1 Well: maximal relaxation eigenvalue = 1.9663
         W1 Well:       grid size = 530
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 260
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 276
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6201 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 445
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.79889, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23101 4.76e+05 1.71e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  8.4e+13
         B2    200 9.89e+12
         B3  -4601 2.12e+12
         B4  -6201 2.89e+12
         B5 -23101  2.8e+11
         B6   1500 3.75e+13
         B7   4700 2.34e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.61e+10   4.9e+10   5.8e+06  1.24e+05  2.84e-14  1.76e+13  8.84e+16
          R  3.83e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  2.04e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  1.72e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3  8.07e-06  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  3.52e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  5.67e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  1.13e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.19e+07  2.24e+07  2.65e+03      56.6   1.3e-17  8.05e+09  4.04e+13
          R  8.38e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  4.47e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  0.000378  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3    0.0177  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4   7.7e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  1.24e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  2.48e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
   MasterEquation::set:  done, cpu time[sec] = 3.80954, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+08
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568041, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3334.9      392.763       83.974      114.867      11.1001      1488.26      92.8943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05559, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004993, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.061039, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.90358e-11  2.07237e-25  4.20204e-26
      low eigenvalue method done, cpu time[sec] = 0.061318, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.82339e-26  1.05888e-26  3.15248e-28  2.64452e-27  7.15594e-29  3.10375e-29  3.16607e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.03057, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66792, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1111.63      130.921      27.9913      38.2892      3.70004      496.087      30.9648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055422, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004979, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060852, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.95739e-12  1.09118e-25  1.97694e-26
      low eigenvalue method done, cpu time[sec] = 0.061137, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16    1.437e-26  4.34636e-27  1.21646e-28  8.46578e-28  2.47827e-29  2.94626e-29   2.3946e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39641, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.20781e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.573869, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62404, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             666.98      78.5525      16.7948      22.9735      2.22002      297.652      18.5789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055438, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004989, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060883, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.62577e-11  7.88432e-26  1.31257e-26
      low eigenvalue method done, cpu time[sec] = 0.061162, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.88e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.82341e-27  2.68313e-27  7.53083e-29  4.83934e-28  1.46959e-29  2.67155e-29  3.07059e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.09093e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62559, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            476.414      56.1089      11.9963      16.4096      1.58573      212.609      13.2706
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004968, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.79579e-12  6.29618e-26  9.80114e-27
      low eigenvalue method done, cpu time[sec] = 0.061109, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.44923e-27  1.90228e-27  5.39544e-29   3.2984e-28  1.02591e-29  2.42546e-29  2.91509e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.35138, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.97405e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568803, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62681, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            370.544      43.6403      9.33045      12.7631      1.23335      165.362      10.3216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055409, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004991, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.91733e-12  5.29124e-26  7.78636e-27
      low eigenvalue method done, cpu time[sec] = 0.06113, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.29e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.99127e-27  1.45579e-27   4.1759e-29  2.46123e-28  7.79392e-30  2.22193e-29  2.86199e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3543, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.561077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63559, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             333.49      39.2763       8.3974      11.4867      1.11001      148.826      9.28943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004978, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.95861e-12  4.91176e-26  7.04833e-27
      low eigenvalue method done, cpu time[sec] = 0.061127, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.91e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-27  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.43156e-27  1.29294e-27  3.72806e-29  2.16452e-28  6.90623e-30  2.12285e-29  2.13472e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.35727, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         6.62342e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.57049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.65178, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            222.327      26.1842      5.59827      7.65783     0.740007      99.2174      6.19295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055418, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004969, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060848, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.93806e-12  3.65762e-26  4.72142e-27
      low eigenvalue method done, cpu time[sec] = 0.061138, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.66e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.85e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.70497e-27  8.16789e-28  2.41574e-29  1.32808e-28  4.35691e-30  1.77216e-29  2.73689e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.38055, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.83123e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            166.745      19.6381       4.1987      5.74337     0.555005       74.413      4.64471
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055409, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004996, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060865, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.13792e-12  2.94339e-26  3.49288e-27
      low eigenvalue method done, cpu time[sec] = 0.061142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.12e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.78109e-27  5.82579e-28  1.75738e-29  9.31213e-29  3.11423e-30  1.51245e-29  2.18162e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          1.1039e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66231, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            133.396      15.7105      3.35896       4.5947     0.444004      59.5304      3.71577
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05545, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004968, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060874, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.09381e-12  2.47564e-26  2.73739e-27
      low eigenvalue method done, cpu time[sec] = 0.061151, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.48e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.99e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.18551e-27  4.39901e-28  1.34975e-29  6.95033e-29  2.36012e-30   1.3105e-29  2.84207e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39177, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63166, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.163      13.0921      2.79913      3.82892     0.370004      49.6087      3.09648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055347, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004967, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060772, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.01471e-12    2.143e-26  2.22854e-27
      low eigenvalue method done, cpu time[sec] = 0.061052, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.18e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.79013e-27  3.49218e-28  1.08784e-29  5.48247e-29  1.88343e-30  1.16042e-29  2.70704e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.35906, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.54547e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            95.2829      11.2218      2.39926      3.28193     0.317146      42.5217      2.65412
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004967, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060775, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.39935e-12  1.89311e-26  1.86424e-27
      low eigenvalue method done, cpu time[sec] = 0.061064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.58e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.5117e-27  2.86915e-28  9.05667e-30  4.47157e-29  1.55342e-30  1.04635e-29  2.96532e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18994, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.76625e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.566368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.63156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.3725      9.81907      2.09935      2.87169     0.277503      37.2065      2.32236
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055412, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004964, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.08944e-12  1.69787e-26  1.59169e-27
      low eigenvalue method done, cpu time[sec] = 0.061106, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.7e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-28  4.44e-16         1
         *Z       ---       ---  2.94e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.29419e-27  2.40442e-28  7.67677e-30  3.73296e-29  1.30779e-30  9.48478e-30  2.80922e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.35888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 21677 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008873
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.417188
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.375857
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.344295
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.28287
         W1 Well: minimal relaxation eigenvalue = 0.0238994
         W1 Well: maximal relaxation eigenvalue = 1.32222
         W1 Well:       grid size = 522
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6270 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 439
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.72411, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23101 4.76e+05  1.8e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 9.25e+13
         B2    156  1.1e+13
         B3  -4639 2.37e+12
         B4  -6270 3.24e+12
         B5 -23101 3.14e+11
         B6   1481  4.2e+13
         B7   4643 2.67e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.23e+09  1.35e+10  1.93e+06  4.39e+04  2.07e-14  4.61e+12  2.05e+16
          R  1.38e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  7.42e-11     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2  5.19e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3  2.28e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  4.83e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  2.17e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  4.87e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.35e+06  6.25e+06       894      20.4   9.6e-18  2.14e+09  9.53e+12
          R  2.98e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1   1.6e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   0.00112  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3    0.0491  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  1.04e+17  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  4.68e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  1.05e-13  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
   MasterEquation::set:  done, cpu time[sec] = 3.73467, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+08
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30481, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3531.8       420.69      90.6233      123.469      11.9904      1602.53      101.945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053292, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004843, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058229, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18484e-10  7.07786e-25  1.45865e-25
      low eigenvalue method done, cpu time[sec] = 0.058501, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.08e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-26         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.87492e-26  3.67882e-26  1.09272e-27  9.11797e-27  2.47246e-28  1.12746e-28  7.67856e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.9793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551334, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1177.27       140.23      30.2078      41.1562      3.99681      534.177      33.9817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05319, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058086, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.69153e-11  3.76658e-25  6.94694e-26
      low eigenvalue method done, cpu time[sec] = 0.058358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.77e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     9e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.07889e-26  1.52382e-26  4.26607e-28  2.95136e-27   8.6628e-29  1.07489e-28  1.07079e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25109, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.17882e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             706.36      84.1381      18.1247      24.6937      2.39809      320.506       20.389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004832, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058089, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.9027e-11   2.7343e-25  4.64222e-26
      low eigenvalue method done, cpu time[sec] = 0.058371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    3.493e-26  9.45529e-27  2.65808e-28  1.69753e-27  5.17024e-29  9.78503e-29  1.18212e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.26096, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.05034e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551977, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.59395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            504.543      60.0986      12.9462      17.6384      1.71292      228.933      14.5636
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004825, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058098, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.83066e-11  2.19009e-25  3.48216e-26
      low eigenvalue method done, cpu time[sec] = 0.058367, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.19e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.23e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.66494e-26  6.74542e-27  1.91678e-28  1.16389e-27  3.63198e-29  8.93022e-29  1.13523e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.2666, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.92187e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            392.422      46.7434      10.0693      13.7187      1.33227      178.059      11.3272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.54561e-12  1.84457e-25  2.77611e-26
      low eigenvalue method done, cpu time[sec] = 0.058553, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.41e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.14973e-26  5.17746e-27  1.48854e-28  8.71567e-28  2.76913e-29  8.20108e-29   1.0232e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5849, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             353.18       42.069      9.06233      12.3469      1.19904      160.253      10.1945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05314, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004826, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058056, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.56329e-13  1.71384e-25  2.51678e-26
      low eigenvalue method done, cpu time[sec] = 0.058328, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.1e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95577e-26  4.61915e-27  1.33545e-28  7.71076e-28  2.46702e-29  7.84453e-29  1.12751e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.2583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         6.53645e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.553214, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56683, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            235.453       28.046      6.04155      8.23124     0.799362      106.835      6.79635
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053094, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.04601e-11  1.28061e-25  1.69604e-26
      low eigenvalue method done, cpu time[sec] = 0.058274, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.34174e-26  2.93172e-27  8.69413e-29  4.74435e-28   1.5624e-29  6.56295e-29  1.17803e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24168, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.71526e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             176.59      21.0345      4.53116      6.17343     0.599521      80.1265      5.09726
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053164, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004815, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058073, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.67684e-12  1.03296e-25  1.26028e-26
      low eigenvalue method done, cpu time[sec] = 0.058346, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00771e-26  2.08803e-27  6.32461e-29   3.3234e-28   1.1164e-29  5.62271e-29  1.06928e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27407, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.08941e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552202, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60242, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.272      16.8276      3.62493      4.93874     0.479617      64.1012      4.07781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004811, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058084, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.60438e-12  8.70344e-26  9.91162e-27
      low eigenvalue method done, cpu time[sec] = 0.058354, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.7e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   7.9669e-27  1.58628e-27  4.89201e-29  2.49978e-28  8.52377e-30  4.91602e-29  1.13591e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27047, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60553, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.727       14.023      3.02078      4.11562     0.399681      53.4177      3.39817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053148, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.96955e-12  7.54458e-26  8.09276e-27
      low eigenvalue method done, cpu time[sec] = 0.05832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.54e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.54494e-27  1.26301e-27  3.95394e-29  1.97599e-28  6.81928e-30   4.3533e-29  1.16877e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27132, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.52517e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552817, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.62134, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            100.909      12.0197      2.58924      3.52767     0.342584      45.7866      2.91272
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053267, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004795, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058152, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.8009e-12  6.67253e-26  6.78676e-27
      low eigenvalue method done, cpu time[sec] = 0.058418, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.53536e-27  1.04059e-27  3.30119e-29  1.61952e-28   5.6462e-30   3.9244e-29  1.23913e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.29506, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.74305e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552587, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.59166, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             88.295      10.5173      2.26558      3.08671     0.299761      40.0633      2.54863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053138, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004812, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.5343e-12  5.99025e-26  5.80724e-27
      low eigenvalue method done, cpu time[sec] = 0.058313, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.99e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-27         0         1
         *Z       ---       ---  1.47e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.74688e-27  8.72875e-28  2.80257e-29  1.35365e-28  4.76002e-30  3.55855e-29  1.18448e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25946, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 21955 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008986
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.414749
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.372435
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.275064
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.25544
         W1 Well: minimal relaxation eigenvalue = 0.0236695
         W1 Well: maximal relaxation eigenvalue = 2.11839
         W1 Well:       grid size = 520
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31605 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -87 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6266 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 438
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.62508, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31605 -23159 4.57e+05  1.9e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -87 1.02e+14
         B2    119 1.23e+13
         B3  -4619 2.66e+12
         B4  -6266 3.61e+12
         B5 -23159 3.53e+11
         B6   1458  4.7e+13
         B7   4651 3.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.08e+09  3.86e+09  6.63e+05  1.61e+04  1.52e-14  1.26e+12     5e+15
          R   4.8e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  2.59e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2  1.51e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3  6.22e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  6.58e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  7.96e-13   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6     2e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.82e+05  1.82e+06       312      7.58  7.16e-18  5.92e+08  2.35e+12
          R  1.02e-06         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  5.49e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2    0.0032  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3     0.132   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4   1.4e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  1.69e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  4.25e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
   MasterEquation::set:  done, cpu time[sec] = 3.6355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+08
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3736.77      450.153      97.6788      132.573      12.9373       1723.4      111.693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052848, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057714, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37174e-10  2.34051e-24  4.90456e-25
      low eigenvalue method done, cpu time[sec] = 0.057984, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.30957e-25   1.2241e-25  3.62812e-27  3.01107e-26  8.18244e-28  3.94042e-28  4.75426e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94942, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.50128, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1245.59      150.051      32.5596       44.191      4.31243      574.468       37.231
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052724, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.26578e-11  1.25828e-24  2.36347e-25
      low eigenvalue method done, cpu time[sec] = 0.05781, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.98e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.72165e-25  5.12547e-26  1.43497e-27  9.86801e-27  2.90432e-28  3.75923e-28  4.06337e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.98578, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.15078e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52479, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            747.354      90.0306      19.5358      26.5146      2.58746      344.681      22.3386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052706, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057533, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.18014e-11  9.17562e-25  1.58925e-25
      low eigenvalue method done, cpu time[sec] = 0.057804, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.18e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.19131e-25  3.19784e-26  9.00098e-28  5.71307e-27  1.74516e-28  3.43826e-28  4.36046e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18292, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         3.01109e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            533.824      64.3076      13.9541       18.939      1.84819      246.201      15.9562
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052662, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004739, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68071e-11  7.37074e-25  1.19735e-25
      low eigenvalue method done, cpu time[sec] = 0.057759, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.37e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.13278e-26  2.29102e-26  6.52446e-28  3.93694e-27  1.23234e-28  3.15005e-28  4.37311e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18623, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1          3.8714e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53845, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            415.197       50.017      10.8532      14.7303      1.43748      191.489      12.4103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052687, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004721, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057501, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21063e-12  6.22114e-25  9.57834e-26
      low eigenvalue method done, cpu time[sec] = 0.057768, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.22e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.38803e-26  1.76352e-26  5.08342e-28  2.95737e-27  9.42627e-29  2.89737e-28  4.46833e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.19421, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            373.677      45.0153      9.76788      13.2573      1.29373       172.34      11.1693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057721, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31262e-11  5.78531e-25   8.6963e-26
      low eigenvalue method done, cpu time[sec] = 0.057995, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.74251e-26  1.57685e-26  4.57168e-28  2.62033e-27  8.41482e-29  2.78412e-28  4.40411e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         6.45233e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548614, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            249.118      30.0102      6.51192       8.8382     0.862487      114.894       7.4462
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052648, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057465, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.52868e-13  4.33732e-25  5.89458e-26
      low eigenvalue method done, cpu time[sec] = 0.057732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.34e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-26         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.64433e-26  1.00513e-26  2.99187e-28   1.6218e-27  5.35953e-29  2.33179e-28  4.53385e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.19701, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.60311e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.838      22.5077      4.88394      6.62865     0.646865      86.1702      5.58465
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052616, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004731, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057436, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.42672e-13   3.5066e-25  4.39893e-26
      low eigenvalue method done, cpu time[sec] = 0.057709, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.3e-27         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.50259e-26  7.18662e-27  2.18602e-28  1.14067e-27  3.84603e-29  2.00644e-28  4.56226e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.19551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.07539e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547328, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09057, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            149.471      18.0061      3.90715      5.30292     0.517492      68.9362      4.46772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052772, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004737, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057599, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40385e-11  2.95969e-25  3.47144e-26
      low eigenvalue method done, cpu time[sec] = 0.057869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.01e-27         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.78204e-26  5.48472e-27  1.69904e-28  8.61866e-28  2.95039e-29  1.75783e-28  4.66304e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74829, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.559      15.0051      3.25596       4.4191     0.431243      57.4468       3.7231
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052664, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004742, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0575, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.54415e-12  2.56915e-25  2.84247e-26
      low eigenvalue method done, cpu time[sec] = 0.057848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.57e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.08e-27         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.2924e-26  4.37883e-27  1.37763e-28  6.83299e-28  2.36786e-29  1.56477e-28  4.56113e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.23034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.50554e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57065, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            106.765      12.8615      2.79082       3.7878     0.369637      49.2401      3.19123
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052658, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.16925e-12  2.27479e-25  2.38957e-26
      low eigenvalue method done, cpu time[sec] = 0.057748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.38e-27         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.93552e-26  3.59945e-27  1.14828e-28  5.58797e-28  1.95684e-29  1.41029e-28  4.67081e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22556, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.72062e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547639, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56592, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            93.4192      11.2538      2.44197      3.31433     0.323433      43.0851      2.79233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052643, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004728, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16829e-11  2.04416e-25  2.04905e-26
      low eigenvalue method done, cpu time[sec] = 0.057727, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-27         0         1
         *Z       ---       ---  7.49e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.66746e-26  3.03416e-27  9.79446e-29  4.69274e-28   1.6576e-29  1.28121e-28  4.79682e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22364, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 22233 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009279
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.407092
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.366606
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.277541
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.15266
         W1 Well: minimal relaxation eigenvalue = 0.0234166
         W1 Well: maximal relaxation eigenvalue = 3.81291
         W1 Well:       grid size = 513
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 183 1/cm
         B3 Barrier:        grid size = 256
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 271
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 432
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.50606, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23127 4.67e+05    2e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.12e+14
         B2    184 1.36e+13
         B3  -4646 2.98e+12
         B4  -6221 4.03e+12
         B5 -23127 3.95e+11
         B6   1444 5.25e+13
         B7   4699 3.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.19e+08  1.14e+09  2.34e+05  6.03e+03  1.12e-14  3.54e+11  1.26e+15
          R  1.62e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  8.76e-10     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2  4.28e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3  0.000166  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  8.96e+13  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  2.83e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  7.94e-16  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.99e+05  5.51e+05       113      2.91  5.39e-18  1.71e+08  6.08e+11
          R  3.34e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.81e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   0.00886  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3     0.344  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.85e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  5.85e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  1.64e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
   MasterEquation::set:  done, cpu time[sec] = 3.51655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+08
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.536396, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34694, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3949.9      481.212      105.166      142.202      13.9434      1851.13      122.177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004618, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055549, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.43536e-10  7.44522e-24  1.58401e-24
      low eigenvalue method done, cpu time[sec] = 0.055815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.45e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-25  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.06672e-24  3.91497e-25  1.15899e-26  9.56711e-26  2.60538e-27   1.3223e-27  1.73267e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.97688, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.536077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1316.63      160.404      35.0554      47.4007      4.64779      617.043      40.7256
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050729, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004597, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055415, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.18109e-11  4.04323e-24  7.72348e-25
      low eigenvalue method done, cpu time[sec] = 0.055683, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.04e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.47e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.60926e-25  1.65607e-25  4.64111e-27  3.17359e-26  9.36443e-28  1.26523e-27  1.61727e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.12364e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534709, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47537, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            789.981      96.2423      21.0332      28.4404      2.78867      370.226      24.4353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050693, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004589, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055376, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.65724e-11  2.96164e-24   5.2257e-25
      low eigenvalue method done, cpu time[sec] = 0.055647, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.94e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.90645e-25  1.03962e-25  2.93164e-27  1.84946e-26  5.66592e-28  1.16201e-27  1.63232e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          2.9731e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.47612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            564.272      68.7445      15.0237      20.3146      1.99191      264.447      17.4538
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050631, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004597, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.27629e-11  2.38596e-24  3.95417e-25
      low eigenvalue method done, cpu time[sec] = 0.055593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.59e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.00629e-25  7.47582e-26  2.13389e-27  1.27955e-26  4.01766e-28  1.06578e-27  1.63721e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.0999, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         3.82256e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46738, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            438.878       53.468      11.6851      15.8002      1.54926      205.681      13.5752
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004605, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.45857e-11  2.01811e-24  3.17388e-25
      low eigenvalue method done, cpu time[sec] = 0.055596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.44121e-25  5.77557e-26  1.66956e-27  9.65202e-27  3.08622e-28  9.83126e-28   1.6942e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09148, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53427, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46752, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             394.99      48.1212      10.5166      14.2202      1.39434      185.113      12.2177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004611, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055293, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.17933e-12  1.87838e-24  2.88577e-25
      low eigenvalue method done, cpu time[sec] = 0.05563, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.22958e-25  5.16752e-26  1.50279e-27  8.55889e-27  2.75744e-28  9.45721e-28  1.64345e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91893, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         6.37093e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532954, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46749, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            263.327      32.0808      7.01108      9.48013     0.929558      123.409      8.14511
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004598, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.7463e-12  1.41295e-24  1.96732e-25
      low eigenvalue method done, cpu time[sec] = 0.055567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.31e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.54488e-25  3.31175e-26  9.89522e-28  5.32765e-27  1.76687e-28  7.95556e-28  1.70333e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09177, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.49458e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46832, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            197.495      24.0606      5.25831       7.1101     0.697168      92.5564      6.10883
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050588, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004569, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.79522e-12  1.14495e-24  1.47438e-25
      low eigenvalue method done, cpu time[sec] = 0.055515, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.17016e-25  2.37828e-26  7.26574e-28  3.76591e-27  1.27431e-28  6.87397e-28  1.70536e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.06182e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.50586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            157.996      19.2485      4.20665      5.68808     0.557735      74.0451      4.88707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051042, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004566, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055699, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53025e-11  9.68061e-25  1.16745e-25
      low eigenvalue method done, cpu time[sec] = 0.055971, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.68e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.33654e-26    1.823e-26  5.67354e-28  2.85776e-27   9.8203e-29  6.04839e-28  1.77137e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.12978, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53341, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.53495, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            131.663      16.0404      3.50554      4.74007     0.464779      61.7043      4.07256
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004624, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.81986e-12  8.41489e-25  9.58608e-26
      low eigenvalue method done, cpu time[sec] = 0.055602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.41e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.70456e-26  1.45684e-26   4.6069e-28  2.26814e-27  7.89195e-29  5.39168e-28  1.75682e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.1543, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.48655e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.50889, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            112.854      13.7489      3.00475      4.06291     0.398382      52.8894      3.49076
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050623, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0046, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05531, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.57199e-12   7.4593e-25  8.07811e-26
      low eigenvalue method done, cpu time[sec] = 0.055576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.46e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.52735e-26  1.20222e-26  3.85481e-28  1.86256e-27   6.5482e-29   4.8663e-28  1.76316e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13128, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.69892e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.534906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4978, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.7476      12.0303      2.62915      3.55505     0.348584      46.2782      3.05442
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050654, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004597, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05534, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.15223e-12  6.70959e-25  6.94156e-26
      low eigenvalue method done, cpu time[sec] = 0.055615, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.71e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-26  4.44e-16         1
         *Z       ---       ---  3.89e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.62321e-26  1.01273e-26   3.2877e-28  1.56337e-27  5.54556e-29  4.42814e-28   1.8243e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.12261, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 22511 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008694
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.402205
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.352224
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.277005
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.10724
         W1 Well: minimal relaxation eigenvalue = 0.0231626
         W1 Well: maximal relaxation eigenvalue = 3.42101
         W1 Well:       grid size = 506
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 211
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 209
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 147 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4667 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23285 1/cm => truncating
         B5 Barrier:        grid size = 428
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23285 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.43846, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23285 4.17e+05 2.11e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.23e+14
         B2    148 1.52e+13
         B3  -4667 3.34e+12
         B4  -6272  4.5e+12
         B5 -23285 4.43e+11
         B6   1433 5.86e+13
         B7   4642 3.94e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.92e+08  3.53e+08  8.57e+04  2.34e+03  8.34e-15  1.04e+11  3.34e+14
          R   5.2e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  2.83e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2  1.17e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3  0.000427  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4   1.2e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  9.59e-12   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6     3e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.44e+04  1.73e+05      42.1      1.15   4.1e-18  5.12e+07  1.64e+11
          R  1.06e-05         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  5.77e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2    0.0237  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3     0.869  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  2.44e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  1.95e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6   6.1e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
   MasterEquation::set:  done, cpu time[sec] = 3.44966, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+08
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.52049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3328, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4171.47      513.929      113.106      152.377      15.0113      1985.96      133.436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004513, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053646, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.1948e-11  2.27055e-23   4.8973e-24
      low eigenvalue method done, cpu time[sec] = 0.053901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.31147e-24  1.20735e-24  3.56719e-26  2.92973e-25  7.99457e-27  4.27523e-27    6.235e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.87556, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.517622, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.37528, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1390.49       171.31      37.7019      50.7923      5.00377      661.985      44.4787
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049114, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004448, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05365, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.33199e-11  1.24491e-23  2.41473e-24
      low eigenvalue method done, cpu time[sec] = 0.053967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.76061e-24  5.15923e-25  1.44629e-26  9.83368e-26  2.90919e-27  4.10113e-27  5.99513e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90879, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.09737e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520782, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            834.295      102.786      22.6211      30.4754      3.00226      397.191      26.6872
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04902, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053556, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99632e-11  9.15808e-24  1.64356e-24
      low eigenvalue method done, cpu time[sec] = 0.05381, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.16e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.23309e-24  3.25559e-25  9.19315e-27  5.76589e-26  1.77135e-27  3.77487e-27  6.08875e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91167, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.93632e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520888, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.37983, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            595.925      73.4184      16.1579      21.7681      2.14447      283.708      19.0623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004449, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.88421e-12  7.39846e-24  1.24886e-24
      low eigenvalue method done, cpu time[sec] = 0.053868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.4e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.52607e-25  2.34968e-25  6.72074e-27  4.00613e-26  1.26157e-27  3.47119e-27  5.96852e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         3.77527e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36911, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            463.497      57.1032      12.5673      16.9308      1.66792      220.662      14.8262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049036, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004448, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053574, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.10071e-11  6.27066e-24   1.0057e-24
      low eigenvalue method done, cpu time[sec] = 0.053829, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.27e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.76039e-25   1.8207e-25  5.27624e-27  3.03166e-26   9.7237e-28  3.20903e-27  6.06514e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.88656, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518598, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            417.147      51.3929      11.3106      15.2377      1.50113      198.596      13.3436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.01827e-11  5.84148e-24  9.15691e-25
      low eigenvalue method done, cpu time[sec] = 0.053868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.09952e-25  1.63147e-25   4.7576e-27  2.69273e-26  8.70287e-28  3.09163e-27  6.00347e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.40344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         6.29211e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519078, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            278.098      34.2619      7.54037      10.1585      1.00075      132.397      8.89573
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049328, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004438, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053854, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.73988e-13  4.40828e-24  6.27746e-25
      low eigenvalue method done, cpu time[sec] = 0.054115, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.41e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-25  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.94645e-25  1.05125e-25  3.15185e-27  1.68618e-26  5.61081e-28  2.61199e-27  6.10807e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91299, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.38948e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38414, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            208.574      25.6964      5.65528      7.61885     0.750565      99.2978       6.6718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049058, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004442, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.05103e-12  3.58018e-24  4.72398e-25
      low eigenvalue method done, cpu time[sec] = 0.053843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.29e-26  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.75969e-25   7.5724e-26  2.32265e-27  1.19577e-26  4.06089e-28  2.26308e-27  6.34484e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91218, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.04869e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            166.859      20.5571      4.52422      6.09508     0.600452      79.4383      5.33744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048998, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004446, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053535, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.45302e-12   3.0322e-24  3.75285e-25
      low eigenvalue method done, cpu time[sec] = 0.053792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.02e-26  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.00991e-25  5.82204e-26  1.82007e-27  9.10408e-27  3.14034e-28  1.99689e-27  6.29269e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.52174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.049       17.131      3.77019      5.07923     0.500377      66.1985      4.44787
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.33638e-13  2.63934e-24  3.08997e-25
      low eigenvalue method done, cpu time[sec] = 0.053814, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-26  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.49182e-25   4.6677e-26  1.48312e-27  7.25115e-27  2.53271e-28  1.78566e-27  6.36204e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91738, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.46816e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.51961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.40233, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            119.185      14.6837      3.23159      4.35363     0.428894      56.7416      3.81246
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049082, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004441, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053614, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15706e-11  2.34226e-24  2.61001e-25
      low eigenvalue method done, cpu time[sec] = 0.053869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.34e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-26  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.11392e-25  3.85578e-26  1.24268e-27  5.96094e-27  2.10417e-28  1.61456e-27  6.41241e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.93368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          1.6779e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.40826, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.287      12.8482      2.82764      3.80943     0.375283      49.6489       3.3359
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049119, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053638, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.67928e-12  2.10886e-24  2.24742e-25
      low eigenvalue method done, cpu time[sec] = 0.05389, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.11e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.88e-26  4.44e-16         1
         *Z       ---       ---  2.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.82739e-25  3.25939e-26  1.06373e-27  5.02187e-27  1.78857e-28  1.47274e-27  6.58169e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.94154, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 22789 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008689
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.395559
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.347091
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.315678
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.05358
         W1 Well: minimal relaxation eigenvalue = 0.022951
         W1 Well: maximal relaxation eigenvalue = 1.23047
         W1 Well:       grid size = 503
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31535 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -107 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6263 1/cm
         B5 Barrier: nonpositive number of states at -23111 1/cm => truncating
         B5 Barrier:        grid size = 425
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23111 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1404 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.36436, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31535 -23111 4.73e+05 2.22e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -107 1.35e+14
         B2    109 1.68e+13
         B3  -4643 3.73e+12
         B4  -6263 5.01e+12
         B5 -23111 4.95e+11
         B6   1405 6.53e+13
         B7   4645 4.47e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.22e+07  1.14e+08  3.26e+04       943  6.32e-15  3.21e+10  9.25e+13
          R  1.61e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1   8.8e-09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2  3.07e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3   0.00106   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  1.58e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  3.12e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  1.08e-14  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.09e+04  5.65e+04      16.2     0.468  3.14e-18  1.59e+07   4.6e+10
          R  3.24e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  1.77e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2    0.0618  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3      2.14   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  3.19e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  6.27e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  2.18e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
   MasterEquation::set:  done, cpu time[sec] = 3.37468, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+08
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.50679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4401.54      548.358      121.517       163.12      16.1439      2128.14      145.513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048237, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052754, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.34338e-10  6.70145e-23  1.46575e-23
      low eigenvalue method done, cpu time[sec] = 0.053042, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.7e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-24         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.91691e-24  3.59134e-24  1.05917e-25  8.65494e-25  2.36654e-26  1.33226e-26  2.08226e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.513653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1467.18      182.786      40.5057      54.3734       5.3813       709.38      48.5043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004425, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052692, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.72613e-12  3.70841e-23  7.30591e-24
      low eigenvalue method done, cpu time[sec] = 0.052946, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.71e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.51e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.32721e-24  1.54925e-24  4.34556e-26  2.93854e-25  8.71509e-27  1.28107e-26  2.10157e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.07192e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.510638, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34059, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            880.308      109.672      24.3034       32.624      3.22878      425.628      29.1026
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048206, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004406, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74488e-11  2.73942e-23  5.00147e-24
      low eigenvalue method done, cpu time[sec] = 0.052962, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.74e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.29e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.75229e-24   9.8281e-25  2.77951e-26  1.73323e-25  5.33952e-27  1.18235e-26  2.10477e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.83557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.90068e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.504929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23921, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            628.791      78.3368      17.3596      23.3029      2.30627       304.02      20.7876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048151, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004402, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05265, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.62745e-12  2.21906e-23  3.81585e-24
      low eigenvalue method done, cpu time[sec] = 0.052905, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.09e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.91075e-24  7.12082e-25  2.04124e-26   1.2096e-25   3.8203e-27  1.09024e-26  2.12565e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72921, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         3.72945e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.505905, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.24033, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             489.06      60.9286      13.5019      18.1245      1.79377       236.46      16.1681
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004447, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.75209e-13  1.88456e-23  3.08262e-24
      low eigenvalue method done, cpu time[sec] = 0.052923, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.33e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.37877e-24  5.53407e-25  1.60801e-26  9.18343e-26  2.95455e-27  1.00991e-26  2.13114e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.7258, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.504178, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            440.154      54.8358      12.1517       16.312      1.61439      212.814      14.5513
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048071, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052619, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.8332e-11  1.75704e-23  2.81056e-24
      low eigenvalue method done, cpu time[sec] = 0.052878, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.17864e-24  4.96407e-25  1.45172e-26  8.16636e-26  2.64762e-27  9.73692e-27   2.1366e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72428, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         6.21575e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.505434, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.23737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            293.436      36.5572      8.10113      10.8747      1.07626      141.876      9.70086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048049, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052603, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.17537e-11  1.33015e-23  1.93723e-24
      low eigenvalue method done, cpu time[sec] = 0.052855, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52576e-24  3.21383e-25  9.67113e-27  5.14088e-26  1.71642e-27  8.26255e-27  2.15362e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.72789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.28766e+09
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.504981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.25026, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            220.077      27.4179      6.07585        8.156     0.807195      106.407      7.27564
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.69449e-15  1.08266e-23  1.46368e-24
      low eigenvalue method done, cpu time[sec] = 0.052889, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.16499e-24  2.32537e-25  7.16189e-27  3.66322e-26  1.24842e-27  7.18233e-27  2.18014e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75405, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.03596e+10
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.511554, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.37012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            176.062      21.9343      4.86068       6.5248     0.645756      85.1256      5.82052
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048042, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004411, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052547, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.16552e-12  9.18481e-24  1.16651e-24
      low eigenvalue method done, cpu time[sec] = 0.052824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.18e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.35013e-25  1.79208e-25  5.62771e-27  2.79627e-26  9.68064e-28  6.35296e-27  2.19945e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.87956, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+10
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.516476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35106, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.718      18.2786      4.05057      5.43734      0.53813       70.938      4.85043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048086, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004439, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052622, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.1998e-12  8.00552e-24  9.63033e-25
      low eigenvalue method done, cpu time[sec] = 0.05288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.01e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.76549e-25  1.44104e-25   4.6012e-27  2.23419e-26  7.83334e-28  5.69811e-27   2.2348e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.45034e+10
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.514104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            125.758      15.6674      3.47191      4.66057     0.461254       60.804      4.15751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004401, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052569, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.10086e-11  7.11234e-24  8.15312e-25
      low eigenvalue method done, cpu time[sec] = 0.052824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.11e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.60133e-25  1.19284e-25  3.86421e-27  1.84099e-26   6.5234e-28  5.16096e-27  2.26628e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.68954, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.65753e+10
      global relaxation matrix dimension = 503
      setting global matrices ... done, cpu time[sec] = 0.513767, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34965, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.039      13.7089      3.03792        4.078     0.403597      53.2035      3.63782
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048064, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052566, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.91305e-12  6.40971e-24  7.03455e-25
      low eigenvalue method done, cpu time[sec] = 0.052818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.41e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-25         0         1
         *Z       ---       ---  1.13e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.71546e-25  1.00976e-25  3.31314e-27  1.55319e-26  5.55367e-28  4.71344e-27   2.2846e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86682, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 23067 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009386
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.391709
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.339022
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.42286
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.98306
         W1 Well: minimal relaxation eigenvalue = 0.0226734
         W1 Well: maximal relaxation eigenvalue = 1.66955
         W1 Well:       grid size = 497
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 252
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 266
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 420
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1396 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.44207, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23133 4.65e+05 2.34e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 1.48e+14
         B2    187 1.87e+13
         B3  -4653 4.16e+12
         B4  -6193 5.57e+12
         B5 -23133 5.54e+11
         B6   1397 7.27e+13
         B7   4697 5.06e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e+07  3.81e+07  1.28e+04       392  4.85e-15  1.03e+10  2.68e+13
          R  4.77e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  2.62e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2   7.8e-05  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3   0.00255  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  2.06e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  9.73e-11   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  3.73e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.05e+04   1.9e+04      6.41     0.196  2.42e-18  5.14e+06  1.34e+10
          R  9.56e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  5.25e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2     0.156  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3      5.11  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  4.13e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  1.95e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  7.47e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
   MasterEquation::set:  done, cpu time[sec] = 3.45357, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+08
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.504217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4640.33      584.568      130.421      174.454       17.344      2277.94       158.45
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046627, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004251, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.051054, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.97936e-10  1.88904e-22  4.17642e-23
      low eigenvalue method done, cpu time[sec] = 0.051307, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.28e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.86977e-23  1.03152e-23  3.04009e-25  2.47192e-24  6.77251e-26  4.00151e-26  7.04682e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.77718, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50279, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30697, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1546.78      194.856      43.4735      58.1512      5.78133      759.313      52.8168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046588, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004226, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050904, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05536e-10  1.05498e-22  2.10435e-23
      low eigenvalue method done, cpu time[sec] = 0.05115, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.55768e-23   4.4943e-24   1.2621e-25  8.48872e-25  2.52381e-26  3.85987e-26  7.09685e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.78511, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.04724e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.503653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30828, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            928.066      116.914      26.0841      34.8907       3.4688      455.588      31.6901
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046565, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050895, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.49543e-11  7.82551e-23  1.44885e-23
      low eigenvalue method done, cpu time[sec] = 0.051139, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.83e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.1032e-23  2.86612e-24  8.12218e-26  5.03656e-25  1.55579e-26  3.57293e-26  7.13076e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.78164, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.86613e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.503659, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31747, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            662.904      83.5097      18.6315      24.9219      2.47771       325.42      22.6358
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046595, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00425, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050946, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.15526e-11  6.35613e-23  1.10985e-23
      low eigenvalue method done, cpu time[sec] = 0.051199, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.36e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.59235e-24  2.08467e-24  5.99118e-26  3.52988e-25  1.11804e-26  3.30262e-26   7.1521e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79909, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         3.68503e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            515.592       64.952      14.4912      19.3837      1.92711      253.104      17.6056
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046546, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004233, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.85634e-11  5.40876e-23  8.99396e-24
      low eigenvalue method done, cpu time[sec] = 0.051121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.41e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   7.0426e-24  1.62464e-24  4.73469e-26   2.6881e-25  8.67428e-27  3.06572e-26  7.18904e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.78765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.505444, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30865, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            464.033      58.4568      13.0421      17.4454       1.7344      227.794       15.845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.91874e-11  5.04696e-23  8.21122e-24
      low eigenvalue method done, cpu time[sec] = 0.051133, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.05e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-24         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.45887e-24  1.45921e-24  4.28083e-26  2.39378e-25  7.78463e-27  2.95897e-26  7.18448e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.14171e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            309.355      38.9712       8.6947      11.6302      1.15627      151.863      10.5634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004229, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050971, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.1187e-12  3.83285e-23  5.69009e-24
      low eigenvalue method done, cpu time[sec] = 0.051224, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.83e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.69e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.54782e-24  9.49643e-25  2.86847e-26  1.51537e-25  5.07607e-27  2.52134e-26  7.27918e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.18895e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31505, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            232.017      29.2284      6.52103      8.72268     0.867199      113.897      7.92252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04655, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050879, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.09538e-11  3.12656e-23   4.3162e-24
      low eigenvalue method done, cpu time[sec] = 0.051127, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.13e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.09e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.48513e-24  6.89446e-25  2.13258e-26  1.08383e-25  3.70643e-27  2.19911e-26  7.37386e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79124, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.02362e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.504404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31381, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            185.613      23.3827      5.21682      6.97815     0.693759      91.1176      6.33801
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046544, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05095, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.1023e-12  2.65689e-23  3.45076e-24
      low eigenvalue method done, cpu time[sec] = 0.051198, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.80647e-24   5.3306e-25  1.68178e-26  8.30251e-26  2.88452e-27   1.9505e-26  7.44047e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.7935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501596, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31499, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.678      19.4856      4.34735      5.81512     0.578133      75.9313      5.28168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004241, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050819, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53403e-11  2.31887e-23  2.85633e-24
      low eigenvalue method done, cpu time[sec] = 0.051068, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.26e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.33579e-24  4.29504e-25   1.3782e-26  6.64795e-26  2.33942e-27  1.75296e-26  7.55152e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79125, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.43307e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501417, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            132.581      16.7019       3.7263      4.98439     0.495542       65.084      4.52715
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046483, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004243, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050818, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.35003e-12  2.06246e-23  2.42366e-24
      low eigenvalue method done, cpu time[sec] = 0.051063, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.68e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.99026e-24  3.56318e-25  1.16032e-26  5.49107e-26  1.95303e-27    1.591e-26  7.63578e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.77305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.63779e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50435, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31847, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.008      14.6142      3.26051      4.36134       0.4336      56.9485      3.96126
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004235, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.43336e-12  1.86048e-23  2.09529e-24
      low eigenvalue method done, cpu time[sec] = 0.051071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.86e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.22e-25         0         1
         *Z       ---       ---  6.29e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.72666e-24  3.02189e-25  9.96969e-27   4.6419e-26  1.66621e-27  1.45606e-26  7.66001e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.80658, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 23345 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008412
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.374583
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.328801
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.30584
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.87064
         W1 Well: minimal relaxation eigenvalue = 0.022485
         W1 Well: maximal relaxation eigenvalue = 1.22933
         W1 Well:       grid size = 490
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31535 1/cm
         B1 Barrier:        grid size = 209
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4655 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 415
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1392 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.18456, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31535 -23135 4.65e+05 2.46e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 1.62e+14
         B2    161 2.07e+13
         B3  -4655 4.64e+12
         B4  -6223 6.19e+12
         B5 -23135 6.18e+11
         B6   1393 8.09e+13
         B7   4641 5.72e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.11e+06  1.29e+07  5.07e+03       163  3.67e-15  3.33e+09  7.87e+12
          R  1.41e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  7.76e-08     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2  0.000197   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3   0.00612  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  2.73e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  3.01e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  1.27e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.66e+03  6.63e+03      2.61     0.084  1.89e-18  1.71e+06  4.05e+09
          R  0.000273         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  0.000151     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2     0.384   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3      11.9  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4   5.3e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  5.84e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  2.47e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
   MasterEquation::set:  done, cpu time[sec] = 3.19559, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+08
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.487315, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.90232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4888.01      622.617      139.837      186.401      18.6145      2435.62      172.292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.29077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00412, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.34382, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.84319e-11  5.26565e-22  1.18013e-22
      low eigenvalue method done, cpu time[sec] = 0.34558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.27e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-23  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.03867e-23  2.87001e-23  8.44847e-25  6.83665e-24  1.87672e-25  1.16237e-25  2.27344e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.490184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12366, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1629.34      207.539      46.6123      62.1336      6.20483      811.872      57.4307
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044838, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004113, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29012e-11   2.9667e-22  6.00844e-23
      low eigenvalue method done, cpu time[sec] = 0.049586, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.67e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.40728e-23   1.2623e-23  3.54792e-25  2.37392e-24  7.07488e-26  1.12436e-25  2.28833e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.55855, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          2.0233e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.489284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1187, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            977.602      124.523      27.9674      37.2801       3.7229      487.123      34.4584
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044846, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004117, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049349, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.78863e-11  2.20941e-22   4.1598e-23
      low eigenvalue method done, cpu time[sec] = 0.049588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.21e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.97e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.13819e-23  8.09078e-24  2.29684e-25  1.41653e-24  4.38723e-26  1.04383e-25  2.30522e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.55333, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.83262e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.486627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            698.287      88.9453      19.9767      26.6287      2.65921      347.945      24.6131
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004119, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049398, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.40541e-11  1.79924e-22  3.19893e-23
      low eigenvalue method done, cpu time[sec] = 0.049639, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.45338e-23  5.90584e-24  1.70124e-25  9.96731e-25  3.16586e-26  9.67132e-26  2.31471e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.57998, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         3.64194e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.48742, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1296, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            543.112      69.1797      15.5374      20.7112      2.06828      270.624      19.1436
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044987, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049497, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.35579e-11  1.53404e-22  2.60024e-23
      low eigenvalue method done, cpu time[sec] = 0.049739, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.45e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.01688e-23  4.61571e-24  1.34886e-25  7.61464e-25  2.46432e-26  8.99624e-26  2.32573e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.48793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1272, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            488.801      62.2617      13.9837      18.6401      1.86145      243.562      17.2292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044867, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004114, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049376, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.29107e-11  1.43258e-22  2.37705e-23
      low eigenvalue method done, cpu time[sec] = 0.049619, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.22e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.85197e-23   4.1505e-24  1.22118e-25  6.78948e-25   2.2145e-26  8.69099e-26  2.33797e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5584, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          6.0699e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.488663, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10747, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            325.867      41.5078      9.32247      12.4267      1.24097      162.374      11.4861
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049506, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.19973e-12  1.09131e-22  1.65581e-23
      low eigenvalue method done, cpu time[sec] = 0.049752, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.31082e-23   2.7145e-24  8.22898e-26  4.32129e-25  1.45212e-26  7.43658e-26  2.36344e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54318, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.09321e+09
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.490524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12549, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              244.4      31.1309      6.99185      9.32003     0.930724      121.781       8.6146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044883, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049424, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70356e-11  8.92134e-23  1.26087e-23
      low eigenvalue method done, cpu time[sec] = 0.049682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.92e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.0083e-23  1.97781e-24  6.14269e-26  3.10272e-25   1.0646e-26  6.50643e-26  2.39708e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.55852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.01165e+10
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.489382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             195.52      24.9047      5.59348      7.45603     0.744579      97.4246      6.89168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044879, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049401, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.8844e-12  7.59366e-23  1.01116e-23
      low eigenvalue method done, cpu time[sec] = 0.049649, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.59e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   8.1442e-24  1.53355e-24  4.85995e-26   2.3841e-25  8.31188e-27  5.78733e-26  2.42134e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5701, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+10
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.488422, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            162.934      20.7539      4.66123      6.21336     0.620483      81.1872      5.74307
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0449, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004138, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049434, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.09346e-12  6.63634e-23   8.3913e-24
      low eigenvalue method done, cpu time[sec] = 0.049688, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.64e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.79538e-24  1.23864e-24  3.99352e-26  1.91403e-25  6.75956e-27  5.21243e-26  2.44854e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56299, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.41631e+10
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.488277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.12727, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.657      17.7891      3.99534      5.32573     0.531842       69.589      4.92263
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044904, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004121, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049417, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57514e-12  5.90903e-23  7.13596e-24
      low eigenvalue method done, cpu time[sec] = 0.04966, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.91e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.80402e-24  1.02989e-24  3.37067e-26  1.58471e-25   5.6572e-27  4.74162e-26  2.46888e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56031, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.61864e+10
      global relaxation matrix dimension = 490
      setting global matrices ... done, cpu time[sec] = 0.48729, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.13199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              122.2      15.5654      3.49593      4.66002     0.465362      60.8904       4.3073
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04487, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049374, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73832e-13  5.33537e-23  6.18113e-24
      low eigenvalue method done, cpu time[sec] = 0.049615, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.34e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-24  4.44e-16         1
         *Z       ---       ---  3.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.04533e-24  8.75113e-25  2.90238e-26  1.34247e-25  4.83685e-27  4.34796e-26  2.48971e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.56539, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 23623 1/cm
      Energy step      = 113 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008581
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.376035
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.330008
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.294847
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.84687
         W1 Well: minimal relaxation eigenvalue = 0.0222468
         W1 Well: maximal relaxation eigenvalue = 3.26549
         W1 Well:       grid size = 489
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -106 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 414
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1474 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4638 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.14886, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23159 4.57e+05 2.59e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -106 1.78e+14
         B2    119 2.29e+13
         B3  -4627 5.18e+12
         B4  -6208 6.88e+12
         B5 -23159  6.9e+11
         B6   1475 8.99e+13
         B7   4639 6.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.55e+06  4.61e+06   2.1e+03      71.5  2.86e-15  1.14e+09  2.45e+12
          R  3.92e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1  2.17e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2  0.000475  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3     0.014  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4   3.5e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  8.79e-10   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  4.08e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.32e+03  2.38e+03      1.09     0.037  1.48e-18  5.89e+05  1.27e+09
          R  0.000758         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1   0.00042     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2     0.919  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3      27.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  6.76e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5   1.7e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  7.89e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
   MasterEquation::set:  done, cpu time[sec] = 3.15985, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+08
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484007, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.89061, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5144.68      662.579      149.788      198.985      19.9584      2601.43      187.083
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.28289, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.331429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.42817e-11  1.40719e-21  3.18522e-22
      low eigenvalue method done, cpu time[sec] = 0.332638, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.13e-23  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   2.1824e-22  7.74643e-23  2.27581e-24  1.83296e-23   5.0413e-25  3.25936e-25   7.1566e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60508, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.488037, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18494, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1714.89       220.86      49.9292      66.3282      6.65279      867.143       62.361
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044639, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004074, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048801, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.92806e-11  7.99479e-22  1.63788e-22
      low eigenvalue method done, cpu time[sec] = 0.049044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.99e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-23  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.20801e-22  3.43664e-23  9.66316e-25  6.43259e-24  1.92162e-25  3.16529e-25  7.21778e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60844, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.00007e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.48454, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19124, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1028.94      132.516      29.9575      39.7969      3.99167      520.286      37.4166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044643, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04882, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.64333e-11  5.97682e-22  1.13999e-22
      low eigenvalue method done, cpu time[sec] = 0.04906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.98e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-23  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.64664e-23  2.21344e-23  6.29223e-25  3.85996e-24   1.1986e-25  2.94809e-25  7.24104e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1          2.8001e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.488014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34044, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            734.955      94.6541      21.3982      28.4264       2.8512      371.633      26.7262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044697, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004077, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048858, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.71125e-11  4.87949e-22  8.79968e-23
      low eigenvalue method done, cpu time[sec] = 0.049101, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.88e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-23  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.78475e-23   1.6212e-23  4.67939e-25  2.72649e-24    8.684e-26  2.73902e-25   7.2671e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.77228, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         3.60013e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.48912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.18734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            571.631      73.6198      16.6431      22.1094       2.2176      289.048       20.787
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044635, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004106, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048834, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.00336e-12  4.16805e-22  7.17384e-23
      low eigenvalue method done, cpu time[sec] = 0.049079, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.17e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.27e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.59374e-23  1.27051e-23  3.72193e-25  2.08931e-24  6.78116e-26   2.5533e-25   7.3005e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61388, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19108, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            514.468      66.2579      14.9788      19.8985      1.99584      260.143      18.7083
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044655, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004111, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04886, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30904e-11  3.89543e-22  6.56637e-23
      low eigenvalue method done, cpu time[sec] = 0.049107, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.9e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.67e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.14283e-23   1.1438e-23  3.37423e-25  1.86535e-24  6.10204e-26   2.4692e-25  7.32743e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61531, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.00022e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            342.979      44.1719      9.98584      13.2656      1.33056      173.429      12.4722
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044678, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048858, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.13113e-12  2.97636e-22  4.59715e-23
      low eigenvalue method done, cpu time[sec] = 0.04912, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.62e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.65809e-23  7.51542e-24  2.28596e-25  1.19336e-24  4.02277e-26  2.12157e-25  7.40804e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61915, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.00029e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487292, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            257.234      33.1289      7.48938      9.94923     0.997919      130.071      9.35415
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044653, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.0759e-12  2.43824e-22  3.51376e-23
      low eigenvalue method done, cpu time[sec] = 0.049106, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.42e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.82437e-23  5.49521e-24  1.71329e-25  8.60172e-25  2.96113e-26  1.86233e-25  7.50871e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62174, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.00004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.20649, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            205.787      26.5031      5.99151      7.95938     0.798335      104.057      7.48332
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044641, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048831, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.50642e-12  2.07871e-22  2.82632e-23
      low eigenvalue method done, cpu time[sec] = 0.049073, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.62e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.28794e-23   4.2726e-24  1.35978e-25  6.62943e-25  2.31917e-26  1.66084e-25  7.59081e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63227, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485237, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2044, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.489       22.086      4.99292      6.63282     0.665279      86.7143       6.2361
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044632, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04881, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.28545e-12  1.81901e-22  2.35135e-23
      low eigenvalue method done, cpu time[sec] = 0.049057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.9138e-23   3.4592e-24  1.12037e-25  5.33615e-25  1.89113e-26  1.49928e-25  7.66925e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.63012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.40005e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.482654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.991      18.9308      4.27965      5.68527     0.570239      74.3265      5.34523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048819, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.16999e-12  1.62141e-22  2.00389e-23
      low eigenvalue method done, cpu time[sec] = 0.049065, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.61e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.63802e-23  2.88188e-24  9.47758e-26   4.4275e-25  1.58626e-26  1.36664e-25  7.74394e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.60006e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.19339, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            128.617      16.5645      3.74469      4.97462     0.498959      65.0357      4.67708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044589, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.048767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.62424e-12  1.46535e-22  1.73904e-23
      low eigenvalue method done, cpu time[sec] = 0.049013, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-24  2.22e-16         1
         *Z       ---       ---  2.03e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.42652e-23  2.45301e-24  8.17685e-26  3.75761e-25  1.35887e-26  1.25537e-25  7.80596e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62164, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 23901 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009036
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.367794
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.321429
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.298597
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.7942
         W1 Well: minimal relaxation eigenvalue = 0.0220131
         W1 Well: maximal relaxation eigenvalue = 4.55513
         W1 Well:       grid size = 483
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 208
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 206
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 211 1/cm
         B3 Barrier:        grid size = 248
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4618 1/cm
         B4 Barrier:        grid size = 262
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23249 1/cm => truncating
         B5 Barrier:        grid size = 410
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23248 1/cm
         B6 Barrier:        grid size = 195
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4696 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.08173, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23248 4.28e+05 2.73e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 1.95e+14
         B2    212 2.53e+13
         B3  -4618 5.76e+12
         B4  -6228 7.63e+12
         B5 -23248 7.69e+11
         B6   1477 9.98e+13
         B7   4697 7.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   9.3e+05  1.67e+06       884      31.6  2.21e-15  3.96e+08  7.78e+11
          R  1.08e-06         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1  5.98e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2   0.00113  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3    0.0317  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  4.52e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  2.52e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  1.29e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       490       882     0.466    0.0167  1.17e-18  2.09e+05   4.1e+08
          R   0.00204         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1   0.00113     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2      2.15  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3        60  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  8.57e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  4.79e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  2.44e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
   MasterEquation::set:  done, cpu time[sec] = 3.09281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+08
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473902, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.50944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5410.6      704.513      160.294      212.229      21.3787      2775.64       202.87
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.631071, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00398, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.682717, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.45897e-10  3.66927e-21  8.38832e-22
      low eigenvalue method done, cpu time[sec] = 0.683913, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.08e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  5.75065e-22   2.0281e-22  5.95195e-24  4.77179e-23  1.31487e-24  8.89601e-25  2.18125e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53788, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.475984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1803.53      234.838      53.4314      70.7431      7.12624      925.215      67.6233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043226, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003979, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052625, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.86803e-11  2.10201e-21  4.35616e-22
      low eigenvalue method done, cpu time[sec] = 0.053824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.63e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  3.21344e-22  9.07788e-23   2.5549e-24   1.6923e-23  5.06715e-25  8.66017e-25  2.18587e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46437, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.97752e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07806, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1082.12      140.903      32.0588      42.4459      4.27575      555.129       40.574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043203, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047546, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.37452e-11  1.57742e-21  3.04798e-22
      low eigenvalue method done, cpu time[sec] = 0.047782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.58e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.47e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  2.31189e-22  5.87514e-23  1.67314e-24  1.02106e-23  3.17866e-25  8.08694e-25   2.1985e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46448, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.76852e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.476234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            772.943      100.645      22.8992      30.3185       3.0541      396.521      28.9814
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003957, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047519, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.73325e-11  1.29103e-21   2.3615e-22
      low eigenvalue method done, cpu time[sec] = 0.047762, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.82066e-22  4.31807e-23  1.24927e-24  7.24027e-24  2.31225e-25  7.53028e-25  2.20684e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.55953e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.475404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08301, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            601.178      78.2793      17.8105       23.581      2.37541      308.405      22.5411
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043216, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003981, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.09522e-12  1.10484e-21  1.93078e-22
      low eigenvalue method done, cpu time[sec] = 0.047819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.50532e-22   3.3931e-23  9.96734e-25  5.56472e-24  1.81118e-25   7.0339e-25   2.2178e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.30442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.475502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             541.06      70.4513      16.0294      21.2229      2.13787      277.564       20.287
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003976, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.55885e-12  1.03338e-21  1.76949e-22
      low eigenvalue method done, cpu time[sec] = 0.047775, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-21  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.38569e-22  3.05827e-23   9.0483e-25  4.97461e-24  1.63197e-25   6.8084e-25  2.22288e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.93255e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            360.707      46.9676      10.6863      14.1486      1.42525      185.043      13.5247
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04324, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.77952e-11  7.91929e-22    1.245e-22
      low eigenvalue method done, cpu time[sec] = 0.047827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.92e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  9.90452e-23  2.01888e-23  6.16263e-25  3.19888e-24  1.08161e-25  5.87201e-25  2.24797e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45274, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         7.91007e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.476899, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08512, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             270.53      35.2257       8.0147      10.6115      1.06894      138.782      10.1435
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043367, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003953, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.07614e-12  6.50109e-22  9.55115e-23
      low eigenvalue method done, cpu time[sec] = 0.047952, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.5e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  7.67451e-23  1.48121e-23  4.63666e-25  2.31431e-24  7.99241e-26  5.16978e-25  2.27658e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.32172, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         9.88758e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474895, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08376, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            216.424      28.1805      6.41176      8.48918     0.855149      111.026       8.1148
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043131, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04749, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.06451e-11  5.55138e-22  7.70524e-23
      low eigenvalue method done, cpu time[sec] = 0.047732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.55e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  6.23539e-23  1.15493e-23  3.69171e-25  1.78913e-24  6.27964e-26  4.62255e-25  2.30348e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47242, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.475021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08557, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            180.353      23.4838      5.34314      7.07431     0.712624      92.5215      6.76233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043239, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003986, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.12051e-13  4.86411e-22  6.42617e-23
      low eigenvalue method done, cpu time[sec] = 0.047848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.86e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-23  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16   5.2282e-23  9.37178e-24  3.04954e-25  1.44363e-24   5.1337e-26  4.18219e-25  2.32768e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.32655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.38426e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.47578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07672, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.589       20.129      4.57983       6.0637     0.610821      79.3041      5.79629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043214, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04756, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.23087e-12   4.3404e-22   5.4882e-23
      low eigenvalue method done, cpu time[sec] = 0.04779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.34e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.55e-24  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  4.48418e-23  7.82341e-24  2.58552e-25  1.20042e-24  4.31584e-26  3.81936e-25  2.34916e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4714, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.58201e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.476708, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08558, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            135.265      17.6128      4.00735      5.30573     0.534468      69.3911      5.07175
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003961, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047705, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.35595e-12  3.92628e-22  4.77171e-23
      low eigenvalue method done, cpu time[sec] = 0.04794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.93e-22  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.64e-24  8.88e-16         1
         *Z       ---       ---  1.18e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  3.91245e-23   6.6709e-24   2.2351e-25  1.02072e-24  3.70444e-26  3.51457e-25   2.3679e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.47825, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 24179 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008814
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.364993
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.314159
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.29815
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.75006
         W1 Well: minimal relaxation eigenvalue = 0.0218127
         W1 Well: maximal relaxation eigenvalue = 2.91095
         W1 Well:       grid size = 477
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 207
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -39 1/cm
         B2 Barrier:        grid size = 205
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 194 1/cm
         B3 Barrier:        grid size = 246
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 260
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23323 1/cm => truncating
         B5 Barrier:        grid size = 406
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23323 1/cm
         B6 Barrier:        grid size = 194
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.02722, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23323 4.05e+05 2.87e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -39 2.13e+14
         B2    195  2.8e+13
         B3  -4602 6.41e+12
         B4  -6241 8.46e+12
         B5 -23323 8.56e+11
         B6   1482 1.11e+14
         B7   4641 8.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.51e+05  6.29e+05       383      14.4  1.74e-15  1.43e+08  2.57e+11
          R  2.85e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1  1.59e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2   0.00261       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3    0.0695  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  5.75e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  6.99e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  3.89e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       187       336     0.204   0.00767  9.28e-19  7.63e+04  1.37e+08
          R   0.00534         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1   0.00298     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2      4.89       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3       130  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  1.08e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  1.31e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  7.29e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
   MasterEquation::set:  done, cpu time[sec] = 3.03829, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+08
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.384119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.45487, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5685.83      748.487      171.379      226.159      22.8787      2958.53      219.701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.582231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003905, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.622829, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.07213e-11  9.22479e-21  2.13161e-21
      low eigenvalue method done, cpu time[sec] = 0.623406, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.22e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-22         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.47249e-21  5.15842e-22   1.5129e-23  1.20745e-22   3.3333e-24  2.35964e-24   6.3877e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3118, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.466047, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.86817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1895.28      249.496      57.1262      75.3865      7.62622      986.177      73.2336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.204526, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003865, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.217129, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.70883e-12   5.3276e-21  1.11774e-21
      low eigenvalue method done, cpu time[sec] = 0.21779, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.33e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-22         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.3047e-22  2.32944e-22  6.56378e-24  4.32644e-23   1.2984e-24  2.30182e-24  6.42206e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39439, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.95561e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03155, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1137.17      149.697      34.2757      45.2319      4.57573      591.706      43.9402
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041841, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045801, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -9.9088e-11  4.01294e-21  7.86118e-22
      low eigenvalue method done, cpu time[sec] = 0.046038, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.75e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.00465e-22  1.51482e-22   4.3225e-24   2.6245e-23  8.19067e-25  2.15457e-24   6.4493e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3877, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.73785e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.464534, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04645, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            812.262      106.927      24.4827      32.3085      3.26838      422.647      31.3858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045741, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.27736e-11  3.29243e-21  6.11282e-22
      low eigenvalue method done, cpu time[sec] = 0.045979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.18e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.74551e-22  1.11712e-22  3.24004e-24  1.86799e-23  5.98138e-25  2.01049e-24  6.47751e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.23376, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.52009e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.46511, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            631.759      83.1653      19.0421      25.1288      2.54207      328.726      24.4112
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041789, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.61358e-11  2.82279e-21  5.01208e-22
      low eigenvalue method done, cpu time[sec] = 0.045975, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.82e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.93446e-22  8.80168e-23  2.59295e-24  1.43993e-23  4.69949e-25  1.88145e-24  6.50708e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39857, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.465413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04811, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            568.583      74.8487      17.1379      22.6159      2.28787      295.853      21.9701
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04211, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00386, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046053, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06189e-11  2.64224e-21    4.599e-22
      low eigenvalue method done, cpu time[sec] = 0.046281, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.76e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.62616e-22  7.94235e-23  2.35698e-24  1.28887e-23  4.24012e-25   1.8227e-24  6.52196e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4023, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.86682e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.464773, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04942, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            379.056      49.8992      11.4252      15.0773      1.52524      197.235      14.6467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003885, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.64726e-11  2.03083e-21  3.25162e-22
      low eigenvalue method done, cpu time[sec] = 0.046441, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.60426e-22  5.26706e-23  1.61363e-24  8.32944e-24  2.82479e-25  1.57779e-24   6.6024e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.4024, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.82242e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463677, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            284.292      37.4244      8.56893       11.308      1.14393      147.927       10.985
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041793, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.4992e-12   1.6706e-21  2.50354e-22
      low eigenvalue method done, cpu time[sec] = 0.045992, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.02511e-22  3.87756e-23  1.21875e-24  6.04851e-24  2.09538e-25  1.39322e-24  6.68023e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39464, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.77803e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462912, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            227.433      29.9395      6.85515      9.04638     0.915147      118.341      8.78803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041866, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003882, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045832, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.59472e-12  1.42882e-21  2.02554e-22
      low eigenvalue method done, cpu time[sec] = 0.046062, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.12e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.64998e-22   3.0316e-23   9.7332e-25  4.68964e-24  1.65135e-25  1.24875e-24   6.7546e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.46503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04573, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.528      24.9496      5.71262      7.53865     0.762622      98.6177      7.32336
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041835, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003886, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045804, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.24227e-12  1.25353e-21  1.69338e-22
      low eigenvalue method done, cpu time[sec] = 0.046033, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.73e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.38681e-22  2.46569e-23  8.06097e-25  3.79343e-24   1.3535e-25  1.13224e-24  6.82403e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39876, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.36892e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.03979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            162.452      21.3854      4.89653       6.4617     0.653676      84.5295      6.27717
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041812, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003871, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045763, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.65153e-13  1.11977e-21  1.44923e-22
      low eigenvalue method done, cpu time[sec] = 0.045992, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.19187e-22  2.06232e-23  6.84931e-25  3.16095e-24  1.14034e-25  1.03594e-24  6.88824e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.38257, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.56448e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.455737, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05326, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            142.146      18.7122      4.28447      5.65398     0.571967      73.9633      5.49252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041843, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003874, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045805, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.87312e-12  1.01386e-21  1.26233e-22
      low eigenvalue method done, cpu time[sec] = 0.046033, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-23         0         1
         *Z       ---       ---  7.03e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.04177e-22  1.76155e-23  5.93244e-25  2.69276e-24  9.80686e-26  9.54856e-25  6.94437e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.39987, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 26959 1/cm
      Energy step      = 133 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009884
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.308997
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.267193
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.235334
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.43266
         W1 Well: minimal relaxation eigenvalue = 0.0199861
         W1 Well: maximal relaxation eigenvalue = 1.29478
         W1 Well:       grid size = 440
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31561 1/cm
         B1 Barrier:        grid size = 203
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 92 1/cm
         B3 Barrier:        grid size = 238
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4695 1/cm
         B4 Barrier:        grid size = 250
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23315 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23315 1/cm
         B6 Barrier:        grid size = 192
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4614 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.54595, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31561 -23315 4.08e+05  4.7e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 4.98e+14
         B2     93 7.29e+13
         B3  -4695 1.77e+13
         B4  -6291 2.27e+13
         B5 -23315 2.38e+12
         B6   1423 2.95e+14
         B7   4615 2.53e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1      76.8       134     0.275    0.0158  2.11e-16   2.1e+04  1.76e+07
          R     0.013         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1   0.00745     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2      3.63       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3      63.4  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  4.75e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5  4.77e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6   5.7e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0467    0.0817  0.000167  9.61e-06  1.28e-19      12.8  1.07e+04
          R      21.4         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1      12.2     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2  5.97e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3  1.04e+05  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4   7.8e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5    0.0783   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  9.36e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
   MasterEquation::set:  done, cpu time[sec] = 2.55613, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+08
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.396634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.09112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8985.53      1316.03      319.253      408.842      42.9969       5324.6      456.824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.55033, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003223, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5615, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.4434e-10  2.66257e-17  6.67046e-18
      low eigenvalue method done, cpu time[sec] = 1.56273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-17  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-19  2.22e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.68331e-18  1.54572e-18  4.51067e-20  3.45548e-19  9.70371e-21  1.02049e-20  6.83455e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76229, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.394923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.46782, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2995.18      438.678      106.418      136.281      14.3323      1774.87      152.275
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.18134, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19284, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.84961e-12  1.64849e-17  3.80441e-18
      low eigenvalue method done, cpu time[sec] = 1.19398, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.86203e-18  7.53419e-19  2.14939e-20  1.35547e-19  4.15396e-21  1.01617e-20  6.85995e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.76215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.76639e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.397147, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.53966, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1797.11      263.207      63.8506      81.7685      8.59937      1064.92      91.3649
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.10824, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11975, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.30009e-11  1.28301e-17  2.79905e-18
      low eigenvalue method done, cpu time[sec] = 1.12089, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.16163e-18  5.10898e-19  1.48691e-20  8.62361e-20  2.75337e-21  9.71811e-21  6.88659e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.61926, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.47295e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.392748, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.71221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1283.65      188.005      45.6076       58.406      6.14241      760.657      65.2606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.957362, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.968653, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.50969e-12  1.07587e-17  2.24708e-18
      low eigenvalue method done, cpu time[sec] = 0.969788, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-17  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-19  2.22e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.76216e-18  3.88199e-19  1.15375e-20  6.34677e-20  2.08174e-21  9.24036e-21  6.91439e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.17951e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.395812, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.78595, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            998.393      146.226      35.4726      45.4269      4.77743      591.622      50.7583
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.882261, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893674, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.81284e-11  9.37685e-18  1.88906e-18
      low eigenvalue method done, cpu time[sec] = 0.894818, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.38e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.49701e-18  3.13134e-19  9.48542e-21  5.02172e-20  1.68044e-21  8.79062e-21  6.94284e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79211, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.399848, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.83736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            898.553      131.603      31.9253      40.8842      4.29969       532.46      45.6824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.840832, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003188, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.852192, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   9.4494e-12  8.83801e-18  1.75213e-18
      low eigenvalue method done, cpu time[sec] = 0.853341, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.84e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.39428e-18  2.85448e-19  8.72265e-21  4.54563e-20   1.5339e-21  8.58036e-21  6.95742e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80711, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         5.29918e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.398281, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.98775, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            599.036      87.7356      21.2835      27.2562      2.86646      354.973       30.455
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.69232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.703687, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.19679e-12  6.97698e-18  1.29329e-18
      low eigenvalue method done, cpu time[sec] = 0.704851, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.98e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.04442e-18  1.97172e-19  6.25382e-21  3.07204e-20  1.07034e-21  7.66973e-21  7.03101e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79629, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.06557e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.395964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.01285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            449.277      65.8017      15.9627      20.4421      2.14984       266.23      22.8412
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.636377, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.647684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.45307e-11  5.84961e-18   1.0282e-18
      low eigenvalue method done, cpu time[sec] = 0.648811, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.85e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.38077e-19  1.49645e-19  4.88796e-21  2.30606e-20    8.217e-22  6.94914e-21  7.10412e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.77118, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.83196e+09
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.398621, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22006, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            359.421      52.6414      12.7701      16.3537      1.71987      212.984       18.273
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.579269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.590572, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.12514e-11  5.07729e-18   8.5356e-19
      low eigenvalue method done, cpu time[sec] = 0.591757, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-19  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.00305e-19    1.199e-19   4.0122e-21  1.83613e-20  6.65632e-22  6.36477e-21  7.17455e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91908, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+10
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.394114, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.15909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            299.518      43.8678      10.6418      13.6281      1.43323      177.487      15.2275
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.513467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.524846, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.20169e-13   4.5082e-18  7.29137e-19
      low eigenvalue method done, cpu time[sec] = 0.525947, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.01e-20  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.01197e-19  9.95421e-20  3.39993e-21  1.51858e-20  5.58251e-22  5.87967e-21  7.24076e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79476, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.23647e+10
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.398438, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.21998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             256.73       37.601      9.12152      11.6812      1.22848      152.131      13.0521
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.454581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.46594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.00654e-11    4.068e-18  6.35716e-19
      low eigenvalue method done, cpu time[sec] = 0.467505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.07e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.13e-20  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.26229e-19    8.475e-20   2.9466e-21  1.28985e-20  4.79752e-22  5.46912e-21  7.30191e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.41311e+10
      global relaxation matrix dimension = 440
      setting global matrices ... done, cpu time[sec] = 0.398499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.13356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            224.638      32.9008      7.98133      10.2211      1.07492      133.115      11.4206
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.539288, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003182, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.550607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.18155e-11  3.71544e-18  5.62871e-19
      low eigenvalue method done, cpu time[sec] = 0.551746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.43e-20  4.44e-16         1
         *Z       ---       ---  7.98e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.67427e-19   7.3531e-20  2.59694e-21  1.11745e-20  4.19835e-22  5.11615e-21  7.35755e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.6363, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 29740 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.0094
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.29039
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.231478
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.219451
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.18362
         W1 Well: minimal relaxation eigenvalue = 0.0184887
         W1 Well: maximal relaxation eigenvalue = 1.46234
         W1 Well:       grid size = 409
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31610 1/cm
         B1 Barrier:        grid size = 199
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -110 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 189 1/cm
         B3 Barrier:        grid size = 229
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6260 1/cm
         B5 Barrier: nonpositive number of states at -23211 1/cm => truncating
         B5 Barrier:        grid size = 353
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23211 1/cm
         B6 Barrier:        grid size = 189
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1389 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.21996, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31610 -23211  4.4e+05 7.56e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -110 1.09e+15
         B2    190 1.77e+14
         B3  -4611 4.52e+13
         B4  -6260 5.64e+13
         B5 -23211 6.13e+12
         B6   1390 7.24e+14
         B7   4689 7.02e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1     0.108     0.187  0.000971  7.76e-05  4.03e-17      21.3  9.86e+03
          R      9.24         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1      5.35     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.03e+03       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.29e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  2.48e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5    0.0469   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6  0.000101   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.41e-05  0.000128  6.66e-07  5.32e-08  2.76e-20    0.0146      6.75
          R  1.35e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1  7.81e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2   1.5e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.88e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.62e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5      68.5   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6     0.148   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
   MasterEquation::set:  done, cpu time[sec] = 2.23009, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.341632, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.18538, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13375.1      2169.18      552.933      690.218      75.0524      8863.88      859.891
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21134, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002655, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.59315e-12  1.21706e-14  3.22921e-15
      low eigenvalue method done, cpu time[sec] = 2.22206, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-14  2.89e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.25e-16  2.89e-15         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.88658e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.88658e-15   2.3091e-15  7.23041e-16  2.11201e-17  1.56232e-16  4.45385e-18  6.54532e-18  8.98227e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.35391, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.33233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.46355, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4458.36      723.061      184.311      230.073      25.0175      2954.63       286.63
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.91351, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002621, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92349, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.73158e-10  7.96061e-15  1.96943e-15
      low eigenvalue method done, cpu time[sec] = 1.92463, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.96e-15  1.55e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-16  1.55e-15         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.55431e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.55431e-15  1.50377e-15  3.74876e-16  1.08578e-17  6.59536e-17  2.05843e-18  6.60353e-18  9.01224e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.32418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.61852e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.330393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.56467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2675.02      433.837      110.587      138.044      15.0105      1772.78      171.978
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.81015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002638, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82013, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.41526e-11  6.36323e-15  1.50238e-15
      low eigenvalue method done, cpu time[sec] = 1.82126, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.36e-15  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-16  1.11e-15         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  1.17602e-15  2.63026e-16  7.81786e-18   4.3625e-17  1.42061e-18  6.41202e-18  9.04363e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.32494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26593e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.334132, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.64425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1910.73      309.883      78.9904      98.6026      10.7218      1266.27      122.842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74613, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002634, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.756, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.40374e-12  5.43332e-15  1.23751e-15
      low eigenvalue method done, cpu time[sec] = 1.7571, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.43e-15  1.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-16  1.11e-15         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.11022e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.11022e-15  9.82842e-16  2.04803e-16  6.23933e-18  3.30002e-17  1.10502e-18  6.18131e-18  9.07622e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.34353, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.91334e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.336684, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.72591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1486.12       241.02       61.437      76.6909      8.33915      984.875      95.5435
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.65673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002656, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6666, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.58295e-11   4.8012e-15  1.06155e-15
      low eigenvalue method done, cpu time[sec] = 1.66774, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.88e-17  4.44e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.51482e-16  1.68421e-16  5.24359e-18   2.6677e-17  9.12009e-19  5.95304e-18  9.10965e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.33303, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.330117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.76563, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1337.51      216.918      55.2933      69.0218      7.50524      886.388      85.9891
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.61414, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002644, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6239, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.47577e-11  4.55184e-15  9.93231e-16
      low eigenvalue method done, cpu time[sec] = 1.62498, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.42e-17  6.66e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  7.99808e-16  1.54819e-16  4.86778e-18  2.43721e-17  8.40466e-19  5.84354e-18  9.12659e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.32806, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.85556e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.332061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.85843, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            891.673      144.612      36.8622      46.0145      5.00349      590.925      57.3261
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51936, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002633, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52928, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.13005e-11  3.67641e-15  7.59214e-16
      low eigenvalue method done, cpu time[sec] = 1.53093, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.68e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.8e-17  4.44e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.19886e-16  1.10601e-16  3.62445e-18  1.70913e-17  6.09253e-19  5.35269e-18  9.21231e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.32593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.47408e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.329268, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.54279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            668.755      108.459      27.6466      34.5109      3.75262      443.194      42.9946
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.43622, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002621, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.55061e-12  3.13367e-15  6.19596e-16
      low eigenvalue method done, cpu time[sec] = 1.44721, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.13e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.79e-17  4.44e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.10302e-16  8.60911e-17  2.91375e-18  1.31881e-17  4.81188e-19  4.94735e-18  9.29733e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.93094, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          8.0926e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.335587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.00523, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            535.004      86.7674      22.1173      27.6087      3.00209      354.555      34.3957
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39066, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.87686e-11  2.75536e-15   5.2531e-16
      low eigenvalue method done, cpu time[sec] = 1.39175, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.76e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.09e-17  2.22e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.35301e-16  7.04019e-17  2.44638e-18  1.07355e-17  3.98776e-19   4.6084e-18  9.37931e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.34235, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.344795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.06666, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            445.836      72.3061      18.4311      23.0073      2.50175      295.463       28.663
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.32013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002623, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3296, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.90749e-11   2.4727e-15  4.56755e-16
      low eigenvalue method done, cpu time[sec] = 1.33079, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-17         0         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.80241e-16  5.94619e-17  2.11275e-18  9.04514e-18  3.40895e-19  4.32009e-18  9.45681e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.34969, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.13296e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.344722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.08744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            382.146      61.9767      15.7981      19.7205      2.14435      253.254      24.5683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.30319, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00265, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.76606e-11   2.2515e-15  4.04382e-16
      low eigenvalue method done, cpu time[sec] = 1.31442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.16e-17         0         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.37867e-16  5.13856e-17  1.86128e-18  7.80691e-18  2.97833e-19   4.0711e-18    9.529e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.35351, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.29482e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.343689, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.14505, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            334.377      54.2296      13.8233      17.2554      1.87631      221.597      21.4973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.15273, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002621, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16248, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.0084e-12  2.07256e-15  3.62921e-16
      low eigenvalue method done, cpu time[sec] = 1.16366, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.83e-17  2.22e-16         1
         *Z       ---       ---  2.55e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.04126e-16   4.5174e-17  1.66427e-18  6.85973e-18  2.64454e-19  3.85325e-18  9.59547e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.34802, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 32520 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009082
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.263138
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.204578
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.173431
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.00884
         W1 Well: minimal relaxation eigenvalue = 0.0172846
         W1 Well: maximal relaxation eigenvalue = 1.43471
         W1 Well:       grid size = 384
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31607 1/cm
         B1 Barrier:        grid size = 195
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 122 1/cm
         B3 Barrier:        grid size = 223
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 232
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23425 1/cm => truncating
         B5 Barrier:        grid size = 335
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23424 1/cm
         B6 Barrier:        grid size = 186
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4631 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.93683, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31607 -23424 3.76e+05 1.19e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 2.27e+15
         B2    123 4.05e+14
         B3  -4720 1.08e+14
         B4  -6223 1.32e+14
         B5 -23424 1.47e+13
         B6   1459 1.66e+15
         B7   4631 1.79e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  0.000564   0.00097  1.05e-05   1.1e-06  1.07e-17    0.0843      24.3
          R  1.77e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.03e+03     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  9.51e+04      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  9.12e+05       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  9.38e+16  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5      11.9    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6    0.0412  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.3e-07   7.4e-07  8.02e-09  8.36e-10  8.13e-21  6.42e-05    0.0185
          R  2.32e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.35e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  1.25e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3   1.2e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.23e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5  1.56e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6        54  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
   MasterEquation::set:  done, cpu time[sec] = 1.94688, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.303304, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.42994, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18969.9      3391.33      902.417      1101.88      123.345      13861.3      1495.84
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21665, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.214906, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.44137, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.44409e-09  1.52847e-12  4.25799e-13
      low eigenvalue method done, cpu time[sec] = 2.46012, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-12  4.25e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-14  4.25e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.25437e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.24549e-13   3.0894e-13  9.22196e-14  2.70875e-15  1.94278e-14  5.61452e-16  1.10093e-15  2.71256e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.7639, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.69406, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6323.3      1130.44      300.806      367.293       41.115      4620.44      498.613
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21248, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.21134, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.43351, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.04565e-10  1.04572e-12  2.74321e-13
      low eigenvalue method done, cpu time[sec] = 2.45211, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-12  2.74e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-14  2.74e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.74003e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.73448e-13  2.11845e-13  5.03384e-14  1.48289e-15  8.71655e-15  2.76535e-16  1.12029e-15  2.72068e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.49937e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.303013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.73273, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3793.98      678.266      180.483      220.376       24.669      2772.27      299.168
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.199792, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.42234, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.0341e-10  8.54759e-13  2.15568e-13
      low eigenvalue method done, cpu time[sec] = 2.4238, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.55e-13  2.15e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-14  2.15e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.14939e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.14495e-13  1.70448e-13  3.63374e-14  1.10368e-15  5.95544e-15   1.9737e-16  1.09996e-15  2.72917e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00263, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.09912e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302633, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.83933, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2709.99      484.476      128.917      157.411      17.6207      1980.19      213.691
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21159, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.096001, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.31584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.49196e-10  7.41108e-13  1.81355e-13
      low eigenvalue method done, cpu time[sec] = 2.31697, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.41e-13  1.81e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-14  1.81e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.80966e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.80633e-13   1.4538e-13   2.8877e-14  9.01634e-16  4.60934e-15  1.57199e-16  1.07144e-15  2.73795e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.99507, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.69887e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.304243, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.83141, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2107.77      376.814      100.269      122.431       13.705      1540.15      166.204
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22355, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.089776, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.32099, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.86917e-11  6.62633e-13  1.58176e-13
      low eigenvalue method done, cpu time[sec] = 2.32213, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.63e-13  1.58e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-14  1.58e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.57874e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.57541e-13  1.27991e-13  2.41336e-14  7.71693e-16  3.79356e-15  1.32163e-16  1.04161e-15  2.74695e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.99388, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.305207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.88101, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1896.99      339.133      90.2417      110.188      12.3345      1386.13      149.584
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.2184, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.068943, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.29571, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.7982e-10  6.31374e-13  1.49064e-13
      low eigenvalue method done, cpu time[sec] = 2.29683, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.31e-13  1.48e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-14  1.48e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.48326e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.47993e-13  1.21064e-13  2.23403e-14  7.22038e-16  3.49271e-15  1.22769e-16  1.02692e-15  2.75149e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.02301, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.49812e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.306089, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.94804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1264.66      226.089      60.1611      73.4587      8.22299      924.089      99.7225
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21947, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.91656e-12  5.20104e-13  1.17281e-13
      low eigenvalue method done, cpu time[sec] = 2.23047, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.2e-13  1.17e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.99e-15  1.17e-13         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.16795e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.16573e-13  9.65013e-14  1.64164e-14  5.54783e-16  2.52634e-15  9.18746e-17   9.5877e-16  2.77446e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          5.9975e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.305506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.03098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            948.495      169.566      45.1208       55.094      6.16724      693.066      74.7919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.09715, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002294, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.10566, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.38553e-11  4.49751e-13  9.78112e-14
      low eigenvalue method done, cpu time[sec] = 2.10682, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.5e-13  9.75e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-15  9.75e-14         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.74776e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.72555e-14  8.11385e-14  1.30532e-14  4.56587e-16  1.99502e-15  7.43072e-17  9.00204e-16  2.79722e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.49687e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.295759, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.12409, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            758.796      135.653      36.0967      44.0752       4.9338      554.453      59.8335
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02453, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002312, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03329, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.34537e-11  3.99979e-13  8.43911e-14
      low eigenvalue method done, cpu time[sec] = 2.03444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     4e-13  8.37e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.91e-15  8.37e-14         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.37108e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.35998e-14  7.04066e-14  1.08598e-14  3.90654e-16  1.65453e-15  6.27683e-17  8.49851e-16  2.81923e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98567, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.296217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.20493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             632.33      113.044      30.0806      36.7293       4.1115      462.044      49.8613
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00232, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96408, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.71582e-13  3.62342e-13  7.44679e-14
      low eigenvalue method done, cpu time[sec] = 1.96525, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-13  7.37e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.26e-15  7.37e-14         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.37188e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.36078e-14  6.23946e-14  9.30658e-15   3.4277e-16  1.41601e-15  5.45258e-17  8.06088e-16  2.84016e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.04956e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.29614, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.19577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            541.997      96.8951      25.7833      31.4823      3.52414      396.038      42.7382
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96528, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002306, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.6583e-12  3.32591e-13  6.67772e-14
      low eigenvalue method done, cpu time[sec] = 1.97512, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-13  6.64e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.75e-15  6.64e-14         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.63913e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.62803e-14  5.61396e-14  8.14463e-15  3.06144e-16  1.23883e-15  4.83037e-17  7.67613e-16  2.85981e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00139, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.1995e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.296578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.22822, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            474.247      84.7832      22.5604       27.547      3.08362      346.533       37.396
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.92024, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002321, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92898, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50404e-11  3.08313e-13  6.06119e-14
      low eigenvalue method done, cpu time[sec] = 1.93014, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.08e-13     6e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.33e-15     6e-14         1
         *Z       ---       ---  1.69e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.9952e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   5.9841e-14  5.10959e-14  7.24051e-15  2.77076e-16  1.10162e-15  4.34189e-17  7.33434e-16  2.87809e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98832, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 35300 1/cm
      Energy step      = 183 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008736
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.238976
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.181818
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.186249
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.887418
         W1 Well: minimal relaxation eigenvalue = 0.0162853
         W1 Well: maximal relaxation eigenvalue = 2.13212
         W1 Well:       grid size = 366
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31677 1/cm
         B1 Barrier:        grid size = 193
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 164 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4777 1/cm
         B4 Barrier:        grid size = 227
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23443 1/cm => truncating
         B5 Barrier:        grid size = 321
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23442 1/cm
         B6 Barrier:        grid size = 185
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1445 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4556 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.7832, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31677 -23442 3.71e+05 1.85e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 4.48e+15
         B2    165 8.79e+14
         B3  -4777 2.43e+14
         B4  -6241 2.91e+14
         B5 -23442 3.34e+13
         B6   1446 3.57e+15
         B7   4557 4.23e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.68e-06  1.32e-05  2.59e-07  3.36e-08   3.6e-18  0.000904     0.177
          R   1.3e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  7.56e+04     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  3.86e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  2.97e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  2.78e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.11e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6      5.66  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.42e-09  1.11e-08  2.17e-10  2.81e-11  3.01e-21  7.55e-07  0.000148
          R  1.56e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  9.05e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.62e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  3.56e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.32e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.32e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6  6.77e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
   MasterEquation::set:  done, cpu time[sec] = 1.79321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.21606, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25850.2      5072.23      1401.44      1678.59      192.751      20590.4      2440.15
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94625, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188196, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14356, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.91372e-09  7.50616e-11  2.18517e-11
      low eigenvalue method done, cpu time[sec] = 2.15921, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.51e-11  2.19e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-12  2.19e-11         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1851e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.18049e-11  1.60336e-11  4.59202e-12  1.35726e-13  9.46747e-13  2.77064e-14  6.98645e-14  2.81765e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.16625, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27568, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.23451, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8616.72      1690.74      467.148       559.53      64.2502      6863.47      813.384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187692, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21646e-09  5.33084e-11  1.47306e-11
      low eigenvalue method done, cpu time[sec] = 2.1584, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.33e-11  1.47e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.68e-13  1.47e-11         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.47302e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.46991e-11  1.14727e-11  2.61538e-12  7.83373e-14  4.47145e-13  1.43997e-14  7.15573e-14  2.82529e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.18182, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.40104e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275196, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.29464, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5170.03      1014.45      280.289      335.718      38.5501      4118.08      488.031
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94553, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14262, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.40883e-10   4.4405e-11  1.18645e-11
      low eigenvalue method done, cpu time[sec] = 2.15814, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.44e-11  1.19e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.23e-13  1.19e-11         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.18638e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.18389e-11  9.45083e-12  1.93327e-12  5.99528e-14  3.13982e-13  1.05731e-14  7.08629e-14  2.83328e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.24342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.96146e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276094, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.40424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3692.88      724.604      200.206      239.798      27.5358      2941.49      348.593
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95328, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14948, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.32541e-11  3.90076e-11  1.01586e-11
      low eigenvalue method done, cpu time[sec] = 2.16578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.9e-11  1.02e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.35e-13  1.02e-11         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.01583e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.01369e-11  8.19844e-12  1.56286e-12  4.99483e-14  2.47764e-13  8.59115e-15  6.95852e-14  2.84151e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.36342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.52188e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277527, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.33305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2872.24      563.581      155.716       186.51      21.4167      2287.82      271.128
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95747, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187344, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39999e-10  3.52314e-11  8.98402e-12
      low eigenvalue method done, cpu time[sec] = 2.17046, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.52e-11  8.98e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.74e-13  8.98e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.9837e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.96472e-12  7.31514e-12  1.32398e-12  4.34114e-14  2.07033e-13  7.33663e-15  6.81481e-14  2.84992e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.29826, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.37978, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2585.02      507.223      140.144      167.859      19.2751      2059.04      244.015
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187975, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14676, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.3281e-10  3.37148e-11  8.51742e-12
      low eigenvalue method done, cpu time[sec] = 2.1631, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.37e-11  8.52e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-13  8.52e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.51696e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.49898e-12  6.95955e-12  1.23284e-12  4.08878e-14  1.91867e-13  6.86122e-15  6.74181e-14  2.85416e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.33697, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         4.20313e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.48044, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1723.34      338.149      93.4295      111.906        12.85      1372.69      162.677
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95153, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188003, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.65846e-11  2.82524e-11   6.8653e-12
      low eigenvalue method done, cpu time[sec] = 2.16505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-11  6.87e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-13  6.87e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.86518e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.85074e-12  5.67911e-12  9.27774e-13  3.22597e-14  1.42472e-13  5.27484e-15  6.39047e-14  2.87553e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.44006, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.60417e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.53405, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1292.51      253.611      70.0721      83.9294      9.63753      1029.52      122.008
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95242, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188166, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1499, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.73369e-11  2.47401e-11  5.83066e-12
      low eigenvalue method done, cpu time[sec] = 2.16625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-11  5.83e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-13  5.83e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.83e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.81768e-12  4.86028e-12  7.51117e-13  2.70806e-14  1.14742e-13  4.35296e-15  6.07616e-14  2.89668e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.4938, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.00522e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.62232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1034.01      202.889      56.0577      67.1435      7.71002      823.617      97.6061
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187739, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14918, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.8503e-11  2.22233e-11  5.10522e-12
      low eigenvalue method done, cpu time[sec] = 2.16556, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-11  5.11e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.62e-13  5.11e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.10525e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.09448e-12  4.27837e-12  6.34106e-13  2.35424e-14  9.66783e-14  3.73706e-15  5.79866e-14  2.91716e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.58319, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.27737, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61463, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            861.672      169.074      46.7148       55.953      6.42502      686.347      81.3384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.93309, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.185079, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12784, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.2368e-12  2.03004e-11  4.56119e-12
      low eigenvalue method done, cpu time[sec] = 2.1443, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-11  4.56e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.31e-13  4.56e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.5608e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.55114e-12  3.83777e-12  5.50175e-13  2.09357e-14  8.38511e-14  3.29085e-15  5.55259e-14   2.9367e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54633, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          9.8073e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.273379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.63909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            738.576      144.921      40.0412      47.9597      5.50716      588.298      69.7186
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.187816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15025, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.97579e-12   1.8767e-11  4.13445e-12
      low eigenvalue method done, cpu time[sec] = 2.16659, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-11  4.13e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-13  4.13e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.13403e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.12526e-12  3.48961e-12  4.86689e-13  1.89171e-14  7.42109e-14   2.9499e-15  5.33272e-14  2.95516e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.59852, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.12083e+10
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.65052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            646.254      126.806      35.0361      41.9647      4.81876      514.761      61.0038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95459, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.188565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15203, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.11185e-11  1.75061e-11  3.78872e-12
      low eigenvalue method done, cpu time[sec] = 2.16873, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-11  3.79e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.85e-13  3.79e-12         1
         *Z       ---       ---  1.89e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.7883e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.78031e-12   3.2059e-12  4.36807e-13  1.72976e-14  6.66685e-14  2.67936e-15  5.13469e-14  2.97247e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.61465, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 38080 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008192
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.223464
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.16751
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.155282
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.781025
         W1 Well: minimal relaxation eigenvalue = 0.0154348
         W1 Well: maximal relaxation eigenvalue = 4.1174
         W1 Well:       grid size = 349
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31720 1/cm
         B1 Barrier:        grid size = 191
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -120 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 79 1/cm
         B3 Barrier:        grid size = 214
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23720 1/cm => truncating
         B5 Barrier:        grid size = 309
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23720 1/cm
         B6 Barrier:        grid size = 183
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.61347, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31720 -23720 3.03e+05 2.83e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -120 8.49e+15
         B2     80 1.82e+15
         B3  -4720  5.2e+14
         B4  -6320 6.13e+14
         B5 -23720  7.2e+13
         B6   1480 7.31e+15
         B7   4680 9.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.13e-07  3.69e-07  1.18e-08  1.83e-09  1.45e-18  2.04e-05   0.00288
          R  4.69e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.71e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2   8.5e+07      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.46e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4   6.9e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  4.91e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6       347   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.95e-10  3.37e-10  1.07e-11  1.67e-12  1.32e-21  1.86e-08  2.63e-06
          R  5.13e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.97e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  9.31e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.98e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.56e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.38e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6   3.8e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
   MasterEquation::set:  done, cpu time[sec] = 1.62489, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252195, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.7183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              34070      7308.31      2087.52      2458.34      288.727      29312.1      3775.74
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71747, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.179574, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.82734e-09  1.81897e-09  5.52696e-10
      low eigenvalue method done, cpu time[sec] = 1.93963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-09  5.53e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-11  5.53e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.52695e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.51589e-10  4.09658e-10  1.12848e-10  3.36765e-12   2.2901e-11  6.78097e-13   2.1356e-12  1.31237e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.37601, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251299, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.81627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11356.7       2436.1      695.839      819.445      96.2424      9770.71      1258.58
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168135, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91514, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.13471e-09  1.33393e-09    3.872e-10
      low eigenvalue method done, cpu time[sec] = 1.92989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-09  3.87e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.06e-11  3.87e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.87199e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.86424e-10  3.03829e-10  6.66926e-11   2.0336e-12  1.13024e-11  3.69053e-13  2.19801e-12  1.31561e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.46289, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.31828e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.250826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.87076, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               6814      1461.66      417.503      491.667      57.7454      5862.42      755.147
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.16914, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18194e-09  1.12951e-09  3.18458e-10
      low eigenvalue method done, cpu time[sec] = 1.94104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-09  3.18e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-11  3.18e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.18457e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   3.1782e-10  2.55312e-10  5.03201e-11  1.59387e-12  8.12504e-12   2.7766e-13  2.19129e-12  1.31899e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.53356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.84559e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.253184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.84292, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4867.14      1044.04      298.217      351.191      41.2467      4187.45      539.391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71723, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168488, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91409, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.17174e-09  1.00361e-09  2.76775e-10
      low eigenvalue method done, cpu time[sec] = 1.93004, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-09  2.77e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-11  2.77e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.76773e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.76219e-10  2.24671e-10  4.12842e-11  1.35036e-12  6.51899e-12  2.29512e-13  2.16561e-12  1.32246e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.49512, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          2.3729e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.96692, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3785.56      812.035      231.946      273.148      32.0808       3256.9      419.526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72714, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92319, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08805e-09  9.14506e-10  2.47674e-10
      low eigenvalue method done, cpu time[sec] = 1.93901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.15e-10  2.48e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-11  2.48e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.47672e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.47177e-10  2.02751e-10   3.5386e-11  1.18913e-12  5.51879e-12  1.98643e-13  2.13343e-12  1.32599e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.62873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.94757, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               3407      730.831      208.752      245.834      28.8727      2931.21      377.574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167514, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.06486e-10  8.78466e-10  2.36011e-10
      low eigenvalue method done, cpu time[sec] = 1.93771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.78e-10  2.36e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-11  2.36e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3601e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.35538e-10  1.93847e-10  3.31182e-11  1.12635e-12  5.14338e-12  1.86847e-13  2.11641e-12  1.32777e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.6075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.95484e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25142, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.05992, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2271.33      487.221      139.168      163.889      19.2485      1954.14      251.716
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71785, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.16758, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91355, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.55011e-10  7.47307e-10  1.94184e-10
      low eigenvalue method done, cpu time[sec] = 1.92917, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.47e-10  1.94e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-11  1.94e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.94182e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.93794e-10  1.61359e-10  2.54408e-11  9.09018e-13  3.90644e-12  1.47005e-13  2.03085e-12  1.33673e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.71138, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         5.27312e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.253245, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.10952, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1703.5      365.416      104.376      122.917      14.4364      1465.61      188.787
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72855, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167698, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92433, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.07091e-10  6.61725e-10  1.67493e-10
      low eigenvalue method done, cpu time[sec] = 1.94056, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-10  1.67e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-11  1.67e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.67492e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.67157e-10  1.40187e-10  2.09196e-11  7.76108e-13  3.19973e-12  1.23426e-13   1.9509e-12  1.34557e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.77515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          6.5914e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.2522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.13532, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1362.8      292.332      83.5007      98.3334      11.5491      1172.48      151.029
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73042, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92601, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.57483e-10   5.9971e-10  1.48505e-10
      low eigenvalue method done, cpu time[sec] = 1.94183, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-10  1.49e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.26e-12  1.49e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.48504e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.48207e-10  1.24919e-10  1.78852e-11  6.83974e-13  2.73301e-12  1.07447e-13  1.87838e-12  1.35415e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.79957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15683, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1135.67       243.61      69.5839      81.9445      9.62424      977.071      125.858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72555, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.168316, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92246, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.73655e-10  5.51893e-10  1.34094e-10
      low eigenvalue method done, cpu time[sec] = 1.93816, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-10  1.34e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.52e-12  1.34e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.34093e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.33825e-10  1.13218e-10  1.56847e-11  6.15267e-13  2.39777e-12  9.57312e-14   1.8128e-12  1.36237e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.81767, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         9.22796e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.19137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            973.429      208.809      59.6433      70.2381      8.24935      837.489      107.878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.169033, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9264, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.76661e-10  5.13466e-10  1.22673e-10
      low eigenvalue method done, cpu time[sec] = 1.94257, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.13e-10  1.23e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.93e-12  1.23e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.22672e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.22426e-10  1.03877e-10  1.40045e-11  5.61504e-13  2.14333e-12  8.66874e-14  1.75329e-12  1.37017e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.85888, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.05462e+10
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.19019, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             851.75      182.708      52.1879      61.4584      7.21818      732.803      94.3934
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168499, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92127, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.85019e-10  4.81655e-10  1.13336e-10
      low eigenvalue method done, cpu time[sec] = 1.93707, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-10  1.13e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.43e-12  1.13e-10         1
         *Z       ---       ---  3.13e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.13335e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.13108e-10  9.61956e-11  1.26733e-11  5.17971e-13  1.94252e-12  7.94459e-14  1.69899e-12  1.37752e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.84888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 40860 1/cm
      Energy step      = 217 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008149
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.173088
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.154612
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.159149
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.706415
         W1 Well: minimal relaxation eigenvalue = 0.0147084
         W1 Well: maximal relaxation eigenvalue = 1.32909
         W1 Well:       grid size = 334
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 189
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -153 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 63 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4710 1/cm
         B4 Barrier:        grid size = 217
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 295
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 182
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1365 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4620 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.47902, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23155 4.58e+05 4.27e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -153 1.55e+16
         B2     64 3.62e+15
         B3  -4710 1.07e+15
         B4  -6229 1.24e+15
         B5 -23155 1.48e+14
         B6   1366 1.43e+16
         B7   4621 1.99e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.03e-08   1.8e-08  8.59e-10  1.56e-10  6.71e-19  8.17e-07  8.79e-05
          R   9.7e+07         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.56e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.16e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3   6.4e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.49e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.22e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.14e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e-11  1.78e-11   8.5e-13  1.55e-13  6.64e-22  8.08e-10   8.7e-08
          R  9.81e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.62e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.18e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.47e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.51e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.24e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.15e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
   MasterEquation::set:  done, cpu time[sec] = 1.49035, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43637.6      10196.7      3000.89      3481.23      417.171      40262.5      5589.78
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.155051, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6881, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.54045e-08  2.55929e-08  8.12232e-09
      low eigenvalue method done, cpu time[sec] = 1.70177, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-08  8.12e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-10  8.12e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.12232e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.11867e-09   6.0807e-09  1.61825e-09  4.87693e-11  3.23961e-10  9.69881e-12  3.72522e-11  3.30016e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.76246, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230325, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.53478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14545.9      3398.91       1000.3      1160.41      139.057      13420.8      1863.26
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52694, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151608, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68683, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99054e-08  1.92945e-08  5.87969e-09
      low eigenvalue method done, cpu time[sec] = 1.70098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-08  5.88e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-10  5.88e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.87969e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.87704e-09  4.64928e-09  9.87034e-10  3.06245e-11  1.66091e-10  5.49406e-12  3.84884e-11  3.30761e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.89214, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.24747e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230572, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.56108, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8727.51      2039.34      600.178      696.246      83.4342       8052.5      1117.96
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66686e-08   1.6573e-08    4.923e-09
      low eigenvalue method done, cpu time[sec] = 1.69625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-08  4.92e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.44e-10  4.92e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.923e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.92078e-09  3.97364e-09  7.57954e-10  2.45007e-11  1.21852e-10  4.22156e-12  3.85773e-11  3.31535e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.91312, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.74645e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230535, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.60677, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6233.94      1456.67      428.699      497.318      59.5958      5751.78       798.54
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52391, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151745, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68383, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.53317e-08  1.48735e-08  4.33363e-09
      low eigenvalue method done, cpu time[sec] = 1.6975, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-08  4.33e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-10  4.33e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.33363e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.33168e-09  3.53974e-09  6.29805e-10    2.106e-11  9.91841e-11  3.54169e-12  3.83228e-11  3.32328e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.98304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.24544e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230604, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.62454, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4848.62      1132.97      333.432      386.803      46.3523      4473.61      621.086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52349, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152644, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68441, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37231e-08  1.36588e-08  3.91731e-09
      low eigenvalue method done, cpu time[sec] = 1.69887, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-08  3.92e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-10  3.92e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.91731e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.91554e-09  3.22549e-09  5.45305e-10  1.87565e-11  8.49202e-11   3.1011e-12  3.79343e-11  3.33133e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.98581, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.67906, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4363.76      1019.67      300.089      348.123      41.7171      4026.25      558.978
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5262, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68709, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.3278e-08  1.31644e-08  3.74921e-09
      low eigenvalue method done, cpu time[sec] = 1.70141, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-08  3.75e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-10  3.75e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.74921e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.74753e-09  3.09686e-09  5.12603e-10  1.78531e-11  7.95305e-11  2.93157e-12  3.77165e-11  3.33539e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.04237, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          3.7424e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.6862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2909.17      679.781      200.059      232.082      27.8114      2684.17      372.652
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151626, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67843, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.13396e-08  1.13489e-08  3.13963e-09
      low eigenvalue method done, cpu time[sec] = 1.69273, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-08  3.14e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-10  3.14e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.13963e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.13821e-09  2.62215e-09  4.00832e-10  1.46924e-11  6.15973e-11  2.35306e-12  3.65566e-11  3.35573e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.03938, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         4.98987e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.77295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2181.88      509.836      150.045      174.061      20.8585      2013.12      279.489
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52533, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68555, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04997e-08   1.0149e-08  2.74437e-09
      low eigenvalue method done, cpu time[sec] = 1.70019, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-08  2.74e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-10  2.74e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.74437e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.74314e-09  2.30769e-09  3.34069e-10  1.27288e-11  5.11991e-11  2.00542e-12  3.54158e-11  3.37581e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.13429, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.23734e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.81269, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1745.5      407.869      120.036      139.249      16.6868       1610.5      223.591
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5242, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.14346e-09  9.27082e-09  2.45966e-09
      low eigenvalue method done, cpu time[sec] = 1.69835, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.27e-09  2.46e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-10  2.46e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.45966e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.45855e-09  2.07804e-09  2.88759e-10  1.13506e-11  4.42517e-11  1.76694e-12  3.43505e-11  3.39531e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.17481, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231917, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.78058, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1454.59      339.891       100.03      116.041      13.9057      1342.08      186.326
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.15231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.45633e-09  8.58826e-09  2.24133e-09
      low eigenvalue method done, cpu time[sec] = 1.70054, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.59e-09  2.24e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-10  2.24e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.24133e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.24032e-09  1.90021e-09  2.55593e-10  1.03122e-11  3.92128e-11  1.59033e-12  3.33676e-11  3.41403e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.14203, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         8.73227e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.83333, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1246.79      291.335      85.7398      99.4636      11.9192      1150.36      159.708
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52551, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151639, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.99131e-09  8.03596e-09  2.06677e-09
      low eigenvalue method done, cpu time[sec] = 1.6995, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.04e-09  2.07e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-10  2.07e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.06677e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.06584e-09  1.75698e-09  2.30065e-10  9.49242e-12  3.53561e-11   1.4528e-12  3.24615e-11  3.43188e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1927, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         9.97974e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.82971, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1090.94      254.918      75.0223      87.0307      10.4293      1006.56      139.744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152312, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6866, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.5846e-09  7.57603e-09  1.92296e-09
      low eigenvalue method done, cpu time[sec] = 1.70143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.58e-09  1.92e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-10  1.92e-09         1
         *Z       ---       ---  7.01e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.92296e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.92209e-09  1.63828e-09  2.09696e-10  8.82339e-12  3.22897e-11  1.34183e-12  3.16244e-11  3.44879e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.19147, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 43640 1/cm
      Energy step      = 233 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007651
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.198633
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.144506
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.154096
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.661147
         W1 Well: minimal relaxation eigenvalue = 0.0140922
         W1 Well: maximal relaxation eigenvalue = 1.31574
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 188
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -163 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 69 1/cm
         B3 Barrier:        grid size = 208
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4823 1/cm
         B4 Barrier:        grid size = 214
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23231 1/cm => truncating
         B5 Barrier:        grid size = 287
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23230 1/cm
         B6 Barrier:        grid size = 181
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4496 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.44272, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23230 4.33e+05 6.34e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -163 2.73e+16
         B2     70  6.9e+15
         B3  -4823  2.1e+15
         B4  -6222  2.4e+15
         B5 -23230 2.93e+14
         B6   1467 2.69e+16
         B7   4497    4e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.72e-10  1.36e-09  9.14e-11   1.9e-11  3.48e-19  5.18e-08   4.4e-06
          R   1.3e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  7.36e+08     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.09e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  5.26e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.87e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.93e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.27e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.2e-13  1.44e-12  9.72e-14  2.02e-14   3.7e-22   5.5e-11  4.68e-09
          R  1.22e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  6.93e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.03e+13      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  4.95e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4   2.7e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.82e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.14e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
   MasterEquation::set:  done, cpu time[sec] = 1.45392, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.2129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            54290.5      13754.2         4184      4788.93      584.333      53549.2      7971.61
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-07  7.83e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-09  7.83e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.82827e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.82094e-08  5.89995e-08  1.52222e-08  4.63479e-10  3.01236e-09  9.11323e-11  4.20232e-10  5.11489e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.83847, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.32412, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18096.8      4584.74      1394.67      1596.31      194.778      17849.7       2657.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-07  5.83e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-09  5.83e-08        -1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.82967e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.82421e-08  4.63119e-08  9.54344e-09  3.01163e-10  1.59672e-09  5.34675e-11  4.34901e-10  5.12547e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94108, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.18603e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.37462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10858.1      2750.84      836.799      957.787      116.867      10709.8      1594.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-07  4.96e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-09  4.96e-08        -1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.95716e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.95252e-08  4.01657e-08  7.44181e-09  2.45303e-10  1.19249e-09  4.18497e-11  4.37502e-10  5.13643e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.99315, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.66044e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.37954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7755.78      1964.89      597.714      684.133      83.4761      7649.89       1138.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-07  4.41e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-09  4.41e-08        -1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.41224e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.40811e-08  3.61597e-08  6.25253e-09  2.13531e-10   9.8296e-10   3.5569e-11  4.36282e-10  5.14763e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.99853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.13485e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216647, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.41933, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6032.28      1528.25      464.889      532.104      64.9259      5949.92      885.735
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-07  4.02e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-09  4.02e-08        -1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.02337e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   4.0196e-08   3.3227e-08  5.46153e-09  1.92061e-10  8.49963e-10  3.14619e-11  4.33448e-10  5.15898e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.03796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.44947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5429.05      1375.42        418.4      478.893      58.4333      5354.92      797.161
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-07  3.87e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-09  3.87e-08        -1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.86533e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.86171e-08  3.20183e-08   5.1537e-09  1.83589e-10  7.99423e-10  2.98723e-11  4.31715e-10  5.16468e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.56905, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         3.55809e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.49295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3619.37      916.948      278.933      319.262      38.9555      3569.95      531.441
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-07  3.29e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-09  3.29e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.28672e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.28364e-08  2.75132e-08  4.09299e-09  1.53679e-10  6.29858e-10  2.44005e-11  4.21791e-10  5.19327e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.11227, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         4.74412e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.54475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2714.52      687.711        209.2      239.447      29.2166      2677.46      398.581
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-07  2.91e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-09  2.91e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.90631e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.90358e-08   2.4486e-08  3.45167e-09  1.34846e-10  5.30296e-10  2.10691e-11  4.11445e-10  5.22149e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.16397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.93015e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216777, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.57913, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2171.62      550.169       167.36      191.557      23.3733      2141.97      318.864
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.41148, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.14043, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55969, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.29368e-08  9.27288e-08   2.6293e-08
      low eigenvalue method done, cpu time[sec] = 1.57407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.27e-08  2.63e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-09  2.63e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.6293e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.62684e-08  2.22508e-08  3.01223e-09  1.21487e-10  4.63112e-10  1.87602e-11  4.01481e-10  5.24892e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.77118, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.60432, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1809.68      458.474      139.467      159.631      19.4778      1784.97       265.72
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40567, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139817, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5532, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.63558e-08  8.64148e-08  2.41499e-08
      low eigenvalue method done, cpu time[sec] = 1.5673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.64e-08  2.41e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-09  2.41e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.41499e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.41273e-08  2.05043e-08  2.68801e-09  1.11331e-10  4.13978e-10  1.70355e-11  3.92096e-10  5.27534e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.79053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          8.3022e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.65031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1551.16      392.978      119.543      136.827      16.6952      1529.98       227.76
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40357, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.140607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.12007e-08  8.12743e-08  2.24232e-08
      low eigenvalue method done, cpu time[sec] = 1.56603, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.13e-08  2.24e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-09  2.24e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.24232e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.24022e-08  1.90866e-08  2.43673e-09  1.03252e-10    3.761e-10  1.56823e-11   3.8331e-10  5.30061e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.83673, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         9.48823e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216079, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.66145, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1357.26      343.856        104.6      119.723      14.6083      1338.73       199.29
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.139884, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55226, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.70267e-08  7.69706e-08   2.0991e-08
      low eigenvalue method done, cpu time[sec] = 1.56663, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.7e-08   2.1e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-09   2.1e-08         1
         *Z       ---       ---     2e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.0991e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.09714e-08  1.79038e-08  2.23501e-09  9.66134e-11  3.45793e-10  1.45831e-11  3.75091e-10  5.32468e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.84619, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 46420 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -71.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007388
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.187158
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.135601
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.152159
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.589416
         W1 Well: minimal relaxation eigenvalue = 0.0135513
         W1 Well: maximal relaxation eigenvalue = 1.25931
         W1 Well:       grid size = 312
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31579 1/cm
         B1 Barrier:        grid size = 186
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 185
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 170 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4829 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6329 1/cm
         B5 Barrier: nonpositive number of states at -23580 1/cm => truncating
         B5 Barrier:        grid size = 280
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23579 1/cm
         B6 Barrier:        grid size = 180
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4670 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.34346, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31579 -23579 3.36e+05 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 4.63e+16
         B2    171 1.26e+16
         B3  -4829 3.99e+15
         B4  -6329 4.52e+15
         B5 -23579  5.6e+14
         B6   1421 4.85e+16
         B7   4671 7.73e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.14e-11  1.45e-10  1.31e-11  3.05e-12  1.96e-19   4.7e-09  3.25e-07
          R  1.23e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1   6.9e+09     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  7.65e+10      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  3.28e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  5.09e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  2.13e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  3.07e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.29e-14  1.65e-13  1.49e-14  3.48e-15  2.24e-22  5.36e-12  3.71e-10
          R  1.08e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  6.05e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2   6.7e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  2.87e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.46e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  1.87e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.69e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
   MasterEquation::set:  done, cpu time[sec] = 1.35465, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202387, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.4261, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65806.8      17982.2      5680.79      6424.06      796.725      69020.8      10995.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-06  5.39e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-08  5.39e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.386e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  5.37665e-07  4.08279e-07  1.02197e-07  3.15304e-09  2.00814e-08   6.1357e-10  3.33582e-09  5.38805e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.00402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.11251, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21935.6      5994.08       1893.6      2141.35      265.575      23006.9      3665.28
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-06  4.11e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.65e-08  4.11e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.11137e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.10424e-07   3.2784e-07  6.56793e-08  2.11099e-09  1.09591e-08  3.71238e-10  3.45766e-09  5.39835e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.68608, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.13208e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.17222, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13161.4      3596.45      1136.16      1284.81      159.345      13804.2      2199.17
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-06  3.54e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-08  3.54e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.54363e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.53749e-07  2.87974e-07   5.1925e-08  1.74668e-09  8.31359e-09  2.95329e-10  3.48907e-09  5.40896e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.74568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.58492e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202015, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19366, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9400.97      2568.89      811.542      917.723      113.818      9860.11      1570.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.75e-07  3.18e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-08  3.18e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.18478e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.17926e-07  2.61648e-07  4.40614e-08  1.53735e-09  6.92922e-09  2.53891e-10  3.49046e-09  5.41978e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.766, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.03775e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21176, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7311.86      1998.03      631.199      713.785       88.525      7668.98      1221.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.08e-07  2.93e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-08  2.93e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.9264e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.92132e-07  2.42192e-07  3.87911e-08  1.39478e-09  6.04403e-09  2.26588e-10   3.4784e-09  5.43073e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7904, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6580.68      1798.22      568.079      642.406      79.6725      6902.08      1099.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.81e-07  2.82e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-08  2.82e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.82079e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.8159e-07  2.34125e-07  3.67299e-08  1.33823e-09  5.70604e-09  2.15968e-10  3.46956e-09  5.43622e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         3.39625e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201804, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.25141, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4387.12      1198.82       378.72      428.271       53.115      4601.39      733.056
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-07  2.43e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-08  2.43e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.43088e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.42667e-07  2.03792e-07  2.95765e-08  1.13705e-09  4.56403e-09  1.79144e-10  3.41248e-09  5.46371e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.82787, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.52834e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.31487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3290.34      899.112       284.04      321.203      39.8362      3451.04      549.792
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.06e-07  2.17e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.6e-09  2.17e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1714e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.16763e-07  1.83153e-07   2.5205e-08  1.00891e-09   3.8863e-09  1.56475e-10    3.348e-09   5.4908e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.89402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.66042e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202481, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.35543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2632.27       719.29      227.232      256.963       31.869      2760.83      439.833
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.54e-07  1.98e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.89e-09  1.98e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.98065e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.97722e-07  1.67765e-07  2.21845e-08  9.17185e-10  3.42508e-09  1.40625e-10  3.28354e-09  5.51717e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.9317, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203273, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.35829, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2193.56      599.408       189.36      214.135      26.5575      2300.69      366.528
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.13e-07  1.83e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.33e-09  1.83e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.83191e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.82874e-07  1.55646e-07  1.99402e-08   8.4692e-10  3.08536e-09  1.28697e-10  3.22138e-09  5.54261e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.9352, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         7.92459e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202865, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1880.19      513.778      162.308      183.545      22.7636      1972.02      314.167
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.79e-07  1.71e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.87e-09  1.71e-07        -1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.71127e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.7083e-07  1.45741e-07  1.81902e-08  7.90649e-10  2.82186e-09  1.19278e-10   3.1622e-09  5.56702e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97277, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         9.05668e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.40411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1645.17      449.556       142.02      160.602      19.9181      1725.52      274.896
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-07  1.61e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.48e-09  1.61e-07         1
         *Z       ---       ---  6.84e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.61062e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.60782e-07  1.37427e-07  1.67779e-08  7.44144e-10  2.60986e-09  1.11584e-10  3.10611e-09  5.59035e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.97932, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 49201 1/cm
      Energy step      = 267 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -69.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007514
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179496
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.127569
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.132585
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.568417
         W1 Well: minimal relaxation eigenvalue = 0.0130711
         W1 Well: maximal relaxation eigenvalue = 1.82153
         W1 Well:       grid size = 303
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31699 1/cm
         B1 Barrier:        grid size = 185
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -194 1/cm
         B2 Barrier:        grid size = 184
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 72 1/cm
         B3 Barrier:        grid size = 202
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4733 1/cm
         B4 Barrier:        grid size = 208
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6335 1/cm
         B5 Barrier: nonpositive number of states at -23423 1/cm => truncating
         B5 Barrier:        grid size = 272
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23423 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4611 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.28935, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31699 -23423 3.77e+05 1.35e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -194 7.62e+16
         B2     73 2.23e+16
         B3  -4733 7.36e+15
         B4  -6335 8.23e+15
         B5 -23423 1.04e+15
         B6   1409 8.46e+16
         B7   4612 1.43e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.14e-11  2.05e-11  2.39e-12  6.17e-13  1.19e-19  5.74e-10  3.32e-08
          R  8.76e+10         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  4.87e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  4.19e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.62e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  8.39e+18  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.74e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  3.01e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.39e-14   2.5e-14  2.91e-15  7.52e-16  1.45e-22  6.99e-13  4.04e-11
          R  7.19e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  3.99e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  3.44e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.33e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  6.88e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.43e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  2.47e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 1.30073, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190884, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78017.5      22890.6      7536.79      8430.27      1061.12      86606.7      14670.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.61e-06  2.82e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-07  2.82e-06         1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.82056e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999997  2.81615e-06  2.14986e-06  5.24469e-07  1.63719e-08  1.02316e-07  3.15574e-09  1.99331e-08  4.14731e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.45511, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.192148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.99363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26005.8      7630.19      2512.26      2810.09      353.706      28868.9      4890.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.13e-06   2.2e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.1e-08   2.2e-06         1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.2004e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  2.19696e-06   1.7613e-06  3.44412e-07  1.12571e-08  5.73061e-08  1.96263e-09  2.06852e-08  4.15464e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.08423e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.192351, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15603.5      4578.11      1507.36      1686.05      212.224      17321.3      2934.04
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.45e-06  1.92e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.2e-08  1.92e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.91921e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.91621e-06  1.56456e-06  2.75575e-07  9.44504e-09  4.40804e-08  1.58402e-09  2.09253e-08  4.16217e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.55041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.51792e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191568, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11145.4      3270.08      1076.68      1204.32      151.588      12372.4      2095.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.01e-06  1.74e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.62e-08  1.74e-06         1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.73959e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.73687e-06  1.43309e-06  2.35879e-07  8.39485e-09  3.71032e-08  1.37563e-09  2.09886e-08  4.16983e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57966, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.95162e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.192699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8668.61       2543.4      837.421      936.696      117.902      9622.97      1630.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.69e-06  1.61e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.19e-08  1.61e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.60924e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.60672e-06  1.33509e-06  2.09101e-07  7.67475e-09   3.2614e-08  1.23746e-09  2.09693e-08  4.17755e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.61777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191043, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7801.75      2289.06      753.679      843.027      106.112      8660.67      1467.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.56e-06  1.56e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-08  1.56e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.5557e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.55327e-06  1.29424e-06  1.98586e-07  7.38791e-09  3.08929e-08  1.18349e-09  2.09416e-08  4.18143e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.62175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.25269e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.11346, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5201.17      1526.04      502.453      562.018      70.7412      5773.78      978.013
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.06e-06  1.36e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-08  1.36e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.35655e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.35443e-06  1.13941e-06  1.61865e-07  6.36057e-09  2.50425e-08  9.95167e-10  2.07127e-08  4.20079e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.65907, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.33693e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191402, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.12801, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3900.87      1144.53      376.839      421.513      53.0559      4330.34       733.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.72e-06  1.22e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-08  1.22e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.22259e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.22068e-06  1.03288e-06   1.3922e-07  5.69972e-09  2.15387e-08  8.78138e-10  2.04206e-08  4.21986e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.67219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.42116e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.16332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3120.7      915.623      301.472      337.211      42.4447      3464.27      586.808
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-06  1.12e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-08  1.12e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1233e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.12154e-06  9.52768e-07  1.23461e-07  5.22292e-09  1.91368e-08  7.95689e-10  2.01139e-08  4.23844e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7074, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191231, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.20276, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2600.58      763.019      251.226      281.009      35.3706      2886.89      489.007
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.26e-06  1.05e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.3e-08  1.05e-06        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.04533e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999   1.0437e-06  8.89221e-07  1.11681e-07  4.85525e-09  1.73569e-08  7.33245e-10  1.98097e-08  4.25641e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.74883, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.58962e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2229.07      654.016      215.337      240.865      30.3177      2474.48      419.149
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.1e-06  9.82e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.08e-08  9.82e-07        -1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.81723e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.80189e-07  8.36972e-07  1.02448e-07  4.55911e-09  1.59689e-08  6.83665e-10  1.95144e-08  4.27369e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.75814, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         8.67385e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190462, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.24935, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1950.44      572.264       188.42      210.757      26.5279      2165.17      366.755
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-06  9.28e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.89e-08  9.28e-07         1
         *Z       ---       ---  2.73e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.28374e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.26923e-07  7.92885e-07  9.49619e-08  4.31312e-09  1.48469e-08  6.42964e-10  1.92304e-08  4.29027e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.79403, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 51981 1/cm
      Energy step      = 283 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007172
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15834
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.121544
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.144675
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.540388
         W1 Well: minimal relaxation eigenvalue = 0.012647
         W1 Well: maximal relaxation eigenvalue = 4.356
         W1 Well:       grid size = 296
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31786 1/cm
         B1 Barrier:        grid size = 184
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 183
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 192 1/cm
         B3 Barrier:        grid size = 200
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6316 1/cm
         B5 Barrier: nonpositive number of states at -23297 1/cm => truncating
         B5 Barrier:        grid size = 266
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23297 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1324 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4437 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.24075, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31786 -23297 4.13e+05 1.93e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.22e+17
         B2    193 3.83e+16
         B3  -4619 1.32e+16
         B4  -6316 1.46e+16
         B5 -23297 1.86e+15
         B6   1325 1.43e+17
         B7   4438 2.56e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.03e-12  3.69e-12  5.35e-13  1.51e-13  7.71e-20  8.99e-11  4.43e-09
          R  4.94e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.71e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.87e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  6.61e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4   1.3e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  1.11e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  2.26e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.62e-15  4.77e-15  6.91e-16  1.95e-16  9.96e-23  1.16e-13  5.72e-12
          R  3.82e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1   2.1e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.45e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  5.12e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4     1e+22  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  8.62e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  1.75e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
   MasterEquation::set:  done, cpu time[sec] = 1.25186, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75733, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            90742.2      28470.7      9796.11      10849.2      1384.12       106182      19010.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-05  1.18e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.88e-07  1.18e-05        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.18331e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999988  1.18127e-05  9.05658e-06  2.16156e-06  6.81938e-08  4.18675e-07  1.30298e-08  9.44073e-08   2.4676e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.27528, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181851, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.83716, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30247.4      9490.24      3265.37       3616.4      461.373      35393.9      6336.73
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-05  9.41e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-07  9.41e-06         1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.40847e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999991  9.39222e-06  7.55169e-06  1.44594e-06  4.80128e-08  2.39969e-07  8.30472e-09  9.80594e-08  2.47167e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.35374, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1          1.0414e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181134, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18148.4      5694.14      1959.22      2169.84      276.824      21236.3      3802.04
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-05  8.29e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-07  8.29e-06         1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.29242e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992   8.2781e-06  6.77483e-06  1.16917e-06  4.07854e-08  1.86881e-07  6.78939e-09   9.9398e-08  2.47582e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.366, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.45797e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12963.2      4067.24      1399.44      1549.89      197.731      15168.8      2715.74
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-05  7.57e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-07  7.57e-06         1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.57296e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  7.55988e-06   6.2501e-06  1.00843e-06  3.65667e-08  1.58683e-07  5.94968e-09  9.99137e-08  2.48003e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.41253, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.87453e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182974, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.91368, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10082.5      3163.41      1088.46      1205.47      153.791        11798      2112.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-05  7.05e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-07  7.05e-06         1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.04726e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  7.03509e-06  5.85592e-06  8.99403e-07  3.36576e-08  1.40445e-07   5.3899e-09  1.00031e-07  2.48427e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.43376, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182465, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.94195, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9074.22      2847.07      979.611      1084.92      138.412      10618.2      1901.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-05  6.83e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.41e-07  6.83e-06         1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.83039e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993   6.8186e-06  5.69082e-06  8.56439e-07  3.24946e-08  1.33429e-07  5.17049e-09  1.00001e-07  2.48639e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46113, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.12421e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182617, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.95575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6049.48      1898.05      653.074       723.28      92.2746      7078.77      1267.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-05  6.02e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-07  6.02e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.01841e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999994  6.00802e-06  5.06061e-06  7.05628e-07  2.83053e-08  1.09455e-07  4.40082e-09   9.9372e-08  2.49699e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.47639, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.16562e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183997, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.97522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4537.11      1423.54      489.805       542.46      69.2059      5309.08       950.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-05  5.47e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-07  5.47e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.46708e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  5.45765e-06  4.62263e-06  6.11901e-07  2.55875e-08  9.49853e-08  3.91866e-09  9.83743e-08  2.50743e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.20702e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.99813, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3629.69      1138.83      391.844      433.968      55.3647      4247.26      760.408
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-05  5.06e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-07  5.06e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.05541e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  5.04668e-06  4.29072e-06  5.46269e-07  2.36133e-08  8.50041e-08  3.57676e-09  9.72524e-08  2.51761e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182583, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.01529, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3024.74      949.024      326.537       361.64      46.1373      3539.39      633.673
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.37e-05  4.73e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-07  4.73e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.7302e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.72203e-06  4.02576e-06  4.96956e-07  2.20822e-08  7.75683e-08  3.31639e-09  9.60982e-08  2.52746e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53434, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.28983e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182838, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.05364, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2592.63      813.449      279.889      309.977      39.5462      3033.76      543.148
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-05  4.46e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-07  4.46e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.46347e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.45576e-06  3.80673e-06  4.58132e-07  2.08428e-08  7.17433e-08  3.10867e-09  9.49513e-08  2.53697e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57227, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         8.33123e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.01772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2268.56      711.768      244.903       271.23       34.603      2654.54      475.255
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-05  4.24e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-07  4.24e-06        -1
         *Z       ---       ---  1.24e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.23873e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.23141e-06  3.62104e-06  4.26528e-07  1.98086e-08  6.70154e-08  2.93743e-09  9.38295e-08  2.54611e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.09483, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 54761 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006967
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.162081
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.115175
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.130186
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.505049
         W1 Well: minimal relaxation eigenvalue = 0.0122651
         W1 Well: maximal relaxation eigenvalue = 1.41798
         W1 Well:       grid size = 288
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 183
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -139 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 198
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 204
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6439 1/cm
         B5 Barrier: nonpositive number of states at -23239 1/cm => truncating
         B5 Barrier:        grid size = 260
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23239 1/cm
         B6 Barrier:        grid size = 178
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1360 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4660 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.18723, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23239 4.31e+05 2.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -139 1.91e+17
         B2    161 6.37e+16
         B3  -4639  2.3e+16
         B4  -6439 2.52e+16
         B5 -23239 3.25e+15
         B6   1361 2.34e+17
         B7   4661 4.41e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.36e-13  8.05e-13  1.41e-13  4.33e-14  5.23e-20  1.72e-11  7.36e-10
          R   2.3e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  1.24e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  7.08e+12      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  2.31e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.91e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  5.81e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.36e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.96e-16   1.1e-15  1.93e-16  5.93e-17  7.16e-23  2.36e-14  1.01e-12
          R  1.68e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  9.08e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  5.17e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  1.69e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4   1.4e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  4.25e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  9.93e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
   MasterEquation::set:  done, cpu time[sec] = 1.19856, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172842, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             103816      34706.4      12504.4      13723.7      1772.57       127599      24024.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.69e-05  4.12e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-06  4.12e-05         1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.12486e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999959   4.1195e-05  3.17148e-05  7.39979e-06  2.36684e-07  1.42902e-06  4.48578e-08  3.68704e-07  1.18546e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.16004, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172485, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.73316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34605.2      11568.8      4168.12      4574.56      590.858      42532.9      8008.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-05  3.34e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-06  3.34e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.33678e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999967  3.33245e-05  2.68652e-05  5.03927e-06  1.70214e-07  8.36172e-07  2.92279e-08  3.83176e-07  1.18729e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22082, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.00278e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20763.1      6941.29      2500.87      2744.74      354.515      25519.8      4804.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.32e-05  2.97e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.3e-07  2.97e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.96884e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99997  2.96498e-05  2.43157e-05  4.11502e-06  1.46206e-07  6.58463e-07  2.41731e-08  3.89044e-07  1.18915e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.24948, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.40389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172107, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14830.8      4958.06      1786.34      1960.53      253.225      18228.4      3432.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.82e-05  2.73e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.66e-07  2.73e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.72963e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999973  2.72609e-05  2.25764e-05  3.57447e-06  1.32109e-07   5.6353e-07  2.13561e-08  3.91767e-07  1.19103e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.24935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1           1.805e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11535.1      3856.27      1389.37      1524.85      196.953      14177.6       2669.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.45e-05  2.55e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.18e-07  2.55e-05         1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.55375e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999974  2.55043e-05  2.12605e-05  3.20596e-06  1.22341e-07  5.01852e-07  1.94699e-08  3.92926e-07  1.19292e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.28989, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.17278, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.82144, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10381.6      3470.64      1250.44      1372.37      177.257      12759.9      2402.46
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.29e-05  2.48e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.98e-07  2.48e-05         1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.4809e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999975  2.47768e-05  2.07069e-05  3.06026e-06  1.18423e-07  4.78054e-07  1.87283e-08  3.93144e-07  1.19387e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.31084, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.00833e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172296, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.8444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6921.05      2313.76      833.624      914.912      118.172      8506.59      1601.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.7e-05  2.21e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.22e-07  2.21e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.20652e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999978  2.20366e-05    1.858e-05  2.54636e-06  1.04244e-07  3.96382e-07  1.61152e-08  3.92241e-07  1.19858e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.33419, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.01111e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.86397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5190.79      1735.32      625.218      686.184      88.6287      6379.94      1201.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.29e-05  2.02e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.7e-07  2.02e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.01863e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99998  2.01601e-05  1.70883e-05  2.22469e-06  9.49771e-08  3.46754e-07  1.44669e-08  3.89679e-07  1.20322e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.35514, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.01389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.87032, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4152.63      1388.26      500.175      548.947       70.903      5103.95      960.983
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-05  1.88e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-07  1.88e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8774e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999981  1.87496e-05  1.59499e-05  1.99818e-06  8.82055e-08  3.12336e-07  1.32915e-08  3.86453e-07  1.20774e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.36038, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173742, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.82982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3460.52      1156.88      416.812      457.456      59.0858      4253.29      800.819
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.74e-05  1.77e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.98e-07  1.77e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.76521e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999982  1.76292e-05  1.50359e-05  1.82719e-06  8.29274e-08  2.86577e-07  1.23922e-08  3.82959e-07  1.21213e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.32087, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.01944e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.92527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2966.16      991.613      357.268      392.105       50.645      3645.68      686.416
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.53e-05  1.67e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.71e-07  1.67e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.67277e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999983  1.67059e-05  1.42767e-05  1.69203e-06   7.8636e-08  2.66318e-07  1.16717e-08  3.79379e-07  1.21636e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.41864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         8.02222e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.93075, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2595.39      867.661      312.609      343.092      44.3144      3189.97      600.614
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.35e-05  1.59e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-07  1.59e-05        -1
         *Z       ---       ---  6.22e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.59455e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984  1.59248e-05  1.36302e-05  1.58161e-06  7.50415e-08  2.49816e-07  1.10755e-08  3.75801e-07  1.22045e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.42238, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 57541 1/cm
      Energy step      = 317 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006815
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.143975
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.110331
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.139427
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.457836
         W1 Well: minimal relaxation eigenvalue = 0.0119236
         W1 Well: maximal relaxation eigenvalue = 1.28823
         W1 Well:       grid size = 281
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31535 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -152 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4907 1/cm
         B4 Barrier: nonpositive number of states at -6176 1/cm => truncating
         B4 Barrier:        grid size = 201
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23611 1/cm => truncating
         B5 Barrier:        grid size = 256
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23611 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4602 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.1287, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31535 -23611 3.28e+05 3.85e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -152 2.91e+17
         B2    164 1.03e+17
         B3  -4907 3.91e+16
         B4  -6176 4.25e+16
         B5 -23611 5.56e+15
         B6   1433 3.75e+17
         B7   4603 7.39e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.1e-13  2.06e-13   4.3e-14  1.42e-14   3.7e-20  3.91e-12  1.47e-10
          R  9.07e+12         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  4.85e+12     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  2.33e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  7.06e+13      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4   2.7e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  2.56e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  6.79e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.6e-16  2.98e-16  6.22e-17  2.05e-17  5.35e-23  5.66e-15  2.13e-13
          R  6.27e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  3.35e+15     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  1.61e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  4.88e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  1.87e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  1.77e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6   4.7e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
   MasterEquation::set:  done, cpu time[sec] = 1.1401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+08
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.164362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             117080        41570      15706.1        17095       2233.2       150681      29707.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000266  0.000123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-06  0.000123         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000123355
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999877  0.000123156  9.51195e-05  2.17813e-05  7.04908e-07  4.18789e-06  1.32574e-07  1.22541e-06  4.75766e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+08
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.165039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            39026.6      13856.7      5235.36      5698.34        744.4        50227      9902.61
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000225  0.000101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-06  0.000101         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000101338
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999899  0.000101174  8.17309e-05  1.50625e-05  5.16859e-07  2.49742e-06  8.81469e-08  1.27395e-06  4.76457e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10521, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.67706e+08
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.166298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6537, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              23416         8314      3141.22         3419       446.64      30136.2      5941.57
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000206  9.09e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.6e-06  9.09e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.09301e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999909  9.07833e-05  7.45675e-05  1.24072e-05  4.48446e-07  1.98666e-06  7.36747e-08  1.29511e-06  4.77156e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13937, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.35479e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.165304, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62796, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16725.7      5938.57      2243.73      2442.15      319.029      21525.9      4243.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000193  8.41e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-06  8.41e-05         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.41128e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999916   8.3977e-05  6.96347e-05  1.08454e-05  4.08073e-07  1.71245e-06  6.55713e-08  1.30607e-06   4.7786e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.11165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.74187e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.16462, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6571, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13008.9      4618.89      1745.12      1899.45      248.133      16742.3      3300.87
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000183  7.91e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.31e-06  7.91e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.90719e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999921  7.89443e-05  6.58778e-05  9.77619e-06  3.79985e-07  1.53361e-06  6.01245e-08  1.31185e-06  4.78565e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.1403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.165091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              11708         4157      1570.61       1709.5       223.32      15068.1      2970.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000179   7.7e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-06   7.7e-05         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.69766e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999923  7.68524e-05  6.42907e-05  9.35227e-06   3.6869e-07  1.46443e-06  5.79777e-08  1.31352e-06  4.78918e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.17025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.90312e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.164792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.72548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7805.32      2771.33      1047.07      1139.67       148.88      10045.4      1980.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000164   6.9e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.06e-06   6.9e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.90428e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999931  6.89313e-05  5.81566e-05   7.8509e-06  3.27633e-07   1.2261e-06  5.03836e-08  1.31491e-06  4.80675e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.21111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.87082e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.164653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.72468, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5853.99       2078.5      785.304      854.751       111.66      7534.05      1485.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000153  6.36e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-06  6.36e-05         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.35678e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999937  6.34652e-05  5.38181e-05   6.9054e-06   3.0063e-07  1.08043e-06  4.55647e-08  1.31026e-06  4.82402e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.20904, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.83853e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.16513, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.74159, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4683.19       1662.8      628.244      683.801       89.328      6027.24      1188.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000145  5.94e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-06  5.94e-05         1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.94277e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999941  5.93318e-05  5.04859e-05  6.23637e-06  2.80795e-07  9.78929e-07  4.21118e-08  1.30294e-06  4.84087e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.164065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.76714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3902.66      1385.67      523.536      569.834        74.44       5022.7      990.261
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000138  5.61e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-06  5.61e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.61229e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999944  5.60323e-05  4.77965e-05  5.72928e-06  2.65266e-07  9.02661e-07  3.94589e-08  1.29435e-06  4.85723e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.25033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         6.77394e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.165229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3345.14      1187.71      448.745      488.429      63.8057      4305.17      848.795
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000133  5.34e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-06  5.34e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.33879e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999947  5.33017e-05  4.55523e-05    5.327e-06  2.52592e-07  8.42465e-07  3.73259e-08  1.28515e-06  4.87306e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26507, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         7.74165e+09
      global relaxation matrix dimension = 281
      setting global matrices ... done, cpu time[sec] = 0.165222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.79045, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               2927      1039.25      392.652      427.376        55.83      3767.02      742.696
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000128  5.11e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-06  5.11e-05        -1
         *Z       ---       ---  3.41e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.10652e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999949  5.09828e-05  4.36341e-05  4.99734e-06  2.41938e-07   7.9328e-07  3.55551e-08  1.27571e-06  4.88837e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.27635, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 60322 1/cm
      Energy step      = 333 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006578
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154978
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.105787
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.120098
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.437321
         W1 Well: minimal relaxation eigenvalue = 0.0116136
         W1 Well: maximal relaxation eigenvalue = 1.35515
         W1 Well:       grid size = 276
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -284 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 48 1/cm
         B3 Barrier:        grid size = 195
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 200
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6278 1/cm
         B5 Barrier: nonpositive number of states at -23595 1/cm => truncating
         B5 Barrier:        grid size = 252
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23594 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1380 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4710 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0925, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23594 3.32e+05 5.36e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -284 4.37e+17
         B2     49 1.64e+17
         B3  -4613 6.51e+16
         B4  -6278 7.03e+16
         B5 -23594 9.28e+15
         B6   1381 5.87e+17
         B7   4711 1.21e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.22e-14   6.1e-14  1.48e-14   5.2e-15  2.72e-20  1.03e-12  3.46e-11
          R  3.11e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.64e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  6.76e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.92e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  3.68e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  9.68e+11    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  2.89e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.89e-17  9.27e-17  2.25e-17  7.91e-18  4.13e-23  1.57e-15  5.26e-14
          R  2.04e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.08e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  4.45e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.26e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  2.42e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  6.37e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6   1.9e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
   MasterEquation::set:  done, cpu time[sec] = 1.10419, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159941, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             130390      49025.6      19441.4      21003.3      2772.59       175233      36042.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000634  0.000323         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-06  0.000323         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000323102
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999677  0.000322608  0.000250133  5.59451e-05  1.84302e-06  1.07756e-05  3.44024e-07  3.55109e-06  1.63987e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.97528, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158816, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43463.2      16341.9      6480.47       7001.1      924.197      58411.1      12014.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000545  0.000269         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-06  0.000269         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000269353
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999731  0.000268941  0.000217717   3.9367e-05  1.37566e-06  6.53964e-06  2.33066e-07  3.69251e-06  1.64212e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.35673e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58538, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26077.9      9805.11      3888.28      4200.66      554.518      35046.7      7208.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000502  0.000244         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.38e-06  0.000244         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000243599
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999757  0.000243227  0.000200085  3.27141e-05   1.2047e-06  5.25144e-06  1.96718e-07  3.75787e-06  1.64438e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.03597, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.30994e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18627.1      7003.65      2777.35      3000.47      396.084      25033.3      5148.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000473  0.000227         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.99e-06  0.000227         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000226603
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999774  0.000226257  0.000187836  2.87736e-05  1.10339e-06  4.55683e-06  1.76282e-07  3.79438e-06  1.64665e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04857, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.68421e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159798, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6135, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14487.7      5447.28      2160.16       2333.7      308.066      19470.4      4004.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000451  0.000214         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.71e-06  0.000214        -1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000213967
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999786   0.00021364  0.000178447  2.60629e-05  1.03265e-06  4.10223e-06    1.625e-07  3.81595e-06  1.64892e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06735, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.160851, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61834, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              13039      4902.56      1944.14      2100.33      277.259      17523.3      3604.29
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000442  0.000209         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.59e-06  0.000209         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000208697
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999792  0.000208378  0.000174466   2.4985e-05  1.00413e-06  3.92598e-06  1.57056e-07  3.82315e-06  1.65006e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.07234, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.80702e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.160557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63562, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8692.65      3268.37      1296.09      1400.22      184.839      11682.2      2402.86
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000407  0.000189         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-06  0.000189         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000188639
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999812  0.000188351   0.00015899  2.11512e-05  9.00093e-07  3.31671e-06  1.37732e-07  3.83838e-06   1.6557e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.08974, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         3.74269e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.16023, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65683, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6519.49      2451.28      972.071      1050.16       138.63      8761.67      1802.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000383  0.000175         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.81e-06  0.000175        -1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000174698
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999826  0.000174431  0.000147958   1.8722e-05  8.31279e-07  2.94236e-06  1.25405e-07  3.83482e-06  1.66125e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.11201, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.67837e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158751, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68185, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5215.59      1961.02      777.657      840.132      110.904      7009.33      1441.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000364  0.000164         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.56e-06  0.000164        -1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000164097
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999836  0.000163846  0.000139434  1.69951e-05  7.80496e-07  2.68042e-06  1.16534e-07  3.82241e-06  1.66666e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13422, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.15989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4346.32      1634.19      648.047       700.11      92.4197      5841.11      1201.43
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000349  0.000156         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.36e-06  0.000156         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000155595
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999845  0.000155357  0.000132521   1.5681e-05   7.4058e-07  2.48289e-06  1.09694e-07  3.80539e-06  1.67192e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.12513, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         6.54971e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67946, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3725.42      1400.73      555.469      600.094      79.2169      5006.67       1029.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000336  0.000149         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.19e-06  0.000149         1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000148531
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999852  0.000148304  0.000126728  1.46351e-05  7.07887e-07   2.3265e-06  1.04175e-07  3.78584e-06  1.67703e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         7.48539e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.15952, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.70627, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3259.74      1225.64      486.035      525.082      69.3148      4380.83      901.072
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000325  0.000143         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-06  0.000143        -1
         *Z       ---       ---  2.01e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000142512
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999858  0.000142294  0.000121758  1.37754e-05  6.80322e-07  2.19835e-06  9.95812e-08  3.76492e-06  1.68197e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.15951, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 63101 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006471
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138453
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.102236
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.129361
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.418828
         W1 Well: minimal relaxation eigenvalue = 0.0113288
         W1 Well: maximal relaxation eigenvalue = 1.83413
         W1 Well:       grid size = 271
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31749 1/cm
         B1 Barrier:        grid size = 181
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -248 1/cm
         B2 Barrier:        grid size = 180
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 194
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4799 1/cm
         B4 Barrier:        grid size = 198
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23349 1/cm => truncating
         B5 Barrier:        grid size = 247
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23349 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1501 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.06712, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31749 -23349 3.98e+05  7.4e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -248 6.42e+17
         B2    101 2.55e+17
         B3  -4799 1.06e+17
         B4  -6198 1.14e+17
         B5 -23349 1.52e+16
         B6   1502 8.99e+17
         B7   4651 1.92e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.06e-14  2.03e-14  5.63e-15   2.1e-15  2.06e-20  3.09e-13  9.31e-12
          R  9.47e+13         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  4.93e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.78e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  4.76e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  4.87e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  3.24e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  1.07e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.69e-17  3.24e-17  8.99e-18  3.35e-18  3.28e-23  4.93e-16  1.49e-14
          R  5.93e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  3.09e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.11e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  2.98e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  3.05e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  2.03e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  6.72e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
   MasterEquation::set:  done, cpu time[sec] = 1.07814, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44882, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             143616      57030.9      23714.1        25487      3397.17       201051      43002.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00134  0.000757         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-05  0.000757        -1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000756829
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999244  0.000755734  0.000587386  0.000129262  4.30823e-06  2.47761e-05  7.98049e-07  9.15427e-06  4.96418e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              47872      19010.3       7904.7      8495.67      1132.39      67017.1      14334.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00117  0.000639         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-05  0.000639         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000639097
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999362  0.000638173  0.000517386  9.21039e-05   3.2702e-06  1.52918e-05  5.50422e-07  9.52087e-06  4.97066e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9302, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.06265e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153661, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28723.2      11406.2      4742.82       5097.4      679.435      40210.2      8600.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00108  0.000582         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-05  0.000582         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000582121
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999419   0.00058128   0.00047868  7.71051e-05   2.8886e-06   1.2389e-05  4.68862e-07   9.6979e-06  4.97713e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.94671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.26877e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153792, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20516.6      8147.27      3387.73         3641       485.31      28721.6      6143.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00103  0.000544         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-05  0.000544        -1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000544282
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999457  0.000543495  0.000451558  6.81836e-05   2.6616e-06  1.08175e-05  4.22844e-07  9.80215e-06  4.98359e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.93531, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.63128e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.15386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15957.3      6336.77       2634.9      2831.89      377.464        22339      4778.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000983  0.000516         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-05  0.000516         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000516016
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999485   0.00051527  0.000430646  6.20257e-05  2.50264e-06  9.78593e-06   3.9172e-07  9.86819e-06  4.99005e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99218, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.51612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14361.6      5703.09      2371.41       2548.7      339.717      20105.1      4300.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000965  0.000504         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-05  0.000504        -1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00050419
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999497  0.000503461  0.000421745  5.95717e-05  2.43842e-06  9.38516e-06  3.79402e-07  9.89194e-06  4.99328e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.71879e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154556, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.66709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             9574.4      3802.06      1580.94      1699.13      226.478      13403.4      2866.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000895  0.000459         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-05  0.000459         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000458979
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999542  0.000458315  0.000386961  5.08144e-05  2.20337e-06  7.99549e-06  3.35545e-07  9.95588e-06  5.00928e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.11852, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.62506e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153739, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58887, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7180.8      2851.55       1185.7      1274.35      169.859      10052.6      2150.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000846  0.000427         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-05  0.000427        -1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000427347
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999573  0.000426729   0.00036198  4.52381e-05  2.04712e-06  7.13766e-06  3.07439e-07  9.96902e-06  5.02499e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.03893, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.53132e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5744.64      2281.24      948.564      1019.48      135.887      8042.05      1720.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000808  0.000403         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-05  0.000403         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000403171
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999597  0.000402588  0.000342568  4.12581e-05  1.93133e-06  6.53511e-06  2.87136e-07  9.95711e-06  5.04032e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05964, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153776, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.62726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4787.2      1901.03       790.47      849.567      113.239      6701.71      1433.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000776  0.000384         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.81e-06  0.000384        -1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0003837
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999617  0.000383145  0.000326753  3.82195e-05     1.84e-06  6.07927e-06  2.71428e-07  9.93137e-06  5.05524e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.07759, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.34385e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153521, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61508, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4103.31      1629.45      677.546        728.2      97.0621      5744.32      1228.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00075  0.000367         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.46e-06  0.000367         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000367463
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999633  0.000366932  0.000313449   3.5794e-05  1.76495e-06  5.71733e-06   2.5872e-07  9.89749e-06  5.06972e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06391, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         7.25012e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.15306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.64894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3590.4      1425.77      592.852      637.175      84.9293      5026.28      1075.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000728  0.000354         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.16e-06  0.000354         1
         *Z       ---       ---  1.26e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000353583
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999647  0.000353071  0.000301997  3.37953e-05   1.7015e-06  5.42002e-06  2.48111e-07  9.85868e-06  5.08376e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.1009, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 65881 1/cm
      Energy step      = 367 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -56.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006347
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122369
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.098855
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.114828
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.401514
         W1 Well: minimal relaxation eigenvalue = 0.0110684
         W1 Well: maximal relaxation eigenvalue = 1.77195
         W1 Well:       grid size = 266
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31741 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -179 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 193
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4950 1/cm
         B4 Barrier:        grid size = 197
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6418 1/cm
         B5 Barrier: nonpositive number of states at -23667 1/cm => truncating
         B5 Barrier:        grid size = 244
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23667 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1288 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4591 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00938, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31741 -23667 3.15e+05 1.01e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -179 9.29e+17
         B2    188 3.89e+17
         B3  -4950  1.7e+17
         B4  -6418 1.81e+17
         B5 -23667 2.44e+16
         B6   1289 1.35e+18
         B7   4592    3e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.84e-15  7.47e-15  2.34e-15  9.22e-16   1.6e-20  1.03e-13  2.82e-12
          R  2.61e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  1.34e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  4.27e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  1.09e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  6.27e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  9.73e+12    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  3.55e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.42e-18  1.25e-17  3.92e-18  1.54e-18  2.67e-23  1.72e-16  4.72e-15
          R  1.56e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1     8e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  2.55e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  6.48e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  3.74e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  5.81e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  2.12e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
   MasterEquation::set:  done, cpu time[sec] = 1.02042, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148918, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             156645      65539.4      28591.9      30582.9      4113.16       227927      50552.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00255   0.00161         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.42e-05   0.00161     0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00160823
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998394   0.00160587   0.00124935  0.000272709  9.12112e-06  5.15319e-05  1.67593e-06  2.13418e-05  1.34357e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81877, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.14843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              52215      21846.5      9530.65      10194.3      1371.05      75975.7      16850.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00225   0.00137         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-05   0.00137    -0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00137418
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998628   0.00137216   0.00111318  0.000196074  7.04123e-06  3.23602e-05  1.17715e-06  2.21897e-05  1.34525e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84082, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          8.7914e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41819, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              31329      13107.9      5718.39      6116.58      822.632      45585.4      10110.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0021   0.00126         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.78e-05   0.00126     0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00125987
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998742   0.00125802   0.00103642  0.000165125  6.27162e-06  2.64478e-05  1.01176e-06  2.26161e-05   1.3469e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85433, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          1.2308e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.149261, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22377.9      9362.77      4084.56      4368.99      587.594        32561      7221.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.002   0.00118         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-05   0.00118     0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00118353
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998818   0.00118179  0.000982135  0.000146679  5.81203e-06  2.32338e-05  9.18094e-07  2.28779e-05  1.34855e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87184, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.58245e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45698, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              17405      7282.15      3176.88       3398.1      457.018      25325.2      5616.92
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00193   0.00113         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.52e-05   0.00113    -0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00112625
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998875    0.0011246   0.00094003  0.000133923   5.4892e-06  2.11173e-05   8.5456e-07  2.30521e-05   1.3502e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89014, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45483, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15664.5      6553.94      2859.19      3058.29      411.316      22792.7      5055.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00189    0.0011         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-05    0.0011     0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00110223
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998899   0.00110061  0.000922043  0.000128833  5.35853e-06  2.02934e-05  8.29368e-07  2.31177e-05  1.35101e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.88849, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.63742e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              10443      4369.29      1906.13      2038.86      274.211      15195.1      3370.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00177   0.00101         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-05   0.00101    -0.999
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00100999
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998991    0.0010085  0.000851378  0.000110626  4.87873e-06  1.74281e-05  7.39415e-07  2.33165e-05  1.35508e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.90766, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.51656e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7832.25      3276.97       1429.6      1529.15      205.658      11396.4      2527.61
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00168  0.000945         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-05  0.000945         1
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00094506
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999056  0.000943673  0.000800262  9.89919e-05  4.55826e-06  1.56514e-05  6.81515e-07  2.33928e-05  1.35906e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.94279, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          4.3957e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148338, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6265.8      2621.58      1143.68      1223.32      164.526      9117.08      2022.09
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00161  0.000895         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-05  0.000895        -1
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000895204
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999106   0.00089389  0.000760326  9.06629e-05  4.31986e-06   1.4399e-05  6.39541e-07  2.34067e-05  1.36295e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95251, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.150067, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49134, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             5221.5      2184.65      953.065      1019.43      137.105      7597.57      1685.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00155  0.000855         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-05  0.000855        -1
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000854894
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999146  0.000853639  0.000727644  8.42875e-05  4.13118e-06  1.34487e-05  6.06966e-07  2.33847e-05  1.36673e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.92813, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.15398e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.14884, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53412, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4475.57      1872.55      816.913      873.798      117.519       6512.2      1444.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00151  0.000821         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-05  0.000821         1
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000821167
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99918  0.000819962   0.00070005  7.91865e-05  3.97571e-06  1.26921e-05  5.80542e-07  2.33405e-05  1.37041e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         7.03312e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148704, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56021, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3916.13      1638.48      714.798      764.573      102.829      5698.18      1263.81
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00146  0.000792         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-05  0.000792         1
         *Z       ---       ---  8.34e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000792249
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999209  0.000791086  0.000676221  7.49741e-05   3.8439e-06  1.20691e-05  5.58431e-07  2.32821e-05  1.37398e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99551, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 68662 1/cm
      Energy step      = 383 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006231
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118461
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.095352
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.115441
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.400487
         W1 Well: minimal relaxation eigenvalue = 0.0108311
         W1 Well: maximal relaxation eigenvalue = 1.65522
         W1 Well:       grid size = 262
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31684 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -278 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 104 1/cm
         B3 Barrier:        grid size = 192
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4873 1/cm
         B4 Barrier:        grid size = 196
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6406 1/cm
         B5 Barrier: nonpositive number of states at -23641 1/cm => truncating
         B5 Barrier:        grid size = 241
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23641 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1254 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.999863, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31684 -23641 3.21e+05 1.37e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -278 1.32e+18
         B2    105 5.82e+17
         B3  -4873 2.67e+17
         B4  -6406 2.84e+17
         B5 -23641 3.85e+16
         B6   1255    2e+18
         B7   4701 4.59e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.53e-15  3.01e-15  1.05e-15  4.36e-16  1.27e-20  3.77e-14  9.47e-13
          R  6.54e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  3.32e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  9.49e+14      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  2.29e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  7.86e+19   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  2.65e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  1.06e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.67e-18  5.27e-18  1.84e-18  7.62e-19  2.22e-23  6.59e-17  1.66e-15
          R  3.74e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1   1.9e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  5.43e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  1.31e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4   4.5e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  1.52e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  6.04e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
   MasterEquation::set:  done, cpu time[sec] = 1.01106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143812, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             169382      74503.8      34114.1      36327.8      4926.78       255663      58652.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00443   0.00313         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.17e-05   0.00313    -0.998
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00312934
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996876   0.00312424   0.00243963  0.000519293  1.77474e-05  9.83797e-05  3.23306e-06  4.56246e-05  3.30061e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75346, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.14415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36251, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56460.8      24834.6      11371.4      12109.3      1642.26      85220.9      19550.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00396   0.00271         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-05   0.00271     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0027055
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997299   0.00270109   0.00219541  0.000378967  1.39092e-05  6.27542e-05  2.30888e-06  4.74073e-05  3.30451e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78372, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          8.5402e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144224, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37953, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33876.5      14900.8      6822.82      7265.56      985.356      51132.5      11730.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00372    0.0025         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.08e-05    0.0025    -0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00249631
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997508   0.00249224   0.00205576  0.000321614  1.24854e-05  5.17153e-05  2.00137e-06  4.83316e-05  3.30834e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.19563e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24197.5      10643.4      4873.44      5189.68      703.826      36523.2      8378.94
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00356   0.00236         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-05   0.00236     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00235573
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997648   0.00235189   0.00195625  0.000287233  1.16328e-05  4.56949e-05  1.82673e-06  4.89175e-05  3.31215e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81705, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.53724e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.14444, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18820.3      8278.19      3790.45      4036.42       547.42        28407      6516.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00344   0.00225         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-05   0.00225     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00224978
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997754   0.00224611   0.00187863   0.00026336  1.10326e-05  4.17198e-05  1.70799e-06  4.93211e-05  3.31594e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82941, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.145026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16938.2      7450.38      3411.41      3632.78      492.678      25566.3      5865.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00339   0.00221         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-05   0.00221    -0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0022052
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997798   0.00220161   0.00184537  0.000253809  1.07892e-05  4.01697e-05  1.66084e-06  4.94777e-05  3.31783e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         2.56206e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11292.2      4966.92      2274.27      2421.85      328.452      17044.2      3910.17
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00318   0.00203         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.27e-05   0.00203    -0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00203334
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99797   0.00203002   0.00171402  0.000219528  9.89319e-06  3.47646e-05  1.49205e-06  4.99861e-05  3.32717e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.41608e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.145068, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8469.12      3725.19       1705.7      1816.39      246.339      12783.1      2932.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00304   0.00191         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.05e-05   0.00191     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00191164
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998091   0.00190852   0.00161837  0.000197509  9.29222e-06  3.13995e-05  1.38298e-06  5.02298e-05  3.33631e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.862, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          4.2701e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.14451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4465, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6775.3      2980.15      1364.56      1453.11      197.071      10226.5       2346.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00292   0.00182         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.89e-05   0.00182    -0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00181774
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998185   0.00181478   0.00154326  0.000181684   8.8436e-06  2.90195e-05  1.30366e-06  5.03347e-05  3.34525e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144141, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44263, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5646.08      2483.46      1137.14      1210.93      164.226      8522.09      1955.09
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00283   0.00174         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-05   0.00174     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00174153
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998261   0.00173869   0.00148153  0.000169532  8.48746e-06  2.72085e-05  1.24193e-06  5.03576e-05  3.35395e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86397, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.97814e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4735, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4839.5      2128.68      974.688      1037.94      140.765      7304.65      1675.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00275   0.00168         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-05   0.00168     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00167756
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998325   0.00167482   0.00142923  0.000159782   8.1932e-06  2.57632e-05  1.19173e-06  5.03282e-05  3.36241e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.83216e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144187, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.49004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4234.56      1862.59      852.852      908.194       123.17      6391.57      1466.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00268   0.00162         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.53e-05   0.00162     0.999
         *Z       ---       ---  5.79e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00162255
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99838    0.0016199   0.00138393  0.000151711  7.94313e-06  2.45704e-05  1.14963e-06   5.0264e-05  3.37064e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.91049, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 71442 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005972
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.139211
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.092887
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.105141
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.377008
         W1 Well: minimal relaxation eigenvalue = 0.010609
         W1 Well: maximal relaxation eigenvalue = 1.85369
         W1 Well:       grid size = 258
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31757 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -158 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -158 1/cm
         B3 Barrier:        grid size = 191
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4958 1/cm
         B4 Barrier:        grid size = 195
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6557 1/cm
         B5 Barrier: nonpositive number of states at -23758 1/cm => truncating
         B5 Barrier:        grid size = 238
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23758 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.983727, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31757 -23758 2.94e+05 1.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -158 1.86e+18
         B2   -158 8.59e+17
         B3  -4958 4.13e+17
         B4  -6557 4.38e+17
         B5 -23758 5.98e+16
         B6   1442 2.91e+18
         B7   4643 6.88e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.57e-16  1.31e-15  5.07e-16  2.19e-16  1.03e-20   1.5e-14  3.48e-13
          R  1.52e+15         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  7.62e+14       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.97e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  4.56e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4   9.7e+19  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  6.67e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  2.88e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.2e-18   2.4e-18  9.26e-19  4.01e-19  1.88e-23  2.74e-17  6.35e-16
          R  8.34e+17         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  4.17e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.08e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3   2.5e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  5.31e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  3.65e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  1.58e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
   MasterEquation::set:  done, cpu time[sec] = 0.994658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             181741      83867.6      40312.4      42751.1      5843.24       284044      67252.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00712   0.00565         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000104   0.00565    -0.997
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00564839
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994361   0.00563926   0.00441033  0.000926474  3.19649e-05  0.000173499   5.7689e-06  9.04798e-05  7.45439e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71074, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33496, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60580.2      27955.9      13437.5      14250.4      1947.75      94681.2      22417.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00644   0.00494         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.25e-05   0.00494     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00493638
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995072    0.0049284   0.00400868  0.000682864  2.54507e-05  0.000112544  4.19285e-06  9.39204e-05  7.46282e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73161, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          8.3067e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140335, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36251, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36348.1      16773.5      8062.48      8550.21      1168.65      56808.7      13450.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00609   0.00458         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.68e-05   0.00458     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00458141
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995426     0.004574   0.00377439  0.000582905  2.30214e-05  9.35304e-05  3.66547e-06  9.57444e-05  7.47103e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75997, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.16294e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3674, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25962.9      11981.1      5758.92      6107.29      834.749      40577.7      9607.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00585   0.00434         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.29e-05   0.00434    -0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00434152
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995666    0.0043345   0.00360594  0.000522835  2.15622e-05  8.31214e-05  3.36496e-06  9.69288e-05  7.47916e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76385, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.49521e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140053, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20193.4      9318.63      4479.16      4750.12      649.249      31560.4      7472.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00567   0.00416         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.99e-05   0.00416     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00415999
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995847   0.00415326   0.00347378  0.000481042   2.0532e-05  7.62294e-05  3.16014e-06  9.77662e-05  7.48722e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140014, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18174.1      8386.76      4031.24      4275.11      584.324      28404.4      6725.29
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00559   0.00408         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.87e-05   0.00408     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00408342
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995923   0.00407681   0.00341694    0.0004643  2.01136e-05  7.35369e-05  3.07866e-06  9.80983e-05  7.49122e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77693, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.49201e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38626, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              12116      5591.18      2687.49      2850.07      389.549      18936.2      4483.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00529   0.00379         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.38e-05   0.00379    -0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00378704
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996219   0.00378092   0.00319139  0.000404078   1.8569e-05  6.41226e-05  2.78626e-06  9.92263e-05  7.51102e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.79554, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.32268e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.141176, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40125, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9087.03      4193.38      2015.62      2137.55      292.162      14202.2      3362.64
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00507   0.00358         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.03e-05   0.00358     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00357602
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99643   0.00357024   0.00302602  0.000365272  1.75287e-05  5.82377e-05  2.59659e-06   9.9834e-05  7.53038e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81255, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.15335e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140756, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7269.62      3354.71       1612.5      1710.04       233.73      11361.7      2690.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00489   0.00341         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-05   0.00341    -0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00341251
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996593   0.00340699    0.0028955  0.000337307  1.67495e-05  5.40623e-05  2.45822e-06  0.000100163  7.54927e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.141819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6058.02      2795.59      1343.75      1425.04      194.775      9468.12      2241.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00475   0.00328         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.53e-05   0.00328    -0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00327933
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996726   0.00327403   0.00278781  0.000315781  1.61291e-05  5.08763e-05  2.35024e-06  0.000100323  7.56767e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82678, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         5.81469e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139928, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5192.59      2396.22      1151.78      1221.46       166.95      8115.53      1921.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00463   0.00317         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-05   0.00317    -0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00316719
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996838   0.00316207   0.00269626  0.000298475  1.56151e-05  4.83277e-05  2.26223e-06  0.000100374  7.58559e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         6.64536e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139268, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4543.51      2096.69      1007.81      1068.78      146.081      7101.09      1681.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00452   0.00307         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.18e-05   0.00307     0.998
         *Z       ---       ---  4.17e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0030705
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996934   0.00306554   0.00261672  0.000284122  1.51774e-05    4.622e-05  2.18826e-06   0.00010035  7.60301e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8374, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 74222 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005859
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.114437
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.089888
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.113308
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.373063
         W1 Well: minimal relaxation eigenvalue = 0.010403
         W1 Well: maximal relaxation eigenvalue = 1.70424
         W1 Well:       grid size = 254
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31695 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -4 1/cm
         B3 Barrier:        grid size = 190
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5008 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6259 1/cm
         B5 Barrier: nonpositive number of states at -23773 1/cm => truncating
         B5 Barrier:        grid size = 235
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23773 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1247 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4583 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.959987, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31695 -23773 2.91e+05 2.47e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.58e+18
         B2     -4 1.25e+18
         B3  -5008 6.29e+17
         B4  -6259 6.65e+17
         B5 -23773 9.15e+16
         B6   1248 4.17e+18
         B7   4583 1.02e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.02e-16  6.12e-16  2.59e-16  1.17e-16  8.52e-21  6.42e-15  1.38e-13
          R  3.31e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  1.63e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  3.86e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  8.56e+15      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  1.17e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  1.56e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6  7.24e+12   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.76e-19  1.17e-18  4.93e-19  2.22e-19  1.62e-23  1.22e-17  2.63e-16
          R  1.74e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  8.58e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  2.03e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3   4.5e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  6.17e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  8.18e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6   3.8e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
   MasterEquation::set:  done, cpu time[sec] = 0.971209, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             193655      93581.5      47221.7      49885.2      6868.18       312887      76306.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0107   0.00952         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000165   0.00952    -0.995
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00951802
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990498   0.00950239    0.0074718   0.00151094  5.40176e-05   0.00028666  9.65345e-06  0.000167741  1.56367e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65246, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64551.7      31193.8      15740.6      16628.4      2289.39       104296      25435.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00979   0.00841         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000148   0.00841    -0.996
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00840671
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991607   0.00839289   0.00684398   0.00113408  4.35926e-05  0.000188654  7.12462e-06  0.000173892  1.56535e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67969, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         8.08894e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135553, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29568, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              38731      18716.3      9444.35      9977.04      1373.64      62577.4      15261.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00931   0.00785         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000139   0.00785    -0.996
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00784672
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992166   0.00783383   0.00647475  0.000976277  3.97078e-05  0.000158009  6.27764e-06  0.000177239  1.56698e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69157, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.13245e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136374, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              27665      13368.8      6745.96      7126.46      981.168      44698.1      10900.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00898   0.00747         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000134   0.00747    -0.996
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.007466
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992546   0.00745373   0.00620769  0.000880658  3.73708e-05   0.00014119  5.79416e-06  0.000179461  1.56859e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.45601e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135419, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31039, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21517.2      10397.9      5246.86       5542.8      763.131      34765.2      8478.47
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00873   0.00718         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000129   0.00718    -0.996
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00717663
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992835   0.00716484   0.00599722  0.000813779  3.57183e-05   0.00013003  5.46406e-06  0.000181065  1.57017e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70693, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19365.5      9358.15      4722.17      4988.52      686.818      31288.7      7630.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00862   0.00705         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000127   0.00705     0.996
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00705425
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992957   0.00704266   0.00590643  0.000786904  3.50464e-05  0.000125664  5.33259e-06  0.000181712  1.57096e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72141, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.42668e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12910.3      6238.77      3148.12      3325.68      457.879      20859.1      5087.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00819   0.00658         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00012   0.00658    -0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00657867
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993432   0.00656786   0.00554469  0.000689828  3.25607e-05  0.000110365  4.85984e-06  0.000183982  1.57485e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72945, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.23558e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135548, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9682.76      4679.08      2361.09      2494.26      343.409      15644.3      3815.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00788   0.00624         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000114   0.00624    -0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00623815
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993772   0.00622789    0.0052779  0.000626911  3.08811e-05  0.000100768  4.55224e-06    0.0001853  1.57864e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.05388, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.04447e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.13591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36227, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7746.21      3743.26      1888.87      1995.41      274.727      12515.5      3052.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00764   0.00597         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00011   0.00597    -0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00597316
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994037   0.00596334    0.0050664  0.000581378  2.96193e-05  9.39396e-05  4.32723e-06  0.000186099  1.58234e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136553, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36514, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6455.17      3119.38      1574.06      1662.84      228.939      10429.6      2543.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00744   0.00576         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000107   0.00576    -0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00575656
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994253    0.0057471   0.00489124  0.000546212  2.86122e-05  8.87169e-05  4.15124e-06  0.000186579  1.58595e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76226, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.66226e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136844, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               5533      2673.76      1349.19      1425.29      196.234      8939.63      2180.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00727   0.00557         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000104   0.00557     0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00557363
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994436   0.00556447   0.00474186  0.000517858  2.77761e-05    8.453e-05  4.00749e-06  0.000186846  1.58946e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76506, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         6.47115e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38712, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4841.38      2339.54      1180.54      1247.13      171.704      7822.17      1907.66
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00712   0.00542         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000102   0.00542     0.997
         *Z       ---       ---  3.12e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00541548
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994593   0.00540659   0.00461173  0.000494286  2.70624e-05   8.1061e-05  3.88645e-06  0.000186967  1.59287e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78448, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 77002 1/cm
      Energy step      = 433 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006033
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.131233
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.088424
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.095552
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.351004
         W1 Well: minimal relaxation eigenvalue = 0.010212
         W1 Well: maximal relaxation eigenvalue = 1.68513
         W1 Well:       grid size = 251
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31680 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -71 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -71 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4834 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6566 1/cm
         B5 Barrier: nonpositive number of states at -23887 1/cm => truncating
         B5 Barrier:        grid size = 233
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23886 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1227 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4691 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.935313, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31680 -23886 2.67e+05 3.28e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -71 3.54e+18
         B2    -71 1.79e+18
         B3  -4834 9.46e+17
         B4  -6566 9.96e+17
         B5 -23886 1.38e+17
         B6   1228  5.9e+18
         B7   4692 1.48e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.48e-16  3.04e-16   1.4e-16  6.55e-17  7.16e-21  2.94e-15   5.9e-14
          R  6.74e+15         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  3.29e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  7.16e+15      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  1.53e+16      2.27      4.65      2.13         1  0.000109      44.9       901
         P4   1.4e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5   3.4e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6   1.7e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.93e-19  6.01e-19  2.76e-19  1.29e-19  1.42e-23  5.81e-18  1.17e-16
          R  3.41e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  1.66e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  3.62e+18      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  7.73e+18      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  7.07e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  1.72e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  8.58e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
   MasterEquation::set:  done, cpu time[sec] = 0.946741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             205073       103594      54873.2      57758.9      8006.69       342014      85761.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0153    0.0151         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000249    0.0151    -0.992
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0151367
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984887    0.0151126    0.0119143   0.00235557  8.59634e-05  0.000444916  1.51991e-05  0.000293582  3.07373e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63463, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132258, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68357.5      34531.3      18291.1        19253       2668.9       114005      28587.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0141    0.0135         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000225    0.0135     0.993
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.013497
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.986524    0.0134756    0.0110011   0.00178835  7.03686e-05  0.000297458  1.14036e-05  0.000303867  3.07687e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64986, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         7.88525e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131519, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41014.5      20718.8      10974.6      11551.8      1601.34      68402.8      17152.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0134    0.0127         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000213    0.0127    -0.994
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0126629
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.987357    0.0126428    0.0104554   0.00154894  6.45418e-05  0.000251123  1.01277e-05  0.000309566  3.07989e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65796, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.10394e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.1339, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29296.1      14799.1      7839.03      8251.28      1143.81      48859.1      12251.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.013    0.0121         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000204    0.0121     0.994
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0120928
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.987926    0.0120736    0.0100578   0.00140335  6.10285e-05  0.000225616  9.39757e-06  0.000313411  3.08285e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.41935e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132466, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22785.8      11510.4      6097.03      6417.66      889.632      38001.5      9529.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0127    0.0117         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000198    0.0117    -0.994
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.011658
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988361    0.0116394   0.00974278   0.00130126  5.85396e-05  0.000208651  8.89807e-06  0.000316234  3.08577e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66657, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29071, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20507.3      10359.4      5487.32      5775.89      800.669      34201.4      8576.17
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0125    0.0115         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000195    0.0115    -0.994
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0114736
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988545    0.0114554   0.00960651   0.00126017  5.75262e-05  0.000202004  8.69886e-06  0.000317386  3.08722e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.36558e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132484, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13671.5      6906.26      3658.22       3850.6      533.779      22800.9      5717.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.012    0.0108         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000185    0.0108     0.995
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0107546
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.989262    0.0107376   0.00906113   0.00111138  5.37693e-05  0.000178656   7.9811e-06  0.000321532  3.09435e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          3.1541e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133293, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32881, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10253.6      5179.69      2743.66      2887.95      400.334      17100.7      4288.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0116    0.0102         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000177    0.0102    -0.995
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0102373
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.989779     0.010221   0.00865654   0.00101462  5.12222e-05   0.00016396   7.5126e-06  0.000324061   3.1013e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71738, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.94263e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33283, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8202.9      4143.75      2194.93      2310.36      320.268      13680.6      3430.47
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0112   0.00983         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000171   0.00983    -0.995
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00983313
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990182   0.00981752   0.00833437  0.000944399  4.93036e-05  0.000153474  7.16901e-06  0.000325698  3.10807e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.134038, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35269, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6835.75      3453.13      1829.11       1925.3       266.89      11400.5      2858.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.011    0.0095         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000166    0.0095    -0.995
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00950173
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990513   0.00948665   0.00806662  0.000890041  4.77684e-05  0.000145436  6.89968e-06  0.000326778  3.11466e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74111, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         5.51968e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.133148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34789, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5859.21      2959.82      1567.81      1650.26      228.763      9771.83      2450.33
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0107   0.00922         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000162   0.00922     0.995
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00922109
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990794   0.00920646   0.00783758  0.000846125  4.64911e-05  0.000138978  6.67925e-06  0.000327485  3.12109e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73658, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          6.3082e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132897, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5126.81      2589.85      1371.83      1443.97      200.167      8550.35      2144.04
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0105   0.00898         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000158   0.00898    -0.996
         *Z       ---       ---   2.4e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0089779
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991036   0.00896365   0.00763754  0.000809549  4.53988e-05  0.000133618  6.49331e-06  0.000327927  3.12735e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74776, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 79782 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.108871
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.085674
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.101516
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.354534
         W1 Well: minimal relaxation eigenvalue = 0.0100322
         W1 Well: maximal relaxation eigenvalue = 2.15253
         W1 Well:       grid size = 248
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31818 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -317 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 131 1/cm
         B3 Barrier:        grid size = 188
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4818 1/cm
         B4 Barrier:        grid size = 192
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6618 1/cm
         B5 Barrier: nonpositive number of states at -23718 1/cm => truncating
         B5 Barrier:        grid size = 230
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23718 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4632 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.916921, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31818 -23718 3.03e+05 4.32e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -317 4.79e+18
         B2    132 2.53e+18
         B3  -4818  1.4e+18
         B4  -6618 1.47e+18
         B5 -23718 2.06e+17
         B6   1482 8.24e+18
         B7   4633 2.12e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.67e-17  1.59e-16  7.88e-17  3.83e-17  6.09e-21  1.42e-15  2.68e-14
          R   1.3e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1  6.28e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  1.27e+16     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  2.61e+16         2      4.16      2.06         1  0.000159      37.1       699
         P4  1.64e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  7.04e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  3.74e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.57e-19  3.27e-19  1.62e-19  7.86e-20  1.25e-23  2.92e-18   5.5e-17
          R  6.35e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1  3.06e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  6.18e+18     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  1.27e+19         2      4.16      2.06         1  0.000159      37.1       699
         P4  7.99e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  3.43e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  1.82e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
   MasterEquation::set:  done, cpu time[sec] = 0.92834, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.12891, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21461, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             215951       113854      63295.9      66398.9      9263.56       371259      95567.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0208    0.0229         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000361    0.0229     0.988
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0229133
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977123     0.022877     0.018022   0.00355571  0.000129749  0.000653057  2.26751e-05  0.000488143  5.70485e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5909, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22831, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71983.7      37951.4      21098.6        22133      3087.85       123753      31855.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0193    0.0206         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000328    0.0206      0.99
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0205865
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979446    0.0205539    0.0167734   0.00270088  0.000107842    0.0004444  1.73204e-05  0.000504428   5.7104e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60541, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          7.6942e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128354, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24052, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43190.2      22770.8      12659.2      13279.8      1852.71      74251.7      19113.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0185    0.0194         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000311    0.0194     -0.99
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0194
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.980631    0.0193693    0.0160102   0.00234651  9.95882e-05  0.000378232  1.55052e-05  0.000513549  5.71567e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61544, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.07719e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129194, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30850.2      16264.9      9042.28      9485.56      1323.37        53037      13652.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.018    0.0186         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000299    0.0186    -0.991
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0185868
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.981443    0.0185574    0.0154493   0.00213185  9.45954e-05  0.000341662  1.44628e-05   0.00051978  5.72083e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63667, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.38496e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129731, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.274, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23994.6      12650.5      7032.88      7377.66      1029.28        41251      10618.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0175     0.018         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00029     0.018     0.991
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0179648
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982064    0.0179364    0.0150027   0.00198155  9.10501e-05  0.000317273   1.3748e-05  0.000524411   5.7259e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65154, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.13016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.277, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21595.1      11385.4      6329.59      6639.89      926.356      37125.9      9556.73
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0174    0.0177         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000287    0.0177     0.991
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0177007
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982327    0.0176727    0.0148088   0.00192108  8.96044e-05  0.000307702  1.34626e-05   0.00052632  5.72841e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65524, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.30826e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28593, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14396.7      7590.28      4219.73      4426.59      617.571      24750.6      6371.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0167    0.0167         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000272    0.0167     0.992
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.016668
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.983358    0.0166416    0.0140297   0.00170219  8.42332e-05  0.000274001  1.24318e-05  0.000533314  5.74074e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.07768e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30252, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10797.6      5692.71       3164.8      3319.95      463.178      18562.9      4778.36
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0161    0.0159         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000261    0.0159     0.992
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0159218
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984103    0.0158966    0.0134483   0.00155976  8.05795e-05  0.000252715  1.17568e-05  0.000537741  5.75272e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.68098, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          3.8471e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129716, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28878, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8638.05      4554.17      2531.84      2655.96      370.542      14850.3      3822.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0157    0.0153         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000253    0.0153    -0.992
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0153371
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984687    0.0153128    0.0129834   0.00145631  7.78198e-05  0.000237486  1.12606e-05  0.000540731  5.76439e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66782, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129823, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31451, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7198.37      3795.14      2109.86       2213.3      308.785      12375.3      3185.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0154    0.0149         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000246    0.0149     0.993
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0148562
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985167    0.0148327    0.0125957   0.00137614  7.56065e-05  0.000225783  1.08707e-05  0.000542817  5.77575e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.38594e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129301, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6170.03      3252.98      1808.46      1897.11      264.673      10607.4      2730.49
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0151    0.0144         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00024    0.0144     0.993
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0144481
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985575    0.0144252    0.0122632   0.00131131  7.37612e-05  0.000216364  1.05511e-05  0.000544289  5.78681e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         6.15536e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31817, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5398.78      2846.36       1582.4      1659.97      231.589      9281.47      2389.18
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0148    0.0141         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000235    0.0141     0.993
         *Z       ---       ---   1.9e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0140937
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985929    0.0140714     0.011972   0.00125727  7.21801e-05  0.000208532   1.0281e-05  0.000545321  5.79758e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69765, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 82562 1/cm
      Energy step      = 467 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -43 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005954
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126663
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.083177
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093857
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.336477
         W1 Well: minimal relaxation eigenvalue = 0.00986385
         W1 Well: maximal relaxation eigenvalue = 2.37231
         W1 Well:       grid size = 245
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -97 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -97 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4767 1/cm
         B4 Barrier:        grid size = 191
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6635 1/cm
         B5 Barrier: nonpositive number of states at -23447 1/cm => truncating
         B5 Barrier:        grid size = 227
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23447 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1303 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4572 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.909287, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23447  3.7e+05 5.67e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -97 6.43e+18
         B2    -97 3.53e+18
         B3  -4767 2.06e+18
         B4  -6635 2.15e+18
         B5 -23447 3.02e+17
         B6   1304 1.14e+19
         B7   4573    3e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.16e-17  8.74e-17  4.63e-17  2.33e-17  5.25e-21  7.24e-16  1.28e-14
          R  2.41e+16         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  1.14e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  2.16e+16     0.897      1.89         1     0.503  0.000113      15.6       277
         P3   4.3e+16      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  1.91e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  1.38e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  7.79e+13   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.86e-20  1.86e-19  9.87e-20  4.96e-20  1.12e-23  1.54e-18  2.74e-17
          R  1.13e+19         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  5.37e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  1.01e+19     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  2.02e+19      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  8.94e+22  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  6.48e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  3.65e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
   MasterEquation::set:  done, cpu time[sec] = 0.920225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.128214, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             226261       124314      72516.8      75829.6      10643.3       400469       105672
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.027     0.033         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000501     0.033    -0.983
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0329898
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967064    0.0329357    0.0261039   0.00490396  0.000188176   0.00092072  3.25095e-05  0.000776441  1.00618e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5522, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75420.2        41438      24172.3      25276.5      3547.75       133490      35223.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0253    0.0299         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000458    0.0299     0.985
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0299105
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970139    0.0298615    0.0244281    0.0038047  0.000158198  0.000634722  2.51773e-05  0.000800477   1.0071e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59105, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         7.51455e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126302, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24625, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45252.1      24862.8      14503.4      15165.9      2128.65      80093.9      21134.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0244    0.0283         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000436    0.0283     0.986
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0283192
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.971727    0.0282728    0.0234006   0.00333422  0.000146959  0.000544097  2.26979e-05  0.000814139  1.00797e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.05204e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126863, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23893, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              32323      17759.1      10359.5      10832.8      1520.47      57209.9      15095.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0237    0.0272         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000421    0.0272    -0.986
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0272217
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.972823    0.0271771    0.0226419   0.00304616   0.00014016  0.000493936  2.12732e-05  0.000823595  1.00882e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60007, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.35262e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26046, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25140.1      13812.7      8057.42      8425.51      1182.58      44496.6      11741.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0232    0.0264         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00041    0.0264     0.987
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0263789
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973664    0.0263357    0.0220356    0.0028432  0.000135328  0.000460433  2.02952e-05  0.000830706  1.00966e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62024, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126499, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23403, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22626.1      12431.4      7251.68      7582.96      1064.33      40046.9      10567.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.023     0.026         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000405     0.026     0.987
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0260201
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.974023    0.0259775    0.0217719   0.00276126  0.000133356   0.00044727  1.99043e-05  0.000833664  1.01007e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59414, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.25437e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127472, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24429, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              15084       8287.6      4834.45      5055.31       709.55        26698      7044.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0222    0.0246         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000385    0.0246    -0.988
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.024612
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.975428    0.0245717    0.0207083   0.00246327   0.00012602  0.000400845  1.84909e-05  0.000844668  1.01209e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.00582e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126992, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29586, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              11313       6215.7      3625.84      3791.48      532.163      20023.5      5283.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0216    0.0236         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000371    0.0236     0.988
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0235898
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.976449    0.0235512    0.0199109   0.00226821  0.000121018  0.000371442  1.75632e-05  0.000851836  1.01404e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65571, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.75728e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26712, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9050.43      4972.56      2900.67      3033.19       425.73      16018.8      4226.86
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0211    0.0228         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00036    0.0228     0.989
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0227857
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977252    0.0227484     0.019271   0.00212594  0.000117233  0.000350358  1.68798e-05  0.000856833  1.01595e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62748, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.127239, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7542.02       4143.8      2417.23      2527.65      354.775        13349      3522.38
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0206    0.0221         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000351    0.0221     0.989
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0221226
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977914    0.0220863    0.0187357   0.00201533   0.00011419  0.000334125   1.6342e-05  0.000860449   1.0178e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66957, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         5.26019e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126526, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6464.59      3551.83      2071.91      2166.56      304.093        11442      3019.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0203    0.0216         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000343    0.0216    -0.989
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0215582
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978477    0.0215229    0.0182754   0.00192565   0.00011165  0.000321037  1.59004e-05  0.000863119   1.0196e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63531, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         6.01164e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.12726, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30789, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5656.52      3107.85      1812.92      1895.74      266.081      10011.7      2641.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0      0.02    0.0211         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000336    0.0211    -0.989
         *Z       ---       ---  1.54e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0210671
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978967    0.0210326    0.0178715   0.00185071  0.000109469  0.000310138  1.55266e-05  0.000865106  1.02135e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66994, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 85343 1/cm
      Energy step      = 483 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -40.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005955
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.104537
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.08183
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.10474
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.338122
         W1 Well: minimal relaxation eigenvalue = 0.00970676
         W1 Well: maximal relaxation eigenvalue = 1.77136
         W1 Well:       grid size = 242
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31543 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -148 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -148 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4978 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6427 1/cm
         B5 Barrier: nonpositive number of states at -23815 1/cm => truncating
         B5 Barrier:        grid size = 226
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23815 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1300 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.900007, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31543 -23815 2.81e+05 7.38e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -148 8.54e+18
         B2   -148 4.88e+18
         B3  -4978 2.99e+18
         B4  -6427 3.11e+18
         B5 -23815 4.39e+17
         B6   1301 1.55e+19
         B7   4682  4.2e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.36e-17  5.02e-17  2.83e-17  1.47e-17  4.58e-21  3.87e-16  6.49e-15
          R  4.24e+16         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  1.99e+16      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  3.53e+16     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  6.81e+16       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  2.18e+20  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  2.59e+15     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  1.54e+14   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   5.2e-20  1.11e-19  6.25e-20  3.24e-20  1.01e-23  8.53e-19  1.43e-17
          R  1.92e+19         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  9.04e+18      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2   1.6e+19     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  3.09e+19       1.6      3.42      1.93         1  0.000312      26.3       442
         P4   9.9e+22  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  1.17e+18     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  6.99e+16   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
   MasterEquation::set:  done, cpu time[sec] = 0.911088, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+08
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.15092, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             235981       134929      82563.9      86076.7      12150.4       429515       116027
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0341    0.0458         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000677    0.0458    -0.977
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0457512
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954324    0.0456761    0.0362606   0.00666456  0.000261907   0.00124203  4.46892e-05   0.00118538  1.69563e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51158, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+08
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78660.5      44976.5      27521.3      28692.2      4050.13       143172      38675.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0321    0.0418         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000622    0.0418    -0.979
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0417834
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958285    0.0417148    0.0341371   0.00521341  0.000223017  0.000869549  3.51581e-05   0.00121961   1.6971e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53417, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         7.34524e+08
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.124367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47196.3      26985.9      16512.8      17215.3      2430.08        85903      23205.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.031    0.0397         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000594    0.0397      0.98
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0397184
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.960347    0.0396532    0.0328146   0.00459104  0.000208399  0.000750954   3.1923e-05   0.00123927  1.69847e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.02833e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123613, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18361, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33711.6      19275.6      11794.8      12296.7      1735.77      61359.3      16575.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0303    0.0383         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000574    0.0383    -0.981
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0382887
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.961774    0.0382258    0.0318317   0.00420942  0.000199539  0.000685129  3.00599e-05   0.00125301   1.6998e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54489, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.32214e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123798, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26220.2      14992.2      9173.77      9564.08      1350.04      47723.9      12891.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0297    0.0372         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000559    0.0372    -0.981
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0371875
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.962874    0.0371265    0.0310427    0.0039402  0.000193234  0.000641074   2.8779e-05   0.00126344   1.7011e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55905, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19362, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23598.1      13492.9      8256.39      8607.67      1215.04      42951.5      11602.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0295    0.0367         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000553    0.0367    -0.981
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0367179
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963342    0.0366576    0.0306987   0.00383142  0.000190658  0.000623742  2.82665e-05    0.0012678  1.70174e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55488, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         2.20357e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123196, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20872, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15732.1       8995.3      5504.26      5738.45      810.026      28634.3       7735.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0285    0.0349         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000528    0.0349     0.982
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0348699
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.965187    0.0348127    0.0293062   0.00343525   0.00018106  0.000562495  2.64101e-05   0.00128424  1.70489e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56899, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.9381e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123527, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11799.1      6746.47      4128.19      4303.84       607.52      21475.7      5801.33
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0277    0.0335         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000509    0.0335     0.983
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.033523
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.966532     0.033468    0.0282571   0.00317536    0.0001745  0.000523593  2.51888e-05   0.00129518  1.70793e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58952, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         3.67262e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123764, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22443, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9439.26      5397.18      3302.56      3443.07      486.016      17180.6      4641.06
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0272    0.0325         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000495    0.0325    -0.984
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0324604
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967593    0.0324072    0.0274122   0.00298546  0.000169523  0.000495634  2.42873e-05   0.00130299  1.71088e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58622, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123362, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7866.05      4497.65      2752.13      2869.22      405.013      14317.2      3867.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0267    0.0316         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000483    0.0316     0.984
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0315819
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.96847    0.0315301    0.0267034    0.0028376  0.000165517  0.000474067  2.35766e-05   0.00130879  1.71376e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60991, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.14167e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6742.33      3855.13      2358.97      2459.33      347.154      12271.9      3315.04
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0263    0.0308         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000473    0.0308    -0.984
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0308327
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969218    0.0307821    0.0260924   0.00271753  0.000162166  0.000456649   2.2992e-05    0.0013132  1.71655e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60552, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.87619e+09
      global relaxation matrix dimension = 242
      setting global matrices ... done, cpu time[sec] = 0.123489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23504, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5899.54      3373.24       2064.1      2151.92       303.76      10737.9      2900.66
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0259    0.0302         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000464    0.0302    -0.985
         *Z       ---       ---  1.28e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0301794
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.96987    0.0301299    0.0255551   0.00261708  0.000159285  0.000442122  2.24966e-05    0.0013166  1.71928e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59568, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 88123 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -38.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005332
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122844
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.080453
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.091061
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.323371
         W1 Well: minimal relaxation eigenvalue = 0.00955724
         W1 Well: maximal relaxation eigenvalue = 2.5321
         W1 Well:       grid size = 240
         W1 Well:      real depth = -31531 1/cm
         W1 Well: effective depth = -31876 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -376 1/cm
         B2 Barrier:        grid size = 176
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 123 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4876 1/cm
         B4 Barrier:        grid size = 189
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6376 1/cm
         B5 Barrier: nonpositive number of states at -23377 1/cm => truncating
         B5 Barrier:        grid size = 223
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23376 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1123 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4623 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.88673, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31876 -23376  3.9e+05 9.56e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -376 1.12e+19
         B2    124 6.68e+18
         B3  -4876 4.28e+18
         B4  -6376 4.45e+18
         B5 -23376 6.32e+17
         B6   1124  2.1e+19
         B7   4624  5.8e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.39e-17  2.99e-17  1.79e-17  9.55e-18  4.03e-21  2.15e-16  3.43e-15
          R  7.21e+16         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  3.35e+16     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  5.58e+16     0.775      1.67         1     0.534  0.000225        12       191
         P3  1.05e+17      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  2.48e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5  4.65e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  2.92e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.17e-20  6.82e-20  4.09e-20  2.18e-20   9.2e-24  4.91e-19  7.82e-18
          R  3.16e+19         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  1.47e+19     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  2.45e+19     0.775      1.67         1     0.534  0.000225        12       191
         P3  4.59e+19      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  1.09e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5  2.04e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  1.28e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
   MasterEquation::set:  done, cpu time[sec] = 0.897679, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121857, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.14035, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             245098       145651        93454      97154.6      13787.9       458258       126578
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0418    0.0614         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000891    0.0614    -0.969
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0614011
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.938702    0.0612981    0.0485964   0.00890664  0.000351817   0.00161257  5.92594e-05   0.00174397  2.74382e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.50227, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1701, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81699.3      48550.4      31151.3      32384.9      4595.97       152753      42192.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0396    0.0564         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000822    0.0564     0.971
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0563851
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.943709    0.0562906    0.0460206   0.00695113  0.000303763   0.00114909  4.74289e-05   0.00179112  2.74605e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         7.18534e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121256, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49019.6      29130.2      18690.8      19430.9      2757.58      91651.6      25315.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0384    0.0538         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000786    0.0538    -0.973
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.053778
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.946312    0.0536878    0.0443787   0.00613434  0.000285502  0.000999938   4.3372e-05   0.00181847  2.74813e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53083, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.00595e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17756, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              35014      20807.3      13350.6      13879.2       1969.7      65465.4      18082.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0375     0.052         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000761     0.052     0.974
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0519706
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.948117    0.0518834    0.0431493   0.00563662  0.000274393  0.000916814  4.10272e-05   0.00183775  2.75013e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.21813, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.29336e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121727, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20644, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27233.1      16183.5      10383.8        10795      1531.99      50917.5      14064.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0369    0.0506         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000742    0.0506    -0.974
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0505765
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.949508    0.0504916    0.0421583   0.00528644   0.00026647  0.000861037  3.94114e-05   0.00185248  2.75209e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55201, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.1218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1907, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24509.8      14565.1       9345.4      9715.46      1378.79      45825.8      12657.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0366      0.05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000734      0.05    -0.975
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0499812
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.950103    0.0498974     0.041725   0.00514512  0.000263229   0.00083906   3.8764e-05   0.00185868  2.75305e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53507, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          2.1556e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.122681, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2031, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16339.9      9710.08      6230.27      6476.97      919.194      30550.5      8438.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0355    0.0476         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000702    0.0476     0.976
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0476348
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.952445    0.0475549    0.0399653   0.00463097   0.00025113  0.000761233  3.64151e-05   0.00188226  2.75775e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55017, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.87414e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21867, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12254.9      7282.56       4672.7      4857.73      689.395      22912.9      6328.89
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0346    0.0459         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000679    0.0459    -0.977
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0459198
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954157    0.0458428    0.0386337   0.00429392  0.000242838  0.000711653  3.48658e-05   0.00189822  2.76228e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56396, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.59267e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121559, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21166, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9803.92      5826.05      3738.16      3886.18      551.516      18330.3      5063.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.034    0.0446         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000661    0.0446    -0.977
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0445636
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.955511    0.0444888    0.0375575   0.00404762  0.000236535   0.00067594  3.37198e-05   0.00190982  2.76668e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55735, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23136, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8169.93      4855.04      3115.13      3238.49      459.597      15275.3      4219.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0334    0.0434         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000646    0.0434    -0.978
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.04344
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.956633    0.0433672    0.0366525   0.00385579  0.000231452   0.00064834   3.2815e-05   0.00191859  2.77095e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.02974e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121332, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7002.8      4161.46      2670.11      2775.84       393.94      13093.1      3616.51
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0329    0.0425         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000633    0.0425    -0.979
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0424801
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.957591    0.0424089    0.0358705   0.00369994  0.000227193  0.000626016  3.20696e-05   0.00192541  2.77511e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57892, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.74827e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22282, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6127.45      3641.28      2336.35      2428.86      344.698      11456.4      3164.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0325    0.0416         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000621    0.0416     0.979
         *Z       ---       ---  1.08e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0416418
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958428     0.041572    0.0351816   0.00356948  0.000223527   0.00060737  3.14372e-05   0.00193081  2.77915e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56853, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 6721.41, elapsed time[sec] = 198
