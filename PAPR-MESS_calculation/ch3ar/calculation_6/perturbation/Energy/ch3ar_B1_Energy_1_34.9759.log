Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000677, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001774, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 2.02612, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.16519, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.049135, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000849, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.428672, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3721
      interpolating states number/density done, cpu time[sec] = 2.20531, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 4.24741, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002016, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003965, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007476, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001605, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003528, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007394, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.02179, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001659, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003551, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006626, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.0016, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003499, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006504, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.018696, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001569, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003488, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006429, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002205, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.004179, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007359, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019398, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001502, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003396, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006315, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001628, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003788, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007219, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.019364, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001497, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003392, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006302, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001574, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003431, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006507, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.018259, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.002058, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.003979, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.007204, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012629, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001577, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00349, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.006728, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012029, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.084018, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.085779, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001448, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00342, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.11595, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.015616, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 0.207409, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.214835, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001196, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00043, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.014586, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014656, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001193, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000422, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.014461, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014524, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001196, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00041, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.014371, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014433, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001171, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000423, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.014276, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014336, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000414, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.014107, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014174, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000412, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.014051, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01411, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001164, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000386, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013896, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013952, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001147, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.013866, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013985, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001158, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013827, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013885, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001149, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000395, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.013826, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013885, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00115, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000393, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.013762, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013819, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001156, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000399, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.013736, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013793, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001151, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000423, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013747, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013803, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001154, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000408, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.013744, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013867, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001152, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000397, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.013765, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013822, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001151, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000393, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.013798, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013854, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.11913, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.58315, elapsed time[sec] = 1
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 3.2e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001161, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.01478, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01487, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001152, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000407, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.013686, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013746, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.013604, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013664, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001147, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00041, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.01358, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013639, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001142, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.01351, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013572, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000389, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.013478, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013533, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00113, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.013412, elapsed time[sec] = 1
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013471, elapsed time[sec] = 1
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001127, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000406, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.013391, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013447, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001126, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000398, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.01332, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013373, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001121, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000382, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.013356, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013411, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001121, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000385, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.013319, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013375, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001124, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.0004, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.013322, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013376, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001123, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000369, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.013296, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01335, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001122, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000392, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.013322, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013378, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001126, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000373, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.013347, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013402, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001125, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000403, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.013497, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013563, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.24599, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.48655, elapsed time[sec] = 2
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001267, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00045, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 5.98356, elapsed time[sec] = 6
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 6.00003, elapsed time[sec] = 6
   Model::RRHO::RRHO:  done, cpu time[sec] = 6.00014, elapsed time[sec] = 6
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000987, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000921, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 3.42725e+225  6.21603e+29  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966
     200 9.31689e+127  2.06786e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15
     300  5.25428e+95  1.54615e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21
     400  5.59864e+79  6.55561e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24
     500  1.88188e+70  2.05746e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26
     600  1.11242e+64  5.36224e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27
     700  4.66878e+59  1.23222e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28
     800   2.7953e+56   2.5854e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29
     900  9.78971e+53  5.06312e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30
    1000  1.17491e+52   9.3913e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30
    1100  3.43911e+50  1.66686e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31
    1200  1.95761e+49  2.85215e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31
    1300  1.85281e+48  4.73124e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32
    1400  2.60764e+47  7.64151e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32
    1500  5.02891e+46  1.20577e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33
    1600  1.25008e+46  1.86388e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33
    1700  3.82275e+45   2.8289e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33
    1800  1.38699e+45  4.22344e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33
    1900  5.80323e+44  6.21217e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34
    2000  2.73722e+44  9.01408e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 13.7448, elapsed time[sec] = 9
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 13058 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000139
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006846
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.010694
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.16098
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.54204
         W1 Well: minimal relaxation eigenvalue = 0.0378536
         W1 Well: maximal relaxation eigenvalue = 2.02481
         W1 Well:       grid size = 893
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 261
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 7 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 354
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 385
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6192 1/cm
         B5 Barrier: nonpositive number of states at -23592 1/cm => truncating
         B5 Barrier:        grid size = 733
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23592 1/cm
         B6 Barrier:        grid size = 232
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.8592, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23592 3.42e+05 3.15e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      8 2.58e+12
         B2    208 2.19e+11
         B3  -4642 3.33e+10
         B4  -6192 5.46e+10
         B5 -23592 4.36e+09
         B6   1458 5.82e+11
         B7   4708 1.51e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.88e+44  5.68e+44  5.78e+35  2.47e+32  5.58e-06  3.24e+48  2.62e+55
          R  5.32e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  1.76e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  1.73e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  4.06e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  1.79e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  3.09e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  3.82e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.3e+40   1.3e+41  1.32e+32  5.64e+28  1.28e-09  7.41e+44  5.99e+51
          R  2.33e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  7.69e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  7.56e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  1.77e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  7.83e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  1.35e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  1.67e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
   MasterEquation::set:  done, cpu time[sec] = 11.8636, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+08
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 0.525301, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6892, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            301.953      25.6107      3.88563      6.38437     0.509112      67.9755       1.7631
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41566e-12  1.02053e-51  1.21037e-59
      low eigenvalue method done, cpu time[sec] = 0.262526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-53  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.76518e-46 -1.50875e-46 -8.63796e-48 -1.43417e-46 -2.73157e-48  2.41911e-50  1.28563e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0395, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.40431, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            100.651      8.53691      1.29521      2.12812     0.169704      22.6585     0.587699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.24231, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018693, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261316, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.92586e-12  3.40175e-52  2.90928e-60
      low eigenvalue method done, cpu time[sec] = 0.262122, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.4e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-53  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.51789e-47  1.32679e-47  5.30615e-49 -5.86872e-49 -3.87548e-49  1.83474e-49 -1.14168e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5962, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         4.07644e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.56418, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.3906      5.12215     0.777126      1.27687     0.101822      13.5951      0.35262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242494, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01872, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261477, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.04834e-12  2.04105e-52  1.39097e-60
      low eigenvalue method done, cpu time[sec] = 0.262312, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.73e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.82043e-48 -1.11435e-47 -4.44397e-49 -3.15505e-48 -1.03576e-49 -8.26168e-51 -9.92803e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 17.0008, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         5.70702e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.41587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.536, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.1362      3.65868      0.55509     0.912053    0.0727303      9.71079     0.251871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242231, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018709, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261228, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.9137e-13  1.45789e-52  8.33143e-61
      low eigenvalue method done, cpu time[sec] = 0.262036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.52e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.94298e-47  6.06988e-48  1.13791e-48  1.48514e-47  2.33623e-49  9.30099e-50 -1.29626e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.708, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1          7.3376e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45567, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5818, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.5503      2.84564     0.431737     0.709374     0.056568      7.55284       0.1959
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242687, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261658, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.37688e-13  1.13392e-52  5.60623e-61
      low eigenvalue method done, cpu time[sec] = 0.262464, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.29e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.26943e-47 -4.51932e-48 -1.01477e-49 -3.35967e-48 -1.62235e-49  1.90208e-49 -1.15577e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.794, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         8.15289e+09
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5946, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.1953      2.56107     0.388563     0.638437    0.0509112      6.79755      0.17631
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242239, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261266, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.61709e-15  1.02053e-52  4.73274e-61
      low eigenvalue method done, cpu time[sec] = 0.262112, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.86e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.47686e-47  1.35158e-47 -3.11851e-50 -5.54233e-48 -9.16728e-50 -5.48634e-50 -5.03283e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.779, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.22293e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.47979, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.1302      1.70738     0.259042     0.425625    0.0339408       4.5317      0.11754
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242736, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.018652, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261676, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.56241e-13   6.8035e-53  2.42384e-61
      low eigenvalue method done, cpu time[sec] = 0.262654, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.8e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.7663e-47  1.79193e-47  4.00712e-49  3.83616e-49  3.70188e-50 -1.47819e-49  -7.3752e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.862, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         1.63058e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.41591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6077, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.0977      1.28054     0.194282     0.319218    0.0254556      3.39878    0.0881549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242796, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.019026, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262092, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.55977e-14  5.10263e-53  1.48411e-61
      low eigenvalue method done, cpu time[sec] = 0.26291, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.1e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.83812e-48  4.62977e-49  1.04615e-49  1.64546e-48   8.3492e-50  2.60156e-50 -1.24513e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8148, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.03822e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.41758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6156, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.0781      1.02443     0.155425     0.255375    0.0203645      2.71902    0.0705239
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261382, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.58313e-13   4.0821e-53  1.00601e-61
      low eigenvalue method done, cpu time[sec] = 0.262412, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.08e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.15883e-47 -1.42922e-47 -2.89262e-49 -1.33015e-48 -2.40167e-50 -4.96035e-50 -5.41341e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8406, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.44587e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.40473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6122, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.0651     0.853691     0.129521     0.212812    0.0169704      2.26585    0.0587699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.261502, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90167e-13  3.40175e-53  7.28521e-62
      low eigenvalue method done, cpu time[sec] = 0.262302, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.4e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.00528e-47 -7.95043e-48 -2.82195e-49 -2.88552e-48  -3.6381e-50 -4.58495e-50  5.52867e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.7804, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.85351e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.44914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6201, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.62723     0.731735     0.111018     0.182411    0.0145461      1.94216    0.0503742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.242976, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018762, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.262029, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31702e-13  2.91579e-53  5.52711e-62
      low eigenvalue method done, cpu time[sec] = 0.262827, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.92e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-54  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.92321e-48 -9.13388e-49   5.3878e-50 -6.75999e-49 -3.41289e-50  3.73781e-50  3.12902e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.8281, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         3.26116e+10
      global relaxation matrix dimension = 893
      setting global matrices ... done, cpu time[sec] = 1.45343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6181, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7.54883     0.640268    0.0971408     0.159609    0.0127278      1.69939    0.0440775
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.241717, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.018612, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.88117e-14  2.55131e-53    4.341e-62
      low eigenvalue method done, cpu time[sec] = 0.261567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-53  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.66e-55  2.22e-16         1
         *Z       ---       ---  1.43e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.57024e-48  2.98362e-48 -1.49938e-51  3.84371e-50  3.63877e-50   2.9345e-50  7.19086e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.881, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 13336 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010662
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.74211
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.676433
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.93688
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.10922
         W1 Well: minimal relaxation eigenvalue = 0.0370967
         W1 Well: maximal relaxation eigenvalue = 2.00674
         W1 Well:       grid size = 864
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 256
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 24 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 345
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 376
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23584 1/cm => truncating
         B5 Barrier:        grid size = 710
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23584 1/cm
         B6 Barrier:        grid size = 228
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4704 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.6101, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23584 3.44e+05 3.34e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     25 2.97e+12
         B2    181 2.54e+11
         B3  -4604 3.92e+10
         B4  -6216 6.39e+10
         B5 -23584 5.14e+09
         B6   1480  6.9e+11
         B7   4705 1.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.26e+42  3.69e+42  7.98e+33  4.38e+30  1.66e-06  1.77e+46  8.83e+52
          R  7.91e-43         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  2.71e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  1.25e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  2.28e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  6.01e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  5.64e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  1.13e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.02e+38   8.8e+38   1.9e+30  1.05e+27  3.97e-10  4.23e+42  2.11e+49
          R  3.32e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  1.14e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  5.25e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  9.57e-28  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  2.52e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  2.36e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  4.75e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
   MasterEquation::set:  done, cpu time[sec] = 12.6152, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+08
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 0.493703, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0447, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            336.857      28.8787      4.45159      7.25421     0.583325      78.3163      2.12485
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216778, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017138, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.234895, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.50108e-12  1.15996e-50  1.77793e-57
      low eigenvalue method done, cpu time[sec] = 0.235631, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.3e-52  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.70012e-45 -2.53838e-45 -7.07154e-47 -1.10176e-45 -3.07538e-47 -2.22039e-48 -2.97636e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.0346, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.49081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            112.286      9.62622      1.48386      2.41807     0.194442      26.1054     0.708282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216094, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017249, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71897e-12  3.86653e-51  4.44209e-58
      low eigenvalue method done, cpu time[sec] = 0.234393, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-52  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -1.7443e-45 -5.80291e-46 -1.09735e-47 -2.43502e-47 -3.65867e-48 -1.05879e-48 -2.88809e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0766, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.94873e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48614, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1668, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.3713      5.77573     0.890317      1.45084     0.116665      15.6633     0.424969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216416, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233921, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.49521e-13  2.31992e-51  2.15999e-58
      low eigenvalue method done, cpu time[sec] = 0.23467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.32e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.61e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -4.51765e-46 -4.45712e-46 -1.70281e-47 -2.67515e-46 -5.20497e-48  1.87947e-48 -4.96284e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1233, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         5.52822e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.49233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.0853, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.1224      4.12552     0.635941      1.03632    0.0833322       11.188      0.30355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216134, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017118, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233546, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.05001e-12  1.65709e-51  1.30762e-58
      low eigenvalue method done, cpu time[sec] = 0.23437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.15e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.59488e-46  2.05452e-46  2.07768e-48 -7.66434e-48  6.98144e-49  7.62287e-49  1.67488e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0484, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.10772e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48876, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.2303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.4285      3.20874     0.494621     0.806024    0.0648139      8.70181     0.236094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216242, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017198, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233749, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.74104e-14  1.28884e-51  8.86661e-59
      low eigenvalue method done, cpu time[sec] = 0.234487, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.81904e-46   2.7255e-46  6.95395e-48  6.59936e-47  1.84339e-48  2.33338e-48  9.36212e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1815, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         7.89746e+09
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.49432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1505, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.6857      2.88787     0.445159     0.725421    0.0583325      7.83163     0.212485
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017186, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233823, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.91807e-13  1.15996e-51  7.50855e-59
      low eigenvalue method done, cpu time[sec] = 0.234556, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.3e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.89457e-49   5.9661e-47  8.25816e-48  9.73703e-47  1.49895e-48  1.51517e-48  7.27233e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1108, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.18462e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.49327, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1017, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.4571      1.92524     0.296772     0.483614    0.0388884      5.22108     0.141656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.23364, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.87628e-13  7.73307e-52  3.88982e-59
      low eigenvalue method done, cpu time[sec] = 0.234431, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.73e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.85749e-46 -5.27285e-47 -3.76106e-48 -1.02712e-46  -2.3085e-48 -8.97524e-49  7.90422e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.0643, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.57949e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1492, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.8428      1.44393     0.222579     0.362711    0.0291663      3.91581     0.106242
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215743, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.89376e-13   5.7998e-52  2.39978e-59
      low eigenvalue method done, cpu time[sec] = 0.234017, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.8e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.65031e-46 -2.87352e-47 -2.32853e-48 -5.50101e-47 -1.61441e-48 -8.86117e-49  7.49594e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1058, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         1.97437e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48863, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.4743      1.15515     0.178063     0.290168     0.023333      3.13265    0.0849939
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216082, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.017155, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233531, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.75416e-14  4.63984e-52  1.63564e-59
      low eigenvalue method done, cpu time[sec] = 0.234324, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.64e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.56624e-46 -7.97009e-47 -3.39504e-48 -5.55945e-47 -1.18414e-48 -1.85413e-48 -9.14304e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1268, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.36924e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48691, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1777, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.2286     0.962622     0.148386     0.241807    0.0194442      2.61054    0.0708282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.215445, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.232895, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.46721e-13  3.86653e-52  1.18948e-59
      low eigenvalue method done, cpu time[sec] = 0.233632, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.41695e-47  8.15651e-48 -5.54217e-49  1.03144e-47  3.17323e-49 -7.44618e-50  -4.1368e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1348, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.76411e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1738, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.62448     0.825105     0.127188     0.207263    0.0166664      2.23761    0.0607099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216549, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233997, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.15278e-13  3.31417e-52  9.05479e-60
      low eigenvalue method done, cpu time[sec] = 0.23483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.31e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.28736e-46  1.05972e-47 -6.42402e-49 -1.34814e-47 -1.73233e-49  4.35976e-49 -1.99988e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1282, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         3.15898e+10
      global relaxation matrix dimension = 864
      setting global matrices ... done, cpu time[sec] = 1.48853, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1856, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.42142     0.721966      0.11129     0.181355    0.0145831      1.95791    0.0531212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.216291, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.017152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.233732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76485e-13   2.8999e-52  7.13142e-60
      low eigenvalue method done, cpu time[sec] = 0.234463, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-53  2.22e-16         1
         *Z       ---       ---  8.76e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.09902e-46  5.75053e-47  1.94614e-48  2.41062e-47  4.89903e-49 -2.53742e-49 -1.03877e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1431, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 13615 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01139
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.860437
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.866662
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.566189
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.89438
         W1 Well: minimal relaxation eigenvalue = 0.0363935
         W1 Well: maximal relaxation eigenvalue = 2.05583
         W1 Well:       grid size = 853
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31594 1/cm
         B1 Barrier:        grid size = 257
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -6 1/cm
         B2 Barrier:        grid size = 253
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 344
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 374
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6207 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 694
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 229
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4711 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.33573, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31594 -23167 4.66e+05 3.55e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -6  3.4e+12
         B2    207 2.95e+11
         B3  -4617 4.62e+10
         B4  -6207 7.46e+10
         B5 -23167 6.05e+09
         B6   1478 8.16e+11
         B7   4711 2.31e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e+40  3.35e+40  1.47e+32  1.02e+29  5.46e-07  1.37e+44  4.34e+50
          R  8.45e-41         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  2.99e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  6.81e-33  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3   9.8e-30  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  1.83e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5   7.3e-45  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  2.31e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.88e+36  8.13e+36  3.57e+28  2.48e+25  1.33e-10  3.33e+40  1.05e+47
          R  3.48e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  1.23e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2   2.8e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  4.03e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  7.54e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5     3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  9.49e-48  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.34093, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+08
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 0.482577, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.6495, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            374.795      32.4815      5.08519      8.22036     0.666436      89.9184      2.54799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207513, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016585, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224331, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.97284e-11  1.24655e-49   1.9071e-55
      low eigenvalue method done, cpu time[sec] = 0.225086, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-51         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.2123e-44  1.00026e-44  4.28966e-46  1.09573e-44  1.54305e-46 -4.07009e-48  1.90726e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.9713, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.26789, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5572, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.932      10.8272      1.69506      2.74012     0.222145      29.9728      0.84933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016574, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.60434e-13  4.15517e-50  4.94119e-56
      low eigenvalue method done, cpu time[sec] = 0.224766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-51         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.62391e-44  5.46286e-45 -7.38777e-47 -4.49347e-45 -9.88349e-47  5.27043e-47  1.58493e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.82985e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.47033, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5844, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.9589      6.49629      1.01704      1.64407     0.133287      17.9837     0.509598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207471, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016558, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.224273, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.55074e-12  2.49311e-50  2.44188e-56
      low eigenvalue method done, cpu time[sec] = 0.225076, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.49e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.07e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67964e-45 -3.32113e-46 -6.45924e-47   -2.682e-45  -6.0178e-47  3.39173e-47 -1.71748e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4756, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         5.36179e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.31095, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.6333, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.5421      4.64021     0.726456      1.17434    0.0952052      12.8455     0.363998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01659, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.22384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.65065e-12  1.78079e-50  1.49359e-56
      low eigenvalue method done, cpu time[sec] = 0.224606, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.48e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.60739e-44 -4.84597e-45 -1.55791e-46 -1.29903e-45 -3.53163e-47 -4.11933e-47 -1.11018e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4825, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         6.89373e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.51245, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4522, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.6439      3.60905     0.565021     0.913374    0.0740485      9.99093      0.28311
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20998, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016549, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.226752, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.69786e-13  1.38506e-50  1.02036e-56
      low eigenvalue method done, cpu time[sec] = 0.227744, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.04e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.24093e-45 -1.47535e-45 -4.88201e-47 -6.14868e-46 -1.15684e-47  1.11724e-48 -2.07255e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4354, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          7.6597e+09
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46041, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5601, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.4795      3.24815     0.508519     0.822036    0.0666436      8.99184     0.254799
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206796, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016518, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223543, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.47151e-12  1.24655e-50  8.66723e-57
      low eigenvalue method done, cpu time[sec] = 0.224411, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.49916e-46  1.12613e-45  2.03412e-47 -1.99953e-46 -1.26424e-47 -7.54865e-48  5.21875e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5151, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.14896e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.4648, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5281, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.9863      2.16543     0.339013     0.548024    0.0444291      5.99456     0.169866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207091, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016546, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.53878e-13  8.31037e-51  4.54121e-57
      low eigenvalue method done, cpu time[sec] = 0.224602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.31e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00736e-44  2.72568e-45   4.6314e-47 -1.49657e-46  6.68361e-48  2.18583e-47  2.60825e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4677, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.53194e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5619, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.7397      1.62407      0.25426     0.411018    0.0333218      4.49592     0.127399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206464, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223228, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.83066e-13  6.23278e-51   2.8228e-57
      low eigenvalue method done, cpu time[sec] = 0.224228, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.4909e-45  1.81296e-45  4.69101e-47  3.56811e-46  1.07385e-47  8.35648e-48  4.37133e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4484, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         1.91493e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5827, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.9918      1.29926     0.203408     0.328815    0.0266575      3.59673      0.10192
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207159, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.016557, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223956, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.80256e-13  4.98622e-51  1.93458e-57
      low eigenvalue method done, cpu time[sec] = 0.224689, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.81e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.69646e-46  6.09675e-46  2.31881e-47  3.71419e-46  6.05198e-48 -7.37252e-48  -1.6232e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5272, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         2.29791e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5551, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.4932      1.08272     0.169506     0.274012    0.0222145      2.99728     0.084933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.207008, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016527, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223767, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.97998e-13  4.15519e-51  1.41289e-57
      low eigenvalue method done, cpu time[sec] = 0.224534, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.48991e-45  1.52303e-45   1.7923e-47    -3.98e-47  3.22004e-49 -5.33609e-48 -2.49688e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4678, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1          2.6809e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5781, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.7084     0.928042     0.145291     0.234868     0.019041       2.5691    0.0727997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206786, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223528, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.9416e-13  3.56159e-51  1.07924e-57
      low eigenvalue method done, cpu time[sec] = 0.224343, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.35389e-46 -2.43975e-47  7.39511e-48  1.28643e-46  3.63309e-48  1.24797e-48 -3.28976e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5206, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1         3.06388e+10
      global relaxation matrix dimension = 853
      setting global matrices ... done, cpu time[sec] = 1.46424, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5253, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.36987     0.812037      0.12713     0.205509    0.0166609      2.24796    0.0636997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.206454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016588, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.223269, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.25777e-13  3.11639e-51  8.52407e-58
      low eigenvalue method done, cpu time[sec] = 0.224288, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-52         0         1
         *Z       ---       ---  6.48e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.30858e-45 -1.75114e-46  3.34072e-48  1.96496e-46  5.50665e-48  2.88429e-48  1.30218e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4537, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 13893 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011083
         W1 Well: collisional kernel bandwidth = 40
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.704306
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.821839
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.687371
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.72542
         W1 Well: minimal relaxation eigenvalue = 0.0356984
         W1 Well: maximal relaxation eigenvalue = 1.68436
         W1 Well:       grid size = 827
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 252
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 32 1/cm
         B2 Barrier:        grid size = 249
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 337
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 365
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23177 1/cm => truncating
         B5 Barrier:        grid size = 674
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23177 1/cm
         B6 Barrier:        grid size = 226
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1462 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.19599, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23177 4.62e+05 3.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     33 3.89e+12
         B2    198 3.41e+11
         B3  -4642 5.42e+10
         B4  -6182 8.69e+10
         B5 -23177  7.1e+09
         B6   1463 9.63e+11
         B7   4708 2.84e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.44e+38  3.96e+38  3.38e+30  2.93e+27  1.88e-07   1.4e+42  2.89e+48
          R  6.93e-39         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  2.53e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  2.96e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  3.41e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  5.32e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  7.17e-43  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  3.47e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.63e+34  9.96e+34  8.49e+26  7.37e+23  4.73e-11  3.51e+38  7.26e+44
          R  2.75e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1     1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  1.18e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  1.36e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  2.11e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  2.85e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  1.38e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
   MasterEquation::set:  done, cpu time[sec] = 9.20284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+08
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 0.683762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.9383, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             415.69       36.423      5.78872      9.28504     0.758749      102.821      3.03751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.191132, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015307, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.207278, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.23143e-12  1.27642e-48  1.53955e-53
      low eigenvalue method done, cpu time[sec] = 0.208095, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.56e-50         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.55494e-43  7.99421e-44  2.40313e-45  2.60022e-44  4.17727e-46 -1.78719e-46 -2.41995e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.7624, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.3822, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1588, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.563       12.141      1.92957      3.09501     0.252916      34.2736       1.0125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190664, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015274, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206203, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.09028e-12  4.25481e-49   4.1292e-54
      low eigenvalue method done, cpu time[sec] = 0.207109, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-50         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.17815e-44 -1.14971e-44 -1.30593e-45 -5.14769e-46  3.13231e-46 -1.11031e-46 -6.51659e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         3.71895e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1464, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.1381       7.2846      1.15774      1.85701      0.15175      20.5641     0.607502
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.19029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205833, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.96246e-12   2.5529e-49  2.07283e-54
      low eigenvalue method done, cpu time[sec] = 0.206798, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.11e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.84532e-46   9.5742e-46  7.02735e-47  1.33098e-44  1.04921e-46 -7.34844e-47  3.27328e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7327, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         5.20654e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38216, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1596, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            59.3843      5.20329     0.826959      1.32643     0.108393      14.6887      0.43393
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190608, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01526, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206126, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.85347e-13  1.82351e-49  1.28071e-54
      low eigenvalue method done, cpu time[sec] = 0.206985, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.51e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.47021e-44 -1.01176e-44 -4.26003e-47   3.5404e-45  2.84589e-48 -4.22419e-48   7.9168e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7429, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         6.69412e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.1878        4.047     0.643191      1.03167    0.0843055      11.4245     0.337501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190794, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015434, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.20648, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.08003e-12  1.41829e-49  8.81379e-55
      low eigenvalue method done, cpu time[sec] = 0.207169, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.83349e-44  1.09259e-44  4.21783e-46  3.52309e-45  4.71243e-47  9.16109e-47 -6.78355e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6797, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         7.43791e+09
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.38185, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1652, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             41.569       3.6423     0.578872     0.928504    0.0758749      10.2821     0.303751
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189997, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015245, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205498, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.38378e-12  1.27646e-49  7.50938e-55
      low eigenvalue method done, cpu time[sec] = 0.206509, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.56e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.95048e-44  1.57352e-44  6.17043e-46  1.01793e-44  2.78768e-46  3.15013e-46 -2.92995e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6979, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.11569e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37852, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1768, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.7127       2.4282     0.385914     0.619003    0.0505833      6.85471     0.202501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190213, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205675, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50999e-13  8.50977e-50  3.97909e-55
      low eigenvalue method done, cpu time[sec] = 0.206464, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.51e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.04e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.46976e-44 -1.00934e-45  -4.6299e-46 -6.82796e-45 -1.10652e-46  -4.3783e-47  2.50304e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7506, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.48758e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.35058, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.7845      1.82115     0.289436     0.464252    0.0379375      5.14103     0.151876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.191087, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015295, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.206658, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.93324e-13  6.38234e-50  2.49213e-55
      low eigenvalue method done, cpu time[sec] = 0.207347, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.87725e-45  3.23032e-46  1.71142e-46  2.21446e-45  2.41037e-47  -1.6424e-47   1.9012e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         1.85948e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37872, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1547, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.6276      1.45692     0.231549     0.371402      0.03035      4.11283       0.1215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189896, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015235, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71447e-13  5.10588e-50  1.71747e-55
      low eigenvalue method done, cpu time[sec] = 0.206396, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.11e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.08884e-44 -5.96062e-45 -3.33454e-46 -4.38042e-45 -1.13991e-46 -2.74121e-46 -1.85879e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6901, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.23137e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.34057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1405, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.8563       1.2141     0.192957     0.309501    0.0252916      3.42736      0.10125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.189924, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.015253, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205435, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.85393e-14   4.2549e-50  1.25977e-55
      low eigenvalue method done, cpu time[sec] = 0.206114, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.91155e-44 -1.19257e-44 -3.48416e-46 -1.22504e-45 -4.71269e-47 -9.87585e-47  2.24749e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6074, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.60327e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1839, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.8769      1.04066     0.165392     0.265287    0.0216785      2.93773     0.086786
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015228, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.205492, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.43461e-13  3.64706e-50  9.65654e-56
      low eigenvalue method done, cpu time[sec] = 0.206174, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.45075e-44  -7.8716e-45 -2.20673e-46 -1.93009e-45 -4.11704e-47 -7.21557e-47  4.81939e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7518, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.97516e+10
      global relaxation matrix dimension = 827
      setting global matrices ... done, cpu time[sec] = 1.37879, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.1658, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.3923     0.910575     0.144718     0.232126    0.0189687      2.57052    0.0759378
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.190295, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015229, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.20578, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.42692e-13  3.19118e-50  7.64917e-56
      low eigenvalue method done, cpu time[sec] = 0.206516, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.19e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-51         0         1
         *Z       ---       ---  5.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.48034e-45  4.96553e-45  1.53729e-46  7.73804e-46  1.24461e-47  -3.8455e-47    2.125e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.6879, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 14171 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010851
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.780564
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.896662
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.54553
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.31556
         W1 Well: minimal relaxation eigenvalue = 0.0350281
         W1 Well: maximal relaxation eigenvalue = 2.11885
         W1 Well:       grid size = 803
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 249
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 245
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 330
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 357
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 654
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 223
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1459 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4708 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.7864, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23107 4.86e+05 4.01e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 4.44e+12
         B2    206 3.94e+11
         B3  -4639 6.35e+10
         B4  -6178 1.01e+11
         B5 -23107 8.32e+09
         B6   1460 1.13e+12
         B7   4709 3.48e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.27e+36  6.05e+36  9.64e+28  1.03e+26  6.86e-08  1.85e+40  2.56e+46
          R  4.41e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  1.65e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  1.04e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  9.71e-27   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  1.46e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  5.41e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6   3.9e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.92e+32  1.58e+33  2.51e+25  2.69e+22  1.79e-11  4.82e+36  6.69e+42
          R  1.69e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  6.34e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  3.98e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  3.72e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  5.59e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  2.07e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6   1.5e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
   MasterEquation::set:  done, cpu time[sec] = 11.7934, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+08
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 0.459338, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2922, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            459.831       40.737      6.56989      10.4585     0.861288      117.164      3.60298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176178, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190898, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37603e-11  1.25991e-47  9.63778e-52
      low eigenvalue method done, cpu time[sec] = 0.191555, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.41e-49         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.37361e-42 -1.63839e-42 -4.88675e-44 -2.94661e-43 -1.02789e-44 -1.38672e-45 -3.31733e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6879, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30329, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            153.277       13.579      2.18996      3.48618     0.287096      39.0546      1.20099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175701, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014125, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190048, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.3357e-12  4.20028e-48  2.67119e-52
      low eigenvalue method done, cpu time[sec] = 0.190695, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-49         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.29203e-43  6.91784e-43  2.76857e-44   3.1828e-43  8.88042e-45 -4.26346e-46  4.39188e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9608, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         3.61529e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30164, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7629, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.9663      8.14739      1.31398      2.09171     0.172258      23.4328     0.720596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014129, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190104, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.01341e-12  2.52029e-48  1.36134e-52
      low eigenvalue method done, cpu time[sec] = 0.190754, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.83e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.3237e-43  5.95621e-44 -1.32993e-45 -7.78611e-44 -1.88281e-45  1.33347e-45 -2.22789e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.0265, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         5.06141e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65.6902      5.81957     0.938556      1.49408     0.123041      16.7377     0.514711
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.177147, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014113, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.191488, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.78655e-15  1.80026e-48  8.49402e-53
      low eigenvalue method done, cpu time[sec] = 0.192211, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.31e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.35974e-43  6.07745e-44 -1.31562e-46 -2.27149e-44 -7.25291e-46 -2.86872e-47  2.78673e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9642, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         6.50753e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.29977, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7554, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.0924      4.52633     0.729988      1.16206    0.0956987      13.0182     0.400331
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175198, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189535, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.44246e-13  1.40023e-48  5.88773e-53
      low eigenvalue method done, cpu time[sec] = 0.190176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.14854e-43 -2.62925e-44   1.8957e-45  3.61045e-44  9.24283e-46  6.73127e-46  1.05462e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9832, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         7.23059e+09
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.3029, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8242, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.9831       4.0737     0.656989      1.04585    0.0861288      11.7164     0.360298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175066, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189407, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.86997e-12  1.26021e-48  5.03129e-53
      low eigenvalue method done, cpu time[sec] = 0.190062, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.41e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.56253e-43 -2.19546e-43 -7.15383e-45 -1.06069e-43 -2.81573e-45 -2.41659e-45  1.35509e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.0532, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.08459e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7071, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.6554       2.7158     0.437993     0.697236    0.0574192      7.81093     0.240199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174775, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189132, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.76389e-13  8.40163e-49   2.6958e-53
      low eigenvalue method done, cpu time[sec] = 0.189792, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.4e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.94e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.66546e-43  -1.4926e-43 -3.04122e-45 -3.95663e-45   6.9907e-47  1.14566e-45  1.71456e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9314, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.44612e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7468, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.9916      2.03685     0.328495     0.522927    0.0430644       5.8582     0.180149
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174988, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014114, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.09657e-15  6.30131e-49  1.70113e-53
      low eigenvalue method done, cpu time[sec] = 0.190022, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.3e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.37908e-43  1.37278e-44  -2.0817e-45 -2.65449e-44 -7.42106e-46 -1.14842e-45 -1.15283e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         1.80765e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.3025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7577, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.3933      1.62948     0.262796     0.418341    0.0344515      4.68656     0.144119
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.174922, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18931, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.95146e-13  5.04109e-49   1.1789e-53
      low eigenvalue method done, cpu time[sec] = 0.189957, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.04e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.12484e-43 -7.19563e-44  -1.0295e-45  1.75589e-44  5.42925e-46  5.58593e-46  1.59752e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9957, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.16918e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.30467, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7612, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.3277       1.3579     0.218996     0.348618    0.0287096      3.90546     0.120099
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18946, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.3871e-13  4.20094e-49  8.68506e-54
      low eigenvalue method done, cpu time[sec] = 0.190112, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.57368e-43 -4.09069e-44 -1.50893e-46  7.16254e-45  1.60693e-46 -1.06958e-45 -5.83316e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.53071e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.29855, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.754, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             13.138      1.16391     0.187711     0.298815    0.0246082      3.34754     0.102942
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.175126, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014124, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189485, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.23714e-14  3.60082e-49    6.681e-54
      low eigenvalue method done, cpu time[sec] = 0.190134, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.6e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52186e-43  3.24908e-44  7.96963e-46  8.89773e-45  3.15802e-46  5.56851e-47 -3.74328e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9762, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.89223e+10
      global relaxation matrix dimension = 803
      setting global matrices ... done, cpu time[sec] = 1.29968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.4958      1.01842     0.164247     0.261463    0.0215322       2.9291    0.0900745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17485, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014123, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.189192, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.13337e-14  3.15073e-49  5.30784e-54
      low eigenvalue method done, cpu time[sec] = 0.189854, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-50         0         1
         *Z       ---       ---   5.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.36622e-43   3.0741e-44  9.53872e-46 -1.68284e-45  6.11083e-48  3.79241e-46 -5.00513e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.0308, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 14450 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010739
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.674255
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.880555
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.5081
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.1385
         W1 Well: minimal relaxation eigenvalue = 0.034407
         W1 Well: maximal relaxation eigenvalue = 2.19421
         W1 Well:       grid size = 794
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 249
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 7 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 329
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4633 1/cm
         B4 Barrier:        grid size = 356
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 648
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 224
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.4014, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23135 4.77e+05 4.25e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      8 5.06e+12
         B2    182 4.54e+11
         B3  -4633 7.42e+10
         B4  -6199 1.17e+11
         B5 -23135 9.73e+09
         B6   1457 1.33e+12
         B7   4705 4.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.59e+34  1.19e+35  3.43e+27  4.46e+24  2.69e-08  3.19e+38  3.04e+44
          R  2.18e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  8.38e-36     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2  2.92e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  2.24e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  3.71e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  3.14e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  3.29e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e+31  3.16e+31  9.09e+23  1.18e+21  7.14e-12  8.46e+34  8.05e+40
          R  8.21e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  3.16e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2   1.1e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  8.45e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4   1.4e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  1.18e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  1.24e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
   MasterEquation::set:  done, cpu time[sec] = 11.4078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+08
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 0.465836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.98405, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             507.34      45.4487      7.43516       11.749     0.974906      133.062       4.2533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170967, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014035, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.185194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.13384e-12  1.20087e-46  4.74819e-50
      low eigenvalue method done, cpu time[sec] = 0.185823, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-48         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.7631e-42 -5.15762e-42 -4.03576e-45   2.6171e-42  2.16786e-44  3.22864e-44  2.99759e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3233, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4587, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            169.113      15.1496      2.47839      3.91635     0.324969       44.354      1.41777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.171109, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014034, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.185345, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.38435e-12  4.00576e-47  1.35768e-50
      low eigenvalue method done, cpu time[sec] = 0.185972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-48         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.66984e-42  -1.4404e-42 -7.16596e-44 -9.66297e-43 -2.14808e-44  6.60767e-47 -2.66093e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5757, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          3.5182e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27617, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4713, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            101.468      9.08974      1.48703      2.34981     0.194981      26.6124      0.85066
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170958, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013873, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.185027, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78314e-12  2.40412e-47  7.02063e-51
      low eigenvalue method done, cpu time[sec] = 0.185659, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.4e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.27e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.65256e-42  8.19285e-43  4.71143e-44  8.14648e-43  1.93892e-44  9.90473e-45 -7.20625e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5866, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         4.92548e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.2714, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.4772      6.49267      1.06217      1.67844     0.139272      19.0088     0.607615
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170658, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184788, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    4.746e-13   1.7175e-47  4.42231e-51
      low eigenvalue method done, cpu time[sec] = 0.185417, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.91e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.59024e-43  6.38572e-43  2.37112e-44  5.60537e-44  1.25419e-45 -1.37768e-45  3.40628e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5633, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         6.33276e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4853, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.3711      5.04985     0.826129      1.30545     0.108323      14.7847     0.472589
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170609, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184504, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70962e-12  1.33597e-47  3.08692e-51
      low eigenvalue method done, cpu time[sec] = 0.185121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.52046e-42  2.74364e-43 -2.94325e-45 -8.10974e-44  4.11231e-46  4.06968e-45  -2.5173e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6438, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          7.0364e+09
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.25624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5242, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             50.734      4.54487     0.743516       1.1749    0.0974906      13.3062      0.42533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170456, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013724, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184372, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.41774e-12  1.20242e-47  2.64556e-51
      low eigenvalue method done, cpu time[sec] = 0.184984, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.18724e-42 -1.31832e-42 -5.10393e-44  -6.6511e-43 -1.80806e-44 -3.47844e-45 -2.55238e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.05546e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27187, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4692, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.8227      3.02991     0.495677      0.78327    0.0649937       8.8708     0.283553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170553, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013718, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184467, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.66701e-13  8.01719e-48  1.43307e-51
      low eigenvalue method done, cpu time[sec] = 0.185084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.02e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.83458e-42 -7.56852e-43 -1.83446e-44 -2.89692e-44 -1.64168e-45 -1.98196e-44 -9.07474e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6273, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.40728e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26859, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4749, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             25.367      2.27243     0.371758     0.587452    0.0487453       6.6531     0.212665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170545, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184461, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.75693e-13  6.01336e-48   9.1106e-52
      low eigenvalue method done, cpu time[sec] = 0.18508, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.01e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.67572e-42  5.59313e-43  1.76785e-44  6.12513e-44  8.59424e-46   5.0535e-45 -1.08889e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.631, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1          1.7591e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.28052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4427, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.2936      1.81795     0.297406     0.469962    0.0389962      5.32248     0.170132
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170348, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013773, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.184327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.80476e-13  4.81094e-48  6.34883e-52
      low eigenvalue method done, cpu time[sec] = 0.184954, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.66e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.94106e-42 -6.93915e-43 -2.82058e-44 -2.44351e-43 -5.37453e-45 -6.52216e-45 -1.07889e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.5849, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.11092e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26941, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4952, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.9113      1.51496     0.247839     0.391635    0.0324969       4.4354     0.141777
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.169801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013717, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.183704, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.60276e-14  4.00926e-48  4.69768e-52
      low eigenvalue method done, cpu time[sec] = 0.18432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.93826e-43 -5.63597e-44 -2.94508e-45 -1.20087e-43 -2.19043e-45  9.22713e-45 -2.21536e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6546, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.46274e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.26697, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.4954      1.29853     0.212433     0.335687    0.0278545      3.80177     0.121523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.17012, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013699, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18401, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.37441e-13  3.43661e-48  3.62659e-52
      low eigenvalue method done, cpu time[sec] = 0.184626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.10509e-42  3.65502e-43  1.13955e-44  7.24338e-44  2.09383e-45  2.39956e-46   1.6331e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.9975, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         2.81456e+10
      global relaxation matrix dimension = 794
      setting global matrices ... done, cpu time[sec] = 1.27396, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4912, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.6835      1.13622     0.185879     0.293726    0.0243727      3.32655     0.106333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.170542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0137, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18444, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.50043e-13   3.0071e-48  2.88981e-52
      low eigenvalue method done, cpu time[sec] = 0.185053, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.01e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-49         0         1
         *Z       ---       ---  6.29e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.18505e-44 -3.45574e-44  4.97258e-45   7.0142e-44  8.91691e-46  1.11034e-45  2.37047e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6026, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 14727 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010876
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.589142
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.829755
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.794401
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.81093
         W1 Well: minimal relaxation eigenvalue = 0.0337911
         W1 Well: maximal relaxation eigenvalue = 1.46767
         W1 Well:       grid size = 772
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 245
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 242
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 206 1/cm
         B3 Barrier:        grid size = 323
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 349
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 631
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 221
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.21927, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23133 4.77e+05 4.51e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 5.76e+12
         B2    207 5.22e+11
         B3  -4653 8.65e+10
         B4  -6213 1.36e+11
         B5 -23133 1.14e+10
         B6   1467 1.55e+12
         B7   4707 5.16e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.14e+33  2.88e+33  1.45e+26  2.27e+23   1.1e-08  6.78e+36  4.53e+42
          R  8.79e-34         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  3.47e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  6.92e-27  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  4.41e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  9.11e+07  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5  1.47e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  2.21e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.11e+29  7.87e+29  3.95e+22  6.19e+19     3e-12  1.85e+33  1.24e+39
          R  3.22e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  1.27e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  2.53e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  1.62e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  3.33e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5   5.4e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  8.08e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
   MasterEquation::set:  done, cpu time[sec] = 8.22553, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+08
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 0.429228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.7346, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            558.375      50.5844      8.39132      13.1652      1.10051      150.635      4.99817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157797, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012934, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170915, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.3163e-11  1.12435e-45   1.8787e-48
      low eigenvalue method done, cpu time[sec] = 0.171511, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-45 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-47 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.08068e-40   6.2847e-41  2.16458e-42  2.60666e-41  8.16781e-43  -3.1745e-44  3.50399e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.9426, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.125      16.8615      2.79711      4.38839     0.366835      50.2116      1.66606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157632, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012974, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170787, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.38885e-12  3.75947e-46  5.53455e-49
      low eigenvalue method done, cpu time[sec] = 0.171388, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.76e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-47 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -5.6815e-41 -2.93809e-41 -2.66609e-43   4.0035e-42  3.60879e-44  3.15455e-44 -1.49067e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1469, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         3.42709e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20259, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.1837, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.675      10.1169      1.67826      2.63304     0.220101       30.127     0.999634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012907, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170666, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.96076e-12  2.25843e-46  2.90259e-49
      low eigenvalue method done, cpu time[sec] = 0.17126, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.63e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.79252e-42  1.60359e-42  1.31444e-43  1.19677e-42  4.30125e-44   2.5151e-44  1.43462e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1258, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         4.79793e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2348, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            79.7678      7.22634      1.19876      1.88074     0.157215      21.5193     0.714024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157394, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012976, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170551, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.31533e-13  1.61429e-46  1.84538e-49
      low eigenvalue method done, cpu time[sec] = 0.171146, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.11246e-41 -1.13329e-41 -2.57145e-43 -1.57193e-42 -5.16449e-44 -1.78555e-44 -5.12818e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1755, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.16877e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2461, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            62.0416      5.62049     0.932368       1.4628     0.122278      16.7372     0.555352
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157517, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012855, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.97942e-13  1.25614e-46  1.29701e-49
      low eigenvalue method done, cpu time[sec] = 0.171149, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.15118e-41 -3.06501e-42  -1.1524e-43 -5.59362e-43 -2.94793e-44 -1.04136e-43 -1.75902e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1558, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         6.85418e+09
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.327, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.8375      5.05844     0.839132      1.31652     0.110051      15.0635     0.499817
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157727, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012949, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.98903e-13  1.13073e-46  1.11475e-49
      low eigenvalue method done, cpu time[sec] = 0.171458, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-46 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.82e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.14511e-41   1.1057e-41   4.0726e-43  4.84361e-42  1.28543e-43  8.12871e-44  5.72814e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2513, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.02813e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20061, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3161, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             37.225      3.37229     0.559421     0.877679     0.073367      10.0423     0.333211
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157568, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170558, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.00512e-13  7.54279e-47  6.10398e-50
      low eigenvalue method done, cpu time[sec] = 0.17117, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.54e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.55e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.76473e-42  1.12064e-42  7.27237e-44  5.06606e-43  1.97023e-44  7.26369e-44  2.02716e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2592, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.37084e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.1996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2494, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.9187      2.52922     0.419566     0.658259    0.0550253      7.53175     0.249908
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157695, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.013018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170898, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.09989e-12  5.65911e-47  3.90937e-50
      low eigenvalue method done, cpu time[sec] = 0.17152, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.66e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.56682e-42 -6.47277e-43  1.01101e-43  1.65799e-42  3.49111e-44 -1.17341e-44 -1.08755e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1591, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.71355e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.19967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             22.335      2.02338     0.335653     0.526607    0.0440202       6.0254     0.199927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012974, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170621, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.92376e-13  4.52837e-47  2.73944e-50
      low eigenvalue method done, cpu time[sec] = 0.171221, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.53e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.13032e-42 -3.57652e-42 -1.16923e-43 -9.70775e-43 -2.30877e-44  2.80343e-44 -3.34008e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.1777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.05626e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20059, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3037, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.6125      1.68615     0.279711     0.438839    0.0366835      5.02116     0.166606
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.15773, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170679, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.00843e-13  3.77428e-47   2.0359e-50
      low eigenvalue method done, cpu time[sec] = 0.171268, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.77e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -5.1534e-42 -1.80577e-42   -6.919e-44 -4.08466e-43 -1.10522e-44 -1.40987e-44  2.51111e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2304, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.39896e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.3113, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.9536      1.44527     0.239752     0.376148     0.031443      4.30386     0.142805
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012755, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170435, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.78361e-14  3.23552e-47  1.57736e-50
      low eigenvalue method done, cpu time[sec] = 0.17107, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.24e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-48 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.36915e-42 -2.31937e-42 -7.35655e-44 -1.18996e-42 -2.97218e-44  3.29544e-44  1.07092e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2439, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         2.74167e+10
      global relaxation matrix dimension = 772
      setting global matrices ... done, cpu time[sec] = 1.20184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.405, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.9594      1.26461     0.209783      0.32913    0.0275126      3.76587     0.124954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.157366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012764, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.170314, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.23612e-13  2.83137e-47   1.2607e-50
      low eigenvalue method done, cpu time[sec] = 0.170907, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-47 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.57e-49 -4.44e-16         1
         *Z       ---       ---  8.05e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.49062e-42  2.62729e-42  9.11449e-44  1.34608e-42  3.07358e-44 -2.59879e-44  2.29547e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.3228, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 15005 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010205
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.616489
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.787901
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.71436
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.56924
         W1 Well: minimal relaxation eigenvalue = 0.0331938
         W1 Well: maximal relaxation eigenvalue = 2.69189
         W1 Well:       grid size = 752
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 242
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 317
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4649 1/cm
         B4 Barrier:        grid size = 342
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23125 1/cm => truncating
         B5 Barrier:        grid size = 615
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23125 1/cm
         B6 Barrier:        grid size = 218
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1488 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4712 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.88136, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23125  4.8e+05 4.79e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      1 6.54e+12
         B2    187 5.99e+11
         B3  -4649 1.01e+11
         B4  -6199 1.57e+11
         B5 -23125 1.32e+10
         B6   1489 1.81e+12
         B7   4713 6.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.42e+31  8.48e+31   7.2e+24  1.35e+22  4.68e-09  1.77e+35  8.45e+40
          R  2.92e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  1.18e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  1.39e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  7.43e-23  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  2.14e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  5.65e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  1.18e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.64e+27  2.39e+28  2.03e+21  3.79e+18  1.32e-12  4.98e+31  2.38e+37
          R  1.04e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  4.19e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  4.93e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  2.64e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  7.58e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  2.01e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6   4.2e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.88768, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+08
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 0.437364, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.36513, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            613.117      56.1721      9.44552       14.716      1.23904      170.008      5.84828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14727, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012184, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159632, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.60419e-11  1.07435e-44  6.10347e-47
      low eigenvalue method done, cpu time[sec] = 0.160179, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-46         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.38587e-40   3.2511e-40  8.37285e-42  7.67564e-41  2.10426e-42  6.53121e-43 -8.80728e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.377, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.93948, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            204.372       18.724      3.14851      4.90532     0.413013      56.6692      1.94943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146764, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159106, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66347e-11  3.61991e-45  1.85018e-47
      low eigenvalue method done, cpu time[sec] = 0.159657, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-46         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.36677e-40 -6.05273e-41 -2.25411e-42 -1.92704e-41 -5.03752e-43 -3.05406e-43  -1.8399e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         3.34144e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13519, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.97433, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.623      11.2344       1.8891      2.94319     0.247808      34.0015      1.16966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146759, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159081, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.74652e-13  2.18131e-45  9.83654e-48
      low eigenvalue method done, cpu time[sec] = 0.159697, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.18e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.24e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.00011e-40 -7.84656e-41 -2.03589e-42 -2.05244e-41  -5.7748e-43 -1.08734e-43    3.014e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6589, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         4.67801e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.95517, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.5881      8.02459      1.34936      2.10228     0.177005      24.2868     0.835469
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146567, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012158, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.158899, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.18394e-13  1.56195e-45  6.31047e-48
      low eigenvalue method done, cpu time[sec] = 0.159455, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.18e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.21722e-40  6.89762e-41  2.30211e-42  2.22594e-41  5.96239e-43     1.14e-42  2.08853e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5967, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.01459e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.68536, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.1241      6.24135       1.0495      1.63511     0.137671      18.8897     0.649809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147283, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159654, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07462e-12  1.21686e-45  4.46515e-48
      low eigenvalue method done, cpu time[sec] = 0.160211, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.04e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.76465e-42  1.30484e-41  9.42932e-43  9.47821e-42  2.25452e-43  1.18387e-43   -3.212e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.33, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         6.68288e+09
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13161, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6807, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.3117      5.61721     0.944552       1.4716     0.123904      17.0008     0.584828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147244, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159573, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.36153e-13  1.09588e-45  3.84843e-48
      low eigenvalue method done, cpu time[sec] = 0.160129, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.8952e-41  1.99073e-41 -1.46762e-43 -1.70962e-42 -4.12314e-44 -2.50931e-43 -1.04495e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.00243e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6813, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.8744      3.74481     0.629701     0.981065    0.0826025      11.3338     0.389885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147427, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159838, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.79732e-13  7.32194e-46  2.12976e-48
      low eigenvalue method done, cpu time[sec] = 0.160402, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.32e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.4151e-41  1.18402e-41  4.59899e-43  2.44071e-42  4.96082e-44  3.59683e-43 -3.14145e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3926, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.33658e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13438, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.6558      2.80861     0.472276     0.735799    0.0619519      8.50038     0.292414
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159478, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.26797e-12   5.4986e-46  1.37406e-48
      low eigenvalue method done, cpu time[sec] = 0.160032, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.39301e-42 -6.96476e-43 -1.52285e-44 -3.76994e-42 -6.41042e-44  3.61949e-43 -1.07085e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3237, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.67072e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13234, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.5247      2.24689     0.377821     0.588639    0.0495615      6.80031     0.233931
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147118, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159451, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08498e-13  4.40271e-46  9.68184e-49
      low eigenvalue method done, cpu time[sec] = 0.160004, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.04349e-41  2.78841e-41  9.28934e-43  4.49397e-42  1.66805e-43  1.67015e-43 -7.50291e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.326, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.00486e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.66334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.4372       1.8724     0.314851     0.490532    0.0413013      5.66692     0.194943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147067, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012167, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159406, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.51948e-14  3.67123e-46  7.22695e-49
      low eigenvalue method done, cpu time[sec] = 0.159968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.40835e-41 -2.28325e-41   -4.902e-43 -4.59132e-43  -5.0564e-44 -7.12213e-44  5.09546e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3154, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.33901e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.13345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.63404, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.5176      1.60492     0.269872     0.420456    0.0354011      4.85736     0.167094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.147158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159481, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.21559e-14  3.14827e-46  5.61943e-49
      low eigenvalue method done, cpu time[sec] = 0.160092, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-47         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.65866e-41 -2.63181e-41 -7.29561e-43 -3.59099e-42 -1.12198e-43 -1.03494e-43  8.93955e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3343, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         2.67315e+10
      global relaxation matrix dimension = 752
      setting global matrices ... done, cpu time[sec] = 1.12894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62155, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.3279       1.4043     0.236138     0.367899    0.0309759      4.25019     0.146207
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.146935, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012156, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.159269, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.67975e-13  2.75577e-46  4.50497e-49
      low eigenvalue method done, cpu time[sec] = 0.159824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.76e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.15e-48         0         1
         *Z       ---       ---  1.15e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.65068e-42  -2.5493e-42 -1.61813e-43 -2.42897e-42 -5.49832e-44  2.77712e-43  1.20233e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.3159, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 15283 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010074
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.713175
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.771607
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.899648
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.39652
         W1 Well: minimal relaxation eigenvalue = 0.0326611
         W1 Well: maximal relaxation eigenvalue = 1.33693
         W1 Well:       grid size = 744
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 243
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 240
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 316
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4625 1/cm
         B4 Barrier:        grid size = 341
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6200 1/cm
         B5 Barrier: nonpositive number of states at -23147 1/cm => truncating
         B5 Barrier:        grid size = 610
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23147 1/cm
         B6 Barrier:        grid size = 219
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.95384, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23147 4.72e+05 5.07e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 7.41e+12
         B2    164 6.87e+11
         B3  -4625 1.17e+11
         B4  -6200 1.81e+11
         B5 -23147 1.54e+10
         B6   1487 2.11e+12
         B7   4700 7.52e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.25e+30  3.02e+30  4.23e+23  9.33e+20   2.1e-09  5.62e+33  1.95e+39
          R  8.02e-31         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  3.31e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  2.37e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  1.07e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  4.76e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  1.78e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  5.12e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.59e+26   8.7e+26  1.22e+20  2.69e+17  6.05e-13  1.62e+30  5.63e+35
          R  2.78e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  1.15e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  8.21e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  3.72e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  1.65e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  6.18e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  1.78e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.95862, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+08
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 0.364323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87627, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            671.676      62.2396      10.6053      16.4109      1.39151      191.311      6.81475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.143127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011828, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155126, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.35832e-12  1.10356e-43  1.66213e-45
      low eigenvalue method done, cpu time[sec] = 0.155681, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.6e-45         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -9.99934e-40 -9.54616e-40 -4.88895e-41 -4.41567e-40 -1.05533e-41  4.48085e-43 -7.10813e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7534, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11462, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.54474, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            223.892      20.7465      3.53511      5.47028     0.463835      63.7703      2.27158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142531, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011881, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.21545e-12  3.78661e-44  5.17765e-46
      low eigenvalue method done, cpu time[sec] = 0.155138, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.79e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-45         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.88891e-41 -5.68172e-42 -6.09358e-42  3.03895e-41  9.00961e-43 -1.74042e-42 -1.81255e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         3.26077e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11572, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.62055, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            134.335      12.4479      2.12106      3.28217     0.278301      38.2622      1.36295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.143048, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011872, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155099, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.4414e-12   2.2986e-44  2.78909e-46
      low eigenvalue method done, cpu time[sec] = 0.155654, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.3e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.51e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.47705e-39  5.35006e-40  8.39468e-42  2.74863e-41  1.23202e-42 -2.09829e-42 -3.00191e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2271, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         4.56508e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.58326, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            95.9538      8.89137      1.51505      2.34441     0.198787      27.3301     0.973536
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14252, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011851, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154543, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.85864e-12  1.65299e-44  1.80498e-46
      low eigenvalue method done, cpu time[sec] = 0.155093, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.4e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.01921e-40 -1.85439e-40 -8.71735e-42 -8.85506e-41 -1.87984e-42 -2.87522e-42 -1.68791e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         5.86939e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.65491, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.6307      6.91551      1.17837      1.82343     0.154612      21.2568     0.757195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142559, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011846, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154581, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.42295e-14  1.29149e-44  1.28552e-46
      low eigenvalue method done, cpu time[sec] = 0.155132, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.22e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.13397e-41  2.93359e-41 -8.11953e-43 -6.46279e-42 -1.95033e-43 -1.77069e-42 -2.53584e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.257, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         6.52154e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.61209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67.1676      6.22396      1.06053      1.64109     0.139151      19.1311     0.681475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154492, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4231e-12  1.16439e-44  1.11098e-46
      low eigenvalue method done, cpu time[sec] = 0.15504, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.66329e-40   -2.294e-40 -5.06926e-42 -3.06573e-41 -1.11895e-42  2.25123e-42  -8.7856e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1782, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         9.78231e+09
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.6517, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.7784      4.14931     0.707021      1.09406    0.0927671      12.7541     0.454317
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011789, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.54736e-13  7.80964e-45  6.21244e-47
      low eigenvalue method done, cpu time[sec] = 0.154963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.81e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.55e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52732e-40  2.19466e-41  1.53597e-42  6.00258e-42  1.17704e-43  1.17019e-42   -3.922e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2678, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.30431e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11822, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.5876, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33.5838      3.11198     0.530266     0.820543    0.0695753      9.56554     0.340738
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142764, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011844, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154784, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.36029e-13  5.87833e-45  4.03704e-47
      low eigenvalue method done, cpu time[sec] = 0.155334, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.88e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.07357e-41 -4.16962e-41 -2.03024e-42 -2.89581e-41 -7.41351e-43   1.3267e-43  1.11244e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2016, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.63039e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11683, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.606, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26.8671      2.48958     0.424213     0.656434    0.0556603      7.65243      0.27259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.142557, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01178, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154508, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.40344e-12  4.71405e-45   2.8601e-47
      low eigenvalue method done, cpu time[sec] = 0.155058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.71e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.62818e-40  3.06738e-41  2.04182e-42  2.37464e-41  6.28679e-43  1.38659e-42 -4.24684e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2113, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.95646e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.66933, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.3892      2.07465     0.353511     0.547028    0.0463835      6.37703     0.227158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14266, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011778, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.69156e-13  3.93525e-45  2.14419e-47
      low eigenvalue method done, cpu time[sec] = 0.155207, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.94e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.59999e-40 -7.30367e-41 -1.31935e-42 -1.08827e-41 -2.96131e-43  7.71097e-43  3.81457e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2952, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.28254e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.57914, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.1908      1.77827     0.303009     0.468881    0.0397573      5.46602     0.194707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.143151, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011769, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.15011e-13  3.37757e-45  1.67323e-47
      low eigenvalue method done, cpu time[sec] = 0.155639, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.38e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-46         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.70397e-40   7.0386e-41  1.99478e-42  1.90574e-41  5.43539e-43  3.59349e-42  1.56593e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1917, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         2.60862e+10
      global relaxation matrix dimension = 744
      setting global matrices ... done, cpu time[sec] = 1.11512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.60778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.7919      1.55599     0.265133     0.410271    0.0347877      4.78277     0.170369
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.14256, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011805, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.51739e-13  2.95848e-45  1.34546e-47
      low eigenvalue method done, cpu time[sec] = 0.155098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.66e-47         0         1
         *Z       ---       ---  1.83e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.56144e-41  3.68533e-41 -7.41954e-44 -6.14803e-42  -1.6975e-43 -2.79847e-42  1.53893e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2487, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 15561 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.012702
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.579718
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.734964
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.87502
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.19662
         W1 Well: minimal relaxation eigenvalue = 0.032088
         W1 Well: maximal relaxation eigenvalue = 3.87846
         W1 Well:       grid size = 726
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31629 1/cm
         B1 Barrier:        grid size = 239
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 311
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4654 1/cm
         B4 Barrier:        grid size = 335
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6213 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 596
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23179 1/cm
         B6 Barrier:        grid size = 217
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4706 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.51996, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31629 -23179 4.62e+05 5.38e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 8.39e+12
         B2    157 7.86e+11
         B3  -4654 1.36e+11
         B4  -6213 2.09e+11
         B5 -23179 1.78e+10
         B6   1457 2.45e+12
         B7   4706 9.04e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.35e+28  1.27e+29  2.86e+22  7.39e+19  9.76e-10  2.12e+32  5.46e+37
          R  1.87e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  7.87e-30     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2   3.5e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  1.35e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  1.02e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  4.72e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  1.83e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.58e+25  3.75e+25  8.44e+18  2.18e+16  2.88e-13  6.26e+28  1.61e+34
          R  6.33e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  2.66e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  1.19e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  4.58e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  3.47e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5   1.6e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6   6.2e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
   MasterEquation::set:  done, cpu time[sec] = 9.52463, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+08
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 0.348625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            734.268      68.8182      11.8786      18.2597      1.55897       214.68      7.90977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011163, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145697, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.67846e-11  1.23792e-42  3.77231e-44
      low eigenvalue method done, cpu time[sec] = 0.146222, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-44         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.11567e-38 -1.22226e-38 -4.31972e-40  -4.5666e-39 -1.12362e-40 -4.62178e-42  1.81496e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.0615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.4512, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            244.756      22.9394      3.95954      6.08656     0.519655      71.5601      2.63659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133371, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011111, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.77511e-12  4.37779e-43  1.20632e-44
      low eigenvalue method done, cpu time[sec] = 0.145857, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.38e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-44         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.29518e-39  1.14271e-39 -2.32445e-42 -5.73249e-40 -1.02141e-41  9.25107e-42  5.25227e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.8507, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         3.18467e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.0608, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.854      13.7636      2.37573      3.65194     0.311793       42.936      1.58195
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011089, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145307, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.45789e-12   2.6898e-43  6.58158e-45
      low eigenvalue method done, cpu time[sec] = 0.145839, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.69e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.63e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.92581e-39 -3.05863e-39 -1.09217e-40 -1.11425e-39 -2.70408e-41  1.85144e-41   6.6082e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7138, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         4.45854e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05977, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31399, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.895      9.83117      1.69695      2.60853     0.222709      30.6686      1.12997
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011128, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.86491e-13  1.94794e-43  4.29575e-45
      low eigenvalue method done, cpu time[sec] = 0.145825, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.95e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.25e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.06772e-39   2.5891e-39  6.99215e-41  3.19792e-40  1.00139e-41  -3.1908e-42   2.7057e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7105, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         5.73241e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06082, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31837, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.5853      7.64647      1.31985      2.02885     0.173218      23.8534     0.878863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.1333, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011131, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145284, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.46782e-12  1.52913e-43  3.07905e-45
      low eigenvalue method done, cpu time[sec] = 0.145817, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.56648e-39  1.12406e-39   1.4827e-41  2.62398e-41  1.96063e-42  2.57491e-42  8.23778e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7104, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         6.36934e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05951, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.4268      6.88182      1.18786      1.82597     0.155897       21.468     0.790977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.13307, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011119, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145053, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.95106e-13  1.38119e-43  2.66814e-45
      low eigenvalue method done, cpu time[sec] = 0.145602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.83396e-39 -9.84307e-40 -3.43287e-41 -1.77721e-40 -6.53345e-42 -2.95897e-41  1.84195e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7221, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         9.55401e+09
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33816, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.9512      4.58788     0.791909      1.21731     0.103931       14.312     0.527318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011137, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21519e-12  9.32259e-44  1.50731e-45
      low eigenvalue method done, cpu time[sec] = 0.145624, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.32e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.99e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.41831e-40  9.44507e-40   2.7077e-41  4.64388e-40  1.07059e-41 -2.06494e-41 -5.25107e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7335, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.27387e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06017, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.3332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36.7134      3.44091     0.593932     0.912985    0.0779483       10.734     0.395488
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145312, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.0309e-13  7.04382e-44  9.86505e-46
      low eigenvalue method done, cpu time[sec] = 0.145848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.04e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.26e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.65225e-39 -1.57772e-39  -3.5178e-41 -1.47216e-40  -5.6293e-42 -1.50813e-41 -2.07907e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7101, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.59233e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.34125, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.3707      2.75273     0.475145     0.730388    0.0623586      8.58721     0.316391
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133045, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145042, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.64162e-12  5.66321e-44    7.027e-46
      low eigenvalue method done, cpu time[sec] = 0.145572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.66e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   4.2796e-39  1.16644e-39  4.21249e-41  3.65245e-40  1.03224e-41  2.86475e-41 -4.07884e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7436, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1          1.9108e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06138, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.4756      2.29394     0.395954     0.608656    0.0519655      7.15601     0.263659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011135, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145181, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.52464e-13  4.73645e-44  5.29095e-46
      low eigenvalue method done, cpu time[sec] = 0.14572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.74e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.58164e-39  4.89767e-40  8.09646e-42 -5.40425e-41    9.565e-44  1.82242e-41  2.69024e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.22927e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.05971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.33084, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.9791      1.96623      0.33939     0.521705    0.0445419      6.13372     0.225993
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.136441, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011176, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.14847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.59794e-14  4.07102e-44  4.14365e-46
      low eigenvalue method done, cpu time[sec] = 0.149006, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.07e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.82252e-40  4.77422e-40  1.45391e-41  1.58264e-40  3.54777e-42 -8.57571e-42 -1.42302e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7255, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         2.54774e+10
      global relaxation matrix dimension = 726
      setting global matrices ... done, cpu time[sec] = 1.06134, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.31816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.3567      1.72046     0.296966     0.456492    0.0389742        5.367     0.197744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.133129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011206, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.145196, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.97224e-13  3.56992e-44  3.34209e-46
      low eigenvalue method done, cpu time[sec] = 0.145726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-45         0         1
         *Z       ---       ---  3.21e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.94316e-40  1.64103e-40  2.43913e-42 -1.45971e-41   6.8291e-46  1.26532e-41 -1.49572e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.7119, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 15839 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010461
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.496266
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.699278
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.671617
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.02192
         W1 Well: minimal relaxation eigenvalue = 0.0315963
         W1 Well: maximal relaxation eigenvalue = 1.41263
         W1 Well:       grid size = 708
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 236
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 306
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4663 1/cm
         B4 Barrier:        grid size = 329
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6204 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 582
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 214
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 166
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4716 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.01881, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23155  4.7e+05  5.7e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 9.48e+12
         B2    162 8.99e+11
         B3  -4663 1.57e+11
         B4  -6204  2.4e+11
         B5 -23155 2.06e+10
         B6   1501 2.84e+12
         B7   4717 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.64e+27  6.16e+27  2.17e+21  6.53e+18  4.64e-10  9.26e+30   1.8e+36
          R  3.78e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  1.62e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  4.61e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  1.53e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  2.16e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  1.08e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  5.57e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.13e+23  1.89e+24  6.67e+17  2.01e+15  1.43e-13  2.85e+27  5.52e+32
          R  1.23e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  5.28e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2   1.5e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  4.99e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  7.01e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  3.51e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  1.81e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.0235, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+08
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.326991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.22252, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             801.01      75.9368      13.2738      20.2728      1.74253      240.257      9.14628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124388, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010393, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134936, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.66396e-13  1.52655e-41  7.43352e-43
      low eigenvalue method done, cpu time[sec] = 0.135429, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-41  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.82e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.09804e-38 -1.39428e-38 -5.71469e-40 -2.37347e-39 -8.72957e-41  5.27473e-41 -3.00545e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7646, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18254, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            267.003      25.3123       4.4246       6.7576     0.580842      80.0855      3.04876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123903, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.4337e-11  5.59467e-42  2.43773e-43
      low eigenvalue method done, cpu time[sec] = 0.135044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.59e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.05957e-38   1.3047e-38  5.28283e-40  7.17692e-39   1.7566e-40  6.06453e-41    7.698e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4305, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         3.11276e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.0055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.15024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            160.202      15.1874      2.65476      4.05456     0.348505      48.0513      1.82926
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124025, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010394, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134575, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.97074e-12  3.48628e-42  1.34653e-43
      low eigenvalue method done, cpu time[sec] = 0.135076, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.49e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-43  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.38008e-38  1.40726e-38   2.1714e-40  9.73208e-40  4.56858e-41  2.03294e-42  3.02423e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3835, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         4.35787e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.0095, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.23335, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             114.43      10.8481      1.89626      2.89611     0.248932      34.3224      1.30661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123975, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010437, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134569, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.1889e-13  2.54542e-42  8.86174e-44
      low eigenvalue method done, cpu time[sec] = 0.135069, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.55e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.04e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.40637e-38 -7.54259e-39 -1.05854e-40  6.70387e-40  2.16372e-42  -3.7925e-41 -2.69214e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4675, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         5.60297e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89.0011      8.43742      1.47487      2.25253     0.193614      26.6952      1.01625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124166, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.1347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.43913e-12  2.00912e-42  6.39145e-44
      low eigenvalue method done, cpu time[sec] = 0.135198, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.35e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.24729e-39 -5.35518e-40 -7.22998e-41 -4.20935e-40 -1.35532e-41 -8.41652e-41 -2.24622e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4075, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         6.22552e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00717, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18322, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             80.101      7.59368      1.32738      2.02728     0.174253      24.0257     0.914628
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124167, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134688, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04218e-12  1.81862e-42  5.55297e-44
      low eigenvalue method done, cpu time[sec] = 0.135188, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.75e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.34769e-38 -3.71404e-39 -9.17288e-41  3.96292e-40 -2.41467e-43 -2.48031e-41  2.40228e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         9.33829e+09
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.0093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.18042, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.4007      5.06245      0.88492      1.35152     0.116168      16.0171     0.609752
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.87981e-13  1.23659e-42  3.16862e-44
      low eigenvalue method done, cpu time[sec] = 0.13514, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-42  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.10281e-39 -9.04498e-40 -3.52947e-41 -5.18351e-40 -1.12438e-41 -1.79361e-41 -8.58948e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4516, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1          1.2451e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.01063, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.17114, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.0505      3.79684      0.66369      1.01364    0.0871263      12.0128     0.457314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010373, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134843, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4473e-14  9.38466e-43  2.08842e-44
      low eigenvalue method done, cpu time[sec] = 0.135346, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.38e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.97e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.41999e-39  3.14816e-39  1.00513e-40  1.13169e-39  2.98526e-41 -1.06459e-41 -5.42839e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4361, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.55638e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.21661, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.0404      3.03747     0.530952     0.810912     0.069701      9.61026     0.365851
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010389, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.07085e-13  7.56795e-43  1.49559e-44
      low eigenvalue method done, cpu time[sec] = 0.135077, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.57e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.39e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.35764e-39  4.09883e-40  5.71895e-42  2.23278e-41  1.77765e-42  1.40966e-41  1.01401e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4969, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.86766e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00874, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.20762, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26.7003      2.53123      0.44246      0.67576    0.0580842      8.00855     0.304876
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134565, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0351e-12  6.34337e-43  1.13095e-44
      low eigenvalue method done, cpu time[sec] = 0.135071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.34e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     2e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.42103e-38  4.76858e-39  1.27804e-40  8.59505e-40  2.54845e-41  8.21398e-42  -3.8168e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4888, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.17893e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 1.00904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.14935, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             22.886      2.16962     0.379251     0.579223    0.0497864      6.86447     0.261322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.124015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134536, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.49899e-13  5.46135e-43  8.88876e-45
      low eigenvalue method done, cpu time[sec] = 0.135041, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.46e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.73e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.41611e-39  1.89244e-39  5.96456e-41  3.68598e-40  1.07386e-41  7.67239e-42  1.36676e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         2.49021e+10
      global relaxation matrix dimension = 708
      setting global matrices ... done, cpu time[sec] = 0.620491, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.45276, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.0253      1.89842     0.331845      0.50682    0.0435631      6.00641     0.228657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123989, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134529, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.8843e-13   4.7955e-43  7.19107e-45
      low eigenvalue method done, cpu time[sec] = 0.135027, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-43  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-44  2.22e-16         1
         *Z       ---       ---  6.08e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.79627e-39 -9.13936e-40 -2.36375e-41 -1.42122e-40 -2.92306e-42  -1.8693e-41 -1.62624e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2783, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 16117 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.0101
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.562675
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.689063
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.648463
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.54029
         W1 Well: minimal relaxation eigenvalue = 0.0310981
         W1 Well: maximal relaxation eigenvalue = 2.4848
         W1 Well:       grid size = 702
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 237
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 1 1/cm
         B2 Barrier:        grid size = 234
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 305
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 328
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23119 1/cm => truncating
         B5 Barrier:        grid size = 577
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23118 1/cm
         B6 Barrier:        grid size = 215
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.56137, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23118 4.82e+05 6.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      2 1.07e+13
         B2    206 1.03e+12
         B3  -4622 1.82e+11
         B4  -6186 2.76e+11
         B5 -23118 2.38e+10
         B6   1498 3.29e+12
         B7   4694 1.29e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.55e+26  3.55e+26  1.92e+20  6.66e+17  2.35e-10  4.83e+29  7.15e+34
          R  6.44e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  2.81e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  5.21e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3   1.5e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  4.26e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  2.07e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6   1.4e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.82e+22   1.1e+23  5.96e+16  2.07e+14  7.29e-14   1.5e+26  2.22e+31
          R  2.07e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  9.06e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  1.68e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  4.83e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  1.37e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  6.66e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6   4.5e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 7.566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+08
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.298131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.09702, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            872.077       83.629      14.7995      22.4609      1.94335      268.186      10.5381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121791, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010261, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132857, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.87556e-11   1.8991e-40  1.24873e-41
      low eigenvalue method done, cpu time[sec] = 0.133345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-40 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.91e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.60996e-38  8.21736e-38  4.69965e-39    6.855e-38  1.65647e-39 -3.80096e-40 -1.01794e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.992698, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.06957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            290.692      27.8763      4.93318      7.48697     0.647783      89.3955      3.51269
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121683, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010203, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132697, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.76911e-12  7.19965e-41  4.19464e-42
      low eigenvalue method done, cpu time[sec] = 0.133205, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.2e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -4.8244e-38 -3.40111e-38 -7.13336e-40 -8.51681e-39 -2.13345e-40 -3.98612e-41 -1.50551e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2279, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         3.04471e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.992212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.10055, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            174.415      16.7258      2.95991      4.49218      0.38867      53.6373      2.10761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121376, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132358, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.26315e-14   4.5461e-41  2.34463e-42
      low eigenvalue method done, cpu time[sec] = 0.132854, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.55e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.80686e-38  -3.6035e-38  -1.7135e-39 -2.38408e-38 -5.57572e-40  2.13439e-41   2.7106e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2552, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         4.26259e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.99186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.10999, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            124.582       11.947      2.11422       3.2087     0.277621      38.3123      1.50544
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121317, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010201, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132326, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.25686e-12  3.34467e-41  1.55543e-42
      low eigenvalue method done, cpu time[sec] = 0.132824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-42 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.02771e-37 -4.25216e-38 -1.21124e-39 -8.66772e-39 -2.39546e-40 -2.08853e-41  4.96934e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         5.48048e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.988615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.11181, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.8975      9.29211      1.64439      2.49566     0.215928      29.7985       1.1709
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121399, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132418, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.22551e-12  2.65357e-41  1.12862e-42
      low eigenvalue method done, cpu time[sec] = 0.132908, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.25e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.09483e-38    6.753e-39  3.47063e-40  4.31361e-39   9.2445e-41 -1.46384e-40 -8.27714e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2743, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         6.08942e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.991617, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.11459, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            87.2077       8.3629      1.47995      2.24609     0.194335      26.8186      1.05381
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121364, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37532e-12  2.40679e-41  9.83047e-43
      low eigenvalue method done, cpu time[sec] = 0.132839, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.41e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.48e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.24517e-38 -5.01056e-39 -3.77836e-40 -4.64712e-39 -1.15875e-40  6.76516e-41  4.98384e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         9.13413e+09
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.990482, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.06516, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            58.1385      5.57526     0.986636      1.49739     0.129557      17.8791     0.702538
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.121142, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13212, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.22863e-12  1.64792e-41  5.66443e-43
      low eigenvalue method done, cpu time[sec] = 0.132609, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.12e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -7.55459e-39 -1.15697e-38  -3.3774e-40 -3.83289e-39 -9.52482e-41  1.16722e-40 -1.42093e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2005, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.21788e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.984515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.10726, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.6039      4.18145     0.739977      1.12305    0.0971674      13.4093     0.526904
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12133, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010208, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132343, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.33138e-12  1.25589e-41   3.7591e-43
      low eigenvalue method done, cpu time[sec] = 0.132832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.49734e-38  7.23954e-39  1.21634e-40 -7.13539e-40  8.69119e-43  2.46488e-40  1.38339e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2536, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.52235e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.989425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09116, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.8831      3.34516     0.591981     0.898436    0.0777339      10.7275     0.421523
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120919, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010141, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131847, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.35052e-13  1.01568e-41  2.70622e-43
      low eigenvalue method done, cpu time[sec] = 0.132354, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-41 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.44465e-38 -1.30727e-38  -4.2968e-40 -3.53529e-39 -9.34723e-41 -5.61112e-41  3.92731e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2501, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.82683e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.994551, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09758, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.0692      2.78763     0.493318     0.748697    0.0647783      8.93955     0.351269
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01017, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132072, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51476e-12  8.53116e-42  2.05509e-43
      low eigenvalue method done, cpu time[sec] = 0.132564, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.53e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.66167e-38 -1.13205e-38 -3.42665e-40 -2.88049e-39 -7.50826e-41   3.3535e-42  2.82816e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2613, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1          2.1313e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.991662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.08808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.9165       2.3894     0.422844      0.64174    0.0555242      7.66247     0.301088
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120799, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13173, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.85722e-12  7.35681e-42   1.6209e-43
      low eigenvalue method done, cpu time[sec] = 0.132218, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.36e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.58317e-38 -9.24311e-39 -2.62261e-40 -2.15062e-39 -5.70482e-41   6.7099e-41 -1.61875e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2395, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         2.43577e+10
      global relaxation matrix dimension = 702
      setting global matrices ... done, cpu time[sec] = 0.988924, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1051, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.8019      2.09072     0.369988     0.561523    0.0485837      6.70466     0.263452
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.120829, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.131764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.64223e-14  6.46817e-42  1.31526e-43
      low eigenvalue method done, cpu time[sec] = 0.132253, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.47e-42 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-43 -4.44e-16         1
         *Z       ---       ---  1.27e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.77584e-38 -1.82835e-38 -5.01001e-40 -3.07137e-39 -9.35104e-41 -1.60068e-40 -2.06399e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.2558, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 16395 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009701
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.479594
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.655705
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.706413
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.71759
         W1 Well: minimal relaxation eigenvalue = 0.0306101
         W1 Well: maximal relaxation eigenvalue = 2.68153
         W1 Well:       grid size = 686
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31624 1/cm
         B1 Barrier:        grid size = 234
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 15 1/cm
         B2 Barrier:        grid size = 232
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 300
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 323
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6214 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 565
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 213
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.77664, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31624 -23155  4.7e+05  6.4e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     16 1.21e+13
         B2    156 1.17e+12
         B3  -4604 2.09e+11
         B4  -6214 3.16e+11
         B5 -23155 2.75e+10
         B6   1486  3.8e+12
         B7   4705 1.54e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+25   2.3e+25  1.87e+19  7.43e+16   1.2e-10  2.85e+28  3.26e+33
          R  9.77e-26         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  4.34e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  5.35e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  1.35e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  8.31e+09   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  3.51e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  3.07e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.27e+21  7.37e+21  5.98e+15  2.38e+13  3.85e-14  9.11e+24  1.04e+30
          R  3.06e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  1.36e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  1.67e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  4.21e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4   2.6e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5   1.1e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6   9.6e-31  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
   MasterEquation::set:  done, cpu time[sec] = 6.78191, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+08
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.308829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90553, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            947.657      91.9284       16.465      24.8352      2.16265      298.621      12.1002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009657, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123494, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.40509e-11  2.28954e-39   1.8392e-40
      low eigenvalue method done, cpu time[sec] = 0.123958, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.29e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.01e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.84047e-37 -7.71017e-39 -1.54375e-38 -2.91168e-37 -6.22975e-39  8.69342e-40   2.6193e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.946757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01326, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            315.886      30.6428      5.48833      8.27841     0.720884      99.5404      4.03339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00956, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.12328, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.57304e-12  8.93963e-40  6.32374e-41
      low eigenvalue method done, cpu time[sec] = 0.123745, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.94e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.40337e-36 -4.06842e-37 -1.09815e-38 -5.97911e-38 -1.94724e-39 -8.84122e-40  1.77904e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0204, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.98021e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.013, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            189.531      18.3857        3.293      4.96705     0.432531      59.7243      2.42004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113566, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009541, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.96195e-12  5.71009e-40  3.57582e-41
      low eigenvalue method done, cpu time[sec] = 0.123713, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.71e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.53414e-37 -3.86094e-37 -1.12127e-38 -1.15736e-37 -2.87769e-39  2.00354e-39  7.65054e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0166, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         4.17229e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.94445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.02546, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             135.38      13.1326      2.35214      3.54789      0.30895      42.6602       1.7286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11358, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009523, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.78935e-12   4.2292e-40  2.39081e-41
      low eigenvalue method done, cpu time[sec] = 0.123714, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.23e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.74121e-38  7.75333e-38  3.97591e-39  5.41239e-38  1.22057e-39  7.86366e-40  7.79368e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0294, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.36437e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.945172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.03239, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            105.295      10.2143      1.82944      2.75947     0.240295      33.1801      1.34446
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113511, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009514, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.3259e-12   3.3705e-40  1.74506e-41
      low eigenvalue method done, cpu time[sec] = 0.123692, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.37e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-41         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -4.0734e-37 -5.76305e-38 -1.24109e-39  3.92939e-39 -4.36108e-41 -3.05435e-39  1.18048e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0326, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         5.96041e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.948367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.02446, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            94.7657      9.19284       1.6465      2.48352     0.216265      29.8621      1.21002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.11363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00952, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123297, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.38818e-12  3.06246e-40  1.52376e-41
      low eigenvalue method done, cpu time[sec] = 0.123759, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.37e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.31078e-37  4.02072e-38  1.21698e-39  3.22353e-39  1.35888e-40  7.15712e-40  -2.6526e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0304, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         8.94062e+09
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.944415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.03654, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63.1772      6.12856      1.09767      1.65568     0.144177      19.9081     0.806679
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113616, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009548, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50335e-12   2.1098e-40  8.86479e-42
      low eigenvalue method done, cpu time[sec] = 0.123775, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.11e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.46e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.30221e-37   1.0481e-37  3.15147e-39  3.28164e-38  8.33411e-40 -1.97344e-40 -6.39175e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0421, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.19208e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.946503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.02577, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47.3829      4.59642      0.82325      1.24176     0.108133      14.9311     0.605009
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113651, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009519, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123314, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.89232e-12  1.61394e-40    5.923e-42
      low eigenvalue method done, cpu time[sec] = 0.123777, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.94e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.20531e-37 -1.24581e-37 -3.92851e-39 -3.45878e-38  -9.3101e-40 -1.12037e-40  4.86423e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.031, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1          1.4901e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.945165, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00468, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.9063      3.67714       0.6586      0.99341    0.0865061      11.9449     0.484007
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113488, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00952, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123166, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.03383e-13  1.30861e-40   4.2863e-42
      low eigenvalue method done, cpu time[sec] = 0.123628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.01e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -5.1815e-38 -3.27623e-39  3.12054e-40  8.62423e-39  1.78457e-40  -5.8605e-41 -1.23058e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0054, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.78812e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.946883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.5886      3.06428     0.548833     0.827841    0.0720884      9.95404     0.403339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113444, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009557, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.05987e-13  1.10126e-40  3.26871e-42
      low eigenvalue method done, cpu time[sec] = 0.123615, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.23856e-37  2.75045e-38  8.94491e-40  5.40063e-39  1.59928e-40  6.43331e-40 -5.81617e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0092, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.08614e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.947536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.03622, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.0759      2.62653     0.470428     0.709578    0.0617901      8.53204     0.345719
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113344, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009529, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123018, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.02788e-13  9.51066e-41  2.58718e-42
      low eigenvalue method done, cpu time[sec] = 0.123485, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.51e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.91e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.97499e-37 -4.26017e-38 -7.08936e-40  3.89899e-39  3.35921e-42 -1.03617e-39  3.89316e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0484, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         2.38416e+10
      global relaxation matrix dimension = 686
      setting global matrices ... done, cpu time[sec] = 0.944779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05533, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23.6914      2.29821     0.411625     0.620881    0.0540663      7.46553     0.302504
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.113396, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009564, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.123105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.74044e-13  8.37171e-41  2.10564e-42
      low eigenvalue method done, cpu time[sec] = 0.123576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.37e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-42         0         1
         *Z       ---       ---  2.82e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.19107e-38   3.1381e-40 -7.90929e-41  2.08709e-39  3.09117e-41  -3.7095e-40  1.69918e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0602, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 16673 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00859
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.512987
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.626119
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.627518
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.46011
         W1 Well: minimal relaxation eigenvalue = 0.0301428
         W1 Well: maximal relaxation eigenvalue = 1.19281
         W1 Well:       grid size = 670
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 229
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 185 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 318
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23143 1/cm => truncating
         B5 Barrier:        grid size = 553
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23142 1/cm
         B6 Barrier:        grid size = 211
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4649 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.51719, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23142 4.74e+05 6.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 1.36e+13
         B2    186 1.33e+12
         B3  -4638 2.41e+11
         B4  -6222 3.62e+11
         B5 -23142 3.17e+10
         B6   1482 4.38e+12
         B7   4650 1.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.64e+23  1.69e+24  2.02e+18  9.16e+15  6.35e-11  1.91e+27  1.71e+32
          R  1.31e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  5.91e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  4.94e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  1.09e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  1.57e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  5.24e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  5.85e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.51e+20  5.57e+20  6.66e+14  3.02e+12  2.09e-14  6.29e+23  5.63e+28
          R  3.98e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1   1.8e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2   1.5e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  3.31e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  4.78e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  1.59e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  1.78e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.52615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+08
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.318319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.51183, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1027.86      100.868      18.2798      27.4074      2.40172      331.718       13.848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106639, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116461, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.80389e-12  2.57881e-38  2.39052e-39
      low eigenvalue method done, cpu time[sec] = 0.116971, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -9.58092e-37 -6.65763e-37 -2.93065e-38 -5.61161e-37 -1.21126e-38 -4.42555e-39 -9.17075e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.78931, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.902961, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86985, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            342.622      33.6226      6.09325      9.13581     0.800573      110.573      4.61599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106362, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009021, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116115, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.67461e-11  1.03307e-38  8.40487e-40
      low eigenvalue method done, cpu time[sec] = 0.116558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.11e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.27088e-36 -9.23623e-37 -2.80328e-38 -2.49719e-37 -6.41155e-39   1.9023e-39  1.13418e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7228, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.91898e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.902504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            205.573      20.1735      3.65595      5.48149     0.480344      66.3436       2.7696
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009015, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115929, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   9.2052e-12  6.66539e-39  4.80597e-40
      low eigenvalue method done, cpu time[sec] = 0.116371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.30069e-36 -6.72733e-37  -1.8245e-38 -1.27549e-37  -3.6685e-39  2.36753e-40 -8.13568e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7276, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         4.08657e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.902606, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.838      14.4097      2.61139      3.91535     0.343103      47.3883      1.97828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106238, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115973, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18153e-11  4.96587e-39  3.23772e-40
      low eigenvalue method done, cpu time[sec] = 0.116415, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.97e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   2.5189e-36  6.81481e-37  2.01847e-38  1.23695e-37  4.02423e-39  7.83836e-39 -5.83197e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7143, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.25417e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.902801, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.86197, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            114.207      11.2075      2.03108      3.04527     0.266858      36.8576      1.53866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106352, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.62563e-12  3.97346e-39  2.37682e-40
      low eigenvalue method done, cpu time[sec] = 0.116561, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.97e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.86398e-37  3.01015e-39  1.96553e-39   6.0306e-38   1.1959e-39 -3.87624e-39  4.66426e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7073, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         5.83796e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.90264, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.89203, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.786      10.0868      1.82798      2.74074     0.240172      33.1718       1.3848
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106232, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115973, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.89019e-12    3.616e-39  2.08045e-40
      low eigenvalue method done, cpu time[sec] = 0.116419, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-40  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.71371e-36 -5.89047e-37 -1.43978e-38 -1.10749e-37 -3.23173e-39  1.28894e-39 -4.87494e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7398, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         8.75694e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.901929, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.5243      6.72451      1.21865      1.82716     0.160115      22.1145     0.923199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008992, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115822, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.30715e-13  2.50493e-39  1.22174e-40
      low eigenvalue method done, cpu time[sec] = 0.116264, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.55e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.90441e-38  1.85671e-37  4.59373e-39  3.05444e-38   7.8145e-40 -3.97693e-39 -1.22181e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7031, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.16759e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.903875, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51.3932      5.04338     0.913988      1.37037     0.120086      16.5859     0.692399
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106208, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10623e-12  1.92274e-39  8.21746e-41
      low eigenvalue method done, cpu time[sec] = 0.116373, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.92e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.8e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.50812e-37  1.61915e-37  5.21227e-39  4.60543e-38  1.21327e-39  3.61534e-40 -3.18734e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7014, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.45949e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.904837, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85562, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.1146      4.03471      0.73119       1.0963    0.0960687      13.2687     0.553919
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106284, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.009022, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.116024, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.46551e-13  1.56266e-39  5.97728e-41
      low eigenvalue method done, cpu time[sec] = 0.116472, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.56e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.71e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.61999e-37  1.84955e-37  5.50003e-39  4.37097e-38  1.23756e-39  2.16452e-39 -1.04256e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7162, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.75139e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.903936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85097, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.2622      3.36226     0.609325     0.913581    0.0800573      11.0573     0.461599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10593, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009052, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115708, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.05107e-13  1.31736e-39  4.57717e-41
      low eigenvalue method done, cpu time[sec] = 0.116151, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.97e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.78209e-37  1.03213e-37  2.54042e-39  1.27374e-38    4.138e-40   4.3082e-40  2.11414e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7067, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.04329e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.901105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.3676      2.88193     0.522279      0.78307    0.0686205      9.47766     0.395657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009001, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115836, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.62607e-13  1.13924e-39  3.63541e-41
      low eigenvalue method done, cpu time[sec] = 0.11628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.53615e-37 -1.15263e-37  -2.1078e-39 -1.18345e-38 -3.87743e-40  1.41682e-39  1.74299e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7063, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         2.33518e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.901198, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85055, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25.6966      2.52169     0.456994     0.685186     0.060043      8.29296       0.3462
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.106022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115729, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.23994e-13  1.00391e-39  2.96756e-41
      low eigenvalue method done, cpu time[sec] = 0.116173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-39  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.03e-41  4.44e-16         1
         *Z       ---       ---  6.75e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.22232e-38  4.80623e-38  2.35199e-39  3.92199e-38  9.06824e-40  9.56364e-41 -2.46376e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6978, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 16951 1/cm
      Energy step      = 73 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009793
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.45999
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.616333
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.649558
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.28511
         W1 Well: minimal relaxation eigenvalue = 0.0296836
         W1 Well: maximal relaxation eigenvalue = 1.34497
         W1 Well:       grid size = 665
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 232
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 296
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4656 1/cm
         B4 Barrier:        grid size = 317
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 550
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23198 1/cm
         B6 Barrier:        grid size = 212
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4687 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.33875, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23198 4.55e+05 7.17e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     16 1.52e+13
         B2    162 1.51e+12
         B3  -4656 2.77e+11
         B4  -6189 4.13e+11
         B5 -23198 3.64e+10
         B6   1476 5.03e+12
         B7   4688 2.16e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.55e+22  1.43e+23  2.48e+17  1.27e+15  3.53e-11  1.48e+26  1.05e+31
          R  1.53e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  6.99e-24     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  4.04e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  7.88e-16  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  2.84e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  6.76e-27  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  9.53e-32  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.17e+19  4.73e+19   8.2e+13   4.2e+11  1.17e-14   4.9e+22  3.47e+27
          R  4.61e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  2.11e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  1.22e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  2.38e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  8.57e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  2.04e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  2.88e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.35063, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+08
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.390012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1112.94      110.484      20.2538      30.1896      2.66188       367.64      15.7983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008914, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11352, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45043e-11  2.64699e-37  2.73575e-38
      low eigenvalue method done, cpu time[sec] = 0.113954, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.86e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.71137e-36  4.47648e-36  8.17284e-38  1.00753e-36  2.36755e-38  7.97206e-39 -5.01279e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.31673, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.547236, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.97534, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            370.981      36.8281      6.75127      10.0632     0.887294      122.547       5.2661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008818, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113254, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.76817e-12  1.08497e-37  9.82761e-39
      low eigenvalue method done, cpu time[sec] = 0.113693, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-37  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.22e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.92718e-36  2.12792e-36  7.15645e-38  9.71531e-37  2.31468e-38 -1.64967e-38 -2.43738e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8444, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.86079e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.542261, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.22766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            222.589      22.0969      4.05076      6.03792     0.532376      73.5279      3.15966
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008846, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113162, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18927e-11  7.06394e-38  5.68042e-39
      low eigenvalue method done, cpu time[sec] = 0.113598, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.06e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.1e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.36086e-36  3.95846e-36  1.30328e-37  1.36344e-36  3.42059e-38 -3.17308e-39  1.33819e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6713, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1          4.0051e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.88804, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            158.992      15.7835       2.8934       4.3128     0.380269        52.52       2.2569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.10406, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112997, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.90089e-12  5.29098e-38    3.855e-39
      low eigenvalue method done, cpu time[sec] = 0.113435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.29e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.57e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.88021e-36  1.50133e-36  3.90607e-38  2.63513e-37  7.52265e-39   1.1497e-38  5.69386e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.14941e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.88443, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01064, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             123.66       12.276      2.25042       3.3544     0.295765      40.8489      1.75537
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104149, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008823, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113108, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.90859e-13  4.24908e-38  2.84578e-39
      low eigenvalue method done, cpu time[sec] = 0.113546, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.25e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -5.56921e-37  1.46421e-37  9.15899e-39  8.45029e-38   2.5421e-39 -1.91276e-39  1.19315e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8102, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         5.72157e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.891127, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.294      11.0484      2.02538      3.01896     0.266188       36.764      1.57983
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104226, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008845, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71186e-12  3.87243e-38   2.4968e-39
      low eigenvalue method done, cpu time[sec] = 0.113653, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.87e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-39  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.61335e-36 -1.95229e-37   9.8714e-40  1.34554e-37  2.08175e-39 -2.74864e-39 -7.77059e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8132, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         8.58236e+09
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.883728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.1962      7.36563      1.35025      2.01264     0.177459      24.5093      1.05322
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104204, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008809, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.60007e-12  2.69627e-38  1.47968e-39
      low eigenvalue method done, cpu time[sec] = 0.113592, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.7e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     8e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.00576e-36  1.20272e-36  2.59525e-38  2.23661e-37  6.08236e-39  -2.3283e-38  2.88001e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.14431e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.884041, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.00759, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.6471      5.52422      1.01269      1.50948     0.133094       18.382     0.789916
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.103964, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008826, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.37885e-12  2.07618e-38  1.00173e-39
      low eigenvalue method done, cpu time[sec] = 0.113363, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.16e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.05856e-36  1.13011e-37  9.97319e-39  1.13905e-38  1.10723e-39  1.62495e-38 -1.51042e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8151, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.43039e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.88962, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98807, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44.5177      4.41938     0.810152      1.20758     0.106475      14.7056     0.631933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104147, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113102, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.71124e-12  1.69111e-38  7.32309e-40
      low eigenvalue method done, cpu time[sec] = 0.113541, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.02e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.64607e-39 -1.10553e-37 -3.81391e-39 -7.85816e-38 -1.63637e-39  9.40913e-39 -1.92838e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2723, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         1.71647e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.541284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.35272, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.0981      3.68281     0.675127      1.00632    0.0887294      12.2547      0.52661
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104091, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113023, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.00478e-13    1.428e-38  5.63062e-40
      low eigenvalue method done, cpu time[sec] = 0.113457, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.43953e-36  8.15458e-38  1.67767e-39 -7.59537e-38 -1.27019e-39  1.43639e-38  2.67434e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.7984, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.00255e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.886188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.01598, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31.7984       3.1567      0.57868     0.862559    0.0760537       10.504      0.45138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104088, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.113021, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.78791e-13  1.23652e-38  4.48739e-40
      low eigenvalue method done, cpu time[sec] = 0.113453, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.67e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.72908e-37  3.01982e-37  7.05318e-39  5.91076e-38  1.70667e-39 -1.20084e-38 -3.25785e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8213, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1         2.28863e+10
      global relaxation matrix dimension = 665
      setting global matrices ... done, cpu time[sec] = 0.890241, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.0172, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.8236      2.76211     0.506345     0.754739     0.066547      9.19099     0.394958
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.104035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008807, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.112981, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.43615e-13  1.09077e-38  3.67376e-40
      low eigenvalue method done, cpu time[sec] = 0.113448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-38  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-40  4.44e-16         1
         *Z       ---       ---  1.74e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.10016e-37  2.95235e-38  4.75408e-40  1.35102e-38  2.35149e-40 -7.24602e-39  4.65534e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8163, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 17229 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009231
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.495406
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.591131
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.593917
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.03925
         W1 Well: minimal relaxation eigenvalue = 0.0292529
         W1 Well: maximal relaxation eigenvalue = 1.35157
         W1 Well:       grid size = 651
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 230
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 227
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 292
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4671 1/cm
         B4 Barrier:        grid size = 313
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6246 1/cm
         B5 Barrier: nonpositive number of states at -23121 1/cm => truncating
         B5 Barrier:        grid size = 538
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23121 1/cm
         B6 Barrier:        grid size = 210
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4703 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.048, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23121 4.81e+05 7.59e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 1.71e+13
         B2    204 1.72e+12
         B3  -4671 3.18e+11
         B4  -6246 4.71e+11
         B5 -23121 4.18e+10
         B6   1479 5.77e+12
         B7   4704 2.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.13e+21  1.32e+22  3.26e+16  1.88e+14  1.97e-11  1.25e+25  7.12e+29
          R  1.63e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  7.58e-23     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  3.07e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  5.32e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  5.09e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  7.97e-26  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6   1.4e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e+18  4.49e+18  1.11e+13  6.39e+10  6.69e-15  4.27e+21  2.42e+26
          R  4.79e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  2.23e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  9.03e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  1.56e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4   1.5e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  2.34e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  4.13e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.06069, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+08
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.648495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.68259, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               1203      120.813      22.3976      33.1939      2.94453      406.553       17.969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098865, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008386, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107933, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.00582e-11  2.50464e-36  2.82951e-37
      low eigenvalue method done, cpu time[sec] = 0.108349, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.5e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.95335e-36 -6.98753e-36 -4.00914e-37 -5.84301e-36 -1.40761e-37  1.06759e-37 -1.96279e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1908, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.852506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78684, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            401.001       40.271      7.46586      11.0646     0.981512      135.518      5.98967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097958, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008364, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.26268e-11  1.04846e-36  1.03778e-37
      low eigenvalue method done, cpu time[sec] = 0.107423, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.07e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.19499e-36  5.89705e-36  3.95203e-38 -8.65618e-37 -1.11065e-38 -5.55542e-38 -6.67897e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4614, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          2.8054e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.849668, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80436, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            240.601      24.1626      4.47952      6.63877     0.588907      81.3107       3.5938
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.51761e-11  6.88382e-37  6.06167e-38
      low eigenvalue method done, cpu time[sec] = 0.10725, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.88e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.21414e-35  1.11038e-36  1.05148e-37  9.41489e-37  2.57071e-38  6.66622e-38  2.16366e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4897, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         3.92755e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.851303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.82822, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.858       17.259      3.19966      4.74198     0.420648      58.0791        2.567
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09794, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008339, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106964, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.98225e-12  5.18183e-37  4.14325e-38
      low eigenvalue method done, cpu time[sec] = 0.107442, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.18e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.8339e-35 -8.25919e-36 -2.41292e-37 -1.33206e-36 -4.31033e-38 -1.22937e-37 -2.84341e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5048, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.04971e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.851188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            133.667      13.4237      2.48862      3.68821     0.327171      45.1726      1.99656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008362, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.82341e-12  4.17574e-37  3.07527e-38
      low eigenvalue method done, cpu time[sec] = 0.107421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -8.1602e-36 -1.40287e-36 -1.54543e-38  7.28905e-38 -2.37445e-39 -9.69261e-39 -6.23494e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4741, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         5.61079e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.851423, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.8004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              120.3      12.0813      2.23976      3.31939     0.294453      40.6553       1.7969
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097848, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008364, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106897, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.35534e-12  3.81078e-37  2.70437e-38
      low eigenvalue method done, cpu time[sec] = 0.107324, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-38         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.26066e-37 -5.30082e-37  2.88032e-39 -1.92207e-37  -4.4037e-39  2.37347e-38 -6.37391e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4798, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         8.41619e+09
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.851895, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.80888, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            80.2002      8.05421      1.49317      2.21292     0.196302      27.1036      1.19793
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097999, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008332, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107018, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.74885e-12  2.66622e-37   1.6171e-38
      low eigenvalue method done, cpu time[sec] = 0.107451, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.67e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.8e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.04637e-35  4.35082e-36  1.46621e-37  1.16532e-36  3.10704e-38  3.15467e-38 -3.62207e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4926, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.12216e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.852983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81644, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.1502      6.04065      1.11988      1.65969     0.147227      20.3277     0.898451
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09785, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008337, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106873, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.08032e-12  2.05928e-37  1.10178e-38
      low eigenvalue method done, cpu time[sec] = 0.107339, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.02e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.80037e-36  -9.5575e-37 -4.53345e-38 -3.97744e-37 -1.08699e-38 -4.33523e-38  1.46058e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4971, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1          1.4027e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.853787, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.78802, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.1201      4.83252     0.895904      1.32775     0.117781      16.2621     0.718761
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10701, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.66719e-13  1.68093e-37   8.0945e-39
      low eigenvalue method done, cpu time[sec] = 0.10743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.16229e-36 -1.53944e-36 -4.88322e-38 -3.00035e-37 -9.36415e-39  2.75166e-39 -1.16689e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4755, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.68324e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.853483, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.84167, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.1001       4.0271     0.746586      1.10646    0.0981512      13.5518     0.598967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097983, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008345, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107006, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.60294e-12  1.42169e-37  6.24884e-39
      low eigenvalue method done, cpu time[sec] = 0.107422, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.42e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.16e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.15719e-36 -1.64209e-36 -3.42079e-38  1.19797e-39 -2.50147e-39 -3.41846e-38 -3.59164e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5178, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.96378e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.852321, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.3715       3.4518     0.639931     0.948396    0.0841296      11.6158     0.513401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097854, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008361, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106909, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.2527e-12   1.2326e-37  4.99696e-39
      low eigenvalue method done, cpu time[sec] = 0.107344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.61e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.09689e-36 -2.46606e-36 -7.34141e-38 -6.88193e-37 -1.82597e-38  3.39829e-38  8.66789e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         2.24432e+10
      global relaxation matrix dimension = 651
      setting global matrices ... done, cpu time[sec] = 0.850986, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.81761, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30.0751      3.02033      0.55994     0.829847    0.0736134      10.1638     0.449226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.097993, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008341, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.37836e-13  1.08843e-37  4.10283e-39
      low eigenvalue method done, cpu time[sec] = 0.107447, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.18e-39         0         1
         *Z       ---       ---  4.73e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.46164e-36 -2.13206e-37 -7.07279e-39  2.72184e-38 -5.67578e-41 -2.38598e-38  2.79314e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4952, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 17507 1/cm
      Energy step      = 77 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009288
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.429937
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.571041
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.604738
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.86128
         W1 Well: minimal relaxation eigenvalue = 0.0288554
         W1 Well: maximal relaxation eigenvalue = 2.30729
         W1 Well:       grid size = 638
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 227
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 27 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 288
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4669 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 528
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 208
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1491 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4648 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.78909, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23149 4.72e+05 8.03e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     28 1.91e+13
         B2    183 1.94e+12
         B3  -4669 3.65e+11
         B4  -6208 5.37e+11
         B5 -23149 4.79e+10
         B6   1492 6.62e+12
         B7   4649    3e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.27e+20  1.33e+21  4.61e+15  2.98e+13  1.11e-11  1.17e+24  5.36e+28
          R  1.59e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  7.51e-22     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  2.17e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  3.36e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  9.02e+10  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  8.57e-25  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  1.87e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.22e+17  4.71e+17  1.63e+12  1.05e+10  3.92e-15  4.13e+20   1.9e+25
          R  4.51e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  2.12e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  6.14e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  9.49e-11  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  2.55e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  2.42e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  5.28e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.8001, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+08
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.713011, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58202, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1298.25      131.895       24.722      36.4309      3.25114      448.631      20.3784
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.093466, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00797, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101567, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.95462e-11  2.19711e-35  2.67666e-36
      low eigenvalue method done, cpu time[sec] = 0.101969, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.34e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.46005e-34 -6.31181e-35 -1.39348e-36 -1.00106e-36 -1.01754e-37 -1.30848e-37  2.07015e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0596, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.821981, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69458, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             432.75      43.9651      8.24067      12.1436      1.08371      149.544      6.79282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092662, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007949, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100737, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33109e-11  9.37997e-36  1.00154e-36
      low eigenvalue method done, cpu time[sec] = 0.101135, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.38e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   9.6313e-35  3.33306e-35   9.6561e-37  4.16744e-36   1.3895e-37  1.04972e-37 -2.03943e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2558, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.75261e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819611, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             259.65      26.3791       4.9444      7.28618     0.650227      89.7263      4.07569
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007934, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100751, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.46786e-14  6.20744e-36  5.90957e-37
      low eigenvalue method done, cpu time[sec] = 0.101152, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.21e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.2493e-36 -8.74746e-36 -4.16221e-37 -5.21348e-36 -1.08336e-37  2.04654e-37  5.15425e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         3.85365e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.815021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            185.464      18.8422      3.53172      5.20442     0.464448      64.0902      2.91121
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092728, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100802, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.17119e-11  4.69482e-36  4.06741e-37
      low eigenvalue method done, cpu time[sec] = 0.101205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.69e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.06124e-36  1.25787e-37 -4.42614e-38 -6.11728e-37 -1.33109e-38  1.64262e-37 -2.84329e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1          4.9547e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.666232, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.02622, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             144.25       14.655      2.74689      4.04788     0.361237      49.8479      2.26427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092599, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100688, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.35716e-12  3.79568e-36    3.035e-37
      low eigenvalue method done, cpu time[sec] = 0.101094, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.1e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.79126e-35 -1.11209e-35 -4.29728e-37 -4.25857e-36 -1.07327e-37  4.85202e-38  2.50206e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2424, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         5.50522e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.818338, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72371, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            129.825      13.1895       2.4722      3.64309     0.325114      44.8631      2.03784
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100986, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.23996e-13  3.46847e-36  2.67495e-37
      low eigenvalue method done, cpu time[sec] = 0.10139, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.47e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     1e-37         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.63766e-35  3.75995e-37 -4.47221e-38 -3.33342e-37 -1.28715e-38 -1.25718e-37  4.83028e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         8.25783e+09
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.758706, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65785, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.5501      8.79303      1.64813      2.42873     0.216742      29.9088      1.35856
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092744, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007954, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53897e-12  2.43803e-36  1.61354e-37
      low eigenvalue method done, cpu time[sec] = 0.101229, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.04e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.43592e-35 -6.67492e-36  -1.1846e-37  1.08883e-36  1.05368e-38 -3.63041e-37  7.89121e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.10104e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.818256, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.71462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.9125      6.59477       1.2361      1.82155     0.162557      22.4316      1.01892
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092632, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007947, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100707, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11697e-12   1.8886e-36  1.10625e-37
      low eigenvalue method done, cpu time[sec] = 0.101107, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.36332e-37  8.53056e-37  4.01167e-38  4.07115e-37   9.4392e-39 -2.97174e-38  -3.0787e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2733, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.37631e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819612, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.6929, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              51.93      5.27582      0.98888      1.45724     0.130045      17.9453     0.815138
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092696, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100785, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.23169e-12  1.54482e-36  8.16691e-38
      low eigenvalue method done, cpu time[sec] = 0.101187, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.46e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46958e-36  2.93032e-36  7.87573e-38  6.77371e-37   1.6808e-38  2.19844e-38 -5.82536e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2518, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.65157e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.821229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.66349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             43.275      4.39651     0.824067      1.21436     0.108371      14.9544     0.679282
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092782, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007951, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100863, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07692e-12  1.30863e-36  6.32975e-38
      low eigenvalue method done, cpu time[sec] = 0.101264, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.78e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.70555e-35  1.02175e-35  3.07025e-37  2.59723e-36  7.10314e-38  8.90673e-38 -1.53654e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2287, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.92683e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819586, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72069, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.0929      3.76844     0.706343      1.04088    0.0928896       12.818     0.582241
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007985, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100854, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.70227e-13  1.13599e-36  5.07854e-38
      low eigenvalue method done, cpu time[sec] = 0.101256, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.28e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.48294e-35  4.12701e-36  1.62716e-37  1.70822e-36  4.39437e-38  3.88491e-38   -1.114e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.2803, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         2.20209e+10
      global relaxation matrix dimension = 638
      setting global matrices ... done, cpu time[sec] = 0.819441, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.74315, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.4563      3.29738      0.61805     0.910773    0.0812784      11.2158     0.509461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.092694, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007949, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.100771, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.66223e-12  1.00413e-36  4.18179e-38
      low eigenvalue method done, cpu time[sec] = 0.101173, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.9e-38         0         1
         *Z       ---       ---  1.35e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.34523e-36 -1.95988e-36 -6.44174e-38 -3.13193e-37 -1.12178e-38 -7.29207e-38   1.0361e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.3046, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 17785 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009189
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.485272
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.558493
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.528752
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.84115
         W1 Well: minimal relaxation eigenvalue = 0.0284286
         W1 Well: maximal relaxation eigenvalue = 1.29088
         W1 Well:       grid size = 633
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31589 1/cm
         B1 Barrier:        grid size = 228
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 1 1/cm
         B2 Barrier:        grid size = 226
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 156 1/cm
         B3 Barrier:        grid size = 287
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 308
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6239 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 525
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 209
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1482 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.73387, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31589 -23165 4.66e+05 8.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      2 2.14e+13
         B2    157  2.2e+12
         B3  -4601 4.17e+11
         B4  -6239 6.11e+11
         B5 -23165 5.49e+10
         B6   1483 7.56e+12
         B7   4681 3.53e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.32e+19  1.54e+20  7.34e+14  5.29e+12  6.64e-12  1.25e+23  4.66e+27
          R  1.37e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  6.51e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  1.36e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  1.89e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  1.51e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  8.03e-24  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  2.14e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.59e+16  5.44e+16   2.6e+11  1.87e+09  2.35e-15  4.41e+19  1.65e+24
          R  3.85e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  1.84e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  3.84e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  5.33e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  4.25e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  2.27e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  6.05e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.74475, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+08
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.711655, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28313, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1398.87      143.767      27.2384      39.9065      3.58321      494.051      23.0467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.091055, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099543, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.3796e-12  1.72834e-34  2.24269e-35
      low eigenvalue method done, cpu time[sec] = 0.099941, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.73e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.91e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.13291e-35  6.21682e-35  2.86222e-36  2.63481e-35  6.50107e-37 -7.43001e-37 -1.35428e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.807077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63222, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            466.291      47.9222      9.07946      13.3022       1.1944      164.684      7.68222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090824, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007805, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099271, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57701e-11  7.51716e-35  8.55481e-36
      low eigenvalue method done, cpu time[sec] = 0.09967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.52e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.14e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.00621e-34  8.03928e-35  2.75808e-36  1.61039e-35  4.75902e-37  1.01995e-36 -2.25421e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1584, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.70224e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.80635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63357, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            279.774      28.7533      5.44768       7.9813     0.716641      98.8102      4.60933
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09078, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099222, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -8.7798e-12  5.01225e-35  5.09747e-36
      low eigenvalue method done, cpu time[sec] = 0.09962, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.01e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.35352e-34 -6.66673e-36  -4.6298e-37  1.60261e-36  3.16411e-39 -1.58089e-36 -1.90141e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1594, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         3.78314e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.805641, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64945, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            199.839      20.5381       3.8912      5.70093     0.511886      70.5787      3.29238
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090729, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007835, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099212, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.18475e-11  3.80805e-35   3.5321e-36
      low eigenvalue method done, cpu time[sec] = 0.099612, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-36  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.22999e-34  4.67211e-35  8.85123e-37  5.35922e-37  7.49767e-38  1.22095e-37 -6.89205e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1732, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         4.86404e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.80738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64484, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             155.43      15.9741      3.02649      4.43406     0.398134      54.8946      2.56074
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090799, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099256, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.47795e-11  3.08845e-35  2.64913e-36
      low eigenvalue method done, cpu time[sec] = 0.099654, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.09e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.78e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -2.5505e-35 -1.40844e-36  3.98201e-38  3.59258e-37 -1.23475e-38  -4.8593e-37 -1.49834e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1724, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         5.40449e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.806193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63947, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.887      14.3767      2.72384      3.99065     0.358321      49.4051      2.30467
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090711, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007793, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.47566e-13  2.82575e-35  2.33995e-36
      low eigenvalue method done, cpu time[sec] = 0.099554, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.03e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.55869e-34  4.24929e-35  1.24377e-36  8.73604e-36  2.64937e-37   5.0865e-37 -1.91906e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1547, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         8.10673e+09
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.793842, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64312, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            93.2581      9.58444      1.81589      2.66043      0.23888      32.9367      1.53644
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.093044, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00781, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.101502, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.20514e-13  1.99524e-35   1.4235e-36
      low eigenvalue method done, cpu time[sec] = 0.101963, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.67e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.55264e-34  3.47821e-35  9.33763e-37  3.83744e-36   1.4598e-37  4.77779e-37  -5.8123e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1595, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1          1.0809e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.805549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63612, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.9436      7.18833      1.36192      1.99533      0.17916      24.7026      1.15233
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007816, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099195, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.46588e-12  1.55005e-35  9.81928e-37
      low eigenvalue method done, cpu time[sec] = 0.099594, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.41e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.03834e-35  3.10117e-36  1.61845e-37  1.87109e-36  4.69961e-38  4.34753e-38 -2.36911e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1598, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.35112e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.804989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63673, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            55.9549      5.75066      1.08954      1.59626     0.143328       19.762     0.921866
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090744, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007833, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.30551e-12   1.2705e-35  7.28361e-37
      low eigenvalue method done, cpu time[sec] = 0.099625, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.61e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -5.45485e-35 -3.18945e-35 -7.36546e-37  -6.1403e-36 -1.70045e-37  4.44456e-37   1.1935e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1588, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.62135e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.809927, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63941, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.6291      4.79222     0.907946      1.33022      0.11944      16.4684     0.768222
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007801, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.9838e-12  1.07792e-35  5.66707e-37
      low eigenvalue method done, cpu time[sec] = 0.099494, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.69786e-35  -7.7422e-36  -2.3171e-37 -1.82786e-36 -5.07552e-38 -1.37113e-38  7.60779e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1656, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.89157e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.80736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.62684, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            39.9678      4.10762      0.77824      1.14019     0.102377      14.1157     0.658476
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090685, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007829, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.34895e-13   9.3687e-36  4.56173e-37
      low eigenvalue method done, cpu time[sec] = 0.099576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.37e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.66e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.72591e-35  3.17369e-36  1.36003e-37  7.95048e-37  2.64632e-38  2.88606e-37 -1.06369e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1532, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         2.16179e+10
      global relaxation matrix dimension = 633
      setting global matrices ... done, cpu time[sec] = 0.808464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64542, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.9718      3.59416      0.68096     0.997663    0.0895801      12.3513     0.576166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.090805, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007797, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.099257, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28539e-12  8.28956e-36  3.76682e-37
      low eigenvalue method done, cpu time[sec] = 0.099654, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.29e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-37  2.22e-16         1
         *Z       ---       ---  4.15e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.33626e-35  7.23776e-37  2.69799e-38   2.0213e-36  3.87022e-38 -7.25307e-38  7.98579e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1635, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 18063 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008579
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.416068
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.538004
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.535552
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.7038
         W1 Well: minimal relaxation eigenvalue = 0.0280655
         W1 Well: maximal relaxation eigenvalue = 1.88514
         W1 Well:       grid size = 621
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 226
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -17 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 284
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4657 1/cm
         B4 Barrier:        grid size = 303
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6177 1/cm
         B5 Barrier: nonpositive number of states at -23137 1/cm => truncating
         B5 Barrier:        grid size = 515
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23137 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.61462, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23137 4.76e+05 8.98e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -17 2.39e+13
         B2    143 2.49e+12
         B3  -4657 4.76e+11
         B4  -6177 6.94e+11
         B5 -23137 6.27e+10
         B6   1503 8.64e+12
         B7   4703 4.13e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.02e+18  1.87e+19  1.22e+14  9.74e+11  3.92e-12  1.41e+22  4.33e+26
          R  1.11e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  5.35e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  8.21e-15   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  1.03e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  2.55e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  7.12e-23  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  2.31e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.32e+15  6.87e+15  4.48e+10  3.58e+08  1.44e-15  5.17e+18  1.59e+23
          R  3.02e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  1.46e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  2.23e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  2.79e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  6.94e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  1.93e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  6.28e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.62586, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+08
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.742941, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1504.98      156.469      29.9585       43.632      3.94232      542.997      25.9943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086311, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007425, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09386, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   8.9231e-11  1.27951e-33  1.75873e-34
      low eigenvalue method done, cpu time[sec] = 0.094237, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.28e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.33319e-33  5.87213e-34  1.42482e-35  8.48605e-35  2.89692e-36 -2.46404e-36 -1.27027e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.58173, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.77573, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68359, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            501.661      52.1564      9.98618       14.544      1.31411      180.999      8.66477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08591, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007387, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093419, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28019e-12  5.66469e-34   6.8354e-35
      low eigenvalue method done, cpu time[sec] = 0.093799, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.66e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.66629e-34    5.728e-35  8.70012e-37 -7.06815e-36 -3.33503e-38  1.61833e-36  1.50368e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         2.65413e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.776313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            300.996      31.2939      5.99171       8.7264     0.788464      108.599      5.19886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007388, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.09343, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.66693e-12  3.80447e-34  4.11203e-35
      low eigenvalue method done, cpu time[sec] = 0.093821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.07e-35         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.42315e-34 -2.12074e-35 -3.27623e-37  2.28474e-36 -5.83192e-38 -1.79883e-36  6.01954e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         3.71578e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.776522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.69795, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            214.997      22.3528      4.27979      6.23314     0.563189      77.5709      3.71347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085918, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093494, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.83612e-12  2.90311e-34  2.86803e-35
      low eigenvalue method done, cpu time[sec] = 0.093877, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.15e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.67571e-34   2.4265e-34  6.85183e-36  5.51284e-35   1.5329e-36   1.6836e-36 -9.77313e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1206, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         4.77743e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.777451, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61188, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             167.22      17.3855      3.32873        4.848     0.438036       60.333      2.88826
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086003, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00742, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.03665e-12  2.36171e-34   2.1619e-35
      low eigenvalue method done, cpu time[sec] = 0.093929, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.63e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   9.9863e-35   7.0901e-36   8.2286e-37   1.7919e-36  1.01161e-37   4.5275e-37 -6.13072e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0272, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         5.30826e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.774908, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            150.498      15.6469      2.99585       4.3632     0.394232      54.2997      2.59943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085929, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007427, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093478, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.16362e-12  2.16349e-34  1.91366e-35
      low eigenvalue method done, cpu time[sec] = 0.093858, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.62447e-35 -6.46117e-36  2.70024e-37  9.37761e-36  2.14085e-37   2.4995e-36 -3.97421e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0557, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         7.96238e+09
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.779445, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61489, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            100.332      10.4313      1.99724       2.9088     0.262821      36.1998      1.73295
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086068, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093597, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.28767e-13  1.53438e-34  1.17391e-35
      low eigenvalue method done, cpu time[sec] = 0.09404, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.53e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.31e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.4118e-35 -3.31805e-35 -9.96091e-38  -1.3597e-36 -6.57413e-38  1.74767e-36  3.19565e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0347, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.06165e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.778636, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.60445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.2491      7.82347      1.49793       2.1816     0.197116      27.1498      1.29972
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093604, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2036e-12   1.1954e-34   8.1463e-36
      low eigenvalue method done, cpu time[sec] = 0.093985, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.07434e-34  4.21977e-35  1.52979e-36  1.19353e-35  3.44742e-37  6.38842e-37 -3.09023e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0283, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.32706e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.776624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.61766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.1993      6.25877      1.19834      1.74528     0.157693      21.7199      1.03977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093649, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.17422e-13  9.81803e-35  6.07098e-36
      low eigenvalue method done, cpu time[sec] = 0.094031, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.82e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.41495e-34  8.95481e-35  2.29869e-36  1.74948e-35  4.93301e-37 -1.90829e-37  2.56956e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.59248e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.776543, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63796, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            50.1661      5.21564     0.998618       1.4544     0.131411      18.0999     0.866477
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086201, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093822, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.27502e-13  8.34273e-35  4.74168e-36
      low eigenvalue method done, cpu time[sec] = 0.094205, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.34e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.95452e-35  2.94109e-35  1.01752e-36  7.82584e-36  2.21025e-37  1.79971e-37 -5.67623e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6049, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.85789e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.474881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42.9995      4.47055     0.855958      1.24663     0.112638      15.5142     0.742695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086068, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007436, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093626, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.58033e-12     7.26e-35  3.82918e-36
      low eigenvalue method done, cpu time[sec] = 0.094019, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.26e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.34345e-34 -8.55692e-35 -2.57688e-36 -9.61672e-36 -3.88807e-37 -3.77114e-36  1.50268e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7003, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1          2.1233e+10
      global relaxation matrix dimension = 621
      setting global matrices ... done, cpu time[sec] = 0.775605, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64234, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            37.6246      3.91173     0.748963       1.0908     0.098558      13.5749     0.649858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.086161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.093728, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.58074e-12  6.43023e-35  3.17075e-36
      low eigenvalue method done, cpu time[sec] = 0.094109, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.43e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-36         0         1
         *Z       ---       ---  1.32e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95487e-34  4.55495e-35  1.35107e-36  8.18901e-36  2.61318e-37  7.44903e-37 -3.16792e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0504, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 18341 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009116
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.460228
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.5154
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.8782
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.39522
         W1 Well: minimal relaxation eigenvalue = 0.0276503
         W1 Well: maximal relaxation eigenvalue = 1.32805
         W1 Well:       grid size = 609
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31597 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 506
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 206
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.56495, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31597 -23151 4.71e+05 9.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 2.67e+13
         B2    137 2.81e+12
         B3  -4619 5.43e+11
         B4  -6176 7.87e+11
         B5 -23151 7.15e+10
         B6   1450 9.84e+12
         B7   4648 4.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.24e+18  2.54e+18  2.23e+13  1.97e+11  2.42e-12  1.78e+21  4.55e+25
          R  8.06e-19         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  3.93e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  4.48e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  5.07e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  4.13e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  5.62e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6   2.2e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.61e+14  9.44e+14  8.28e+09  7.32e+07     9e-16   6.6e+17  1.69e+22
          R  2.17e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  1.06e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  1.21e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  1.37e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  1.11e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  1.51e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  5.92e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.57617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+08
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.748533, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35705, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1616.83      170.047      32.8947      47.6274      4.33013      595.655      29.2432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0828, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.090017, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.87251e-11  8.54639e-33  1.23367e-33
      low eigenvalue method done, cpu time[sec] = 0.090378, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.55e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-34 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.27664e-33 -1.64065e-33 -3.82277e-35 -2.61536e-34 -7.71961e-36  3.00301e-36 -6.72848e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.71048, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.747841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54927, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            538.943      56.6822      10.9649      15.8758      1.44338      198.552      9.74772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081581, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007068, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08877, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.75661e-11  3.84844e-33  4.88207e-34
      low eigenvalue method done, cpu time[sec] = 0.089136, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.85e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-34 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -2.0217e-33  -6.4448e-34  -1.5755e-35 -1.00713e-34 -3.23152e-36  -4.4654e-36 -5.18254e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8683, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.60811e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.745776, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.57081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            323.366      34.0093      6.57895      9.52548     0.866026      119.131      5.84863
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.31567e-14  2.60269e-33  2.96424e-34
      low eigenvalue method done, cpu time[sec] = 0.089182, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.2e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -5.31963e-34 -3.20007e-34  -5.4332e-36 -1.61006e-35 -7.37642e-37   2.8511e-36  1.36478e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         3.65136e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.747712, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            230.976      24.2924      4.69925      6.80391      0.61859      85.0935       4.1776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081633, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.30978e-12  1.99446e-33  2.08069e-34
      low eigenvalue method done, cpu time[sec] = 0.089203, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.51e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   2.2194e-34  2.15846e-34  5.54568e-36  5.36791e-35  1.32393e-36 -2.96843e-36  1.19549e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8682, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1          4.6946e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.750359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5472, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            179.648      18.8941      3.65497      5.29193     0.481126      66.1838      3.24924
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081592, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088798, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.88523e-12  1.62734e-33  1.57609e-34
      low eigenvalue method done, cpu time[sec] = 0.089161, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.5e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.04777e-33  5.87179e-34  1.89972e-35  1.49246e-34  4.11846e-36  7.84985e-36 -5.44619e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         5.21622e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.748115, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            161.683      17.0047      3.28947      4.76274     0.433013      59.5655      2.92432
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081585, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007292, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.089006, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.34559e-12  1.49253e-33  1.39801e-34
      low eigenvalue method done, cpu time[sec] = 0.089366, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.13e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -4.4462e-34 -1.38086e-34 -5.14604e-36 -4.62637e-35 -1.19764e-36 -2.63366e-36 -1.16418e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8733, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         7.82434e+09
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.745494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            107.789      11.3364      2.19298      3.17516     0.288675      39.7103      1.94954
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081433, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088664, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.44484e-13  1.06311e-33  8.64585e-35
      low eigenvalue method done, cpu time[sec] = 0.089071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.94e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.41284e-34   1.5557e-34  4.38412e-36  1.91591e-35  7.29113e-37  2.87616e-36  6.49101e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8762, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.04324e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.747948, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55683, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            80.8415      8.50233      1.64474      2.38137     0.216506      29.7827      1.46216
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081629, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.70332e-12  8.30564e-34  6.03504e-35
      low eigenvalue method done, cpu time[sec] = 0.089208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.31e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.3e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.65566e-34 -3.01639e-36  2.42241e-37  2.21756e-35  3.86541e-37  -3.3025e-36   6.8564e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8796, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.30406e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.7472, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.56001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.6732      6.80187      1.31579       1.9051     0.173205      23.8262      1.16973
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081645, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088862, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.74538e-13  6.83525e-34  4.51823e-35
      low eigenvalue method done, cpu time[sec] = 0.089226, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.84e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.67734e-34  2.66331e-34  8.61329e-36  6.59484e-35  1.90039e-36  6.15613e-36  7.29802e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8871, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.56487e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.749298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58144, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.8943      5.66822      1.09649      1.58758     0.144338      19.8552     0.974772
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081354, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007115, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088609, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.53893e-12  5.81709e-34  3.54219e-35
      low eigenvalue method done, cpu time[sec] = 0.088979, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.82e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.02553e-34  1.83605e-34  5.34272e-36  3.91921e-35   1.1049e-36 -4.03848e-37 -5.78664e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.9118, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.82568e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.74132, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53699, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.1951      4.85848      0.93985      1.36078     0.123718      17.0187     0.835519
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081471, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088702, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.49233e-12  5.06835e-34  2.86962e-35
      low eigenvalue method done, cpu time[sec] = 0.08908, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.07e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.48536e-34   1.1199e-34  3.38464e-36  1.56561e-35  5.46447e-37  3.38045e-36   2.9166e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8595, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         2.08649e+10
      global relaxation matrix dimension = 609
      setting global matrices ... done, cpu time[sec] = 0.748076, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.4208      4.25117     0.822369      1.19068     0.108253      14.8914     0.731079
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.081455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.088663, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59496e-12   4.4936e-34  2.38272e-35
      low eigenvalue method done, cpu time[sec] = 0.089029, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.49e-34 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-35 -4.44e-16         1
         *Z       ---       ---  4.44e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -6.57809e-34 -1.34668e-34 -3.78365e-36 -1.57869e-35 -6.11808e-37 -4.42948e-36  6.26971e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8506, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 18619 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009067
         W1 Well: collisional kernel bandwidth = 37
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.523252
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.51424
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.483114
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.23868
         W1 Well: minimal relaxation eigenvalue = 0.027294
         W1 Well: maximal relaxation eigenvalue = 1.3246
         W1 Well:       grid size = 605
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31596 1/cm
         B1 Barrier:        grid size = 224
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 222
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 193 1/cm
         B3 Barrier:        grid size = 280
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23213 1/cm => truncating
         B5 Barrier:        grid size = 504
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23213 1/cm
         B6 Barrier:        grid size = 207
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1438 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4675 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.17399, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31596 -23213  4.5e+05    1e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 2.98e+13
         B2    194 3.17e+12
         B3  -4621 6.19e+11
         B4  -6198 8.91e+11
         B5 -23213 8.15e+10
         B6   1439 1.12e+13
         B7   4676 5.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.84e+17  3.73e+17  4.35e+12  4.24e+10  1.52e-12  2.43e+20  5.21e+24
          R  5.43e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  2.68e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2   2.3e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  2.36e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  6.57e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  4.11e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6  1.92e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.93e+13   1.4e+14  1.64e+09  1.59e+07  5.72e-16  9.16e+16  1.96e+21
          R  1.44e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  7.12e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2   6.1e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  6.27e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  1.75e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  1.09e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6   5.1e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.18494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+08
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1734.51      184.537      36.0597      51.9098      4.74834      652.218      32.8166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080461, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087588, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    4.892e-11  5.37494e-32  8.11499e-33
      low eigenvalue method done, cpu time[sec] = 0.087952, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.37e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-33 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.42757e-33  1.92447e-33  3.51226e-35  1.28876e-34  4.48016e-36 -9.05329e-36 -3.69586e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52824, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            578.172      61.5123      12.0199      17.3033      1.58278      217.406      10.9389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080301, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006975, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087395, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.58081e-12  2.45999e-32  3.26755e-33
      low eigenvalue method done, cpu time[sec] = 0.08776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.46e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.71e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.73556e-33  1.54879e-33  4.83122e-35  3.75916e-34  1.09934e-35  3.31942e-35  8.44272e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8136, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.56406e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734477, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51551, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            346.903      36.9074      7.21195       10.382     0.949668      130.444      6.56333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080193, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087301, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.96561e-11  1.67485e-32  2.00172e-33
      low eigenvalue method done, cpu time[sec] = 0.087665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.57e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -3.39801e-34  2.45918e-34  1.70352e-36    4.459e-35  8.27389e-37  1.41034e-37  1.91342e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7983, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         3.58968e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.53449, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            247.788      26.3624      5.15139      7.41569     0.678335      93.1741      4.68809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080184, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007005, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087309, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.75449e-11   1.2887e-32  1.41374e-33
      low eigenvalue method done, cpu time[sec] = 0.087678, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.52e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.67713e-35 -3.80648e-34 -6.24495e-36 -8.10499e-35 -2.01355e-36  7.87946e-36 -1.95096e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8227, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1          4.6153e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51854, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            192.724      20.5041      4.00664      5.76776     0.527594      72.4687      3.64629
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.19317e-12  1.05452e-32  1.07596e-33
      low eigenvalue method done, cpu time[sec] = 0.087588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-32 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.61004e-33 -5.09238e-34  -2.1715e-35 -2.23955e-34 -5.60946e-36 -1.18576e-35 -3.42043e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8108, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         5.12811e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52149, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.451      18.4537      3.60597      5.19098     0.474834      65.2218      3.28166
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006981, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087261, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.43542e-12  9.68288e-33  9.56311e-34
      low eigenvalue method done, cpu time[sec] = 0.087624, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.68e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.16648e-33 -2.60808e-34 -3.97163e-36  3.30508e-35  3.21103e-37  9.69366e-37  1.70646e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.812, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         7.69217e+09
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            115.634      12.3025      2.40398      3.46066     0.316556      43.4812      2.18778
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080203, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006933, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087262, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.15069e-13  6.92613e-33    5.961e-34
      low eigenvalue method done, cpu time[sec] = 0.087623, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.93e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.28534e-35  -1.2479e-34 -3.61044e-37  2.89112e-35  5.94291e-37  9.23843e-36  9.37636e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8144, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.02562e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.735849, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52042, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.7257      9.22685      1.80299      2.59549     0.237417      32.6109      1.64083
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.079993, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006959, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087067, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.25827e-12  5.42595e-33  4.18473e-34
      low eigenvalue method done, cpu time[sec] = 0.087429, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.43e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.53556e-33  7.34278e-34  2.00204e-35  6.95027e-35  2.95736e-36  2.05064e-35  1.68737e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8077, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.28203e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.73529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.54642, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.3806      7.38148      1.44239      2.07639     0.189934      26.0887      1.31267
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080056, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006923, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087097, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.52808e-12  4.47422e-33  3.14699e-34
      low eigenvalue method done, cpu time[sec] = 0.08746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.47e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.65699e-34    3.936e-34  9.43447e-36   6.7674e-35  1.89969e-36 -2.54008e-36 -1.85046e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8303, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.53843e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.737004, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            57.8172      6.15123      1.20199      1.73033     0.158278      21.7406      1.09389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006989, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087267, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.21331e-12  3.81355e-33  2.47623e-34
      low eigenvalue method done, cpu time[sec] = 0.087632, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-34 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -1.6353e-33 -5.38354e-34 -1.26097e-35 -7.33699e-35 -2.29725e-36  8.57609e-36  9.31278e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8408, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.79484e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.734945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.5576      5.27249      1.03028      1.48314     0.135667      18.6348     0.937618
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080063, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006991, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087176, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.20804e-12  3.32674e-33  2.01228e-34
      low eigenvalue method done, cpu time[sec] = 0.087548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.08e-35 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   -5.081e-34 -3.94232e-35 -6.92047e-38  3.92022e-35  6.54679e-37 -5.41167e-36 -1.11177e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8477, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         2.05124e+10
      global relaxation matrix dimension = 605
      setting global matrices ... done, cpu time[sec] = 0.736748, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.55047, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43.3629      4.61343     0.901494      1.29775     0.118709      16.3055     0.820416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.080006, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006966, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.087092, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.41098e-13  2.95246e-33  1.67534e-34
      low eigenvalue method done, cpu time[sec] = 0.087456, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.95e-33 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.06e-35 -4.44e-16         1
         *Z       ---       ---  1.56e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.12538e-34  7.39042e-35  1.17399e-36  1.70401e-35  3.46847e-37 -3.71319e-36 -1.87139e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.841, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 18897 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009945
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.495934
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.488234
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.81725
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.08664
         W1 Well: minimal relaxation eigenvalue = 0.0269346
         W1 Well: maximal relaxation eigenvalue = 1.29465
         W1 Well:       grid size = 594
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 222
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 197 1/cm
         B3 Barrier:        grid size = 277
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4648 1/cm
         B4 Barrier:        grid size = 295
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23263 1/cm => truncating
         B5 Barrier:        grid size = 496
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23263 1/cm
         B6 Barrier:        grid size = 205
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1472 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4702 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.20022, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23263 4.34e+05 1.06e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 3.32e+13
         B2    198 3.57e+12
         B3  -4648 7.04e+11
         B4  -6178 1.01e+12
         B5 -23263 9.27e+10
         B6   1472 1.27e+13
         B7   4702 6.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.9e+16  5.82e+16  8.93e+11  9.53e+09  9.59e-13  3.55e+19  6.39e+23
          R  3.45e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  1.72e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  1.12e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  1.05e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  1.04e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  2.82e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  1.56e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.12e+13  2.25e+13  3.45e+08  3.68e+06  3.71e-16  1.37e+16  2.47e+20
          R  8.92e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  4.44e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2   2.9e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  2.71e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4   2.7e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  7.29e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  4.05e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
   MasterEquation::set:  done, cpu time[sec] = 6.21116, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+08
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.71531, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.42545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1858.26       199.99      39.4668      56.4949      5.19873      712.885      36.7384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076434, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.083172, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.31046e-13  3.15742e-31  4.96383e-32
      low eigenvalue method done, cpu time[sec] = 0.083513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.16e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.5e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.61743e-32  1.93962e-32  4.42932e-34  2.90426e-33  8.40449e-35  7.23101e-35  2.73051e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.715584, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.5024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            619.418      66.6632      13.1556      18.8316      1.73291      237.628      12.2461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076228, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006615, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082957, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.87257e-13  1.46783e-31  2.03277e-32
      low eigenvalue method done, cpu time[sec] = 0.083301, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.95e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.24281e-32  2.53664e-33  8.23009e-35  7.02035e-34  1.87817e-35  3.94398e-35  2.50049e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7087, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.52183e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.711848, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.4822, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            371.651      39.9979      7.89335       11.299      1.03975      142.577      7.34767
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006614, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082887, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.51786e-12  1.00584e-31  1.25618e-32
      low eigenvalue method done, cpu time[sec] = 0.083227, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.83042e-33  3.76208e-33   1.1426e-34  8.98344e-34  2.43337e-35 -2.62158e-35 -3.54786e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6806, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         3.53056e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.50343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            265.465      28.5699      5.63811      8.07069     0.742676      101.841      5.24834
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076125, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00661, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.08285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.28215e-12  7.77018e-32  8.92552e-33
      low eigenvalue method done, cpu time[sec] = 0.083202, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.77e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.67664e-33  1.76302e-34 -1.24055e-35 -1.71184e-34 -3.89768e-36 -4.25235e-35  9.25254e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7089, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         4.53929e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.712188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.46408, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            206.473      22.2211       4.3852      6.27721     0.577637      79.2095      4.08204
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076235, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006588, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082937, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.02939e-12  6.37609e-32  6.82445e-33
      low eigenvalue method done, cpu time[sec] = 0.083279, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.38e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.26377e-33  -8.2992e-34 -4.52164e-35 -4.60751e-34 -1.12637e-35 -1.33482e-35 -4.96409e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6624, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         5.04366e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.705683, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.51425, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            185.826       19.999      3.94668      5.64949     0.519873      71.2885      3.67384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006597, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082839, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.29861e-12  5.86137e-32  6.07754e-33
      low eigenvalue method done, cpu time[sec] = 0.083247, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.86e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.58162e-34 -1.56604e-34 -1.50355e-35 -1.71907e-34  -4.0889e-36 -3.21517e-36 -1.98257e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5524, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         7.56549e+09
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.712081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58561, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.884      13.3326      2.63112      3.76632     0.346582      47.5257      2.44922
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07619, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006586, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082888, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30582e-13  4.21005e-32  3.81775e-33
      low eigenvalue method done, cpu time[sec] = 0.083232, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.21e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.13e-33  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.28144e-33  2.17855e-33  6.16099e-35   2.5244e-34  9.35534e-36  5.42962e-35  8.51371e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7842, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.00873e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.714057, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49333, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.9128      9.99948      1.97334      2.82474     0.259937      35.6443      1.83692
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076073, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082779, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.0984e-12  3.30713e-32   2.6952e-33
      low eigenvalue method done, cpu time[sec] = 0.083121, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.31e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.05086e-33  2.58815e-34  6.64683e-36 -3.27246e-35 -1.28829e-37  1.75865e-35 -3.64887e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.695, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.26092e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.71366, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.49695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.3302      7.99958      1.57867      2.25979     0.207949      28.5154      1.46953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076004, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006598, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082717, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03898e-12  2.73243e-32  2.03577e-33
      low eigenvalue method done, cpu time[sec] = 0.083058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.73e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.30999e-33  1.06961e-33  4.04712e-35  2.99853e-34  8.65811e-36  4.52892e-35 -7.22381e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6982, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1          1.5131e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.71399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52666, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.9418      6.66632      1.31556      1.88316     0.173291      23.7628      1.22461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006609, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082841, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.46572e-12  2.33249e-32  1.60765e-33
      low eigenvalue method done, cpu time[sec] = 0.083187, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.33e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.28e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.15265e-34 -5.17924e-35 -5.31443e-36 -9.53644e-35 -2.07808e-36  1.45299e-35  2.13827e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7315, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.76528e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.710944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.45897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             53.093      5.71399      1.12762      1.61414     0.148535      20.3682      1.04967
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006601, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082758, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.32452e-12  2.03724e-32  1.31045e-33
      low eigenvalue method done, cpu time[sec] = 0.083101, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.49e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.10214e-33  -4.0724e-34 -1.40393e-35 -8.67156e-35 -2.81713e-36 -9.72994e-36 -4.96353e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6613, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         2.01746e+10
      global relaxation matrix dimension = 594
      setting global matrices ... done, cpu time[sec] = 0.712455, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.48401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.4564      4.99974     0.986669      1.41237     0.129968      17.8221     0.918459
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.076192, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082916, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.82787e-12  1.80986e-32  1.09393e-33
      low eigenvalue method done, cpu time[sec] = 0.083258, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-32  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.87e-34  2.22e-16         1
         *Z       ---       ---  5.68e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.78654e-33  5.64652e-34  1.27248e-35  6.29576e-35  2.22137e-36  2.19214e-36 -9.59381e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6817, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 19175 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009758
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.490002
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.47555
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.417489
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.99317
         W1 Well: minimal relaxation eigenvalue = 0.0266036
         W1 Well: maximal relaxation eigenvalue = 2.49993
         W1 Well:       grid size = 584
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31632 1/cm
         B1 Barrier:        grid size = 221
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 218
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 209 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4662 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23107 1/cm => truncating
         B5 Barrier:        grid size = 486
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23107 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1427 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4646 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.77286, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31632 -23107 4.86e+05 1.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 3.69e+13
         B2    210 4.01e+12
         B3  -4662    8e+11
         B4  -6228 1.14e+12
         B5 -23107 1.05e+11
         B6   1428 1.44e+13
         B7   4647 7.61e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.87e+15  9.69e+15  1.93e+11  2.25e+09  6.11e-13  5.53e+18  8.45e+22
          R  2.05e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  1.03e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  5.18e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  4.44e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4  1.64e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  1.81e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  1.18e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.95e+12  3.87e+12  7.72e+07     9e+05  2.44e-16  2.21e+15  3.37e+19
          R  5.14e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  2.59e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2   1.3e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  1.11e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4   4.1e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  4.53e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  2.96e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.78355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+08
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.707558, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34309, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1988.22      216.447      43.1295      61.3981      5.68314      777.858      41.0342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072814, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006463, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079833, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.22029e-11  1.74508e-30  2.84775e-31
      low eigenvalue method done, cpu time[sec] = 0.080187, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.64e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.32132e-31  1.13176e-31  3.22254e-33   2.7967e-32  7.53637e-34   1.2518e-34  1.84221e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.47247, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687306, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35514, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            662.741      72.1489      14.3765       20.466      1.89438      259.286      13.6781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072577, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07953, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.83635e-11  8.23516e-31   1.1854e-31
      low eigenvalue method done, cpu time[sec] = 0.07989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.24e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.10349e-32  3.07018e-32  9.70693e-34  8.29164e-33  2.20629e-34  6.59668e-35  2.00481e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4592, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         2.48132e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689247, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            397.645      43.2894       8.6259      12.2796      1.13663      155.572      8.20683
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072488, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006353, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41216e-12  5.67858e-31  7.38747e-32
      low eigenvalue method done, cpu time[sec] = 0.079743, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.68e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.15886e-32  1.24271e-32  3.81238e-34  2.66972e-33  7.78943e-35   1.1575e-34  2.10382e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4682, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         3.47385e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.688763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36329, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            284.032       30.921      6.16136      8.77115     0.811877      111.123      5.86202
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072543, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006365, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079459, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.6709e-12   4.4037e-31  5.27976e-32
      low eigenvalue method done, cpu time[sec] = 0.079809, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-32         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.64679e-32  1.26792e-32  3.74987e-34  2.72331e-33  7.74261e-35  7.58329e-35 -1.02338e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4654, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.46638e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689065, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40682, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            220.914      24.0496      4.79217      6.82201      0.63146      86.4287      4.55935
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072431, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006364, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079343, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.60879e-12  3.62352e-31  4.05512e-32
      low eigenvalue method done, cpu time[sec] = 0.079691, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.62e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.64e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.26815e-32  1.60453e-32  4.92994e-34  3.05282e-33  9.53934e-35   3.0556e-34 -1.05285e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1245, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         4.96264e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.685093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            198.822      21.6447      4.31295      6.13981     0.568314      77.7858      4.10342
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072442, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079404, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.86913e-12  3.33471e-31  3.61823e-32
      low eigenvalue method done, cpu time[sec] = 0.079756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.87e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.32661e-32  6.24395e-33  1.76043e-34  9.42949e-34  3.14373e-35   1.2715e-34 -5.33219e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         7.44396e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.418174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.28697, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            132.548      14.4298       2.8753       4.0932     0.378876      51.8572      2.73561
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072478, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00639, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.07671e-12  2.40499e-31  2.29008e-32
      low eigenvalue method done, cpu time[sec] = 0.079824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.4e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.4e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.99764e-33  3.99075e-33  9.83354e-35  8.24124e-34  2.21711e-35 -6.01778e-35  1.17152e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1147, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         9.92528e+09
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.689071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.40312, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            99.4112      10.8223      2.15648       3.0699     0.284157      38.8929      2.05171
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006392, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.12204e-12  1.89426e-31  1.62559e-32
      low eigenvalue method done, cpu time[sec] = 0.079766, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.04e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.04347e-33  1.51845e-34  1.52801e-35  1.48139e-34  3.46589e-36  1.78838e-35  1.77681e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.506, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.24066e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.709272, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.38943, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             79.529      8.65787      1.72518      2.45592     0.227326      31.1143      1.64137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072516, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.72033e-12  1.56813e-31  1.23315e-32
      low eigenvalue method done, cpu time[sec] = 0.079801, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.17e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.49725e-33 -2.20059e-33 -7.36665e-35 -4.53814e-34 -1.37899e-35 -5.16281e-35 -2.58518e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5213, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.48879e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687216, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36678, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            66.2741      7.21489      1.43765       2.0466     0.189438      25.9286      1.36781
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07238, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079316, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.0253e-12  1.34063e-31   9.7728e-33
      low eigenvalue method done, cpu time[sec] = 0.07967, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.73382e-33 -1.88539e-35  1.29073e-35 -4.27269e-35  5.59996e-37  1.54951e-34  2.03686e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.511, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.73692e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.688072, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.8064      6.18419      1.23227      1.75423     0.162375      22.2245       1.1724
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072357, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006367, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079278, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.84407e-13  1.17236e-31  7.99012e-33
      low eigenvalue method done, cpu time[sec] = 0.079624, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.12e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.01589e-33  2.36846e-33  6.44031e-35  4.49615e-34  1.34117e-35  5.41958e-35  2.30833e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.467, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.98506e+10
      global relaxation matrix dimension = 584
      setting global matrices ... done, cpu time[sec] = 0.687375, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.39704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            49.7056      5.41117      1.07824      1.53495     0.142079      19.4464      1.02585
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.4216e-13  1.04256e-31  6.68735e-33
      low eigenvalue method done, cpu time[sec] = 0.07964, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.04e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.77e-33         0         1
         *Z       ---       ---  2.15e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.90576e-33 -2.14413e-33 -5.62137e-35 -3.74934e-34 -1.08757e-35  1.97136e-35 -1.39335e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.495, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 19453 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00811
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.503392
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.472502
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.7399
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.92333
         W1 Well: minimal relaxation eigenvalue = 0.0262767
         W1 Well: maximal relaxation eigenvalue = 1.26073
         W1 Well:       grid size = 580
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 221
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 4 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 274
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 292
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6242 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 484
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23139 1/cm
         B6 Barrier:        grid size = 204
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.95066, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23139 4.75e+05 1.18e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      5  4.1e+13
         B2    182 4.51e+12
         B3  -4658 9.07e+11
         B4  -6242 1.28e+12
         B5 -23139  1.2e+11
         B6   1501 1.63e+13
         B7   4670 8.81e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.96e+14  1.77e+15  4.54e+10  5.76e+08  4.05e-13  9.45e+17  1.23e+22
          R  1.12e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  5.66e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2   2.2e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  1.74e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  2.47e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  1.06e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6   8.1e-23  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.6e+11  7.11e+11  1.82e+07  2.32e+05  1.63e-16   3.8e+14  4.96e+18
          R  2.77e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  1.41e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  5.48e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  4.31e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  6.13e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  2.63e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  2.01e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
   MasterEquation::set:  done, cpu time[sec] = 5.96142, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+08
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.701046, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2124.54      233.957      47.0622      66.6355      6.20348      847.344        45.73
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071351, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07818, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08231e-10  8.93669e-30  1.50766e-30
      low eigenvalue method done, cpu time[sec] = 0.078523, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.94e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.35e-31         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.18821e-30   4.9902e-31  1.40515e-32  1.14331e-31  3.13995e-33  1.35313e-33 -8.86609e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34061, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683105, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            708.182      77.9857      15.6874      22.2118      2.06783      282.448      15.2433
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071208, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006261, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077587, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.15964e-13  4.27834e-30  6.37476e-31
      low eigenvalue method done, cpu time[sec] = 0.077989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.28e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-31         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.85727e-31  1.65676e-31   4.5972e-33  3.22638e-32  9.43541e-34  6.16393e-34 -3.57818e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8947, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         2.44242e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.679693, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.31176, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            424.909      46.7914      9.41244      13.3271       1.2407      169.469        9.146
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071119, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006256, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077491, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.61317e-12  2.96795e-30  4.00524e-31
      low eigenvalue method done, cpu time[sec] = 0.077831, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.97e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.8e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.88282e-31  5.95278e-32   1.7063e-33  1.16759e-32  3.44531e-34  4.45592e-34 -4.24123e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4002, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         3.41939e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681784, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.29084, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            303.506      33.4225      6.72317      9.51936     0.886211      121.049      6.53286
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071282, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006251, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077658, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.69058e-12  2.31022e-30  2.87871e-31
      low eigenvalue method done, cpu time[sec] = 0.077998, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.12623e-31  7.00141e-32  1.91825e-33  1.27643e-32  3.79812e-34  4.56374e-34 -6.10285e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.39636e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681271, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.34659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            236.061      25.9952      5.22913      7.40395     0.689275      94.1493      5.08111
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071166, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00625, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.25566e-12  1.90598e-30  2.22063e-31
      low eigenvalue method done, cpu time[sec] = 0.077873, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.91e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.01e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.05971e-32  4.15262e-32  1.03738e-33  7.60476e-33  2.17035e-34 -4.10088e-34 -5.99442e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4492, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         4.88484e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35564, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            212.454      23.3957      4.70622      6.66355     0.620348      84.7344        4.573
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07106, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00624, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077416, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.39048e-12  1.75597e-30  1.98508e-31
      low eigenvalue method done, cpu time[sec] = 0.077762, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.76e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.61e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.76492e-31  4.51881e-32  1.28537e-33  7.47125e-33  2.38372e-34  5.69046e-34 -9.66417e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4543, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         7.32726e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.678774, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.32525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.636      15.5971      3.13748      4.44237     0.413565      56.4896      3.04867
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00624, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077378, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20668e-12  1.27144e-30  1.26562e-31
      low eigenvalue method done, cpu time[sec] = 0.077716, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.34e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.02232e-31  2.54097e-32  7.51149e-34  4.33858e-33  1.39648e-34  4.24915e-34  2.48654e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         9.76968e+09
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.683122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.28844, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            106.227      11.6979      2.35311      3.33178     0.310174      42.3672       2.2865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071046, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006247, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077414, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -2.284e-12  1.00406e-30  9.03185e-32
      low eigenvalue method done, cpu time[sec] = 0.077751, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     1e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.84491e-32  1.88004e-32  5.78688e-34  3.40952e-33  1.08148e-34  3.16335e-34 -3.56428e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.3914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.22121e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.682277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.3804, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            84.9818      9.35829      1.88249      2.66542     0.248139      33.8938       1.8292
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006249, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077484, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.76993e-12  8.32796e-31   6.8802e-32
      low eigenvalue method done, cpu time[sec] = 0.077832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.33e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.67041e-32  1.03227e-32  2.88143e-34  1.42778e-33  4.93396e-35  1.75441e-34 -4.49842e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.46545e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.680018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.37079, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            70.8182      7.79857      1.56874      2.22118     0.206783      28.2448      1.52433
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07106, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077434, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.9782e-12   7.1304e-31  5.47144e-32
      low eigenvalue method done, cpu time[sec] = 0.077776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.13e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95078e-32  2.73802e-33  8.45157e-35  6.26705e-35  8.61997e-36  7.99563e-35 -2.73896e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4743, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.70969e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.681184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.35596, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.7013      6.68449      1.34463      1.90387     0.177242      24.2098      1.30657
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071079, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006259, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077448, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9783e-12  6.24291e-31  4.48652e-32
      low eigenvalue method done, cpu time[sec] = 0.077794, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.24e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.4009e-32  1.41357e-33  6.73136e-35   2.0306e-34  9.46285e-36  1.05529e-34 -1.93378e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.95394e+10
      global relaxation matrix dimension = 580
      setting global matrices ... done, cpu time[sec] = 0.68091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36265, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53.1136      5.84893      1.17656      1.66589     0.155087      21.1836      1.14325
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.071102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.077501, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41948e-12   5.5573e-31  3.76459e-32
      low eigenvalue method done, cpu time[sec] = 0.07784, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.56e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-32         0         1
         *Z       ---       ---  8.51e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.51982e-32  6.66902e-33  1.95218e-34   1.1817e-33  3.68569e-35  1.58609e-34  1.03497e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4617, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 19731 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008676
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.473715
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.457567
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.353063
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.85364
         W1 Well: minimal relaxation eigenvalue = 0.0259495
         W1 Well: maximal relaxation eigenvalue = 1.21786
         W1 Well:       grid size = 570
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 219
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 20 1/cm
         B2 Barrier:        grid size = 217
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 200 1/cm
         B3 Barrier:        grid size = 271
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4658 1/cm
         B4 Barrier:        grid size = 288
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23109 1/cm => truncating
         B5 Barrier:        grid size = 476
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23109 1/cm
         B6 Barrier:        grid size = 203
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1461 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.52766, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23109 4.86e+05 1.25e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     21 4.54e+13
         B2    201 5.06e+12
         B3  -4658 1.03e+12
         B4  -6189 1.45e+12
         B5 -23109 1.36e+11
         B6   1462 1.85e+13
         B7   4701 1.02e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.73e+14  3.38e+14  1.11e+10  1.53e+08  2.69e-13   1.7e+17   1.9e+21
          R  5.79e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  2.96e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  9.04e-11  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  6.55e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  3.72e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  5.88e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  5.25e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.11e+10  1.39e+11  4.55e+06  6.28e+04  1.11e-16  6.99e+13  7.84e+17
          R  1.41e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1   7.2e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2   2.2e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  1.59e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  9.04e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  1.43e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  1.28e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
   MasterEquation::set:  done, cpu time[sec] = 4.53908, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+08
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.21825, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2267.47      252.567      51.2795      72.2238      6.76172      921.553      50.8535
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.068029, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006375, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074941, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.11397e-11  4.32723e-29  7.52691e-30
      low eigenvalue method done, cpu time[sec] = 0.075362, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-30 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.05064e-30  2.19682e-30  6.64226e-32  5.76593e-31  1.54036e-32  4.62409e-33 -3.66374e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24364, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.15924, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            755.823      84.1889      17.0932      24.0746      2.25391      307.184      16.9512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067698, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074229, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.91041e-11  2.10064e-29  3.23191e-30
      low eigenvalue method done, cpu time[sec] = 0.074563, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.1e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.45e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.55154e-30   8.8671e-31   2.4726e-32  1.77283e-31  5.12046e-33  5.79096e-33   5.5886e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.182, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         2.40503e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656045, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.13244, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            453.494      50.5134      10.2559      14.4448      1.35234      184.311      10.1707
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067737, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005987, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.51103e-12  1.46582e-29  2.04688e-30
      low eigenvalue method done, cpu time[sec] = 0.074578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.50751e-30  4.59903e-31  1.26057e-32  8.00066e-32   2.4434e-33  3.86082e-33  2.05083e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1489, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         3.36704e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657138, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            323.924       36.081      7.32565      10.3177      0.96596       131.65      7.26478
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005988, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074337, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.23875e-11  1.14515e-29  1.47934e-30
      low eigenvalue method done, cpu time[sec] = 0.074666, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.15e-29 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.97e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.11373e-30  3.15343e-31  9.04446e-33  5.79373e-32  1.76837e-33  3.72561e-33  -4.6125e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.32905e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655869, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.1954, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            251.941       28.063      5.69773      8.02487     0.751303      102.395      5.65039
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005994, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074268, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5993e-11  9.47251e-30  1.14605e-30
      low eigenvalue method done, cpu time[sec] = 0.074678, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.47e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.10321e-31  2.25143e-31  6.32168e-33  3.80053e-32  1.18906e-33  2.45721e-33 -1.25642e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2122, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         4.81006e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.658847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            226.747      25.2567      5.12795      7.22238     0.676172      92.1553      5.08535
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067797, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005989, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074316, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.81348e-12  8.73623e-30  1.02635e-30
      low eigenvalue method done, cpu time[sec] = 0.074645, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.74e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.27e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  8.08357e-31  2.12691e-31  6.02176e-33  3.52129e-32  1.12458e-33  2.97693e-33  6.52261e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         7.21509e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656932, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.1535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            151.165      16.8378      3.41864      4.81492     0.450782      61.4369      3.39023
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067873, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074396, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.68183e-12  6.35049e-30  6.59089e-31
      low eigenvalue method done, cpu time[sec] = 0.074726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.35e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.65e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.08248e-31  1.23306e-31  3.47827e-33  1.85601e-32  6.18175e-34  2.03548e-33  4.95924e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1745, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         9.62012e+09
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.65765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            113.373      12.6283      2.56398      3.61119     0.338086      46.0777      2.54267
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067772, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.41892e-12  5.02812e-30  4.72813e-31
      low eigenvalue method done, cpu time[sec] = 0.074628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.03e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.26865e-31  1.05788e-31  3.04005e-33  1.66224e-32  5.45576e-34  1.90719e-33  4.12445e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.20251e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.655742, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.13483, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            90.6987      10.1027      2.05118      2.88895     0.270469      36.8621      2.03414
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005999, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074356, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.12515e-12  4.17846e-30  3.61663e-31
      low eigenvalue method done, cpu time[sec] = 0.074689, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-31 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.97956e-31  5.76469e-32  1.84316e-33  8.36177e-33  3.03239e-34   2.5825e-33  3.39099e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1562, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.44302e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657336, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.5823      8.41889      1.70932      2.40746     0.225391      30.7184      1.69512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067752, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074243, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08539e-12  3.58294e-30  2.88591e-31
      low eigenvalue method done, cpu time[sec] = 0.074571, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.3e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.91112e-31  3.80724e-32  1.22526e-33  5.99803e-33  2.08592e-34  1.35889e-33  -2.0147e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.197, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.68352e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.657404, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19163, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.7848      7.21619      1.46513      2.06354     0.193192      26.3301      1.45296
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067741, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.99609e-12  3.14078e-30  2.37328e-31
      low eigenvalue method done, cpu time[sec] = 0.0746, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.15e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.66344e-31  3.81268e-32  1.09048e-33  5.15409e-33  1.81938e-34  7.63315e-34 -8.42731e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.92402e+10
      global relaxation matrix dimension = 570
      setting global matrices ... done, cpu time[sec] = 0.656642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18552, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.6867      6.31417      1.28199       1.8056     0.169043      23.0388      1.27134
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.067799, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005985, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.074308, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.76439e-12  2.79868e-30   1.9964e-31
      low eigenvalue method done, cpu time[sec] = 0.074645, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.8e-30 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.26e-32 -4.44e-16         1
         *Z       ---       ---  3.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.16719e-31  2.22484e-32  6.67074e-34  2.79917e-33  1.06521e-34  6.32029e-34 -1.13619e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.202, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 20009 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008339
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.459537
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.433902
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.01312
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.65727
         W1 Well: minimal relaxation eigenvalue = 0.0256195
         W1 Well: maximal relaxation eigenvalue = 1.33435
         W1 Well:       grid size = 561
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 218
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 469
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23138 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1425 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4645 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 5.88128, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23138 4.75e+05 1.32e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46 5.04e+13
         B2    137 5.67e+12
         B3  -4646 1.16e+12
         B4  -6210 1.63e+12
         B5 -23138 1.53e+11
         B6   1426 2.09e+13
         B7   4646 1.18e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.55e+13  6.88e+13  2.85e+09  4.25e+07  1.82e-13  3.26e+16  3.15e+20
          R  2.82e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  1.45e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  3.51e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  2.35e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  5.51e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  3.07e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  3.17e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.49e+10  2.88e+10  1.19e+06  1.78e+04  7.61e-17  1.37e+13  1.32e+17
          R  6.73e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  3.47e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  8.38e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  5.61e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  1.31e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  7.32e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  7.56e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
   MasterEquation::set:  done, cpu time[sec] = 5.89337, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+08
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.634066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.26524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2417.09      272.327      55.7967      78.1799      7.35992       1000.7      56.4339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065072, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005788, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070962, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.58188e-11  1.97453e-28  3.52995e-29
      low eigenvalue method done, cpu time[sec] = 0.071287, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.26796e-29  9.80332e-30  2.92233e-31  2.48569e-30   6.6871e-32  2.20653e-32  1.88395e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21601, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63517, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.05959, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            805.697      90.7755      18.5989        26.06      2.45331      333.568      18.8113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065085, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070905, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.71974e-11  9.71328e-29  1.53811e-29
      low eigenvalue method done, cpu time[sec] = 0.071218, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.71e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.49e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.06584e-29  3.69269e-30  1.03071e-31  7.37711e-31  2.13008e-32   1.9765e-32   4.6801e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.008, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         2.36906e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.65416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.10718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            483.418      54.4653      11.1593       15.636      1.47198      200.141      11.2868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065049, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.17417e-11  6.81615e-29  9.81651e-30
      low eigenvalue method done, cpu time[sec] = 0.071189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.82e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.30207e-30  2.28778e-30  6.32977e-32  4.15443e-31  1.24848e-32  1.71884e-32 -5.28582e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         3.31668e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.635021, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06315, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            345.299      38.9038      7.97096      11.1686      1.05142      142.958      8.06198
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064826, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005744, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070675, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.29212e-12   5.3438e-29  7.13276e-30
      low eigenvalue method done, cpu time[sec] = 0.070987, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.34e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.23773e-30  1.55231e-30  4.36233e-32  2.81627e-31  8.54246e-33  1.49099e-32  3.05898e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0088, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.26431e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.636557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            268.566      30.2585      6.19964      8.68665     0.817769      111.189      6.27043
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064904, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070724, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.55792e-11  4.43149e-29  5.54869e-30
      low eigenvalue method done, cpu time[sec] = 0.071034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.43e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0    4.195e-30  1.14929e-30  3.25337e-32  1.97049e-31  6.15544e-33  1.45348e-32 -1.28385e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0169, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         4.73812e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.637163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06884, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            241.709      27.2327      5.57967      7.81799     0.735992       100.07      5.64339
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06487, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005707, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070681, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.29203e-12  4.09127e-29  4.97796e-30
      low eigenvalue method done, cpu time[sec] = 0.070997, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.09e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-30         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.94506e-30  1.08109e-30  3.08799e-32  1.88463e-31  5.86443e-33  1.43715e-32   2.5957e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0406, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         7.10718e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.636926, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07278, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            161.139      18.1551      3.71978      5.21199     0.490661      66.7135      3.76226
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064847, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005704, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070655, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.11252e-12  2.98538e-29  3.21907e-30
      low eigenvalue method done, cpu time[sec] = 0.070972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.99e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.65e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.83343e-30  6.82977e-31  2.02746e-32  1.13811e-31  3.69409e-33  1.44442e-32  6.12133e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63346, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         9.47624e+09
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.383225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55081, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            120.855      13.6163      2.78984      3.90899     0.367996      50.0351      2.82169
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064955, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070833, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.23398e-12  2.36978e-29  2.32108e-30
      low eigenvalue method done, cpu time[sec] = 0.071157, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.90725e-30  4.33726e-31   1.3104e-32  7.21941e-32  2.36977e-33  1.02195e-32 -3.42849e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.2453, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.18453e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.635627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06887, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.6836      10.8931      2.23187       3.1272     0.294397      40.0281      2.25736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064939, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070775, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.10002e-12  1.97304e-29   1.7826e-30
      low eigenvalue method done, cpu time[sec] = 0.071098, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.05e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.50397e-30  3.43331e-31  1.03531e-32  5.55709e-32  1.84448e-33  8.81517e-33 -5.34018e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0235, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.42144e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63606, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.07788, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            80.5697      9.07755      1.85989        2.606     0.245331      33.3568      1.88113
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005748, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.89903e-12  1.69434e-29  1.42717e-30
      low eigenvalue method done, cpu time[sec] = 0.071049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.69e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.34e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00141e-30  2.26368e-31  6.82111e-33  3.62466e-32  1.21298e-33  6.06408e-33  5.44614e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0319, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.65834e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.637233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.10694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            69.0597      7.78076      1.59419      2.23371     0.210283      28.5915       1.6124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064927, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.10695e-12  1.48703e-29  1.17699e-30
      low eigenvalue method done, cpu time[sec] = 0.071084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.81e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.25081e-31  2.07364e-31  6.25069e-33  3.30181e-32  1.10766e-33   5.3741e-33  3.62589e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0526, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.89525e+10
      global relaxation matrix dimension = 561
      setting global matrices ... done, cpu time[sec] = 0.63581, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06641, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.4273      6.80816      1.39492       1.9545     0.183998      25.0176      1.41085
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065011, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005734, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070848, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11512e-12  1.32638e-29  9.92527e-31
      low eigenvalue method done, cpu time[sec] = 0.071174, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.4e-31         0         1
         *Z       ---       ---  1.47e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.1149e-31  1.66888e-31  5.24982e-33  2.66247e-32  9.13034e-34  5.86496e-33  4.70372e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0176, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 20287 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008603
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.461065
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.436261
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.387793
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.68385
         W1 Well: minimal relaxation eigenvalue = 0.02532
         W1 Well: maximal relaxation eigenvalue = 1.36927
         W1 Well:       grid size = 558
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31606 1/cm
         B1 Barrier:        grid size = 218
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 13 1/cm
         B2 Barrier:        grid size = 216
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 268
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 285
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23237 1/cm => truncating
         B5 Barrier:        grid size = 468
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23236 1/cm
         B6 Barrier:        grid size = 202
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4663 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.28045, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31606 -23236 4.43e+05 1.39e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     14 5.58e+13
         B2    200 6.36e+12
         B3  -4637 1.31e+12
         B4  -6217 1.83e+12
         B5 -23236 1.73e+11
         B6   1501 2.35e+13
         B7   4664 1.35e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.76e+12  1.49e+13  7.74e+08  1.25e+07  1.25e-13  6.68e+15  5.61e+19
          R  1.29e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1   6.7e-14      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  1.29e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  8.01e-08  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  7.98e+12  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5   1.5e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  1.78e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.29e+09  6.33e+09  3.28e+05  5.29e+03  5.31e-17  2.83e+12  2.38e+16
          R  3.04e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  1.58e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  3.05e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  0.000189  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  1.88e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  3.53e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6   4.2e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
   MasterEquation::set:  done, cpu time[sec] = 4.29192, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+08
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34732, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2573.65      293.287      60.6295      84.5213      8.00018      1085.01       62.501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064216, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005993, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070723, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.08849e-10  8.54682e-28  1.56777e-28
      low eigenvalue method done, cpu time[sec] = 0.071104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.55e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-29  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.01736e-28  4.33861e-29  1.28777e-30  1.08772e-29  2.93547e-31  1.01593e-31  1.92131e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.27627, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.62967, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            857.883      97.7623      20.2098      28.1738      2.66673      361.671      20.8337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070592, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.94557e-12  4.25915e-28  6.93067e-29
      low eigenvalue method done, cpu time[sec] = 0.070921, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.26e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-29  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.98317e-29  1.67814e-29  4.69704e-31   3.3054e-30  9.62618e-32  1.05112e-31  4.10642e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.88835, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         2.33443e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             514.73      58.6574      12.1259      16.9043      1.60004      217.003      12.5002
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005644, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070263, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.85588e-11  3.00531e-28  4.45665e-29
      low eigenvalue method done, cpu time[sec] = 0.070586, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.01e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.61e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.26454e-29  9.98308e-30  2.80484e-31  1.85983e-30   5.5681e-32  8.59662e-32   7.2089e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.90381, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          3.2682e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.96141, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            367.664      41.8981      8.66135      12.0745      1.14288      155.002      8.92871
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005685, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070294, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.72409e-12  2.36428e-28   3.2552e-29
      low eigenvalue method done, cpu time[sec] = 0.070626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.99e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.39225e-29  6.81791e-30  1.92698e-31  1.20697e-30  3.71097e-32  7.70583e-32   -8.976e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74412, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.20197e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.96592, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            285.961      32.5874      6.73661      9.39125     0.888909      120.557      6.94456
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064054, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005668, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07024, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.8829e-12  1.96553e-28  2.54252e-29
      low eigenvalue method done, cpu time[sec] = 0.070567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.97e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.98e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.99478e-29  5.37252e-30  1.53551e-31  9.24165e-31  2.89588e-32  7.41249e-32  3.20577e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.90044, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         4.66885e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.9471, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            257.365      29.3287      6.06295      8.45213     0.800018      108.501       6.2501
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064283, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070523, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30122e-11  1.81648e-28  2.28494e-29
      low eigenvalue method done, cpu time[sec] = 0.070847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.6e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.7556e-29  4.60633e-30  1.32509e-31  7.84067e-31  2.47919e-32  7.12396e-32  -8.0842e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.87867, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         7.00328e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.631892, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.00395, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            171.577      19.5525      4.04196      5.63475     0.533346      72.3343      4.16673
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06413, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005681, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.25285e-12  1.33049e-28  1.48769e-29
      low eigenvalue method done, cpu time[sec] = 0.070642, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.14732e-29  2.81408e-30  8.16385e-32  4.52653e-31   1.4778e-32  5.39053e-32 -4.07958e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.93619, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          9.3377e+09
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629455, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.29, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            128.682      14.6643      3.03147      4.22606     0.400009      54.2507      3.12505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005686, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.38542e-12  1.05881e-28  1.07803e-29
      low eigenvalue method done, cpu time[sec] = 0.070548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.68757e-30  2.01533e-30  5.98944e-32  3.23494e-31  1.07119e-32  4.59709e-32  -5.2343e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.2221, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.16721e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.97851, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.946      11.7315      2.42518      3.38085     0.320007      43.4006      2.50004
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005629, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070265, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.03305e-12  8.83203e-29  8.31194e-30
      low eigenvalue method done, cpu time[sec] = 0.0706, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.83e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.40652e-30  1.42956e-30  4.32292e-32  2.28197e-31  7.64201e-33   3.6162e-32   6.0514e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.90853, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.40066e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.630291, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.96802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            85.7883      9.77623      2.02098      2.81738     0.266673      36.1671      2.08337
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.38274e-12   7.5956e-29  6.67632e-30
      low eigenvalue method done, cpu time[sec] = 0.070604, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.6e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.48746e-30  1.17053e-30  3.60913e-32  1.84403e-31  6.28794e-33  3.53658e-32  2.17543e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.74518, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1          1.6341e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.628903, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.98133, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73.5328      8.37962      1.73227      2.41489     0.228577      31.0004      1.78574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064102, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005668, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.070279, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33765e-12  6.67421e-29  5.52122e-30
      low eigenvalue method done, cpu time[sec] = 0.070613, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.67e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   4.6263e-30  9.66966e-31  2.99939e-32  1.49744e-31  5.16689e-33  3.21672e-32  1.36805e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.91615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.86754e+10
      global relaxation matrix dimension = 558
      setting global matrices ... done, cpu time[sec] = 0.629797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95695, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64.3412      7.33217      1.51574      2.11303     0.200005      27.1253      1.56252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.064137, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005665, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.48825e-14  5.95915e-29  4.66718e-30
      low eigenvalue method done, cpu time[sec] = 0.070646, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.96e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-30  2.22e-16         1
         *Z       ---       ---  6.41e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.91637e-30  8.08072e-31  2.53444e-32  1.26382e-31  4.36517e-33  2.86208e-32  1.72219e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.72681, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 20565 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008593
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.447777
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.422066
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.36662
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.54535
         W1 Well: minimal relaxation eigenvalue = 0.0250144
         W1 Well: maximal relaxation eigenvalue = 1.27881
         W1 Well:       grid size = 549
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31590 1/cm
         B1 Barrier:        grid size = 217
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -50 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 139 1/cm
         B3 Barrier:        grid size = 265
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4610 1/cm
         B4 Barrier:        grid size = 282
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 460
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23134 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1469 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.0894, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31590 -23134 4.77e+05 1.47e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -50 6.17e+13
         B2    140 7.11e+12
         B3  -4610 1.48e+12
         B4  -6225 2.06e+12
         B5 -23134 1.96e+11
         B6   1470 2.65e+13
         B7   4700 1.56e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.78e+12  3.39e+12  2.19e+08   3.8e+06  8.68e-14  1.43e+15  1.05e+19
          R  5.63e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  2.95e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  4.57e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  2.63e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  1.15e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  6.98e-16   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  9.51e-20  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.66e+08  1.46e+09  9.44e+04  1.64e+03  3.75e-17  6.19e+11  4.54e+15
          R   1.3e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  6.83e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  1.06e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3   0.00061  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  2.67e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.62e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6   2.2e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
   MasterEquation::set:  done, cpu time[sec] = 4.10084, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+08
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.6112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33821, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2737.3      315.493      65.7939       91.266       8.6847      1174.71       69.086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061518, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005425, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067041, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57371e-10  3.51137e-27  6.59357e-28
      low eigenvalue method done, cpu time[sec] = 0.067345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.51e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.78e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.30058e-28   1.8072e-28  5.36599e-30  4.51674e-29  1.22082e-30  4.75912e-31  8.21353e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.20703, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611035, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91391, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            912.434      105.164      21.9313       30.422       2.8949       391.57      23.0287
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061307, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005456, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066866, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.37326e-11  1.77147e-27  2.95529e-28
      low eigenvalue method done, cpu time[sec] = 0.067182, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.43e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.09828e-28  7.04453e-29  1.96996e-30  1.38714e-29  4.04064e-31  4.38674e-31  3.94113e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.78165, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         2.30105e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            547.461      63.0985      13.1588      18.2532      1.73694      234.942      13.8172
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062917, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005445, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.068463, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.7727e-11  1.25659e-27  1.91417e-28
      low eigenvalue method done, cpu time[sec] = 0.068768, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.14e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.39138e-28  4.21118e-29  1.17964e-30  7.68242e-30  2.31857e-31    3.835e-31  2.32572e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.7819, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         3.22147e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.60997, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.93132, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            391.043      45.0704      9.39913       13.038      1.24067      167.816      9.86943
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061278, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005427, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066811, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.35829e-11  9.91858e-28  1.40523e-28
      low eigenvalue method done, cpu time[sec] = 0.067122, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.92e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.48e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.06091e-28  2.99084e-29   8.4086e-31  5.17019e-30  1.60341e-31  3.45027e-31 -8.24864e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.79733, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         4.14189e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            304.145      35.0547      7.31043      10.1407     0.964966      130.523      7.67623
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061118, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005404, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.61747e-11  8.26561e-28  1.10189e-28
      low eigenvalue method done, cpu time[sec] = 0.06693, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.27e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.45441e-29  2.25367e-29  6.43361e-31  3.83008e-30   1.2066e-31  3.18481e-31  4.79881e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62795, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1          4.6021e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             273.73      31.5493      6.57939       9.1266      0.86847      117.471       6.9086
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061257, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00541, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06677, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.27432e-12  7.64635e-28   9.9192e-29
      low eigenvalue method done, cpu time[sec] = 0.067075, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.65e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.63512e-29  1.99978e-29  5.74038e-31  3.37782e-30  1.07065e-31  2.99754e-31  1.20818e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.78066, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         6.90316e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.61098, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.91509, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            182.487      21.0328      4.38626       6.0844      0.57898      78.3139      4.60574
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061214, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066739, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51436e-12  5.62125e-28  6.50123e-29
      low eigenvalue method done, cpu time[sec] = 0.067044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.06518e-29  1.22577e-29  3.60782e-31  2.01626e-30   6.5578e-32  2.47979e-31  1.30776e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.78106, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         9.20421e+09
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609804, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92284, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            136.865      15.7746       3.2897       4.5633     0.434235      58.7354       3.4543
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061221, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005438, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33794e-12  4.48453e-28    4.734e-29
      low eigenvalue method done, cpu time[sec] = 0.067075, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.48e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-29         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.67167e-29  8.47315e-30  2.53287e-31  1.36867e-30  4.53144e-32  2.03611e-31  2.34047e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63307, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.15053e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.609746, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.16012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            109.492      12.6197      2.63176      3.65064     0.347388      46.9883      2.76344
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061228, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005443, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066773, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.23023e-12  3.74765e-28  3.66412e-29
      low eigenvalue method done, cpu time[sec] = 0.067082, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.37e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.95052e-29  6.47218e-30  1.97492e-31  1.03354e-30   3.4803e-32  1.81835e-31  4.17571e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0294, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.38063e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.93599, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.2434      10.5164      2.19313       3.0422      0.28949       39.157      2.30287
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066732, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.86656e-12  3.22768e-28  2.95249e-29
      low eigenvalue method done, cpu time[sec] = 0.067044, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.23e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.07e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.33943e-29  5.02054e-30  1.54326e-31  7.91558e-31  2.69307e-32  1.50084e-31  1.15265e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.80472, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.61074e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.611163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.93929, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78.2087      9.01408      1.87983       2.6076     0.248134      33.5631      1.97389
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.06117, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005439, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066711, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.72292e-12   2.8395e-28  2.44832e-29
      low eigenvalue method done, cpu time[sec] = 0.067022, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.1e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.96341e-29  4.15438e-30  1.28715e-31  6.55615e-31  2.23946e-32  1.33507e-31  4.07857e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.80688, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.84084e+10
      global relaxation matrix dimension = 549
      setting global matrices ... done, cpu time[sec] = 0.610144, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.92225, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.4326      7.88732      1.64485      2.28165     0.217117      29.3677      1.72715
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.061222, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.066766, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.15879e-13   2.5378e-28  2.07452e-29
      low eigenvalue method done, cpu time[sec] = 0.067079, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.35e-30         0         1
         *Z       ---       ---  2.88e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.6821e-29  3.40305e-30  1.07258e-31  5.27727e-31  1.83669e-32  1.22734e-31  1.37171e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63863, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 20843 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009271
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.395252
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.411605
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.393555
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.49521
         W1 Well: minimal relaxation eigenvalue = 0.0247344
         W1 Well: maximal relaxation eigenvalue = 2.06722
         W1 Well:       grid size = 541
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 215
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 213
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4668 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6220 1/cm
         B5 Barrier: nonpositive number of states at -23195 1/cm => truncating
         B5 Barrier:        grid size = 454
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23195 1/cm
         B6 Barrier:        grid size = 200
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.00076, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23195 4.56e+05 1.55e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 6.82e+13
         B2    182 7.95e+12
         B3  -4668 1.67e+12
         B4  -6220 2.31e+12
         B5 -23195 2.21e+11
         B6   1444 2.98e+13
         B7   4645 1.79e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.24e+11  8.05e+11   6.4e+07  1.19e+06  6.04e-14  3.22e+14  2.07e+18
          R  2.36e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  1.24e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  1.56e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3  8.38e-07  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  1.65e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  3.11e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  4.83e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.88e+08  3.57e+08  2.83e+04       529  2.68e-17  1.43e+11  9.17e+14
          R  5.32e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1   2.8e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  3.53e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3   0.00189  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  3.73e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  7.01e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  1.09e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 4.01126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+08
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592857, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36245, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2908.19      339.007      71.3064      98.4325      9.41572      1270.02      76.2215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005207, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.04234e-10  1.38174e-26  2.65388e-27
      low eigenvalue method done, cpu time[sec] = 0.06452, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.38e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.42e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.72673e-27   7.2164e-28  2.13916e-29  1.79171e-28  4.85135e-30  1.97459e-30  1.10733e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.17671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83687, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            969.397      113.002      23.7688      32.8108      3.13857      423.339      25.4072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058877, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00521, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064188, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.58963e-11  7.05541e-27  1.20588e-27
      low eigenvalue method done, cpu time[sec] = 0.064484, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.06e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.50329e-28  2.82525e-28   7.8814e-30  5.48133e-29  1.60496e-30  1.83614e-30  8.81089e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63759, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         2.26887e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84704, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            581.638      67.8014      14.2613      19.6865      1.88314      254.004      15.2443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.03775e-11  5.03083e-27  7.86666e-28
      low eigenvalue method done, cpu time[sec] = 0.064473, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.03e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-28         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.73138e-28  1.70974e-28  4.79553e-30  3.08851e-29  9.36918e-31   1.6624e-30  1.35743e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6543, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         3.17641e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593161, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82607, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            415.456      48.4295      10.1866      14.0618       1.3451      181.431      10.8888
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05881, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005201, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06411, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.79652e-11  3.98407e-27  5.80391e-28
      low eigenvalue method done, cpu time[sec] = 0.064417, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.98e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.85e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.33155e-28  1.20765e-28  3.41581e-30  2.09561e-29  6.50744e-31  1.48105e-30  1.33794e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.6329, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.08396e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            323.132      37.6674      7.92294      10.9369      1.04619      141.113      8.46905
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058767, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064073, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.56094e-11  3.32803e-27  4.56863e-28
      low eigenvalue method done, cpu time[sec] = 0.06437, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.33e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.23e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.44631e-28  9.13841e-29   2.6119e-30   1.5483e-29  4.88882e-31  1.33139e-30  8.37456e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.64219, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         4.53773e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.590157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82526, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            290.819      33.9007      7.13064      9.84325     0.941572      127.002      7.62215
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058864, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005221, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064183, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.51464e-11  3.08172e-27  4.11947e-28
      low eigenvalue method done, cpu time[sec] = 0.064482, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.08e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.62e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.12971e-28  8.10056e-29  2.33083e-30  1.35794e-29  4.32519e-31   1.2882e-30  1.45101e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.62418, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1          6.8066e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.59225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.8284, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            193.879      22.6005      4.75376      6.56217     0.627714      84.6679      5.08143
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058779, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005236, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064113, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.95857e-12  2.27384e-27  2.71764e-28
      low eigenvalue method done, cpu time[sec] = 0.064409, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.62e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.09827e-28  5.02159e-29  1.48016e-30  8.18782e-30  2.67763e-31  1.05019e-30  1.64787e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63099, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         9.07547e+09
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.593444, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7822, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             145.41      16.9503      3.56532      4.92162     0.470786      63.5009      3.81107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058833, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005201, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064133, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.80287e-12  1.81852e-27  1.98839e-28
      low eigenvalue method done, cpu time[sec] = 0.064432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.5e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.54861e-28  3.53148e-29  1.06003e-30  5.67529e-30  1.88752e-31  8.71852e-31  1.15892e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.58103, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.13443e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.83034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            116.328      13.5603      2.85226       3.9373     0.376629      50.8007      3.04886
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05883, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06412, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.53852e-12  1.52251e-27  1.54485e-28
      low eigenvalue method done, cpu time[sec] = 0.064417, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.77e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.21428e-28  2.63836e-29  8.07452e-31  4.18535e-30  1.41615e-31  7.64121e-31  2.17465e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63235, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.36132e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            96.9397      11.3002      2.37688      3.28108     0.313857      42.3339      2.54072
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058761, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005191, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064049, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.39786e-12  1.31317e-27  1.24872e-28
      low eigenvalue method done, cpu time[sec] = 0.064345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.31e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.25e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.95468e-29  2.10334e-29  6.51601e-31  3.31384e-30  1.13296e-31  6.68259e-31  1.24023e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63456, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.58821e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.592509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84597, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            83.0912      9.68591      2.03733      2.81236      0.26902      36.2862      2.17776
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005191, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06413, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.55442e-12  1.15662e-27  1.03826e-28
      low eigenvalue method done, cpu time[sec] = 0.064452, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.86e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.24567e-29  1.69919e-29  5.32393e-31  2.65541e-30  9.17176e-32   5.8529e-31  4.91387e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.65156, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.81509e+10
      global relaxation matrix dimension = 541
      setting global matrices ... done, cpu time[sec] = 0.591772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.84067, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            72.7048      8.47517      1.78266      2.46081     0.235393      31.7504      1.90554
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005234, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064047, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.82599e-12  1.03476e-27  8.81797e-29
      low eigenvalue method done, cpu time[sec] = 0.064344, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-29         0         1
         *Z       ---       ---  1.32e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.04723e-29  1.41083e-29  4.49052e-31  2.20478e-30  7.68373e-32  5.39829e-31  1.53697e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.64579, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 21121 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009466
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.430584
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.406255
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.298069
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.36517
         W1 Well: minimal relaxation eigenvalue = 0.0244443
         W1 Well: maximal relaxation eigenvalue = 1.33848
         W1 Well:       grid size = 538
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 216
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -47 1/cm
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 148 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 452
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 201
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4656 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.81206, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23175 4.63e+05 1.63e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -47 7.52e+13
         B2    149 8.87e+12
         B3  -4653 1.88e+12
         B4  -6221 2.59e+12
         B5 -23175 2.49e+11
         B6   1423 3.34e+13
         B7   4657 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e+11  2.05e+11  1.99e+07  3.98e+05  4.35e-14  7.75e+13   4.4e+17
          R  9.22e-12         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  4.89e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  5.02e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3  2.51e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4   2.3e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  1.29e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  2.28e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.83e+07   9.1e+07  8.86e+03       177  1.93e-17  3.45e+10  1.96e+14
          R  2.07e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1   1.1e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  0.000113  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3   0.00565  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  5.17e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5   2.9e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  5.11e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
   MasterEquation::set:  done, cpu time[sec] = 3.8226, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+08
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.58529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3086.56       363.88      77.1808       106.04      10.1956      1371.17      83.9408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057974, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005187, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063261, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.91318e-10  5.14358e-26  1.00738e-26
      low eigenvalue method done, cpu time[sec] = 0.063559, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.14e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-27         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.58309e-27  2.73533e-27  8.09023e-29  6.74255e-28  1.82918e-29  7.94382e-30   5.1948e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.14962, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584073, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75476, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1028.85      121.293      25.7269      35.3466      3.39852      457.058      27.9803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057953, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063213, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.51486e-11  2.65656e-26  4.63697e-27
      low eigenvalue method done, cpu time[sec] = 0.063504, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.66e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.49e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.3113e-27  1.09174e-27  3.04705e-29  2.10859e-28  6.18831e-30  7.40663e-30  7.64032e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.53372, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         2.23781e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.76327, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            617.312       72.776      15.4362       21.208      2.03911      274.235      16.7882
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057878, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.37631e-11  1.90366e-26  3.04567e-27
      low eigenvalue method done, cpu time[sec] = 0.063436, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.9e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.23909e-27  6.63357e-28  1.85929e-29  1.19031e-28  3.62123e-30  6.57701e-30  4.75899e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         3.13293e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.70031, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            440.937      51.9829      11.0258      15.1485      1.45651      195.882      11.9915
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057941, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.41079e-11  1.51232e-26  2.25781e-27
      low eigenvalue method done, cpu time[sec] = 0.063513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.51e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.7e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.69921e-27  4.67927e-28  1.32757e-29  8.08302e-29  2.51918e-30  6.03535e-30  5.89896e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.48394, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.02805e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.586313, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74252, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            342.951      40.4311      8.57564      11.7822      1.13284      152.353      9.32676
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005169, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0632, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -6.934e-12  1.26619e-26  1.78387e-27
      low eigenvalue method done, cpu time[sec] = 0.063492, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.35109e-27  3.53957e-28  1.01604e-29    5.979e-29  1.89488e-30  5.46103e-30  7.32964e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37533, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         4.47561e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74094, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            308.656       36.388      7.71808       10.604      1.01956      137.117      8.39408
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057915, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005164, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063177, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02433e-11  1.17358e-26  1.61105e-27
      low eigenvalue method done, cpu time[sec] = 0.063465, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.23025e-27  3.15994e-28  9.11297e-30  5.28698e-29  1.68758e-30  5.19211e-30  5.12967e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.5244, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         6.71342e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74179, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            205.771      24.2587      5.14539      7.06932     0.679704      91.4116      5.59605
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057973, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.53069e-12   8.6899e-27  1.06953e-27
      low eigenvalue method done, cpu time[sec] = 0.063545, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.69e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.34314e-28  1.97998e-28   5.8494e-30  3.21346e-29  1.05455e-30  4.26206e-30  6.28957e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.52534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         8.95123e+09
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75415, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            154.328       18.194      3.85904      5.30199     0.509778      68.5587      4.19704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057915, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.00516, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063171, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.79179e-13  6.96652e-27  7.86155e-28
      low eigenvalue method done, cpu time[sec] = 0.063464, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.97e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.14654e-28  1.38196e-28  4.16876e-30  2.20914e-29  7.38756e-31  3.57255e-30   5.2638e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.54016, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1          1.1189e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584098, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.462      14.5552      3.08723      4.24159     0.407823      54.8469      3.35763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057964, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06324, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.45705e-12  5.84303e-27  6.13034e-28
      low eigenvalue method done, cpu time[sec] = 0.063531, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.87491e-28  1.05079e-28  3.22615e-30  1.66182e-29  5.64248e-31  3.14098e-30  6.60401e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.53721, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.34268e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.585436, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74309, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.885      12.1293      2.57269      3.53466     0.339852      45.7058      2.79803
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057846, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063128, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.12262e-12   5.0468e-27  4.97032e-28
      low eigenvalue method done, cpu time[sec] = 0.063424, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.05e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.95598e-28  8.26452e-29  2.57113e-30  1.29434e-29  4.44876e-31  2.72017e-30  5.55728e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.52585, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.56646e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584175, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.7425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            88.1875      10.3966      2.20517      3.02971     0.291302      39.1764      2.39831
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.058035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005279, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063419, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.09439e-13  4.45031e-27  4.14338e-28
      low eigenvalue method done, cpu time[sec] = 0.063717, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.45e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-28         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.30161e-28  6.70275e-29   2.1144e-30  1.04375e-29  3.62604e-31  2.43158e-30  6.09248e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.52992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.79025e+10
      global relaxation matrix dimension = 538
      setting global matrices ... done, cpu time[sec] = 0.584023, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.74425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            77.1641        9.097      1.92952      2.65099     0.254889      34.2793      2.09852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05802, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005181, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063301, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.4506e-13  3.98535e-27  3.52699e-28
      low eigenvalue method done, cpu time[sec] = 0.063593, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.99e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.74e-29         0         1
         *Z       ---       ---  6.32e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.82464e-28  5.63811e-29  1.79548e-30  8.77175e-30  3.06526e-31  2.19136e-30  7.99892e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.52632, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 21399 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008678
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.423673
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.395051
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.319332
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.31966
         W1 Well: minimal relaxation eigenvalue = 0.0241683
         W1 Well: maximal relaxation eigenvalue = 1.32302
         W1 Well:       grid size = 530
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31600 1/cm
         B1 Barrier:        grid size = 214
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 199 1/cm
         B3 Barrier:        grid size = 260
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4601 1/cm
         B4 Barrier:        grid size = 276
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6201 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 445
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1499 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4699 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.77091, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31600 -23101 4.88e+05 1.72e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  8.3e+13
         B2    200 9.89e+12
         B3  -4601 2.12e+12
         B4  -6201 2.89e+12
         B5 -23101  2.8e+11
         B6   1500 3.75e+13
         B7   4700 2.34e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.85e+10  5.35e+10  6.33e+06  1.35e+05  3.11e-14  1.93e+13  9.66e+16
          R   3.5e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  1.87e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  1.58e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3  7.39e-06  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  3.22e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  5.19e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  1.04e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.3e+07  2.43e+07  2.88e+03      61.5  1.41e-17  8.75e+09  4.39e+13
          R   7.7e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  4.11e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  0.000347  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3    0.0163  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  7.08e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  1.14e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  2.28e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
   MasterEquation::set:  done, cpu time[sec] = 3.78141, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+08
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569411, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34486, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3272.5      390.163      83.4183      114.107      11.0266      1478.41      92.2795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055603, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004952, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060654, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.69073e-11  1.84227e-25  3.67777e-26
      low eigenvalue method done, cpu time[sec] = 0.060938, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.84e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.45e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.41162e-26  9.92168e-27  2.92747e-28  2.42383e-27  6.59316e-29  3.02906e-29   3.4943e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07154, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.570514, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66214, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1090.83      130.054      27.8061      38.0358      3.67555      492.804      30.7598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055606, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004944, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060644, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.60683e-11  9.62267e-26  1.71485e-26
      low eigenvalue method done, cpu time[sec] = 0.060931, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.62e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.22421e-26  3.99727e-27  1.11713e-28   7.6881e-28  2.26198e-29  2.82758e-29  2.51325e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39109, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         2.20781e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66841, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            654.499      78.0327      16.6837      22.8215      2.20533      295.682      18.4559
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055632, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004942, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060669, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.79191e-11   6.9294e-26  1.13399e-26
      low eigenvalue method done, cpu time[sec] = 0.060965, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.93e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.36202e-27  2.45056e-27  6.88686e-29  4.38064e-28  1.33672e-29  2.55074e-29  2.67429e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39751, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.09093e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.56904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66298, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            467.499      55.7376      11.9169       16.301      1.57524      211.202      13.1828
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060583, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.24259e-12  5.52215e-26  8.44624e-27
      low eigenvalue method done, cpu time[sec] = 0.060865, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.35937e-27  1.73712e-27  4.93876e-29  2.99017e-28  9.34443e-30  2.31491e-29  2.82366e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.3861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         3.97405e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569655, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.67071, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            363.611      43.3515       9.2687      12.6786      1.22518      164.268      10.2533
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055544, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004956, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060596, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.35512e-11  4.63397e-26  6.69772e-27
      low eigenvalue method done, cpu time[sec] = 0.060886, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.63e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.10489e-27  1.32423e-27   3.8077e-29  2.22259e-28  7.07261e-30  2.10671e-29  2.66758e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.4022, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         4.41562e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.567788, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.64809, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             327.25      39.0163      8.34183      11.4107      1.10266      147.841      9.22795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004945, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060521, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18134e-11  4.29909e-26  6.05833e-27
      low eigenvalue method done, cpu time[sec] = 0.060809, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.3e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-27  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.63417e-27  1.17701e-27  3.40499e-29  1.96032e-28  6.28137e-30  2.01341e-29  3.04964e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37615, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         6.62342e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569828, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66139, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            218.166      26.0109      5.56122      7.60715      0.73511      98.5607      6.15197
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055429, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00494, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060472, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.16181e-12  3.19454e-26  4.04698e-27
      low eigenvalue method done, cpu time[sec] = 0.060757, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.19e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.72e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.16245e-27  7.41862e-28  2.20079e-29  1.19903e-28  3.95184e-30  1.66325e-29  2.51511e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39362, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         8.83123e+09
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.568738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.66285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.625      19.5082      4.17091      5.70536     0.551332      73.9206      4.61398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055494, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004939, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060525, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.20486e-11  2.56716e-26  2.98832e-27
      low eigenvalue method done, cpu time[sec] = 0.060806, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.57e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.35768e-27  5.23159e-28  1.58573e-29  8.32236e-29  2.79742e-30  1.41335e-29  2.38822e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1          1.1039e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.570575, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.67509, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              130.9      15.6065      3.33673      4.56429     0.441066      59.1364      3.69118
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055661, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004947, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060704, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.20984e-12  2.15703e-26   2.3387e-27
      low eigenvalue method done, cpu time[sec] = 0.060996, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.16e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.21e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16    1.854e-27  3.94645e-28  1.21782e-29  6.21466e-29   2.1206e-30  1.22464e-29   3.2727e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.40006, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.32468e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.67061, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            109.083      13.0054      2.78061      3.80358     0.367555      49.2804      3.07598
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055509, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004934, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.12666e-12  1.86576e-26  1.90185e-27
      low eigenvalue method done, cpu time[sec] = 0.060824, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.51e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.5244e-27  3.14784e-28  9.85256e-30  4.92438e-29   1.6993e-30  1.08406e-29  2.69381e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.403, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.54547e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.56163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.67066, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            93.4999      11.1475      2.38338      3.26021     0.315047      42.2403      2.63656
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05542, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004919, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060434, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.97652e-12  1.64717e-26  1.58951e-27
      low eigenvalue method done, cpu time[sec] = 0.06072, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.98e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.27422e-27  2.55907e-28  8.11611e-30  3.97929e-29  1.38771e-30  9.62518e-30  2.58388e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22991, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.76625e+10
      global relaxation matrix dimension = 530
      setting global matrices ... done, cpu time[sec] = 0.569382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.67808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.8124      9.75408      2.08546      2.85268     0.275666      36.9603      2.30699
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.055532, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004929, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.060557, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.15248e-14  1.47654e-26  1.35608e-27
      low eigenvalue method done, cpu time[sec] = 0.060852, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.57e-28  4.44e-16         1
         *Z       ---       ---  3.07e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.09864e-27  2.15512e-28  6.91392e-30  3.33102e-29  1.17297e-30   8.7782e-30  3.02812e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.40557, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 21677 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007921
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.411169
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.381221
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.345846
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.22709
         W1 Well: minimal relaxation eigenvalue = 0.0239299
         W1 Well: maximal relaxation eigenvalue = 1.21867
         W1 Well:       grid size = 522
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6270 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 439
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1480 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.6687, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23101 4.88e+05 1.81e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 9.14e+13
         B2    156  1.1e+13
         B3  -4639 2.37e+12
         B4  -6270 3.24e+12
         B5 -23101 3.14e+11
         B6   1481  4.2e+13
         B7   4643 2.67e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.79e+09  1.45e+10  2.08e+06  4.73e+04  2.23e-14  4.96e+12  2.21e+16
          R  1.28e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  6.89e-11     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2  4.82e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3  2.11e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  4.49e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  2.01e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  4.52e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.64e+06  6.79e+06       971      22.1  1.04e-17  2.32e+09  1.03e+13
          R  2.75e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  1.47e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   0.00103  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3    0.0452  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  9.59e+16  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  4.31e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  9.67e-14  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
   MasterEquation::set:  done, cpu time[sec] = 3.67922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+08
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.55086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35327, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3466.23      417.919      90.0262      122.655      11.9114      1591.97      101.274
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05363, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058509, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.27458e-12  6.36802e-25  1.29546e-25
      low eigenvalue method done, cpu time[sec] = 0.058783, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.37e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-26         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.45248e-26  3.45076e-26  1.01627e-27  8.36805e-27  2.28116e-28  1.10231e-28  7.17207e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.02917, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.549446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54221, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1155.41      139.306      30.0087       40.885      3.97047      530.657      33.7578
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058298, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.17811e-11  3.36195e-25  6.11519e-26
      low eigenvalue method done, cpu time[sec] = 0.058572, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.36e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.05e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.34359e-26  1.40638e-26  3.93211e-28  2.69005e-27  7.93581e-29  1.03548e-28  9.58346e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         2.17882e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550738, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58342, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            693.247      83.5837      18.0052       24.531      2.38228      318.394      20.2547
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053302, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004794, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058187, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.68776e-11  2.43239e-25  4.07023e-26
      low eigenvalue method done, cpu time[sec] = 0.058473, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.43e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.82e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.98703e-26   8.6741e-27  2.44088e-28  1.54271e-27  4.72197e-29  9.37754e-29  1.07282e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.25309, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.05034e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.5508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54903, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            495.176      59.7027      12.8609      17.5221      1.70163      227.425      14.4676
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053385, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004805, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.71296e-12  1.94425e-25  3.04547e-26
      low eigenvalue method done, cpu time[sec] = 0.05856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.94e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.65e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.27678e-26  6.16056e-27   1.7548e-28  1.05519e-27  3.30862e-29  8.51232e-29  1.15561e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21618, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         3.92187e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.550401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5548, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            385.137      46.4354      10.0029      13.6283      1.32349      176.886      11.2526
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053311, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004787, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058189, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.4547e-11  1.63514e-25  2.42358e-26
      low eigenvalue method done, cpu time[sec] = 0.058469, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.91e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.8366e-26  4.71766e-27   1.3603e-28  7.88682e-28  2.51812e-29  7.77474e-29  9.83433e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22909, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         4.35763e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552058, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54142, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            346.623      41.7919      9.00262      12.2655      1.19114      159.197      10.1274
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053361, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00479, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058244, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.60549e-12  1.51836e-25  2.19555e-26
      low eigenvalue method done, cpu time[sec] = 0.058517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.52e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.66822e-26  4.19695e-27  1.21742e-28   6.9592e-28  2.23781e-29  7.44007e-29  1.06097e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21552, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         6.53645e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            231.082      27.8612      6.00174        8.177     0.794095      106.131      6.75157
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053307, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00478, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058176, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.68518e-12  1.13212e-25  1.47551e-26
      low eigenvalue method done, cpu time[sec] = 0.058448, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.14257e-26  2.65327e-27  7.90113e-29  4.27652e-28  1.41436e-29  6.16194e-29  1.10523e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22599, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         8.71526e+09
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54351, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.312      20.8959      4.50131      6.13275     0.595571      79.5986      5.06368
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053443, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22624e-11  9.11923e-26  1.09437e-26
      low eigenvalue method done, cpu time[sec] = 0.058592, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.12e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.57125e-27  1.88454e-27   5.7342e-29  2.99028e-28  1.00856e-29   5.2542e-29  1.07938e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.22078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.08941e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.55197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.56004, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            138.649      16.7167      3.60105       4.9062     0.476457      63.6789      4.05094
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053362, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.39501e-12   7.6759e-26  8.59497e-27
      low eigenvalue method done, cpu time[sec] = 0.058517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.68e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.77789e-27  1.42949e-27  4.42851e-29  2.24389e-28  7.68581e-30  4.57588e-29  1.09821e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.23293, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.30729e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.552173, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54904, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            115.541      13.9306      3.00087       4.0885     0.397047      53.0657      3.37578
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053283, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004797, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.59292e-12   6.6487e-26  7.01004e-27
      low eigenvalue method done, cpu time[sec] = 0.058453, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.65e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.58181e-27  1.13959e-27  3.58542e-29  1.77769e-28  6.16154e-30  4.06361e-29  1.08654e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.05887, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.52517e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57199, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            99.0353      11.9405      2.57218      3.50443     0.340326      45.4849      2.89353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053241, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004795, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058127, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.43389e-12  5.87654e-26  5.87348e-27
      low eigenvalue method done, cpu time[sec] = 0.058401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.88e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.69812e-27  9.33427e-28  2.97678e-29  1.44871e-28  5.07294e-30  3.64386e-29  1.04348e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.24345, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.74305e+10
      global relaxation matrix dimension = 522
      setting global matrices ... done, cpu time[sec] = 0.551326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.57097, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.6559       10.448      2.25065      3.06638     0.297786      39.7993      2.53184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.053249, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004791, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.058131, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.85396e-13  5.27294e-26  5.02194e-27
      low eigenvalue method done, cpu time[sec] = 0.058407, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.27e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-27         0         1
         *Z       ---       ---  1.52e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.02556e-27   7.8146e-28  2.52247e-29  1.20853e-28  4.26898e-30   3.2929e-29  1.15865e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.2468, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 21955 1/cm
      Energy step      = 103 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00953
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.411111
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.381588
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.3459
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.20036
         W1 Well: minimal relaxation eigenvalue = 0.0236448
         W1 Well: maximal relaxation eigenvalue = 1.34265
         W1 Well:       grid size = 520
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31605 1/cm
         B1 Barrier:        grid size = 213
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 15 1/cm
         B2 Barrier:        grid size = 212
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 258
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 274
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6266 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 438
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 199
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1457 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.67377, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31605 -23159 4.68e+05 1.91e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     16 1.01e+14
         B2    119 1.23e+13
         B3  -4619 2.66e+12
         B4  -6266 3.61e+12
         B5 -23159 3.53e+11
         B6   1458  4.7e+13
         B7   4651 3.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.27e+09  4.22e+09  7.24e+05  1.76e+04  1.66e-14  1.37e+12  5.45e+15
          R   4.4e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  2.37e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2  1.38e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3   5.7e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  6.03e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  7.29e-13   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  1.83e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e+06  1.97e+06       339      8.22  7.77e-18  6.42e+08  2.55e+12
          R  9.39e-07         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  5.06e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2   0.00295  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3     0.122   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  1.29e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  1.56e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  3.92e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
   MasterEquation::set:  done, cpu time[sec] = 3.68413, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+08
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548365, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3667.92        447.2       97.038      131.703      12.8524       1712.1       110.96
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052938, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.78693e-12  2.08404e-24  4.30388e-25
      low eigenvalue method done, cpu time[sec] = 0.058064, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.08e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.93e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.84014e-25  1.15096e-25  3.38293e-27  2.77072e-26  7.56904e-28  3.85332e-28   4.2805e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99318, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.546721, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.50303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1222.64      149.067       32.346      43.9011      4.28415        570.7      36.9868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052828, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057631, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.84998e-11  1.11172e-24  2.05608e-25
      low eigenvalue method done, cpu time[sec] = 0.057923, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.63e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.47714e-25  4.74236e-26  1.32628e-27  9.01788e-27  2.66777e-28  3.63318e-28   4.0248e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.16572, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         2.15078e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.549668, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5125, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            733.583      89.4401      19.4076      26.3407      2.57049       342.42      22.1921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052826, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.03815e-11  8.08019e-25  1.37719e-25
      low eigenvalue method done, cpu time[sec] = 0.057922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.08e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.02132e-25  2.93952e-26  8.28388e-28  5.20262e-27  1.59724e-28  3.29975e-28  4.22715e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.17555, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         3.01109e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.54839, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            523.988      63.8858      13.8626      18.8148      1.83606      244.586      15.8515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004725, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057578, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.62231e-12  6.47765e-25  1.03503e-25
      low eigenvalue method done, cpu time[sec] = 0.057856, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.48e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.53e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.81846e-26   2.0968e-26  5.98434e-28  3.57554e-27  1.12466e-28  3.00298e-28  4.15109e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.83569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1          3.8714e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548645, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            407.546      49.6889       10.782      14.6337      1.42805      190.233      12.3289
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052822, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057648, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.77992e-11  5.45953e-25  8.26521e-26
      low eigenvalue method done, cpu time[sec] = 0.057925, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.46e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.32435e-26  1.61011e-26  4.65496e-28  2.68246e-27  8.59092e-29  2.75296e-28  4.21653e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.17891, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         4.30155e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548483, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55062, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            366.792        44.72       9.7038      13.1703      1.28524       171.21       11.096
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052806, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05761, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.0469e-11  5.07412e-25  7.49864e-26
      low eigenvalue method done, cpu time[sec] = 0.057968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.07e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-26         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   5.7637e-26  1.43618e-26  4.17777e-28  2.37232e-27  7.65446e-29  2.64018e-28  4.06928e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.20783, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         6.45233e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.55331, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            244.528      29.8134       6.4692      8.78022     0.856829       114.14      7.39736
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057535, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.30786e-11  3.79614e-25  5.06905e-26
      low eigenvalue method done, cpu time[sec] = 0.057815, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.8e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.98e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.96635e-26  9.12052e-27  2.72595e-28  1.46499e-27   4.8631e-29  2.19693e-28  4.41647e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21277, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         8.60311e+09
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548439, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54519, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            183.396        22.36       4.8519      6.58517     0.642622      85.6049      5.54802
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052734, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004702, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057525, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.63773e-12  3.06485e-25  3.77597e-26
      low eigenvalue method done, cpu time[sec] = 0.057806, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.25e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.98927e-26  6.50272e-27   1.9871e-28  1.02816e-27  3.48226e-29  1.88197e-28  4.30178e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.20494, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.07539e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.549433, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.5508, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            146.717       17.888      3.88152      5.26813     0.514097       68.484      4.43841
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05271, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004715, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057516, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.93556e-12  2.58426e-25  2.97577e-26
      low eigenvalue method done, cpu time[sec] = 0.057795, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.58e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.37712e-26  4.96082e-27  1.54446e-28  7.77126e-28    2.672e-29  1.64766e-28  4.41776e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21176, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.29047e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.548305, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54957, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.264      14.9067       3.2346      4.39011     0.428415        57.07      3.69868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052784, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004718, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.97608e-12  2.24154e-25  2.43398e-26
      low eigenvalue method done, cpu time[sec] = 0.057873, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.3e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.95303e-26  3.94403e-27  1.24751e-28  6.13857e-28  2.13653e-29  1.45974e-28  4.35608e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.20569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.50554e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.547919, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.52338, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            104.798      12.7772      2.77251      3.76295     0.367212      48.9171       3.1703
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052735, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057524, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.58384e-13  1.98349e-25  2.04434e-26
      low eigenvalue method done, cpu time[sec] = 0.0578, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.98e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.65002e-26  3.24457e-27  1.04023e-28  5.02673e-28  1.76715e-29   1.3112e-28  4.46222e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.18239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.72062e+10
      global relaxation matrix dimension = 520
      setting global matrices ... done, cpu time[sec] = 0.552111, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.54582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            91.6979        11.18      2.42595      3.29258     0.321311      42.8025      2.77401
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.052677, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004703, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05747, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   3.1604e-12  1.78148e-25   1.7517e-26
      low eigenvalue method done, cpu time[sec] = 0.057745, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.21e-27         0         1
         *Z       ---       ---  7.82e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.41803e-26  2.72399e-27  8.84103e-29  4.20381e-28  1.49121e-29  1.18803e-28  4.41321e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.21425, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 22233 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008505
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.406468
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.372536
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.318199
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.28186
         W1 Well: minimal relaxation eigenvalue = 0.0233915
         W1 Well: maximal relaxation eigenvalue = 1.60998
         W1 Well:       grid size = 513
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 212
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 183 1/cm
         B3 Barrier:        grid size = 256
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4646 1/cm
         B4 Barrier:        grid size = 271
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6221 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 432
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1443 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.68692, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23127 4.79e+05 2.01e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.11e+14
         B2    184 1.36e+13
         B3  -4646 2.98e+12
         B4  -6221 4.03e+12
         B5 -23127 3.95e+11
         B6   1444 5.25e+13
         B7   4699 3.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.77e+08  1.25e+09  2.56e+05  6.59e+03  1.22e-14  3.87e+11  1.38e+15
          R  1.48e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  8.01e-10     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2  3.91e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3  0.000152  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  8.19e+13  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5  2.58e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  7.26e-16  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.24e+05  5.97e+05       122      3.15  5.84e-18  1.85e+08  6.59e+11
          R  3.09e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.67e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   0.00818  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3     0.317  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.71e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5   5.4e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  1.52e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
   MasterEquation::set:  done, cpu time[sec] = 3.6973, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+08
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2847, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3877.68      478.069      104.479      141.273      13.8523      1839.04      121.379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004613, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05574, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.85366e-11  6.61879e-24  1.38849e-24
      low eigenvalue method done, cpu time[sec] = 0.05601, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-25 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.17509e-25  3.68759e-25  1.08274e-26  8.82066e-26  2.41477e-27  1.29344e-27  1.65035e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533357, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44908, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1292.56      159.356      34.8264      47.0911      4.61743      613.013      40.4596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050908, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004579, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.59747e-12   3.5669e-24  6.71232e-25
      low eigenvalue method done, cpu time[sec] = 0.055922, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.57e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.34e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.82491e-25  1.53523e-25  4.29805e-27  2.90539e-26    8.618e-28  1.22544e-27  1.55379e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.0737, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         2.12364e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532824, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            775.536      95.6138      20.8959      28.2547      2.77046      367.808      24.2757
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050759, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004582, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.96428e-12  2.60423e-24  4.52414e-25
      low eigenvalue method done, cpu time[sec] = 0.055705, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.6e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.09e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.35694e-25  9.57324e-26   2.7031e-27  1.68746e-26  5.19565e-28  1.11709e-27  1.57266e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1          2.9731e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533077, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45109, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            553.955      68.2956      14.9256      20.1819       1.9789       262.72      17.3398
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050819, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004589, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055497, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53574e-12  2.09381e-24  3.41501e-25
      low eigenvalue method done, cpu time[sec] = 0.055765, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.09e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.58049e-25  6.85578e-26  1.96183e-27  1.16498e-26  3.67549e-28  1.01858e-27  1.55765e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08201, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         3.82256e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532328, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45526, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            430.854      53.1188      11.6088       15.697      1.53914      204.338      13.4865
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050725, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004568, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055384, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.9016e-12  1.76849e-24  2.73631e-25
      low eigenvalue method done, cpu time[sec] = 0.055658, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.77e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.09368e-25  5.27953e-26  1.53096e-27  8.76664e-27  2.81663e-28  9.35733e-28  1.55505e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07987, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         4.24729e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            387.768      47.8069      10.4479      14.1273      1.38523      183.904      12.1379
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05099, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004554, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055632, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.55941e-12   1.6451e-24  2.48614e-25
      low eigenvalue method done, cpu time[sec] = 0.055908, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.85e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.91202e-25  4.71903e-26  1.37704e-27  7.76877e-27  2.51496e-28  8.98711e-28  1.55433e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07792, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         6.37093e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45842, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            258.512      31.8713      6.96529      9.41822     0.923487      122.603      8.09192
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050758, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004622, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055469, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.3899e-12  1.23488e-24  1.69035e-25
      low eigenvalue method done, cpu time[sec] = 0.055744, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.89e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.32342e-25  3.01206e-26  9.03867e-28  4.82388e-27  1.60718e-28   7.5189e-28  1.63224e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         8.49458e+09
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.53235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45958, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            193.884      23.9034      5.22396      7.06366     0.692615      91.9519      6.06894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050781, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004573, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055444, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.27011e-12  9.99294e-25  1.26452e-25
      low eigenvalue method done, cpu time[sec] = 0.055716, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.99e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.00071e-25   2.1549e-26  6.61488e-28  3.39965e-27   1.1556e-28  6.45635e-28  1.58047e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08865, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.06182e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45793, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            155.107      19.1228      4.17917      5.65093     0.554092      73.5616      4.85515
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05074, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00457, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055397, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.36778e-12  8.44066e-25  9.99926e-26
      low eigenvalue method done, cpu time[sec] = 0.055663, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.44e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.97e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.97836e-26  1.64833e-26  5.15579e-28   2.5758e-27  8.89077e-29  5.66066e-28  1.68837e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91368, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.27419e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.532403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.4592, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            129.256      15.9356      3.48264      4.70911     0.461743      61.3013      4.04596
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050679, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004567, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055333, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.25064e-12  7.33143e-25  8.20178e-26
      low eigenvalue method done, cpu time[sec] = 0.055604, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.58731e-26   1.3168e-26  4.18546e-28  2.04452e-27  7.14461e-29  5.03676e-28   1.6853e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.48655e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.533819, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.791      13.6591      2.98512      4.03638      0.39578       52.544      3.46796
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05542, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76551e-12  6.49485e-25  6.90548e-26
      low eigenvalue method done, cpu time[sec] = 0.055688, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.49e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  5.57193e-26   1.0837e-26  3.49389e-28  1.67522e-27  5.91482e-29  4.53646e-28   1.6925e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08752, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.69892e+10
      global relaxation matrix dimension = 513
      setting global matrices ... done, cpu time[sec] = 0.531884, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45944, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             96.942      11.9517      2.61198      3.53183     0.346307       45.976      3.03447
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004565, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055498, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.33266e-12  5.83907e-25  5.92949e-26
      low eigenvalue method done, cpu time[sec] = 0.055769, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-26 -4.44e-16         1
         *Z       ---       ---  4.07e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.80276e-26  9.12823e-27  2.97966e-28  1.40634e-27  5.00944e-29  4.11948e-28   1.7252e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.09076, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 22511 1/cm
      Energy step      = 107 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00859
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.397895
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.359392
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.316743
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.07724
         W1 Well: minimal relaxation eigenvalue = 0.0231513
         W1 Well: maximal relaxation eigenvalue = 1.56239
         W1 Well:       grid size = 506
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31631 1/cm
         B1 Barrier:        grid size = 211
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -66 1/cm
         B2 Barrier:        grid size = 209
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 147 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4667 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23285 1/cm => truncating
         B5 Barrier:        grid size = 428
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23285 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.45772, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31631 -23285 4.27e+05 2.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -66 1.22e+14
         B2    148 1.52e+13
         B3  -4667 3.34e+12
         B4  -6272  4.5e+12
         B5 -23285 4.43e+11
         B6   1433 5.86e+13
         B7   4642 3.94e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.11e+08  3.86e+08  9.39e+04  2.57e+03  9.13e-15  1.14e+11  3.65e+14
          R  4.75e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  2.59e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2  1.07e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3   0.00039  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4   1.1e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  8.75e-12   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  2.74e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+05  1.88e+05      45.6      1.25  4.43e-18  5.54e+07  1.77e+11
          R  9.79e-06         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  5.33e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2     0.022  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3     0.803  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  2.26e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5   1.8e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  5.64e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
   MasterEquation::set:  done, cpu time[sec] = 3.46807, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+08
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4095.77      510.587       112.37      151.386      14.9137      1973.04      132.568
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049156, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004435, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053681, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.25492e-10  2.01508e-23  4.29026e-24
      low eigenvalue method done, cpu time[sec] = 0.05394, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.85522e-24  1.13926e-24  3.33887e-26  2.70618e-25  7.42385e-27  4.18671e-27  5.46583e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36707, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.5208, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35106, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1365.26      170.196      37.4567      50.4621      4.97123      657.681      44.1894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049118, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00442, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053627, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -5.753e-11  1.09651e-23  2.09761e-24
      low eigenvalue method done, cpu time[sec] = 0.053893, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.1e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.51783e-24  4.79183e-25  1.34218e-26  9.02343e-26  2.68325e-27  3.97471e-27  5.76562e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.88773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.09737e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520646, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35469, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            819.154      102.117       22.474      30.2772      2.98274      394.608      26.5137
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049122, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053638, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.9919e-12  8.04042e-24  1.42231e-24
      low eigenvalue method done, cpu time[sec] = 0.053898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.04e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.06226e-24  3.00445e-25  8.49535e-27  5.27247e-26  1.62796e-27  3.63315e-27  5.69876e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         2.93632e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             585.11       72.941      16.0529      21.6266      2.13053      281.863      18.9383
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049161, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053663, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.53987e-12  6.48266e-24  1.07816e-24
      low eigenvalue method done, cpu time[sec] = 0.05392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.48e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.20151e-25  2.16018e-25  6.19418e-27  3.65573e-26   1.1569e-27  3.32445e-27  5.86001e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.8822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         3.77527e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35902, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            455.085      56.7319      12.4856      16.8207      1.65708      219.227      14.7298
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05368, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.47302e-12  5.48674e-24  8.66731e-25
      low eigenvalue method done, cpu time[sec] = 0.053938, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.49e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.67688e-25  1.66898e-25  4.85222e-27  2.76139e-26  8.89985e-28  3.06119e-27  5.77599e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89597, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         4.19474e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519709, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.37856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            409.577      51.0587       11.237      15.1386      1.49137      197.304      13.2568
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053639, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.7122e-11  5.10831e-24  7.88601e-25
      low eigenvalue method done, cpu time[sec] = 0.053901, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.11e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-25         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.10403e-25   1.4931e-25  4.36945e-27   2.4498e-26  7.95589e-28  2.94403e-27  5.88121e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.91202, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         6.29211e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.518073, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36028, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            273.051      34.0391      7.49134      10.0924     0.994246      131.536      8.83789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049084, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053593, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.07216e-12  3.84699e-24  5.39195e-25
      low eigenvalue method done, cpu time[sec] = 0.053852, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.85e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.24893e-25  9.58306e-26  2.88579e-27  1.53032e-26  5.11578e-28  2.47202e-27   5.8786e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89743, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         8.38948e+09
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.51836, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.35917, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            204.788      25.5293      5.61851      7.56931     0.745685      98.6521      6.62842
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049142, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004409, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053639, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.69617e-12  3.12008e-24  4.05037e-25
      low eigenvalue method done, cpu time[sec] = 0.053895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.22e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   3.2265e-25  6.88306e-26  2.12141e-27  1.08303e-26  3.69464e-28  2.13159e-27  5.96092e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89646, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.04869e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.520307, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            163.831      20.4235       4.4948      6.05545     0.596548      78.9217      5.30273
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049032, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004424, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02595e-11  2.63991e-24  3.21343e-25
      low eigenvalue method done, cpu time[sec] = 0.053811, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.11e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.57988e-25    5.278e-26   1.6585e-27  8.22863e-27  2.85099e-28  1.87446e-27  6.08939e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.25842e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36108, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            136.526      17.0196      3.74567      5.04621     0.497123      65.7681      4.41894
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.14583e-12  2.29611e-24  2.64303e-25
      low eigenvalue method done, cpu time[sec] = 0.053895, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.3e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.32e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.13325e-25  4.22222e-26  1.34876e-27  6.54269e-27  2.29517e-28    1.671e-27  6.19598e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.89225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.46816e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.517635, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.36477, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            117.022      14.5882      3.21057      4.32532     0.426105      56.3726      3.78767
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.049053, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004426, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053564, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.70794e-11   2.0364e-24  2.23055e-25
      low eigenvalue method done, cpu time[sec] = 0.053822, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.04e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.71e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.81043e-25  3.48672e-26   1.1298e-27  5.37885e-27  1.90667e-28  1.50777e-27  6.18636e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.90179, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1          1.6779e+10
      global relaxation matrix dimension = 506
      setting global matrices ... done, cpu time[sec] = 0.519318, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.38678, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.394      12.7647      2.80925      3.78465     0.372842      49.3261      3.31421
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04902, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004432, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053539, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.57538e-13  1.83254e-24  1.91925e-25
      low eigenvalue method done, cpu time[sec] = 0.053797, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.24e-26         0         1
         *Z       ---       ---  2.17e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.56448e-25  2.94387e-26  9.66103e-28  4.52706e-27  1.61911e-28  1.37301e-27  6.27955e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.92214, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 22789 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007715
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.396019
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.357983
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.323865
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.06298
         W1 Well: minimal relaxation eigenvalue = 0.0229333
         W1 Well: maximal relaxation eigenvalue = 1.94346
         W1 Well:       grid size = 504
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31643 1/cm
         B1 Barrier:        grid size = 211
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 210
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 254
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 269
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6263 1/cm
         B5 Barrier: nonpositive number of states at -23111 1/cm => truncating
         B5 Barrier:        grid size = 425
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23111 1/cm
         B6 Barrier:        grid size = 198
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1404 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.44243, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31643 -23111 4.85e+05 2.23e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      1 1.34e+14
         B2    109 1.68e+13
         B3  -4643 3.73e+12
         B4  -6263 5.01e+12
         B5 -23111 4.95e+11
         B6   1405 6.53e+13
         B7   4645 4.47e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.78e+07  1.24e+08  3.55e+04  1.03e+03  6.89e-15   3.5e+10  1.01e+14
          R  1.47e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  8.07e-09     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2  2.82e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3  0.000973   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  1.45e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  2.86e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  9.92e-15  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.34e+04   6.1e+04      17.5     0.506  3.39e-18  1.72e+07  4.97e+10
          R  2.99e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  1.64e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2    0.0572  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3      1.98   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  2.95e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  5.81e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  2.01e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
   MasterEquation::set:  done, cpu time[sec] = 3.45364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+08
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515339, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4322.25      544.807       120.73      162.064      16.0394      2114.36      144.571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004398, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053059, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   5.2183e-11  5.97752e-23  1.29092e-23
      low eigenvalue method done, cpu time[sec] = 0.053323, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.98e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-24  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.56997e-24  3.39517e-24  9.93374e-26  8.01038e-25  2.20203e-26  1.30634e-26   1.9593e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515662, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1440.75      181.602      40.2434      54.0213      5.34646      704.787      48.1903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048455, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004394, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052937, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.00316e-11   3.2834e-23  6.38141e-24
      low eigenvalue method done, cpu time[sec] = 0.05319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.28e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.53e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.60421e-24  1.44191e-24  4.04155e-26   2.7021e-25  8.05565e-27  1.24375e-26   1.9865e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.07192e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514952, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32601, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            864.449      108.961       24.146      32.4128      3.20787      422.872      28.9142
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048529, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004372, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052987, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.92701e-11  2.41781e-23  4.35233e-24
      low eigenvalue method done, cpu time[sec] = 0.053238, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   3.2398e-24  9.08713e-25  2.57375e-26  1.58818e-25  4.91743e-27  1.13976e-26  2.01929e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.44711, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         2.90068e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515374, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31861, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            617.464      77.8296      17.2472       23.152      2.29134      302.052       20.653
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048463, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004385, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052934, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.55856e-11  1.95472e-23  3.31278e-24
      low eigenvalue method done, cpu time[sec] = 0.053187, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.95e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.48e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.51142e-24  6.55811e-25  1.88484e-26  1.10585e-25  3.50992e-27  1.04561e-26  2.02509e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85948, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         3.72945e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514043, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             480.25      60.5342      13.4145      18.0071      1.78215      234.929      16.0634
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048536, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004413, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053044, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.6248e-11  1.65776e-23  2.67166e-24
      low eigenvalue method done, cpu time[sec] = 0.053314, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.8e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.05085e-24  5.08178e-25  1.48152e-26  8.38079e-26  2.70937e-27  9.64832e-27  2.05019e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.854, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         4.14383e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.513904, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31311, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            432.225      54.4807       12.073      16.2064      1.60394      211.436      14.4571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048431, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004399, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052916, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.14462e-13  1.54472e-23  2.43416e-24
      low eigenvalue method done, cpu time[sec] = 0.053166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.54e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.87764e-24  4.55271e-25  1.33622e-26  7.44626e-26  2.42579e-27  9.28604e-27   2.0625e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         6.21575e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.30803, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             288.15      36.3205      8.04868      10.8043      1.06929      140.957      9.63805
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0044, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052908, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.55993e-12  1.16702e-23  1.67343e-24
      low eigenvalue method done, cpu time[sec] = 0.053158, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.68e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.31379e-24  2.93589e-25  8.87394e-27  4.67563e-26  1.56837e-27  7.83205e-27  2.07531e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85216, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         8.28766e+09
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514938, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.3129, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            216.112      27.2404      6.03651       8.1032     0.801969      105.718      7.22854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048464, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004375, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.95437e-12  9.48602e-24  1.26214e-24
      low eigenvalue method done, cpu time[sec] = 0.053177, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.49e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.00186e-24  2.11725e-25  6.55315e-27  3.32361e-26  1.13785e-27  6.77702e-27  2.11198e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.03596e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514128, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31976, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             172.89      21.7923      4.82921      6.48256     0.641575      84.5744      5.78283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048448, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004373, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052906, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.64289e-12  8.03964e-24  1.00457e-24
      low eigenvalue method done, cpu time[sec] = 0.053166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.04e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.03729e-25   1.6288e-25  5.14156e-27    2.534e-26   8.8118e-28  5.97516e-27   2.1419e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86453, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.24315e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.515, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            144.075      18.1602      4.02434      5.40213     0.534646      70.4787      4.81903
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048419, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004378, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052883, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16501e-12  7.00205e-24  8.28469e-25
      low eigenvalue method done, cpu time[sec] = 0.053139, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     7e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.66709e-25  1.30706e-25  4.19549e-27  2.02147e-26  7.11795e-28  5.33928e-27  2.14497e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85899, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.45034e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.514006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.29279, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            123.493      15.5659      3.44943       4.6304     0.458268      60.4103      4.13059
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0484, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00439, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.052884, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11372e-13  6.21701e-24  7.00785e-25
      low eigenvalue method done, cpu time[sec] = 0.053143, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.22e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.66592e-25  1.08051e-25  3.51962e-27  1.66405e-26  5.92167e-28  4.82776e-27  2.16923e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.83892, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.65753e+10
      global relaxation matrix dimension = 504
      setting global matrices ... done, cpu time[sec] = 0.516151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33946, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            108.056      13.6202      3.01826       4.0516     0.400984       52.859      3.61427
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048395, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004379, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12517e-11  5.59996e-24    6.042e-25
      low eigenvalue method done, cpu time[sec] = 0.053115, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.6e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-25  4.44e-16         1
         *Z       ---       ---  1.18e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.90364e-25  9.13641e-26  3.01465e-27   1.4027e-26  5.03684e-28  4.40149e-27  2.18207e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.88533, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 23067 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008263
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.383959
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.347833
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.295763
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.9612
         W1 Well: minimal relaxation eigenvalue = 0.0226836
         W1 Well: maximal relaxation eigenvalue = 1.32053
         W1 Well:       grid size = 497
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 210
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 186 1/cm
         B3 Barrier:        grid size = 252
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4653 1/cm
         B4 Barrier:        grid size = 266
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6193 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 420
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23133 1/cm
         B6 Barrier:        grid size = 197
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1396 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.28657, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23133 4.77e+05 2.35e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 1.46e+14
         B2    187 1.87e+13
         B3  -4653 4.16e+12
         B4  -6193 5.57e+12
         B5 -23133 5.54e+11
         B6   1397 7.27e+13
         B7   4697 5.06e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.25e+07   4.1e+07  1.38e+04       422  5.22e-15  1.11e+10  2.88e+13
          R  4.44e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  2.44e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2  7.25e-05  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3   0.00237  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  1.92e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  9.05e-11   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  3.47e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e+04  2.05e+04      6.91     0.211  2.62e-18  5.54e+06  1.45e+10
          R  8.85e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  4.87e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2     0.145  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3      4.73  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  3.82e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5   1.8e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  6.92e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
   MasterEquation::set:  done, cpu time[sec] = 3.29818, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+08
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.21891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4557.36      580.799       129.58      173.329      17.2322      2263.26      157.429
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07048, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004227, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.092035, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.68084e-11  1.70691e-22  3.73223e-23
      low eigenvalue method done, cpu time[sec] = 0.093695, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.71e-22 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.87e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.48574e-23  9.76955e-24   2.8568e-25  2.29234e-24   6.3142e-26  3.92842e-26  6.73278e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.74286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27379, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1519.12        193.6      43.1933      57.7763      5.74406      754.418      52.4763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004193, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050894, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.85834e-11  9.46299e-23  1.86518e-23
      low eigenvalue method done, cpu time[sec] = 0.051147, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.46e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.34927e-23  4.19084e-24  1.17615e-25  7.82188e-25  2.33763e-26  3.75129e-26  6.76308e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75094, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.04724e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502458, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27205, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            911.472       116.16       25.916      34.6658      3.44644      452.651      31.4858
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046676, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0042, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05096, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.16908e-11  6.99738e-23  1.27947e-23
      low eigenvalue method done, cpu time[sec] = 0.051212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     7e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  9.54779e-24  2.65524e-24  7.53636e-26  4.62458e-25  1.43578e-26  3.44878e-26  6.81212e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75561, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         2.86613e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.50172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27511, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            651.052      82.9713      18.5114      24.7613      2.46174      323.322      22.4898
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0467, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050978, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.93685e-12   5.6725e-23   9.7782e-24
      low eigenvalue method done, cpu time[sec] = 0.051233, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.67e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.42998e-24  1.92345e-24  5.54277e-26  3.23337e-25  1.02921e-26  3.17194e-26  6.84153e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75308, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         3.68503e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501413, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2856, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            506.373      64.5333      14.3978      19.2588      1.91469      251.473      17.4921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046709, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.26431e-11  4.82039e-23  7.91072e-24
      low eigenvalue method done, cpu time[sec] = 0.051241, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.08584e-24  1.49477e-24  4.37106e-26  2.45814e-25   7.9707e-27  2.93295e-26  6.87025e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76662, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         4.09448e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.500931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27945, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            455.736      58.0799       12.958      17.3329      1.72322      226.326      15.7429
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050953, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.00053e-13  4.49543e-23  7.21727e-24
      low eigenvalue method done, cpu time[sec] = 0.051208, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.5e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.02e-24 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16     5.58e-24  1.34104e-24  3.94865e-26  2.18743e-25  7.14786e-27  2.82651e-26  6.90288e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75986, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         6.14171e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27903, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            303.824        38.72      8.63865      11.5553      1.14881      150.884      10.4953
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046654, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.47028e-11  3.40704e-23  4.98848e-24
      low eigenvalue method done, cpu time[sec] = 0.051176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.41e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.73e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.92447e-24   8.6909e-25  2.63702e-26  1.38094e-25  4.64726e-27  2.39353e-26  7.00918e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76158, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         8.18895e+09
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501368, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28002, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            227.868        29.04      6.47899      8.66645     0.861609      113.163      7.87145
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004196, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050926, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.04214e-12  2.77549e-23  3.77743e-24
      low eigenvalue method done, cpu time[sec] = 0.05118, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.3e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.00463e-24  6.29145e-25  1.95574e-26  9.85673e-26  3.38604e-27  2.07838e-26  7.08679e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.75809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.02362e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.2793, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            182.294       23.232      5.18319      6.93316     0.689287      90.5302      6.29716
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00419, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050945, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.76556e-12  2.35625e-23  3.01609e-24
      low eigenvalue method done, cpu time[sec] = 0.051197, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.36e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.34e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.41781e-24  4.85394e-25  1.53949e-26   7.5385e-26  2.63079e-27  1.83764e-26  7.17451e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.22834e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502069, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.27958, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            151.912        19.36      4.31933      5.77763     0.574406      75.4418      5.24763
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046644, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.45236e-12  2.05492e-23  2.49396e-24
      low eigenvalue method done, cpu time[sec] = 0.051176, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.05e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.01112e-24  3.90459e-25  1.25977e-26  6.02912e-26  2.13093e-27  1.64698e-26   7.2408e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76276, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.43307e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.502475, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28047, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             130.21      16.5943      3.70228      4.95226     0.492348      64.6644      4.49797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046683, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004193, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050959, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.67452e-14  1.82657e-23  2.11438e-24
      low eigenvalue method done, cpu time[sec] = 0.051211, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.14e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.71331e-24  3.23592e-25  1.05964e-26  4.97616e-26  1.77754e-27  1.49184e-26  7.29657e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76016, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.63779e+10
      global relaxation matrix dimension = 497
      setting global matrices ... done, cpu time[sec] = 0.501055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28406, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            113.934        14.52      3.23949      4.33323     0.430804      56.5814      3.93572
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.046673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050942, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.66719e-12  1.64685e-23   1.8266e-24
      low eigenvalue method done, cpu time[sec] = 0.051194, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-25 -4.44e-16         1
         *Z       ---       ---  6.52e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.48592e-24  2.74156e-25  9.09644e-27  4.20365e-26  1.51532e-27  1.36316e-26  7.37273e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.76026, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 23345 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008798
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.37323
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.339515
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.309181
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.84218
         W1 Well: minimal relaxation eigenvalue = 0.0224527
         W1 Well: maximal relaxation eigenvalue = 1.9764
         W1 Well:       grid size = 491
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31647 1/cm
         B1 Barrier:        grid size = 209
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4655 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 415
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1392 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.16942, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31647 -23135 4.77e+05 2.48e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 1.61e+14
         B2    161 2.07e+13
         B3  -4655 4.64e+12
         B4  -6223 6.19e+12
         B5 -23135 6.18e+11
         B6   1393 8.09e+13
         B7   4641 5.72e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.73e+06   1.4e+07   5.5e+03       177  3.98e-15  3.61e+09  8.55e+12
          R  1.29e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  7.14e-08     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2  0.000182   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3   0.00563  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  2.51e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  2.77e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  1.17e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.94e+03  7.15e+03      2.81    0.0906  2.03e-18  1.84e+06  4.36e+09
          R  0.000254         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1   0.00014     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2     0.356   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3        11  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  4.92e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  5.42e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  2.29e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
   MasterEquation::set:  done, cpu time[sec] = 3.18063, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+08
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489216, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.02563, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4801.23      618.621      138.939      185.204       18.495      2419.98      171.186
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.20022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00411, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.253837, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.08855e-10  4.72012e-22  1.04468e-22
      low eigenvalue method done, cpu time[sec] = 0.255034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.72e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-23 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  6.97898e-23  2.72305e-23  7.95427e-25    6.352e-24  1.75308e-25  1.14231e-25  2.18193e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.67663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489141, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.14397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1600.41      206.207      46.3131      61.7347        6.165      806.661       57.062
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0041, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049623, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57571e-10  2.64016e-22  5.27592e-23
      low eigenvalue method done, cpu time[sec] = 0.049863, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.93e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  3.82638e-23  1.17924e-23  3.31275e-25  2.19166e-24   6.5658e-26  1.09431e-25   2.2189e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.58674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          2.0233e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.48843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16865, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            960.247      123.724      27.7879      37.0408        3.699      483.996      34.2372
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045176, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049662, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.17759e-12  1.96013e-22  3.63943e-23
      low eigenvalue method done, cpu time[sec] = 0.049906, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.4e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  2.72219e-23  7.50987e-24  2.13548e-25  1.30335e-24  4.05713e-26  1.00896e-25  2.21533e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         2.83262e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488947, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            685.891      88.3744      19.8485      26.4577      2.64214      345.712      24.4552
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004093, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049594, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.07227e-12  1.59318e-22  2.79234e-23
      low eigenvalue method done, cpu time[sec] = 0.049838, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.58e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  2.12659e-23  5.46009e-24  1.57724e-25   9.1496e-25  2.92057e-26  9.30361e-26  2.22638e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60585, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         3.64194e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.487906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.16792, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             533.47      68.7356      15.4377      20.5782        2.055      268.887      19.0207
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045139, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004097, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049637, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.03378e-11   1.3565e-22  2.26598e-23
      low eigenvalue method done, cpu time[sec] = 0.049882, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.05e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.74708e-23  4.25534e-24  1.24789e-25  6.97781e-25  2.26923e-26  8.62093e-26  2.23516e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.60913, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          4.0466e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489833, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17059, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            480.123      61.8621      13.8939      18.5204       1.8495      241.998      17.1186
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045187, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004102, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06946e-11  1.26608e-22  2.07007e-23
      low eigenvalue method done, cpu time[sec] = 0.049927, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-22 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.60382e-23  3.82211e-24   1.1288e-25  6.21729e-25  2.03767e-26   8.3162e-26  2.24685e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61664, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1          6.0699e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.490695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            320.082      41.2414      9.26263      12.3469        1.233      161.332      11.4124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004095, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049641, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.2684e-11   9.6253e-23  1.43832e-23
      low eigenvalue method done, cpu time[sec] = 0.04989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.63e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  1.13381e-23   2.4891e-24  7.58045e-26  3.94595e-25  1.33218e-26  7.07163e-26  2.27644e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61055, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         8.09321e+09
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17095, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            240.062       30.931      6.94697      9.26021      0.92475      120.999      8.55931
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004094, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049645, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.94105e-14  7.85807e-23  1.09337e-23
      low eigenvalue method done, cpu time[sec] = 0.049898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.86e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  8.71391e-24  1.80846e-24  5.64516e-26  2.82753e-25  9.74607e-27  6.16074e-26  2.30002e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.01165e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.487712, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17692, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            192.049      24.7448      5.55758      7.40817       0.7398      96.7993      6.84745
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045084, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049564, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.08103e-11  6.68211e-23   8.7571e-24
      low eigenvalue method done, cpu time[sec] = 0.049811, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.68e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  7.03319e-24  1.39929e-24  4.45824e-26  2.16944e-25  7.59719e-27  5.46184e-26  2.33014e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62156, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.21398e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489644, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.29529, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            160.041      20.6207      4.63131      6.17347       0.6165      80.6661       5.7062
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045296, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004084, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049779, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.94643e-12  5.83529e-23  7.25984e-24
      low eigenvalue method done, cpu time[sec] = 0.050021, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  5.86475e-24  1.12828e-24  3.65792e-26  1.73946e-25     6.17e-27   4.9063e-26  2.35117e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.73792, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.41631e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.488695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.17776, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.178      17.6749       3.9697      5.29155     0.528429      69.1423      4.89103
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045152, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049636, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.37769e-12  5.19259e-23  6.16857e-24
      low eigenvalue method done, cpu time[sec] = 0.049882, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.19e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  5.00678e-24    9.369e-25  3.08376e-26  1.43876e-25  5.15837e-27  4.45357e-26  2.37829e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.61718, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.61864e+10
      global relaxation matrix dimension = 491
      setting global matrices ... done, cpu time[sec] = 0.489732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.1875, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            120.031      15.4655      3.47349      4.63011     0.462375      60.4995      4.27965
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045115, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049607, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.10731e-12  4.68609e-23  5.33937e-24
      low eigenvalue method done, cpu time[sec] = 0.049862, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.69e-23 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-24 -8.88e-16         1
         *Z       ---       ---  3.67e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  4.35013e-24  7.95148e-25   2.6524e-26  1.21766e-25  4.40592e-27  4.07609e-26  2.40109e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62957, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 23623 1/cm
      Energy step      = 113 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008237
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.393801
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.336299
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.29878
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.78772
         W1 Well: minimal relaxation eigenvalue = 0.0222258
         W1 Well: maximal relaxation eigenvalue = 1.55496
         W1 Well:       grid size = 489
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31634 1/cm
         B1 Barrier:        grid size = 209
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 6 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 250
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23159 1/cm => truncating
         B5 Barrier:        grid size = 414
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23159 1/cm
         B6 Barrier:        grid size = 196
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1474 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4638 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.12012, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31634 -23159 4.68e+05 2.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      7 1.76e+14
         B2    119 2.29e+13
         B3  -4627 5.18e+12
         B4  -6208 6.88e+12
         B5 -23159  6.9e+11
         B6   1475 8.99e+13
         B7   4639 6.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.77e+06     5e+06  2.28e+03      77.5   3.1e-15  1.23e+09  2.66e+12
          R  3.61e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1     2e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2  0.000438  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3    0.0129  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  3.22e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5   8.1e-10   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  3.76e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.42e+03  2.56e+03      1.17    0.0398  1.59e-18  6.34e+05  1.36e+09
          R  0.000704         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1   0.00039     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2     0.853  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3      25.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  6.28e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  1.58e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  7.33e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
   MasterEquation::set:  done, cpu time[sec] = 3.13104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+08
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484804, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.8801, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5054.01      658.344       148.83      197.713      19.8308       2584.8      185.887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.291468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004105, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.344341, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.5285e-10  1.26312e-21  2.82625e-22
      low eigenvalue method done, cpu time[sec] = 0.345551, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.81e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.89854e-22  7.36154e-23  2.14646e-24    1.706e-23   4.7175e-25  3.20638e-25  6.92905e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.6092, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.507233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08466, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1684.67      219.448      49.6101      65.9043      6.61027      861.601      61.9625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044699, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.65861e-10  7.12566e-22  1.44179e-22
      low eigenvalue method done, cpu time[sec] = 0.049417, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.13e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.05105e-22  3.21624e-23  9.03976e-25  5.95001e-24  1.78677e-25  3.08465e-25  6.93351e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.53628, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         2.00007e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.09158, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1010.8      131.669      29.7661      39.5426      3.96616       516.96      37.1775
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044754, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004055, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.60137e-11  5.31088e-22  9.99935e-23
      low eigenvalue method done, cpu time[sec] = 0.049445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.31e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-23         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.51697e-23  2.05832e-23  5.86163e-25  3.55847e-24   1.1106e-25  2.85399e-25  6.97777e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51974, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1          2.8001e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485664, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08737, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            722.002      94.0491      21.2615      28.2447      2.83297      369.257      26.5553
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04468, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004053, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.83331e-11  4.32763e-22   7.7011e-23
      low eigenvalue method done, cpu time[sec] = 0.049377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.33e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.62e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.89391e-23  1.50165e-23  4.34687e-25  2.50781e-24  8.02717e-26  2.63877e-25  6.99993e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51707, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         3.60013e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.487676, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.085, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            561.557      73.1493      16.5367      21.9681      2.20342        287.2      20.6542
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044749, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004071, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049216, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.54753e-13  3.69168e-22  6.26796e-23
      low eigenvalue method done, cpu time[sec] = 0.049463, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.69e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.21e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.85624e-23  1.17353e-23  3.45018e-25  1.91843e-24   6.2569e-26  2.45084e-25  7.03843e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62457, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         4.00014e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.47855, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            505.401      65.8344       14.883      19.7713      1.98308       258.48      18.5887
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004076, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049286, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.10871e-12  3.44834e-22  5.73335e-23
      low eigenvalue method done, cpu time[sec] = 0.049532, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.66e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.46337e-23  1.05524e-23  3.12498e-25  1.71147e-24  5.62575e-26  2.36622e-25  7.04189e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.49296, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         6.00022e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            336.934      43.8896      9.92202      13.1809      1.32205       172.32      12.3925
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044768, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004113, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049281, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.63154e-11  2.62949e-22  4.00391e-23
      low eigenvalue method done, cpu time[sec] = 0.049526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.84e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.17123e-23  6.90488e-24  2.11007e-25  1.09195e-24  3.69809e-26  2.02079e-25  7.13402e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         8.00029e+09
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485299, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            252.701      32.9172      7.44152      9.88564     0.991541       129.24      9.29437
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044771, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004072, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049255, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.00301e-12  2.15124e-22  3.05514e-23
      low eigenvalue method done, cpu time[sec] = 0.049502, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.78e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.44617e-23  5.03421e-24  1.57762e-25   7.8546e-25  2.71625e-26  1.76617e-25  7.22204e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5116, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.00004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486686, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08141, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            202.161      26.3338      5.95321      7.90851     0.793233      103.392       7.4355
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04476, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004061, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049224, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.03484e-12  1.83226e-22  2.45431e-23
      low eigenvalue method done, cpu time[sec] = 0.049479, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.07e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.98022e-23   3.9061e-24  1.24987e-25  6.04466e-25  2.12403e-26     1.57e-25  7.31034e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.20004e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.484659, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.07836, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            168.467      21.9448      4.96101      6.59043     0.661027      86.1601      6.19625
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044704, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004104, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049198, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.72138e-12  1.60214e-22   2.0398e-23
      low eigenvalue method done, cpu time[sec] = 0.049444, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.56e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.65545e-23  3.15725e-24  1.02832e-25  4.85947e-25  1.72975e-26   1.4137e-25  7.38721e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.50982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.40005e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.485047, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.09399, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              144.4      18.8098      4.25229      5.64894     0.566595      73.8515      5.31107
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044779, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004038, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049219, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.98269e-12  1.42722e-22  1.73693e-23
      low eigenvalue method done, cpu time[sec] = 0.049467, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.41619e-23  2.62677e-24  8.68827e-26  4.02794e-25  1.44934e-26  1.28579e-25  7.45601e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.52435, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.60006e+10
      global relaxation matrix dimension = 489
      setting global matrices ... done, cpu time[sec] = 0.486322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08226, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             126.35      16.4586      3.72076      4.94282      0.49577      64.6201      4.64718
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.044703, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004065, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049159, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.64259e-12   1.2892e-22   1.5063e-23
      low eigenvalue method done, cpu time[sec] = 0.049415, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-24         0         1
         *Z       ---       ---  2.12e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.23285e-23  2.23345e-24  7.48844e-26  3.41568e-25  1.24047e-26  1.17902e-25  7.52732e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.51487, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 23901 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008844
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.365201
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.328809
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.302027
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.72903
         W1 Well: minimal relaxation eigenvalue = 0.022013
         W1 Well: maximal relaxation eigenvalue = 1.72772
         W1 Well:       grid size = 483
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 208
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 206
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 211 1/cm
         B3 Barrier:        grid size = 248
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4618 1/cm
         B4 Barrier:        grid size = 262
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6228 1/cm
         B5 Barrier: nonpositive number of states at -23249 1/cm => truncating
         B5 Barrier:        grid size = 410
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23248 1/cm
         B6 Barrier:        grid size = 195
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4696 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.02587, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23248 4.39e+05 2.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 1.92e+14
         B2    212 2.53e+13
         B3  -4618 5.76e+12
         B4  -6228 7.63e+12
         B5 -23248 7.69e+11
         B6   1477 9.98e+13
         B7   4697 7.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.01e+06  1.82e+06       960      34.3   2.4e-15   4.3e+08  8.45e+11
          R   9.9e-07         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1  5.51e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2   0.00104  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3    0.0292  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  4.16e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  2.32e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  1.18e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       527       948     0.501    0.0179  1.26e-18  2.25e+05  4.41e+08
          R    0.0019         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1   0.00105     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2      1.99  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3      55.8  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  7.96e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  4.45e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  2.27e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
   MasterEquation::set:  done, cpu time[sec] = 3.03617, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+08
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.472097, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.51309, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5315.93       700.03      159.274      210.879      21.2427      2757.98      201.579
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.551177, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.602924, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28827e-10  3.28805e-21  7.44012e-22
      low eigenvalue method done, cpu time[sec] = 0.604093, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.24e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.01317e-22  1.93046e-22  5.62356e-24  4.44916e-23  1.23262e-24  8.75967e-25  2.09134e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.5084, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.473015, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1771.98      233.343      53.0913      70.2929      7.08089      919.327       67.193
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043199, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003927, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047515, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34141e-11  1.87051e-21  3.83361e-22
      low eigenvalue method done, cpu time[sec] = 0.04775, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.8019e-22  8.51059e-23  2.39452e-24  1.56828e-23  4.72043e-25   8.4499e-25  2.10481e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.97752e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.472443, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1063.19      140.006      31.8548      42.1758      4.24853      551.596      40.3158
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043284, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047595, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37251e-12  1.39948e-21  2.67292e-22
      low eigenvalue method done, cpu time[sec] = 0.047833, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.01415e-22  5.47306e-23  1.56154e-24  9.43087e-24  2.95086e-25  7.83917e-25  2.11454e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43062, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         2.76852e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.4734, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05098, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            759.418      100.004      22.7534      30.1255      3.03467      393.997       28.797
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.0432, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003931, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.48898e-11  1.14326e-21   2.0663e-22
      low eigenvalue method done, cpu time[sec] = 0.047764, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.14e-21         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.52e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.58502e-22  4.00683e-23  1.16268e-24  6.67215e-24  2.14142e-25  7.26499e-25  2.12581e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.55953e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04744, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            590.659      77.7811      17.6971       23.431       2.3603      306.442      22.3977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043299, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.26879e-11  9.77088e-22  1.68669e-22
      low eigenvalue method done, cpu time[sec] = 0.047848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.77e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.15e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.30967e-22  3.13978e-23  9.25703e-25  5.11939e-24  1.67436e-25  6.76087e-25  2.13403e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43803, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         3.95503e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.471096, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            531.593       70.003      15.9274      21.0879      2.12427      275.798      20.1579
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043291, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003924, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.8109e-11  9.13397e-22  1.54477e-22
      low eigenvalue method done, cpu time[sec] = 0.047843, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.13e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.20529e-22  2.82682e-23  8.39637e-25  4.57332e-24  1.50759e-25  6.53437e-25  2.14245e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         5.93255e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.47227, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.04821, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            354.395      46.6687      10.6183      14.0586      1.41618      183.865      13.4386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003927, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047583, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.14971e-12   6.9859e-22  1.08421e-22
      low eigenvalue method done, cpu time[sec] = 0.047819, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.99e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   8.6053e-23  1.85829e-23  5.69944e-25  2.93268e-24  9.96247e-26  5.60208e-25   2.1685e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.43827, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         7.91007e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.472881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05524, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            265.796      35.0015       7.9637      10.5439      1.06213      137.899      10.0789
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043293, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003929, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047611, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.37108e-12  5.72734e-22  8.30371e-23
      low eigenvalue method done, cpu time[sec] = 0.04785, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.73e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.66185e-23  1.35955e-23  4.27798e-25  2.11754e-24  7.34622e-26   4.9112e-25  2.19448e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         9.88758e+09
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.472476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0703, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            212.637      28.0012      6.37096      8.43515     0.849707      110.319      8.06316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043285, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.33409e-11  4.88596e-22  6.69049e-23
      low eigenvalue method done, cpu time[sec] = 0.047848, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.89e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-23         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.40882e-23  1.05788e-23      3.4e-25  1.63456e-24  5.76273e-26  4.37714e-25  2.22012e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.45732, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.18651e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.46648, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.43547, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.198      23.3343      5.30913      7.02929     0.708089      91.9327       6.7193
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003929, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.09247e-11  4.27787e-22   5.5743e-23
      low eigenvalue method done, cpu time[sec] = 0.047981, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.28e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.42e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.53268e-23  8.57032e-24  2.80457e-25  1.31732e-24  4.70513e-26  3.95013e-25  2.24439e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.82094, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.38426e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.474642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06682, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            151.884      20.0009      4.55069      6.02511     0.606933      78.7994       5.7594
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043403, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003925, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047716, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.15935e-12  3.81497e-22  4.75675e-23
      low eigenvalue method done, cpu time[sec] = 0.047962, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.81e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.4e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.88583e-23  7.14499e-24  2.37502e-25  1.09431e-24  3.95137e-26  3.59983e-25  2.26661e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.46297, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.58201e+10
      global relaxation matrix dimension = 483
      setting global matrices ... done, cpu time[sec] = 0.472061, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.05544, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            132.898      17.5007      3.98185      5.27197     0.531067      68.9495      5.03947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.043238, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003943, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.047563, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.93479e-12  3.44923e-22  4.13287e-23
      low eigenvalue method done, cpu time[sec] = 0.047804, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.45e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.59e-24         0         1
         *Z       ---       ---  1.23e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.38882e-23  6.08541e-24  2.05094e-25  9.29667e-25  3.38838e-26  3.30638e-25  2.28503e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44327, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 24179 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008862
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.380494
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.321082
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.287313
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.72547
         W1 Well: minimal relaxation eigenvalue = 0.0217984
         W1 Well: maximal relaxation eigenvalue = 1.46889
         W1 Well:       grid size = 477
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 207
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -39 1/cm
         B2 Barrier:        grid size = 205
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 194 1/cm
         B3 Barrier:        grid size = 246
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4602 1/cm
         B4 Barrier:        grid size = 260
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23323 1/cm => truncating
         B5 Barrier:        grid size = 406
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23323 1/cm
         B6 Barrier:        grid size = 194
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4640 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.01661, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23323 4.16e+05 2.88e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -39  2.1e+14
         B2    195  2.8e+13
         B3  -4602 6.41e+12
         B4  -6241 8.46e+12
         B5 -23323 8.56e+11
         B6   1482 1.11e+14
         B7   4641 8.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.79e+05  6.79e+05       413      15.5  1.88e-15  1.54e+08  2.77e+11
          R  2.64e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1  1.47e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2   0.00242       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3    0.0644  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  5.33e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  6.48e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  3.61e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       201       361      0.22   0.00825  9.97e-19   8.2e+04  1.47e+08
          R   0.00497         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1   0.00277     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2      4.55       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3       121  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4     1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  1.22e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  6.79e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
   MasterEquation::set:  done, cpu time[sec] = 3.02723, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+08
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.445311, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.46925, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5587.04      743.744      170.293      224.726      22.7337      2939.78      218.309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.583876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003875, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.634219, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7646e-10  8.33073e-21  1.90476e-21
      low eigenvalue method done, cpu time[sec] = 0.635371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.33e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-22  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.28635e-21  4.91805e-22  1.43193e-23  1.12779e-22  3.13032e-24  2.32562e-24  6.15076e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.40078, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.84362, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1862.35      247.915      56.7642      74.9087       7.5779      979.928      72.7695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.158554, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003852, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.209385, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42011e-11  4.77815e-21  9.91094e-22
      low eigenvalue method done, cpu time[sec] = 0.210569, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.78e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-22  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.25634e-22   2.1876e-22  6.16284e-24   4.0167e-23  1.21177e-24  2.24853e-24  6.18157e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.42674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.95561e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462394, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.99605, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1117.41      148.749      34.0585      44.9452      4.54674      587.957      43.6617
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041954, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003826, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.22294e-11   3.5884e-21  6.94627e-22
      low eigenvalue method done, cpu time[sec] = 0.046403, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.59e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.82e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.24249e-22  1.41364e-22  4.04165e-24   2.4286e-23   7.6179e-25  2.09122e-24  6.20794e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.35318, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         2.73785e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.461829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.99954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            798.148      106.249      24.3275      32.1037      3.24767      419.969      31.1869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041872, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003821, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046074, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.08914e-11  2.93867e-21  5.38951e-22
      low eigenvalue method done, cpu time[sec] = 0.046312, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.94e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.41e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   4.1402e-22  1.03846e-22  3.02111e-24  1.72469e-23  5.55001e-25  1.94228e-24   6.2418e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.35531, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.52009e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.464131, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.99736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            620.782      82.6383      18.9214      24.9696      2.52597      326.643      24.2565
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041844, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003822, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046046, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.93496e-11  2.51617e-21  4.41197e-22
      low eigenvalue method done, cpu time[sec] = 0.046279, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.48e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.43048e-22  8.15926e-23   2.4127e-24   1.3272e-23  4.35276e-25  1.81108e-24  6.27445e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.19348, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         3.91121e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.19394, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            558.704      74.3744      17.0293      22.4726      2.27337      293.978      21.8309
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041928, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003819, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04613, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.64026e-11  2.35397e-21  4.04571e-22
      low eigenvalue method done, cpu time[sec] = 0.046369, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.35e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.16079e-22  7.35434e-23  2.19121e-24  1.18712e-23   3.9243e-25  1.75185e-24  6.29132e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.55286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         5.86682e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            372.469       49.583      11.3528      14.9817      1.51558      195.986      14.5539
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041855, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003838, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046069, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.86246e-11  1.80571e-21  2.85346e-22
      low eigenvalue method done, cpu time[sec] = 0.046313, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.94e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.26752e-22  4.85694e-23  1.49517e-24  7.65093e-24  2.60683e-25  1.50753e-24  6.36553e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.36393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         7.82242e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            279.352      37.1872      8.51463      11.2363      1.13668      146.989      10.9154
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046194, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.36336e-11  1.48347e-21  2.19335e-22
      low eigenvalue method done, cpu time[sec] = 0.046432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.23e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.76174e-22  3.56569e-23  1.12663e-24  5.54497e-24  1.92971e-25  1.32566e-24  6.44625e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.22248, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         9.77803e+09
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462123, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.01028, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            223.481      29.7498       6.8117      8.98905     0.909348      117.591      8.73234
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041982, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003836, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046196, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80543e-11  1.26756e-21  1.77238e-22
      low eigenvalue method done, cpu time[sec] = 0.046436, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.27e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.76e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.43445e-22  2.78208e-23  8.98165e-25  4.29292e-24  1.51841e-25  1.18444e-24  6.52123e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.36709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.17336e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.463138, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00112, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.235      24.7915      5.67642      7.49087      0.75779      97.9928      7.27695
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041882, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00382, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046077, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.14642e-12  1.11123e-21  1.48027e-22
      low eigenvalue method done, cpu time[sec] = 0.046317, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.20491e-22  2.25898e-23   7.4275e-25  3.46819e-24  1.24289e-25  1.07114e-24   6.5885e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.35343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.36892e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.461464, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.0057, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             159.63      21.2498       4.8655      6.42075     0.649534      83.9938      6.23739
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041918, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003806, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046105, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.90795e-14  9.92053e-22  1.26581e-22
      low eigenvalue method done, cpu time[sec] = 0.046359, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.92e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.16e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.03505e-22  1.88695e-23  6.30356e-25  2.88708e-24  1.04604e-25  9.77955e-25  6.65268e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.22681, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.56448e+10
      global relaxation matrix dimension = 477
      setting global matrices ... done, cpu time[sec] = 0.462577, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.00073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            139.676      18.5936      4.25732      5.61816     0.568342      73.4946      5.45771
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041972, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003822, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046178, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.49677e-12  8.97772e-22  1.10181e-22
      low eigenvalue method done, cpu time[sec] = 0.046418, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.98e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.96e-23  4.44e-16         1
         *Z       ---       ---   7.3e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.04336e-23  1.60999e-23  5.45428e-25  2.45742e-24   8.9879e-26  8.99834e-25  6.70924e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.35925, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 26959 1/cm
      Energy step      = 133 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009341
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.30757
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.272769
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.22924
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.41238
         W1 Well: minimal relaxation eigenvalue = 0.0199642
         W1 Well: maximal relaxation eigenvalue = 4.03054
         W1 Well:       grid size = 441
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31694 1/cm
         B1 Barrier:        grid size = 203
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 92 1/cm
         B3 Barrier:        grid size = 238
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4695 1/cm
         B4 Barrier:        grid size = 250
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23315 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23315 1/cm
         B6 Barrier:        grid size = 192
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1422 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4614 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.51956, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31694 -23315 4.18e+05 4.73e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 4.93e+14
         B2     93 7.29e+13
         B3  -4695 1.77e+13
         B4  -6291 2.27e+13
         B5 -23315 2.38e+12
         B6   1423 2.95e+14
         B7   4615 2.53e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1      81.8       143     0.293    0.0168  2.25e-16  2.24e+04  1.87e+07
          R    0.0122         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1   0.00699     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2      3.41       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3      59.4  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  4.45e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5  4.47e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  5.34e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0498     0.087  0.000178  1.02e-05  1.37e-19      13.6  1.14e+04
          R      20.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1      11.5     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2  5.61e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3  9.77e+04  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  7.32e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5    0.0735   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  8.79e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
   MasterEquation::set:  done, cpu time[sec] = 2.5298, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+08
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.39549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.11628, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8839.61      1308.03      317.312      406.357      42.7355      5292.23      454.047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.55704, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56815, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.01411e-10  2.44316e-17  6.07005e-18
      low eigenvalue method done, cpu time[sec] = 1.56932, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-17  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.88e-19  6.66e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  4.16344e-18  1.49394e-18  4.33276e-20  3.27597e-19  9.25049e-21  1.01345e-20   6.6355e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.81424, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.43356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2946.54      436.011      105.771      135.452      14.2452      1764.08      151.349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.21493, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22609, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.45732e-10  1.50363e-17  3.43876e-18
      low eigenvalue method done, cpu time[sec] = 1.22724, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     3e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.54581e-18  7.17995e-19  2.04959e-20  1.27833e-19  3.93828e-21  1.00237e-20  6.66122e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78758, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.76639e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394304, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.61714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1767.92      261.607      63.4625      81.2714       8.5471      1058.45      90.8095
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05365, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003136, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06487, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.75117e-11   1.1672e-17  2.52236e-18
      low eigenvalue method done, cpu time[sec] = 1.06636, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.92169e-18   4.8403e-19  1.41246e-20  8.10894e-20  2.60229e-21  9.53564e-21  6.68839e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.81667, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         2.47295e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.394473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.74709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1262.8      186.862      45.3303       58.051      6.10507      756.033      64.8639
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.931916, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003158, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.943278, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.10795e-11  9.77146e-18  2.02105e-18
      low eigenvalue method done, cpu time[sec] = 0.944416, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.77e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.56567e-18  3.66454e-19  1.09315e-20  5.95585e-20  1.96325e-21  9.03117e-21   6.7168e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.81822, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.17951e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.39602, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.85836, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            982.178      145.337      35.2569      45.1508      4.74839      588.026      50.4497
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.846675, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003137, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.857932, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.52265e-11  8.50631e-18  1.69666e-18
      low eigenvalue method done, cpu time[sec] = 0.859038, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.51e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.32941e-18  2.94832e-19  8.96979e-21  4.70509e-20  1.58218e-21  8.56504e-21  6.74586e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85512, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         3.53278e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.399192, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.84975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            883.961      130.803      31.7312      40.6357      4.27355      529.223      45.4047
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.834108, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003148, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.84531, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.98452e-11  8.01361e-18  1.57278e-18
      low eigenvalue method done, cpu time[sec] = 0.846488, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.01e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.23791e-18  2.68481e-19  8.24177e-21  4.25622e-20   1.4432e-21   8.3491e-21  6.76066e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.83655, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         5.29918e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.398591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.82423, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            589.307      87.2022      21.1542      27.0905      2.84903      352.815      30.2698
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.851378, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00314, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.86261, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.39009e-11  6.31484e-18  1.15841e-18
      low eigenvalue method done, cpu time[sec] = 0.864142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.31e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.26e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.26403e-19  1.84733e-19  5.89058e-21  2.86914e-20  1.00432e-21   7.4245e-21  6.83563e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.82091, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         7.06557e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.06496, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             441.98      65.4017      15.8656      20.3178      2.13677      264.612      22.7024
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.621976, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.633262, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.91625e-11   5.2881e-18  9.19618e-19
      low eigenvalue method done, cpu time[sec] = 0.634371, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.29e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-19  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.42828e-19  1.39839e-19  4.59392e-21  2.14986e-20  7.69533e-22  6.70213e-21  6.90966e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.83435, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         8.83196e+09
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.396766, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.07853, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            353.584      52.3213      12.6925      16.2543      1.70942      211.689      18.1619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.600073, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003157, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.611458, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.48604e-11  4.58583e-18   7.6258e-19
      low eigenvalue method done, cpu time[sec] = 0.612683, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.59e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.16e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.20343e-19  1.11827e-19  3.76447e-21  1.70937e-20  6.22443e-22  6.12106e-21  6.98043e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.82862, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.05984e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.397895, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.20367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            294.654      43.6011      10.5771      13.5452      1.42452      176.408      15.1349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.492238, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.503571, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.01549e-11  4.06897e-18  6.50847e-19
      low eigenvalue method done, cpu time[sec] = 0.504705, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.07e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.12e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.32283e-19  9.26969e-20  3.18562e-21  1.41213e-20  5.21394e-22  5.64149e-21   7.0464e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.84432, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.23647e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.39789, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.05716, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             252.56      37.3724      9.06607      11.6102      1.22101      151.207      12.9728
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.617374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.628743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.28097e-13  3.66956e-18  5.67044e-19
      low eigenvalue method done, cpu time[sec] = 0.629997, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.33e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.65707e-19  7.88226e-20   2.7577e-21  1.19829e-20  4.47619e-22  5.23743e-21  7.10684e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.82453, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         1.41311e+10
      global relaxation matrix dimension = 441
      setting global matrices ... done, cpu time[sec] = 0.395034, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.3017, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             220.99      32.7008      7.93281      10.1589      1.06839      132.306      11.3512
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.35498, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003154, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.366172, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82986e-12  3.34991e-18  5.01757e-19
      low eigenvalue method done, cpu time[sec] = 0.3673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.35e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.69e-20  4.44e-16         1
         *Z       ---       ---  8.24e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   4.1351e-19  6.83153e-20  2.42804e-21  1.03728e-20   3.9137e-22   4.8913e-21  7.16133e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79721, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 29740 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008756
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.294455
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.235511
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.230146
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.11533
         W1 Well: minimal relaxation eigenvalue = 0.0184968
         W1 Well: maximal relaxation eigenvalue = 1.34157
         W1 Well:       grid size = 409
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31610 1/cm
         B1 Barrier:        grid size = 199
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -110 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 189 1/cm
         B3 Barrier:        grid size = 229
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6260 1/cm
         B5 Barrier: nonpositive number of states at -23211 1/cm => truncating
         B5 Barrier:        grid size = 353
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23211 1/cm
         B6 Barrier:        grid size = 189
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1389 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4688 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.17054, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31610 -23211 4.51e+05 7.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -110 1.08e+15
         B2    190 1.77e+14
         B3  -4611 4.52e+13
         B4  -6260 5.64e+13
         B5 -23211 6.13e+12
         B6   1390 7.24e+14
         B7   4689 7.02e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1     0.114     0.197   0.00103  8.19e-05  4.25e-17      22.5  1.04e+04
          R      8.76         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1      5.07     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2       975       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.22e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  2.35e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5    0.0445   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6  9.61e-05   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.84e-05  0.000135  7.04e-07  5.62e-08  2.92e-20    0.0154      7.14
          R  1.28e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1  7.39e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.42e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.78e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.42e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5      64.8   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6      0.14   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
   MasterEquation::set:  done, cpu time[sec] = 2.18072, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.341954, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.18012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              13171      2156.51      549.703      686.186       74.614       8812.1      854.868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.16684, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002763, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2045, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.69798e-10  1.12972e-14  2.98188e-15
      low eigenvalue method done, cpu time[sec] = 2.2056, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.13e-14  2.66e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.09e-16  2.66e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.66454e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.66454e-15  2.08116e-15  7.06302e-16  2.05217e-17  1.49861e-16    4.296e-18   6.5361e-18  8.77378e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.33732, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+08
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.330916, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.46463, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4390.33      718.838      183.234      228.729      24.8713      2937.37      284.956
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.8256, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86315, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.88235e-10  7.35027e-15  1.80782e-15
      low eigenvalue method done, cpu time[sec] = 1.86426, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.35e-15  1.78e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-16  1.78e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.77636e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.77636e-15  1.35646e-15   3.6137e-16  1.04791e-17  6.29708e-17   1.9757e-18  6.56006e-18   8.8045e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.26964, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.61852e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.33184, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.50844, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2634.2      431.303      109.941      137.237      14.9228      1762.42      170.974
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.77996, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002646, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81848, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.34076e-10   5.8616e-15  1.37541e-15
      low eigenvalue method done, cpu time[sec] = 1.81958, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.86e-15  1.33e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-16  1.33e-15         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.33227e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.33227e-15   1.0604e-15  2.52159e-16  7.51832e-18  4.15407e-17  1.35961e-18  6.34216e-18   8.8368e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.26593e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.330913, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.57396, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1881.57      308.073       78.529      98.0266      10.6591      1258.87      122.124
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75429, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.11513e-10  4.99758e-15    1.131e-15
      low eigenvalue method done, cpu time[sec] = 1.75538, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     5e-15  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.24e-17  6.66e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  8.85817e-16  1.95676e-16  5.98581e-18  3.13649e-17  1.05546e-18   6.0936e-18  8.87031e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.26265, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         2.91334e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.329417, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.72202, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1463.44      239.613      61.0781      76.2429      8.29044      979.122      94.9854
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.57458, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002661, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61192, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.04398e-12  4.41142e-15   9.6899e-16
      low eigenvalue method done, cpu time[sec] = 1.61303, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.41e-15  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.16e-17  8.88e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16   7.6711e-16  1.60527e-16  5.02138e-18  2.53186e-17  8.69763e-19  5.85297e-18  8.90469e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27614, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         3.23704e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.328452, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.74963, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1317.1      215.651      54.9703      68.6186       7.4614       881.21      85.4868
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.54869, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58619, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.54279e-11  4.18047e-15  9.06164e-16
      low eigenvalue method done, cpu time[sec] = 1.58726, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-15  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.73e-17  8.88e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16   7.2042e-16  1.47417e-16  4.65793e-18  2.31171e-17  8.01012e-19  5.73872e-18  8.92209e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27178, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         4.85556e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.331132, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.84634, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            878.066      143.768      36.6469      45.7457      4.97426      587.473      56.9912
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.44423, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002647, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48227, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.49707e-11  3.37096e-15  6.91342e-16
      low eigenvalue method done, cpu time[sec] = 1.48338, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.37e-15  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.24e-17  2.22e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.57908e-16  1.04929e-16  3.45801e-18  1.61729e-17  5.79182e-19  5.23288e-18   9.0099e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.26261, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         6.47408e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.328389, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.91392, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             658.55      107.826      27.4851      34.3093       3.7307      440.605      42.7434
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38437, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002665, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42177, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.84744e-11  2.87014e-15  5.63471e-16
      low eigenvalue method done, cpu time[sec] = 1.42286, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.87e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.31e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.58988e-16  8.14767e-17  2.77416e-18  1.24584e-17  4.56609e-19  4.82075e-18   9.0965e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.28017, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1          8.0926e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.342554, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.91468, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             526.84      86.2605      21.9881      27.4474      2.98456      352.484      34.1947
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.38058, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.99953e-11  2.52157e-15  4.77256e-16
      low eigenvalue method done, cpu time[sec] = 1.41874, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.52e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.91325e-16   6.6507e-17  2.32546e-18  1.01282e-17  3.77873e-19    4.479e-18  9.17946e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.2859, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         9.71112e+09
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.342732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.88816, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            439.033      71.8838      18.3234      22.8729      2.48713      293.737      28.4956
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.43274, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47046, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.03513e-11  2.26142e-15  4.14646e-16
      low eigenvalue method done, cpu time[sec] = 1.47156, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.26e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.18e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.41676e-16  5.60913e-17   2.0057e-18  8.52431e-18  3.22655e-19  4.19004e-18  9.25733e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.30568, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.13296e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.341497, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.95961, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            376.314      61.6147      15.7058      19.6053      2.13183      251.774      24.4248
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.34092, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37853, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.13849e-12  2.05802e-15  3.66862e-16
      low eigenvalue method done, cpu time[sec] = 1.37966, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.06e-15  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.81e-17  4.44e-16         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.03483e-16  4.84151e-17  1.76504e-18  7.35073e-18  2.81622e-19  3.94161e-18  9.32934e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.29488, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         1.29482e+10
      global relaxation matrix dimension = 409
      setting global matrices ... done, cpu time[sec] = 0.343093, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.86444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            329.275      53.9128      13.7426      17.1547      1.86535      220.302      21.3717
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.22901, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002662, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26644, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.31769e-11   1.8936e-15  3.29065e-16
      low eigenvalue method done, cpu time[sec] = 1.26756, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-15         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.5e-17         0         1
         *Z       ---       ---  2.62e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.73082e-16  4.25196e-17  1.57673e-18  6.45385e-18   2.4985e-19  3.72505e-18  9.39515e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.44749, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 32520 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008205
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.252497
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.210545
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.219157
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.96694
         W1 Well: minimal relaxation eigenvalue = 0.0172776
         W1 Well: maximal relaxation eigenvalue = 1.22198
         W1 Well:       grid size = 384
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31607 1/cm
         B1 Barrier:        grid size = 195
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 122 1/cm
         B3 Barrier:        grid size = 223
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 232
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23425 1/cm => truncating
         B5 Barrier:        grid size = 335
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23424 1/cm
         B6 Barrier:        grid size = 186
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1458 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4631 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.93673, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31607 -23424 3.86e+05  1.2e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 2.25e+15
         B2    123 4.05e+14
         B3  -4720 1.08e+14
         B4  -6223 1.32e+14
         B5 -23424 1.47e+13
         B6   1459 1.66e+15
         B7   4631 1.79e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  0.000594   0.00102  1.11e-05  1.15e-06  1.12e-17    0.0887      25.6
          R  1.68e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1       979     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  9.03e+04      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  8.66e+05       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4   8.9e+16  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5      11.3    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6    0.0391  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.52e-07  7.78e-07  8.43e-09  8.79e-10  8.55e-21  6.76e-05    0.0195
          R  2.21e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.29e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  1.19e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  1.14e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.17e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5  1.48e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6      51.4  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
   MasterEquation::set:  done, cpu time[sec] = 1.94686, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.302056, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.45953, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18696.7      3372.26      897.344      1095.69      122.651      13783.4      1487.43
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.22004, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.233823, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.48818, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.76747e-10  1.42727e-12  3.95634e-13
      low eigenvalue method done, cpu time[sec] = 2.50697, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.43e-12  3.96e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.47e-14  3.96e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.96128e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.96017e-13  2.81519e-13  9.08543e-14  2.65608e-15  1.88107e-14  5.46644e-16   1.1039e-15  2.66213e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.84347, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+08
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.300514, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.88173, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6232.24      1124.09      299.115      365.229      40.8838      4594.47       495.81
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21866, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.209856, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.46251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.56438e-10  9.71913e-13   2.5355e-13
      low eigenvalue method done, cpu time[sec] = 2.47665, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.72e-13  2.54e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.68e-14  2.54e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.53797e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.53686e-13  1.93248e-13  4.89736e-14  1.44495e-15  8.40494e-15  2.68043e-16  1.11883e-15  2.67051e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.20856, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.49937e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.74333, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3739.34      674.453      179.469      219.137      24.5303      2756.68      297.486
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21679, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.144162, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.39348, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.50714e-10  7.92765e-13  1.98773e-13
      low eigenvalue method done, cpu time[sec] = 2.3946, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.93e-13  1.99e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-14  1.99e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.98508e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.98397e-13  1.55445e-13  3.51692e-14  1.07187e-15  5.72851e-15  1.90802e-16  1.09458e-15  2.67929e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98234, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.09912e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.301999, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.82308, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2670.96      481.752      128.192      156.527      17.5216      1969.06       212.49
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21647, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.0668, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.31582, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.40808e-11   6.8644e-13  1.66972e-13
      low eigenvalue method done, cpu time[sec] = 2.31696, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.86e-13  1.67e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-14  1.67e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.67422e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.67311e-13  1.32537e-13  2.78593e-14  8.73656e-16  4.42606e-15  1.51684e-16  1.06319e-15  2.68837e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.97992, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.69887e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.303283, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.84772, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2077.41      374.696      99.7049      121.743      13.6279      1531.49       165.27
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21912, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.040366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.29182, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.69526e-11  6.13161e-13  1.45472e-13
      low eigenvalue method done, cpu time[sec] = 2.29295, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.13e-13  1.45e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-14  1.45e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.45439e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.45439e-13  1.16646e-13    2.323e-14  7.46465e-16  3.63786e-15  1.27343e-16  1.03121e-15  2.69765e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98411, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         2.99875e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.304853, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.81998, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1869.67      337.226      89.7344      109.569      12.2651      1378.34      148.743
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21866, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.068955, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.31987, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.63565e-10  5.84003e-13  1.37028e-13
      low eigenvalue method done, cpu time[sec] = 2.321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-13  1.37e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-14  1.37e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.37002e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.37002e-13  1.10315e-13  2.14838e-14  6.97929e-16  3.34747e-15  1.18219e-16  1.01565e-15  2.70235e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98828, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         4.49812e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.304587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.99709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1246.45      224.818      59.8229      73.0457      8.17676      918.894      99.1619
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.11534, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002262, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14865, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.32191e-11  4.80368e-13  1.07628e-13
      low eigenvalue method done, cpu time[sec] = 2.14977, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.8e-13  1.08e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.3e-15  1.08e-13         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.07692e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.07692e-13  8.78729e-14  1.57328e-14  5.34766e-16  2.41593e-15  8.82587e-17  9.44474e-16  2.72598e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.99104, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          5.9975e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.296314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.02561, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            934.836      168.613      44.8672      54.7843      6.13257       689.17      74.3714
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08671, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002269, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11974, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -4.0803e-12  4.14971e-13   8.9656e-14
      low eigenvalue method done, cpu time[sec] = 2.12083, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.15e-13  8.99e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.17e-15  8.99e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.99281e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.99281e-14   7.3843e-14  1.24808e-14  4.39244e-16   1.9048e-15  7.12602e-17  8.84188e-16  2.74928e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.97706, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.49687e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.300146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.08446, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            747.868      134.891      35.8938      43.8274      4.90606      551.336      59.4972
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.01784, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002275, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05099, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.01967e-11  3.68769e-13  7.72864e-14
      low eigenvalue method done, cpu time[sec] = 2.05212, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.69e-13  7.75e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.37e-15  7.75e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.74936e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.74936e-14  6.40466e-14  1.03656e-14  3.75242e-16  1.57775e-15  6.01139e-17  8.32812e-16  2.77169e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.97148, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         8.99625e+09
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.29147, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14647, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            623.224      112.409      29.9115      36.5229      4.08838      459.447       49.581
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96608, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00225, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99937, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.98599e-11  3.33868e-13  6.81503e-14
      low eigenvalue method done, cpu time[sec] = 2.0009, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-13  6.82e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.77e-15  6.82e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.81677e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.81677e-14   5.6736e-14  8.87094e-15  3.28839e-16  1.34892e-15  5.21627e-17  7.88435e-16  2.79286e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.97433, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         1.04956e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.29155, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.14708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            534.192      96.3504      25.6384      31.3053      3.50433      393.812       42.498
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95115, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002254, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98449, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.74762e-11  3.06303e-13  6.10761e-14
      low eigenvalue method done, cpu time[sec] = 1.98563, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.06e-13  6.08e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.29e-15  6.08e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.08402e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.08402e-14  5.10308e-14  7.75463e-15  2.93395e-16  1.17912e-15  4.61675e-17  7.49603e-16  2.81262e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96246, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1          1.1995e+10
      global relaxation matrix dimension = 384
      setting global matrices ... done, cpu time[sec] = 0.291682, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.18545, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            467.418      84.3066      22.4336      27.3921      3.06629      344.585      37.1857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.91895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95247, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.6431e-11  2.83825e-13  5.54092e-14
      low eigenvalue method done, cpu time[sec] = 1.95358, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.84e-13  5.57e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   4.9e-15  5.57e-14         1
         *Z       ---       ---  1.73e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.57332e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.57332e-14  4.64319e-14   6.8872e-15  2.65297e-16  1.04775e-15  4.14654e-17  7.15236e-16  2.83088e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96617, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 35300 1/cm
      Energy step      = 183 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007906
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21225
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.183636
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.749217
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.867305
         W1 Well: minimal relaxation eigenvalue = 0.0162864
         W1 Well: maximal relaxation eigenvalue = 1.5862
         W1 Well:       grid size = 366
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31677 1/cm
         B1 Barrier:        grid size = 193
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 164 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4777 1/cm
         B4 Barrier:        grid size = 227
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23443 1/cm => truncating
         B5 Barrier:        grid size = 321
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23442 1/cm
         B6 Barrier:        grid size = 185
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1445 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4556 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.29966, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31677 -23442 3.81e+05 1.86e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 4.44e+15
         B2    165 8.79e+14
         B3  -4777 2.43e+14
         B4  -6241 2.91e+14
         B5 -23442 3.34e+13
         B6   1446 3.57e+15
         B7   4557 4.23e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.04e-06  1.38e-05  2.71e-07  3.52e-08  3.77e-18  0.000946     0.185
          R  1.24e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  7.22e+04     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  3.69e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  2.84e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  2.65e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.06e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6       5.4  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.72e-09  1.16e-08  2.27e-10  2.94e-11  3.15e-21  7.91e-07  0.000155
          R  1.49e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  8.64e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.41e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3   3.4e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.17e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.27e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6  6.47e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
   MasterEquation::set:  done, cpu time[sec] = 2.31051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.275317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.06766, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25497.5      5044.75      1393.85      1669.49      191.706      20478.9      2426.93
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95339, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.213062, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19572, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.95153e-09  7.06956e-11  2.05024e-11
      low eigenvalue method done, cpu time[sec] = 2.2114, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.07e-11  2.05e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-12  2.05e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.0502e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.04536e-11  1.47432e-11   4.5554e-12  1.34079e-13  9.23761e-13  2.71834e-14  7.02703e-14  2.77566e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.07422, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+08
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.279284, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.17945, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8499.18      1681.58      464.617      556.498      63.9021      6826.29      808.977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94989, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211112, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17005, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.47598e-10  4.99954e-11   1.3756e-11
      low eigenvalue method done, cpu time[sec] = 2.18673, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     5e-11  1.38e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.14e-13  1.38e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.37557e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.37231e-11  1.05624e-11  2.56362e-12  7.69293e-14  4.34662e-13  1.40698e-14  7.17534e-14  2.78359e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.16317, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.40104e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274627, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.29092, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5099.51      1008.95       278.77      333.899      38.3412      4095.77      485.386
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94951, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211366, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16997, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.02518e-10  4.15663e-11   1.1056e-11
      low eigenvalue method done, cpu time[sec] = 2.18575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.16e-11  1.11e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.77e-13  1.11e-11         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.10558e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.10297e-11  8.69975e-12  1.88569e-12  5.86898e-14  3.04525e-13  1.03053e-14  7.08452e-14  2.79187e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.27454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.96146e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.274975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.26775, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3642.5      720.678      199.121      238.499      27.3866      2925.55      346.704
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94616, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211799, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16735, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.62776e-10  3.64698e-11  9.45349e-12
      low eigenvalue method done, cpu time[sec] = 2.18299, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.65e-11  9.45e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.94e-13  9.45e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.45333e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.43101e-12  7.54488e-12  1.51978e-12  4.87912e-14  2.39915e-13  8.35882e-15  6.94002e-14  2.80041e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.2414, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.52188e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276295, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.35206, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2833.06      560.527      154.872      185.499      21.3007      2275.43      269.659
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95555, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.13298e-10  3.29103e-11  8.35216e-12
      low eigenvalue method done, cpu time[sec] = 2.19218, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.29e-11  8.35e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.36e-13  8.35e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.35199e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.33222e-12  6.73017e-12  1.28471e-12  4.23368e-14  2.00225e-13  7.12855e-15  6.78321e-14  2.80913e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.3376, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         2.80209e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277599, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.28591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2549.75      504.475      139.385      166.949      19.1706      2047.89      242.693
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96031, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.212307, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1814, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0133e-10  3.14823e-11  7.91515e-12
      low eigenvalue method done, cpu time[sec] = 2.19821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.15e-11  7.92e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-13  7.92e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.915e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.89635e-12  6.40218e-12  1.19522e-12  3.98483e-14  1.85459e-13  6.66277e-15   6.7047e-14  2.81352e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.28355, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         4.20313e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277529, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.43591, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1699.84      336.316      92.9233        111.3      12.7804      1365.26      161.795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95874, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211439, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17942, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    8.255e-11  2.63459e-11  6.37008e-12
      low eigenvalue method done, cpu time[sec] = 2.19583, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-11  6.37e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.29e-13  6.37e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.36979e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.35469e-12  5.22124e-12  8.96536e-13  3.13565e-14  1.37428e-13   5.1107e-15  6.33297e-14   2.8356e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.43094, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         5.60417e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276634, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.51199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1274.88      252.237      69.6925      83.4747      9.58531      1023.94      121.347
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211507, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17327, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.05139e-11  2.30493e-11  5.40437e-12
      low eigenvalue method done, cpu time[sec] = 2.18984, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.3e-11   5.4e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-13   5.4e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.40412e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.39135e-12  4.46628e-12  7.24239e-13   2.6273e-14  1.10513e-13  4.21064e-15  6.00575e-14  2.85734e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.49941, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.00522e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.54346, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1019.9       201.79       55.754      66.7797      7.66825      819.154      97.0773
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95991, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211611, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18075, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.17093e-12  2.06901e-11  4.72819e-12
      low eigenvalue method done, cpu time[sec] = 2.1972, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.07e-11  4.73e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.37e-13  4.73e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.72844e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.71723e-12  3.92995e-12  6.10416e-13  2.28071e-14  9.30056e-14  3.61026e-15   5.7196e-14  2.87828e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.54006, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         8.40626e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.277728, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.56623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            849.918      168.158      46.4617      55.6498      6.39021      682.629      80.8977
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95527, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.212219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17683, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.57464e-11  1.88894e-11  4.22163e-12
      low eigenvalue method done, cpu time[sec] = 2.1934, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.89e-11  4.22e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-13  4.22e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.22151e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.21152e-12    3.524e-12  5.28933e-13  2.02578e-14  8.05879e-14  3.17587e-15  5.46751e-14  2.89816e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.55969, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1          9.8073e+09
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276281, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60605, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            728.501      144.136      39.8243      47.6998      5.47732       585.11      69.3409
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96188, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.211636, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18245, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.66943e-11  1.74546e-11  3.82462e-12
      low eigenvalue method done, cpu time[sec] = 2.19911, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.75e-11  3.82e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-13  3.82e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.8245e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   3.8155e-12  3.20332e-12  4.67397e-13  1.82863e-14  7.12645e-14  2.84432e-15  5.24335e-14  2.91683e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.60189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         1.12083e+10
      global relaxation matrix dimension = 366
      setting global matrices ... done, cpu time[sec] = 0.276779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.62982, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            637.438      126.119      34.8462      41.7373      4.79265      511.971      60.6733
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.212984, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17989, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.87106e-12  1.62755e-11  3.50319e-12
      low eigenvalue method done, cpu time[sec] = 2.19626, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-11   3.5e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-13   3.5e-12         1
         *Z       ---       ---  1.93e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.50298e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.49465e-12  2.94208e-12  4.19111e-13  1.67064e-14  6.39762e-14  2.58148e-15  5.04226e-14  2.93423e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.62439, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 38080 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007724
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.226068
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.17287
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.160153
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.772939
         W1 Well: minimal relaxation eigenvalue = 0.0154382
         W1 Well: maximal relaxation eigenvalue = 1.93464
         W1 Well:       grid size = 349
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31720 1/cm
         B1 Barrier:        grid size = 191
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -120 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 79 1/cm
         B3 Barrier:        grid size = 214
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4720 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23720 1/cm => truncating
         B5 Barrier:        grid size = 309
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23720 1/cm
         B6 Barrier:        grid size = 183
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.61757, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31720 -23720 3.11e+05 2.85e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -120 8.43e+15
         B2     80 1.82e+15
         B3  -4720  5.2e+14
         B4  -6320 6.13e+14
         B5 -23720  7.2e+13
         B6   1480 7.31e+15
         B7   4680 9.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.23e-07  3.85e-07  1.23e-08  1.91e-09  1.51e-18  2.12e-05   0.00301
          R  4.49e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1   2.6e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.15e+07      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.24e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  6.62e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  4.71e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6       333   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.03e-10  3.51e-10  1.12e-11  1.74e-12  1.38e-21  1.94e-08  2.74e-06
          R  4.92e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.85e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.93e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.73e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.25e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.16e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6  3.64e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
   MasterEquation::set:  done, cpu time[sec] = 1.62916, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251603, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.65516, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33628.4       7270.1       2076.6      2445.48      287.217      29158.8      3755.99
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167909, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91836, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.04108e-09  1.72268e-09  5.21769e-10
      low eigenvalue method done, cpu time[sec] = 1.93362, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.72e-09  5.22e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.66e-11  5.22e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.21768e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   5.2083e-10  3.79566e-10  1.12604e-10  3.34732e-12  2.24894e-11  6.69568e-13  2.15317e-12  1.29671e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.33146, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+08
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.250051, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.83193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11209.5      2423.37        692.2       815.16      95.7391      9719.62         1252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167183, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.45989e-09  1.25844e-09  3.63967e-10
      low eigenvalue method done, cpu time[sec] = 1.94023, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-09  3.64e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.94e-11  3.64e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.63967e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.63312e-10  2.81878e-10  6.57873e-11  2.01002e-12  1.10616e-11  3.63022e-13  2.21101e-12  1.30008e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.49079, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.31828e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.250524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.90451, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6725.67      1454.02       415.32      489.096      57.4435      5831.77      751.199
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72562, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167592, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.95424e-10  1.06374e-09  2.98771e-10
      low eigenvalue method done, cpu time[sec] = 1.93731, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-09  2.99e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-11  2.99e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.98771e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.98234e-10  2.36852e-10  4.94035e-11  1.57066e-12  7.93512e-12  2.72481e-13  2.19879e-12   1.3036e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.56327, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.84559e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.5285, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4804.05      1038.59      296.657      349.354      41.0311      4165.55       536.57
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72612, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.16666, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92158, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.59806e-09  9.44114e-10  2.59344e-10
      low eigenvalue method done, cpu time[sec] = 1.93683, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.44e-10  2.59e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-11  2.59e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.59343e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.58877e-10  2.08383e-10  4.04147e-11  1.32796e-12  6.35695e-12  2.24855e-13  2.16854e-12  1.30721e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.18704, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          2.3729e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.92774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3736.48      807.789      230.733       271.72       31.913      3239.87      417.333
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72123, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167569, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91791, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00434e-09  8.59599e-10  2.31867e-10
      low eigenvalue method done, cpu time[sec] = 1.93386, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.6e-10  2.32e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.33e-11  2.32e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.31867e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.3145e-10   1.8801e-10  3.45693e-11  1.16759e-12  5.37526e-12  1.94361e-13  2.13263e-12  1.31088e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.58588, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         2.63656e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252762, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.95034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3362.84       727.01       207.66      244.548      28.7217      2915.88      375.599
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72433, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168174, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9225, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.21342e-10  8.25448e-10  2.20867e-10
      low eigenvalue method done, cpu time[sec] = 1.93845, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.25e-10  2.21e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-11  2.21e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.20867e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.2047e-10  1.79733e-10  3.23266e-11  1.10523e-12  5.00709e-12  1.82718e-13  2.11401e-12  1.31273e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.61577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         3.95484e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.0465, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2241.89      484.673       138.44      163.032      19.1478      1943.92        250.4
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73382, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.169007, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93156, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.9112e-10  7.01329e-10   1.8147e-10
      low eigenvalue method done, cpu time[sec] = 1.94738, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.01e-10  1.81e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.08e-11  1.81e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.8147e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.81143e-10  1.49536e-10  2.47555e-11   8.8971e-13   3.7954e-12  1.43445e-13  2.02223e-12  1.32201e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.71815, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         5.27312e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.25218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.12778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1681.42      363.505       103.83      122.274      14.3609      1457.94        187.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73183, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.170649, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.93223, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.63102e-10  6.20481e-10  1.56377e-10
      low eigenvalue method done, cpu time[sec] = 1.94814, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.2e-10  1.56e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.58e-12  1.56e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.56376e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.56095e-10   1.2986e-10  2.03135e-11  7.58255e-13  3.10431e-12   1.2025e-13  1.93807e-12  1.33113e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.8021, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1          6.5914e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.14955, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1345.13      290.804       83.064      97.8192      11.4887      1166.35       150.24
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72925, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168921, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92708, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.72577e-10   5.6197e-10  1.38548e-10
      low eigenvalue method done, cpu time[sec] = 1.9434, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.62e-10  1.39e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.68e-12  1.39e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.38548e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.38299e-10  1.15675e-10  1.73399e-11  6.67307e-13  2.64853e-12  1.04553e-13  1.86253e-12  1.33994e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.81947, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         7.90968e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252648, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.20294, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1120.95      242.337        69.22       81.516      9.57391      971.962        125.2
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.167075, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92238, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.77982e-10  5.16896e-10   1.2503e-10
      low eigenvalue method done, cpu time[sec] = 1.93833, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.17e-10  1.25e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.98e-12  1.25e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.2503e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.24805e-10  1.04807e-10  1.51876e-11   5.9959e-13   2.3215e-12    9.306e-14  1.79471e-12  1.34833e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.87407, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         9.22796e+09
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.252399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.24498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             960.81      207.717      59.3315      69.8709      8.20621       833.11      107.314
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72158, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.1684, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92007, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.46411e-10  4.80701e-10  1.14325e-10
      low eigenvalue method done, cpu time[sec] = 1.93607, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-10  1.14e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.42e-12  1.14e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.14325e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.14119e-10  9.61335e-11  1.35467e-11  5.46671e-13  2.07353e-12  8.41968e-14  1.73348e-12  1.35626e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.91029, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         1.05462e+10
      global relaxation matrix dimension = 349
      setting global matrices ... done, cpu time[sec] = 0.251456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.24608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            840.709      181.752       51.915       61.137      7.18044      728.971      93.8998
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72663, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.168688, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92481, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.48547e-10  4.50756e-10  1.05579e-10
      low eigenvalue method done, cpu time[sec] = 1.94084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.51e-10  1.06e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.96e-12  1.06e-10         1
         *Z       ---       ---  3.19e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.05579e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.05389e-10   8.9003e-11  1.22484e-11   5.0387e-13  1.87798e-12  7.71064e-14  1.67784e-12   1.3637e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.91475, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 40860 1/cm
      Energy step      = 217 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007524
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.182638
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.159227
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.180841
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.69481
         W1 Well: minimal relaxation eigenvalue = 0.0147175
         W1 Well: maximal relaxation eigenvalue = 1.22709
         W1 Well:       grid size = 334
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 189
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -153 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 63 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4710 1/cm
         B4 Barrier:        grid size = 217
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23155 1/cm => truncating
         B5 Barrier:        grid size = 295
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23155 1/cm
         B6 Barrier:        grid size = 182
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1365 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4620 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.50091, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23155  4.7e+05 4.29e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -153 1.54e+16
         B2     64 3.62e+15
         B3  -4710 1.07e+15
         B4  -6229 1.24e+15
         B5 -23155 1.48e+14
         B6   1366 1.43e+16
         B7   4621 1.99e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e-08  1.86e-08  8.91e-10  1.62e-10  6.96e-19  8.47e-07  9.12e-05
          R  9.35e+07         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.36e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.12e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.17e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.44e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.18e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6   1.1e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.06e-11  1.85e-11  8.83e-13  1.61e-13   6.9e-22   8.4e-10  9.04e-08
          R  9.43e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.41e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.13e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.22e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.45e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.19e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.11e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
   MasterEquation::set:  done, cpu time[sec] = 1.51239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43099.7      10145.2      2985.73      3463.64      415.063      40059.1      5561.53
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52457, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.155098, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.68156e-08  2.44089e-08  7.72744e-09
      low eigenvalue method done, cpu time[sec] = 1.70222, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-08  7.73e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.59e-10  7.73e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.72744e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.70861e-09  5.67016e-09  1.62257e-09  4.87223e-11  3.19861e-10  9.62803e-12  3.76268e-11  3.26881e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.77982, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+08
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.52093, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14366.6      3381.73      995.243      1154.55      138.354        13353      1853.84
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52661, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68791, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.79724e-08  1.83369e-08  5.57207e-09
      low eigenvalue method done, cpu time[sec] = 1.70219, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-08  5.57e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.7e-10  5.57e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.57207e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.55849e-09  4.34154e-09  9.78765e-10  3.04316e-11  1.63476e-10  5.43442e-12  3.88111e-11  3.27658e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.8838, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.24747e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.230188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.6149, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8619.93      2029.04      597.146      692.728      83.0126      8011.81      1112.31
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152588, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68635, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.62787e-08  1.57255e-08  4.65727e-09
      low eigenvalue method done, cpu time[sec] = 1.70016, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-08  4.66e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.32e-10  4.66e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.65727e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.64592e-09  3.71071e-09  7.48215e-10  2.42767e-11  1.19696e-10  4.16644e-12  3.88209e-11  3.28466e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.97548, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         1.74645e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231814, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.62323, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6157.09      1449.31      426.533      494.805      59.2947      5722.72      794.505
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69113, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42113e-08  1.40986e-08  4.09513e-09
      low eigenvalue method done, cpu time[sec] = 1.70547, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-08   4.1e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-10   4.1e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.09513e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.08515e-09  3.30503e-09  6.19991e-10  2.08266e-11  9.72893e-11   3.4899e-12  3.84969e-11  3.29293e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.99297, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.24544e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231905, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.68193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4788.85      1127.24      331.748      384.849      46.1181      4451.01      617.948
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53201, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153493, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69373, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.29857e-08  1.29376e-08   3.6987e-09
      low eigenvalue method done, cpu time[sec] = 1.70809, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.29e-08   3.7e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.9e-10   3.7e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.6987e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.68969e-09  3.01108e-09  5.35748e-10  1.85211e-11  8.32049e-11  3.05199e-12  3.80496e-11  3.30132e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.05521, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         2.49494e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231585, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.67831, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4309.97      1014.52      298.573      346.364      41.5063      4005.91      556.153
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.5294, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.151633, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68903, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18979e-08  1.24656e-08  3.53879e-09
      low eigenvalue method done, cpu time[sec] = 1.70429, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.25e-08  3.54e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-10  3.54e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.5388e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.53017e-09  2.89073e-09  5.03214e-10   1.7618e-11  7.78868e-11  2.88363e-12  3.78058e-11  3.30554e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.04673, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1          3.7424e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23173, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.75743, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2873.31      676.347      199.049      230.909      27.6709       2670.6      370.769
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52863, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68964, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.06299e-08  1.07342e-08  2.95966e-09
      low eigenvalue method done, cpu time[sec] = 1.70401, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.07e-08  2.96e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-10  2.96e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.95966e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.95245e-09  2.44657e-09  3.92323e-10  1.44638e-11  6.02107e-11   2.3098e-12  3.65422e-11  3.32667e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.12716, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         4.98987e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23176, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79418, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2154.98       507.26      149.286      173.182      20.7531      2002.95      278.077
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52844, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152526, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68924, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.50373e-09  9.59166e-09   2.5848e-09
      low eigenvalue method done, cpu time[sec] = 1.7036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.59e-09  2.58e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-10  2.58e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.5848e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.5785e-09  2.15236e-09  3.26324e-10  1.25091e-11  4.99781e-11  1.96561e-12  3.53274e-11  3.34744e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.16198, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.23734e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.232035, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.82213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1723.99      405.808      119.429      138.546      16.6025      1602.36      222.461
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51616, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150627, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6752, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.02919e-09  8.75654e-09   2.3151e-09
      low eigenvalue method done, cpu time[sec] = 1.68968, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.76e-09  2.32e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.29e-10  2.32e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.3151e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.30945e-09  1.93755e-09  2.81642e-10  1.11398e-11  4.31499e-11  1.72984e-12  3.42068e-11  3.36752e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.33794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         7.48481e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.23162, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.8287, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1436.66      338.173      99.5243      115.455      13.8354       1335.3      185.384
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52956, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153152, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.691, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.23233e-09  8.10799e-09  2.10847e-09
      low eigenvalue method done, cpu time[sec] = 1.70536, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.11e-09  2.11e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.19e-10  2.11e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.10847e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.10333e-09  1.77125e-09  2.48998e-10  1.01096e-11  3.82026e-11  1.55544e-12  3.31809e-11  3.38672e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.20012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         8.73227e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.232121, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.86088, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1231.42      289.863      85.3065      98.9611      11.8589      1144.54      158.901
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52778, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.15199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68772, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.54653e-09  7.58358e-09  1.94339e-09
      low eigenvalue method done, cpu time[sec] = 1.70248, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.58e-09  1.94e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-10  1.94e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.94339e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.93865e-09  1.63733e-09  2.23909e-10  9.29734e-12  3.44193e-11  1.41976e-12  3.22407e-11  3.40493e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.22837, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         9.97974e+09
      global relaxation matrix dimension = 334
      setting global matrices ... done, cpu time[sec] = 0.231863, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.87664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1077.49       253.63      74.6432      86.5909      10.3766      1001.48      139.038
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53055, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69115, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.14874e-09  7.14712e-09  1.80747e-09
      low eigenvalue method done, cpu time[sec] = 1.70553, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.15e-09  1.81e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.05e-10  1.81e-09         1
         *Z       ---       ---  7.14e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.80747e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.80306e-09  1.52638e-09  2.03915e-10  8.63516e-12  3.14136e-11  1.31038e-12  3.13758e-11  3.42213e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.24704, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 43640 1/cm
      Energy step      = 233 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007014
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.197258
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.147681
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.150803
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.639489
         W1 Well: minimal relaxation eigenvalue = 0.0140948
         W1 Well: maximal relaxation eigenvalue = 1.24282
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31618 1/cm
         B1 Barrier:        grid size = 188
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -163 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 69 1/cm
         B3 Barrier:        grid size = 208
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4823 1/cm
         B4 Barrier:        grid size = 214
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23231 1/cm => truncating
         B5 Barrier:        grid size = 287
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23230 1/cm
         B6 Barrier:        grid size = 181
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1466 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4496 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.41801, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31618 -23230 4.44e+05 6.38e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -163 2.71e+16
         B2     70  6.9e+15
         B3  -4823  2.1e+15
         B4  -6222  2.4e+15
         B5 -23230 2.93e+14
         B6   1467 2.69e+16
         B7   4497    4e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.99e-10  1.41e-09  9.47e-11  1.97e-11   3.6e-19  5.36e-08  4.56e-06
          R  1.25e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  7.11e+08     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.06e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  5.08e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.77e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.87e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.19e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.5e-13   1.5e-12  1.01e-13  2.09e-14  3.83e-22   5.7e-11  4.85e-09
          R  1.18e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  6.69e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  9.93e+12      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  4.78e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.61e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.75e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.06e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
   MasterEquation::set:  done, cpu time[sec] = 1.42987, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21495, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            53655.2        13687      4163.55      4765.53      581.477      53287.5      7932.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.27e-07  7.47e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.21e-09  7.47e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.47344e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.46148e-08  5.53192e-08  1.53262e-08  4.65033e-10  2.98797e-09  9.08787e-11  4.25067e-10  5.07651e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86811, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215117, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.34374, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17885.1      4562.33      1387.85      1588.51      193.826      17762.5      2644.22
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.74e-07  5.55e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-09  5.55e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.54558e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  5.53671e-08  4.34877e-08  9.50641e-09  3.00632e-10  1.57926e-09  5.31393e-11  4.39378e-10  5.08758e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.96055, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.18603e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216136, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39236, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              10731       2737.4      832.709      953.105      116.295      10657.5      1586.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-07  4.71e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.11e-09  4.71e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.70801e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.70048e-08  3.77194e-08  7.38072e-09  2.44197e-10  1.17722e-09  4.15043e-11  4.41255e-10  5.09903e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.01101, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         1.66044e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.218163, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.42854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7665.03      1955.28      594.792      680.789      83.0681       7612.5      1133.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-07  4.19e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.92e-09  4.19e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.18618e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.17948e-08  3.39538e-08  6.18465e-09  2.12168e-10  9.69054e-10  3.52217e-11  4.39362e-10  5.11074e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.05334, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.13485e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215628, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.4463, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5961.69      1520.78      462.616      529.503      64.6085      5920.83      881.405
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-07  3.81e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.78e-09  3.81e-08        -1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.81437e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.80827e-08  3.11955e-08  5.39198e-09  1.90562e-10  8.37042e-10  3.11178e-11  4.35941e-10  5.12259e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.06663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         2.37206e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.45342, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5365.52       1368.7      416.355      476.553      58.1477      5328.75      793.265
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.22e-07  3.66e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-09  3.66e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.66341e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.65755e-08  3.00584e-08  5.08413e-09  1.82047e-10   7.8691e-10  2.95305e-11  4.33945e-10  5.12855e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.07537, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         3.55809e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.51387, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3577.02      912.466       277.57      317.702      38.7651       3552.5      528.843
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.06e-07  3.11e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-09  3.11e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.11139e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.10642e-08  2.58195e-08  4.02619e-09  1.52032e-10  6.18877e-10  2.40734e-11  4.22936e-10  5.15831e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.13696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         4.74412e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.217398, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.57865, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2682.76       684.35      208.177      238.276      29.0738      2664.37      396.632
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.41097, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.140542, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55925, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.54758e-08  9.56788e-08  2.74906e-08
      low eigenvalue method done, cpu time[sec] = 1.57377, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.57e-08  2.75e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-09  2.75e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.74906e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.74466e-08  2.29712e-08   3.3888e-09  1.33178e-10  5.20365e-10  2.07567e-11  4.11784e-10  5.18756e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.77633, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.93015e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.215936, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.5444, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2146.21       547.48      166.542      190.621      23.2591       2131.5      317.306
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40899, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.14088, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55769, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.79838e-08  8.79747e-08  2.48552e-08
      low eigenvalue method done, cpu time[sec] = 1.57183, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   8.8e-08  2.49e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-09  2.49e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.48552e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.48155e-08  2.08684e-08  2.95312e-09  1.19829e-10  4.53968e-10  1.84611e-11  4.01197e-10  5.21589e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.73943, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         7.11617e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216607, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.57762, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1788.51      456.233      138.785      158.851      19.3826      1776.25      264.422
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40628, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.140518, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55439, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.21463e-08  8.19481e-08   2.2818e-08
      low eigenvalue method done, cpu time[sec] = 1.56857, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.19e-08  2.28e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.16e-09  2.28e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.2818e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.27815e-08  1.92255e-08  2.63225e-09  1.09696e-10  4.05457e-10  1.67482e-11  3.91313e-10  5.24306e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.76916, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1          8.3022e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.21719, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.63209, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1533.01      391.057      118.958      136.158      16.6136       1522.5      226.647
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.41186, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.140082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55965, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   7.6943e-08   7.7045e-08  2.11778e-08
      low eigenvalue method done, cpu time[sec] = 1.57385, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.7e-08  2.12e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-09  2.12e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.11778e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   2.1144e-08  1.78922e-08  2.38393e-09  1.01645e-10  3.68092e-10  1.54057e-11   3.8212e-10  5.26895e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.82925, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         9.48823e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.216911, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.59648, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1341.38      342.175      104.089      119.138      14.5369      1332.19      198.316
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40846, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.141078, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55753, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.28698e-08  7.29423e-08  1.98182e-08
      low eigenvalue method done, cpu time[sec] = 1.57177, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.29e-08  1.98e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.03e-09  1.98e-08         1
         *Z       ---       ---  2.03e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.98182e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.97865e-08    1.678e-08  2.18482e-09   9.5037e-11  3.38216e-10  1.43161e-11  3.73561e-10  5.29351e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.79095, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 46420 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006783
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185818
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.138946
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.131153
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.605415
         W1 Well: minimal relaxation eigenvalue = 0.0135538
         W1 Well: maximal relaxation eigenvalue = 1.23193
         W1 Well:       grid size = 312
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31579 1/cm
         B1 Barrier:        grid size = 186
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 185
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 170 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4829 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6329 1/cm
         B5 Barrier: nonpositive number of states at -23580 1/cm => truncating
         B5 Barrier:        grid size = 280
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23579 1/cm
         B6 Barrier:        grid size = 180
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4670 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.34107, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31579 -23579 3.45e+05 9.35e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79  4.6e+16
         B2    171 1.26e+16
         B3  -4829 3.99e+15
         B4  -6329 4.52e+15
         B5 -23579  5.6e+14
         B6   1421 4.85e+16
         B7   4671 7.73e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.41e-11   1.5e-10  1.35e-11  3.15e-12  2.03e-19  4.85e-09  3.36e-07
          R  1.19e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  6.68e+09     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2   7.4e+10      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  3.17e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.93e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  2.06e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.97e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.61e-14  1.71e-13  1.54e-14   3.6e-15  2.32e-22  5.54e-12  3.84e-10
          R  1.04e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  5.85e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  6.48e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  2.78e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.32e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5   1.8e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.61e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
   MasterEquation::set:  done, cpu time[sec] = 1.35267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203405, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.02535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65073.6      17897.1       5653.9      6393.65      792.953      68694.1      10943.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-06  5.16e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.01e-08  5.16e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.16197e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  5.15036e-07  3.84601e-07  1.03265e-07  3.17514e-09  1.99976e-08  6.14226e-10  3.37791e-09  5.35663e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.62349, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+08
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201276, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.07624, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21691.2      5965.71      1884.63      2131.22      264.318        22898      3647.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.16e-06  3.93e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-08  3.93e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.92757e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.91874e-07  3.09321e-07  6.56797e-08  2.11536e-09  1.08842e-08  3.70449e-10  3.49847e-09  5.36742e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.65103, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.13208e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15162, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13014.7      3579.42      1130.78      1278.73      158.591      13738.8      2188.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-06  3.38e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-08  3.38e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.38026e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.37266e-07  2.71747e-07  5.17068e-08  1.74566e-09  8.24206e-09    2.941e-10  3.52532e-09  5.37854e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7279, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         1.58492e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201811, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.19192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9296.24      2556.73        807.7      913.379      113.279      9813.44       1563.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.34e-07  3.04e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-08  3.04e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.0351e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.02828e-07   2.4689e-07  4.37631e-08  1.53367e-09  6.86065e-09  2.52463e-10  3.52219e-09  5.38987e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.76713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.03775e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202768, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.20831, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7230.41      1988.57      628.211      710.406      88.1059      7632.67      1215.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.68e-07  2.79e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-08  2.79e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.78695e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.78069e-07  2.28507e-07  3.84578e-08  1.38952e-09  5.97809e-09  2.25057e-10  3.50607e-09  5.40132e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.78742, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         2.26417e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202803, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.25033, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6507.36      1789.71       565.39      639.365      79.2953      6869.41      1094.38
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.42e-07  2.69e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-08  2.69e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.68562e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.67958e-07  2.20882e-07  3.63871e-08  1.33242e-09   5.6413e-09  2.14404e-10  3.49537e-09  5.40706e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.82988, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         3.39625e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.27956, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4338.24      1193.14      376.927      426.244      52.8636       4579.6      729.585
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.41e-07  2.31e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-08  2.31e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.31193e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.30673e-07  1.92206e-07  2.92197e-08  1.12956e-09  4.50441e-09  1.77506e-10  3.43044e-09  5.43572e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.85884, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         4.52834e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.26866, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3253.68      894.856      282.695      319.683      39.6477       3434.7      547.189
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.73e-07  2.06e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.16e-09  2.06e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.06361e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.05898e-07  1.72691e-07  2.48547e-08  1.00066e-09  3.83067e-09  1.54829e-10  3.35993e-09  5.46387e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.84776, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.66042e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.33325, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2602.95      715.885      226.156      255.746      31.7181      2747.76      437.751
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-07  1.88e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.48e-09  1.88e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.88128e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.87705e-07  1.58143e-07  2.18458e-08  9.08549e-10  3.37268e-09  1.38993e-10  3.29067e-09  5.49116e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.91254, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         6.79251e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.202736, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.36867, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2169.12      596.571      188.463      213.122      26.4318       2289.8      364.793
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.84e-07  1.74e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.94e-09  1.74e-07        -1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.73922e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.73531e-07  1.46686e-07  1.96141e-08  8.38092e-10  3.03566e-09  1.27089e-10  3.22459e-09   5.5174e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94793, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         7.92459e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.203108, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.36272, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1859.25      511.346       161.54      182.676      22.6558      1962.69      312.679
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.52e-07  1.62e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.5e-09  1.62e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.62406e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.62041e-07  1.37323e-07  1.78765e-08  7.81735e-10  2.77446e-09  1.17698e-10  3.16213e-09  5.54248e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94131, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         9.05668e+09
      global relaxation matrix dimension = 312
      setting global matrices ... done, cpu time[sec] = 0.201147, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.36578, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1626.84      447.428      141.348      159.841      19.8238      1717.35      273.595
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.24e-07  1.53e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.13e-09  1.53e-07         1
         *Z       ---       ---  6.95e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.52804e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1   1.5246e-07  1.29466e-07  1.64758e-08  7.35207e-10  2.56445e-09  1.10033e-10  3.10327e-09  5.56637e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.94116, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 49201 1/cm
      Energy step      = 267 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006656
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.159123
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.131062
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.152842
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.562344
         W1 Well: minimal relaxation eigenvalue = 0.0130719
         W1 Well: maximal relaxation eigenvalue = 1.45799
         W1 Well:       grid size = 303
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31699 1/cm
         B1 Barrier:        grid size = 185
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -194 1/cm
         B2 Barrier:        grid size = 184
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 72 1/cm
         B3 Barrier:        grid size = 202
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4733 1/cm
         B4 Barrier:        grid size = 208
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6335 1/cm
         B5 Barrier: nonpositive number of states at -23423 1/cm => truncating
         B5 Barrier:        grid size = 272
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23423 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1408 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4611 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.28321, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31699 -23423 3.87e+05 1.36e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -194 7.57e+16
         B2     73 2.23e+16
         B3  -4733 7.36e+15
         B4  -6335 8.23e+15
         B5 -23423 1.04e+15
         B6   1409 8.46e+16
         B7   4612 1.43e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e-11  2.12e-11  2.46e-12  6.37e-13  1.23e-19  5.92e-10  3.43e-08
          R  8.49e+10         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  4.72e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  4.06e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.57e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  8.13e+18  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.69e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  2.92e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.43e-14  2.58e-14     3e-15  7.76e-16   1.5e-22  7.22e-13  4.17e-11
          R  6.97e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  3.87e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  3.33e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.29e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  6.67e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.39e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6   2.4e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 1.29454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191278, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.9175, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            77187.7      22785.5       7502.2      8391.58      1056.25      86209.3      14602.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.33e-06  2.71e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   9.7e-08  2.71e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.71212e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999997  2.70757e-06  2.03379e-06  5.31591e-07  1.65383e-08  1.02239e-07  3.16968e-09   2.0202e-08   4.1289e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.48347, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+08
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.94718, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25729.2      7595.17      2500.73      2797.19      352.083      28736.4      4867.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.89e-06  2.11e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.79e-08  2.11e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.10939e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  2.10586e-06  1.66887e-06  3.45582e-07  1.13179e-08  5.71213e-08  1.96532e-09  2.09544e-08   4.1366e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5085, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.08423e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00714, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15437.5       4557.1      1500.44      1678.32       211.25      17241.9      2920.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.24e-06  1.84e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.91e-08  1.84e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.83732e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.83424e-06  1.48273e-06  2.75383e-07   9.4717e-09  4.38634e-08  1.58307e-09  2.11733e-08  4.14451e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57032, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.51792e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191075, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0352, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11026.8      3255.07      1071.74       1198.8      150.893      12315.6      2086.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-06  1.66e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.35e-08  1.66e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.66392e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.66113e-06  1.35809e-06  2.35125e-07   8.4038e-09  3.68743e-08  1.37286e-09  2.12143e-08  4.15253e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60088, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         1.95162e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.19151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03675, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8576.41      2531.72      833.578      932.398      117.361      9578.81      1622.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.5e-06  1.54e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.94e-08  1.54e-06         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.53826e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.53568e-06  1.26511e-06  2.08063e-07  7.67271e-09  3.23808e-08   1.2336e-09   2.1174e-08  4.16062e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.60311, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         2.16846e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0709, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7718.77      2278.55       750.22      839.158      105.625      8620.93      1460.29
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-06  1.49e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.77e-08  1.49e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.48669e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999   1.4842e-06  1.22634e-06  1.97456e-07   7.3818e-09   3.0659e-08  1.17924e-09  2.11365e-08  4.16468e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.63676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         3.25269e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190976, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.10923, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5145.85      1519.03      500.147      559.439      70.4166      5747.29      973.525
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-06   1.3e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-08   1.3e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.29509e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.29292e-06  1.07935e-06  1.60515e-07  6.34148e-09  2.48112e-08  9.89759e-10  2.08655e-08   4.1849e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.6737, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         4.33693e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191246, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.09996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3859.39      1139.28       375.11      419.579      52.8124      4310.47      730.144
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.56e-06  1.17e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.69e-08  1.17e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.1664e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.16444e-06   9.7819e-07  1.37811e-07   5.6738e-09  2.13136e-08  8.72189e-10    2.054e-08  4.20475e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.66551, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.42116e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.190797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.16445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3087.51      911.421      300.088      335.663      42.2499      3448.37      584.115
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.32e-06  1.07e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.37e-08  1.07e-06        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.07111e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.06931e-06  9.02118e-07  1.22047e-07  5.19289e-09  1.89185e-08  7.89462e-10  2.02062e-08  4.22403e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.72902, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         6.50539e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191102, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.20025, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2572.92      759.517      250.073      279.719      35.2083      2873.64      486.763
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.12e-06  9.96e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.11e-08  9.96e-07         1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.96351e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.94679e-07  8.41779e-07  1.10284e-07  4.82259e-09  1.71452e-08  7.26873e-10  1.98793e-08   4.2426e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.76466, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         7.58962e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.16696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2205.36      651.015      214.349       239.76      30.1785      2463.12      417.225
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-06  9.35e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-08  9.35e-07        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.35392e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  9.33822e-07  7.92172e-07  1.01077e-07  4.52467e-09  1.57634e-08  6.77222e-10  1.95647e-08  4.26041e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.73153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         8.67385e+09
      global relaxation matrix dimension = 303
      setting global matrices ... done, cpu time[sec] = 0.191129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.21192, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1929.69      569.638      187.555       209.79      26.4062      2155.23      365.072
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-06  8.84e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-08  8.84e-07        -1
         *Z       ---       ---  2.78e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.84293e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  8.82809e-07   7.5032e-07  9.36214e-08  4.27746e-09  1.46472e-08  6.36496e-10  1.92642e-08  4.27743e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.7764, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 51981 1/cm
      Energy step      = 283 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006357
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.143732
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.124892
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.14578
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.519285
         W1 Well: minimal relaxation eigenvalue = 0.0126476
         W1 Well: maximal relaxation eigenvalue = 2.20657
         W1 Well:       grid size = 296
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31786 1/cm
         B1 Barrier:        grid size = 184
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 183
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 192 1/cm
         B3 Barrier:        grid size = 200
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6316 1/cm
         B5 Barrier: nonpositive number of states at -23297 1/cm => truncating
         B5 Barrier:        grid size = 266
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23297 1/cm
         B6 Barrier:        grid size = 179
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1324 1/cm
         B7 Barrier:        grid size = 168
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4437 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.21162, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31786 -23297 4.24e+05 1.94e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.21e+17
         B2    193 3.83e+16
         B3  -4619 1.32e+16
         B4  -6316 1.46e+16
         B5 -23297 1.86e+15
         B6   1325 1.43e+17
         B7   4438 2.56e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e-12  3.81e-12  5.51e-13  1.56e-13  7.95e-20  9.26e-11  4.57e-09
          R  4.79e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.63e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.81e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  6.41e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  1.26e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  1.08e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  2.19e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.7e-15  4.91e-15  7.12e-16  2.01e-16  1.03e-22   1.2e-13   5.9e-12
          R  3.71e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.03e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.41e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  4.97e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  9.74e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  8.36e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6   1.7e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
   MasterEquation::set:  done, cpu time[sec] = 1.22314, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            89818.7      28343.9      9752.49      10800.9      1377.96       105709      18925.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.9e-05  1.14e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-07  1.14e-05         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.14098e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999989   1.1392e-05  8.59756e-06  2.19668e-06  6.90713e-08  4.19614e-07  1.31252e-08  9.57443e-08  2.45956e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.34707, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+08
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.181231, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84849, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29939.6      9447.98      3250.83       3600.3      459.319      35236.3      6308.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-05  9.05e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.06e-07  9.05e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.04692e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999991  9.03282e-06   7.1814e-06  1.45506e-06  4.84075e-08  2.39943e-07  8.34098e-09  9.94284e-08  2.46383e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.38321, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1          1.0414e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.18206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.86819, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17963.7      5668.79       1950.5      2160.18      275.591      21141.8      3785.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-05  7.96e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.74e-07  7.96e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.96384e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  7.95143e-06  6.44423e-06  1.17189e-06  4.10191e-08  1.86555e-07   6.8061e-09  1.00692e-07  2.46819e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.40935, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.45797e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182228, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90139, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12831.2      4049.13      1393.21      1542.98      196.851      15101.3      2703.65
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-05  7.27e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.53e-07  7.27e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.2671e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  7.25577e-06   5.9452e-06  1.00832e-06   3.6714e-08  1.58216e-07  5.95617e-09  1.01121e-07  2.47261e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.43679, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         1.87453e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.182758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.93894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9979.85      3149.33      1083.61       1200.1      153.106      11745.4      2102.84
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.85e-05  6.76e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-07  6.76e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.75869e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  6.74815e-06  5.56995e-06   8.9776e-07  3.37498e-08  1.39899e-07  5.39003e-09  1.01155e-07  2.47706e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.4777, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         2.08281e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.90975, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8981.87      2834.39      975.249      1080.09      137.796      10570.9      1892.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.8e-05  6.55e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.32e-07  6.55e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.54912e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999993  6.53891e-06  5.41271e-06  8.54276e-07  3.25659e-08  1.32855e-07  5.16826e-09  1.01084e-07  2.47928e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.44896, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         3.12421e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.97742, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5987.91       1889.6      650.166      720.059      91.8637      7047.25       1261.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-05  5.77e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.08e-07  5.77e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.76532e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999994  5.75634e-06  4.81227e-06  7.02028e-07  2.83078e-08  1.08809e-07  4.39103e-09  1.00278e-07  2.49037e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.51669, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         4.16562e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183654, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4490.93       1417.2      487.624      540.044      68.8978      5285.44      946.277
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-05  5.23e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.91e-07  5.23e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.23387e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  5.22571e-06  4.39483e-06  6.07722e-07  2.55515e-08  9.43123e-08  3.90484e-09  9.91364e-08  2.50125e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52118, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.20702e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.18323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.00319, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3592.75      1133.76        390.1      432.036      55.1182      4228.35      757.022
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-05  4.84e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-07  4.84e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.83742e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.82988e-06  4.07847e-06  5.41834e-07  2.35526e-08  8.43229e-08  3.56049e-09  9.78945e-08  2.51183e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.54094, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         6.24842e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183757, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.98659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2993.96      944.798      325.083       360.03      45.9319      3523.63      630.852
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-05  4.52e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.69e-07  4.52e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.52447e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.51742e-06  3.82593e-06  4.92413e-07  2.20044e-08  7.68872e-08  3.29853e-09  9.66386e-08  2.52204e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.52641, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         7.28983e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183179, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.0377, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2566.25      809.827      278.643      308.597      39.3702      3020.25       540.73
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-05  4.27e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-07  4.27e-06         1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.26794e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.26129e-06  3.61717e-06  4.53557e-07  2.07527e-08  7.10665e-08  3.08971e-09  9.54041e-08  2.53185e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57707, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         8.33123e+09
      global relaxation matrix dimension = 296
      setting global matrices ... done, cpu time[sec] = 0.183044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.03426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2245.47      708.599      243.812      270.022      34.4489      2642.72      473.139
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.2e-05  4.05e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-07  4.05e-06        -1
         *Z       ---       ---  1.26e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.05192e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996   4.0456e-06  3.44021e-06  4.21962e-07  1.97093e-08  6.63451e-08  2.91769e-09  9.42058e-08  2.54127e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.57272, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 54761 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005822
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136159
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.117735
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.122689
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.507014
         W1 Well: minimal relaxation eigenvalue = 0.012268
         W1 Well: maximal relaxation eigenvalue = 1.37452
         W1 Well:       grid size = 288
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 183
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -139 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 160 1/cm
         B3 Barrier:        grid size = 198
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 204
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6439 1/cm
         B5 Barrier: nonpositive number of states at -23239 1/cm => truncating
         B5 Barrier:        grid size = 260
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23239 1/cm
         B6 Barrier:        grid size = 178
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1360 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4660 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.15778, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23239 4.42e+05 2.76e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -139  1.9e+17
         B2    161 6.37e+16
         B3  -4639  2.3e+16
         B4  -6439 2.52e+16
         B5 -23239 3.25e+15
         B6   1361 2.34e+17
         B7   4661 4.41e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.48e-13  8.27e-13  1.45e-13  4.45e-14  5.37e-20  1.77e-11  7.56e-10
          R  2.23e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  1.21e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  6.89e+12      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  2.25e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.86e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  5.66e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.32e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.13e-16  1.13e-15  1.99e-16   6.1e-17  7.36e-23  2.42e-14  1.04e-12
          R  1.63e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  8.83e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  5.03e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  1.64e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.36e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  4.13e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  9.66e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
   MasterEquation::set:  done, cpu time[sec] = 1.16903, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.67581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             102802      34556.4      12450.3      13664.3      1764.91       127047      23920.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.4e-05  3.99e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-06  3.99e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.99188e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99996  3.98407e-05  3.02052e-05  7.53856e-06  2.40294e-07  1.43604e-06  4.53015e-08   3.7412e-07  1.18278e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.18374, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+08
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172328, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34267.5      11518.8       4150.1      4554.78      588.303        42349      7973.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.82e-05  3.22e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.96e-07  3.22e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.2209e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999968   3.2146e-05  2.56315e-05  5.08458e-06  1.72042e-07  8.38427e-07  2.94339e-08  3.88819e-07  1.18471e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.2041, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.00278e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.171167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75669, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20560.5      6911.27      2490.06      2732.87      352.982      25409.4      4784.13
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.08e-05  2.86e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     9e-07  2.86e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.86241e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999971  2.85681e-05  2.32055e-05  4.13595e-06  1.47422e-07    6.592e-07  2.42986e-08  3.94483e-07  1.18666e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26074, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         1.40389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.171435, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.77396, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14686.1      4936.62      1778.61      1952.05       252.13      18149.6      3417.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.59e-05  2.63e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.36e-07  2.63e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.62982e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999974  2.62467e-05  2.15465e-05  3.58415e-06  1.32988e-07  5.63503e-07  2.14385e-08  3.96934e-07  1.18864e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.27766, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1           1.805e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.171446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.786, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11422.5      3839.59      1383.37      1518.26      196.101      14116.3      2657.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.23e-05  2.46e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.9e-07  2.46e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.45903e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999975  2.45422e-05    2.029e-05  3.20925e-06  1.23002e-07  5.01365e-07  1.95246e-08  3.97818e-07  1.19063e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.29255, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         2.00556e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172877, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78831, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10280.2      3455.64      1245.03      1366.43      176.491      12704.7      2392.07
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.08e-05  2.39e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.7e-07  2.39e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.38834e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999976  2.38367e-05  1.97611e-05  3.06131e-06     1.19e-07  4.77401e-07  1.87727e-08  3.97903e-07  1.19162e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.2977, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         3.00833e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172303, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.83334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6853.5      2303.76      830.019      910.955      117.661       8469.8      1594.71
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-05  2.12e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.97e-07  2.12e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.1224e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999979  2.11825e-05  1.77282e-05  2.54081e-06  1.04538e-07  3.95217e-07  1.61251e-08  3.96393e-07  1.19655e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.34159, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.01111e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172571, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84462, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5140.12      1727.82      622.515      683.216      88.2454      6352.35      1196.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.11e-05  1.94e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.46e-07  1.94e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.94052e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999981  1.93673e-05  1.63018e-05  2.21608e-06  9.51061e-08  3.45336e-07  1.44574e-08  3.93322e-07  1.20139e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.35284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         5.01389e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.84232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4112.1      1382.25      498.012      546.573      70.5964      5081.88      956.827
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.81e-05   1.8e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.07e-07   1.8e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.80394e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999982  1.80041e-05  1.52131e-05  1.98793e-06  8.82254e-08  3.10775e-07  1.32695e-08  3.89665e-07   1.2061e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.35189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         6.01667e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172226, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.86824, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3426.75      1151.88       415.01      455.478      58.8303       4234.9      797.356
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.57e-05   1.7e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.76e-07   1.7e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.69553e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999983  1.69221e-05   1.4339e-05  1.81599e-06  8.28693e-08   2.8493e-07  1.23615e-08  3.85799e-07  1.21065e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.37757, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         7.01944e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.172343, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.89843, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2937.21      987.324      355.723      390.409       50.426      3629.91      683.448
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-05  1.61e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.51e-07  1.61e-05        -1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.60624e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984   1.6031e-05  1.36129e-05  1.68026e-06  7.85195e-08  2.64617e-07  1.16347e-08  3.81894e-07  1.21504e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.40602, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         8.02222e+09
      global relaxation matrix dimension = 288
      setting global matrices ... done, cpu time[sec] = 0.173401, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.88562, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2570.06      863.909      311.257      341.608      44.1227      3176.18      598.017
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-05  1.53e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.29e-07  1.53e-05         1
         *Z       ---       ---  6.31e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.53074e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999985  1.52774e-05  1.29947e-05  1.56949e-06  7.48795e-08  2.48082e-07  1.10337e-08  3.78031e-07  1.21925e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.39376, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 57541 1/cm
      Energy step      = 317 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006165
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132679
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.113135
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.139393
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.470189
         W1 Well: minimal relaxation eigenvalue = 0.0119231
         W1 Well: maximal relaxation eigenvalue = 3.78525
         W1 Well:       grid size = 282
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -152 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4907 1/cm
         B4 Barrier: nonpositive number of states at -6176 1/cm => truncating
         B4 Barrier:        grid size = 201
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6176 1/cm
         B5 Barrier: nonpositive number of states at -23611 1/cm => truncating
         B5 Barrier:        grid size = 256
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23611 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4602 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.13309, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23611 3.37e+05 3.87e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -152  2.9e+17
         B2    164 1.03e+17
         B3  -4907 3.91e+16
         B4  -6176 4.25e+16
         B5 -23611 5.56e+15
         B6   1433 3.75e+17
         B7   4603 7.39e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e-13  2.12e-13  4.41e-14  1.45e-14   3.8e-20  4.02e-12  1.51e-10
          R  8.83e+12         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  4.72e+12     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  2.27e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  6.88e+13      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  2.63e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  2.49e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  6.62e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.64e-16  3.06e-16  6.38e-17   2.1e-17  5.49e-23  5.81e-15  2.19e-13
          R   6.1e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  3.26e+15     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  1.57e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  4.75e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  1.82e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  1.72e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  4.57e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
   MasterEquation::set:  done, cpu time[sec] = 1.14476, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.167202, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.5769, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             115982      41395.3      15640.1      17023.2      2223.81       150048        29583
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000259   0.00012         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.3e-06   0.00012         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000119618
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999881  0.000119411  9.08571e-05  2.22352e-05  7.17098e-07  4.21833e-06  1.34182e-07  1.24391e-06  4.75093e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.5913, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.64477, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38660.6      13798.4      5213.36      5674.39      741.271      50015.9      9860.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000219   9.8e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.77e-06   9.8e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.80329e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999902  9.78633e-05  7.82095e-05  1.52327e-05  5.23532e-07  2.51032e-06  8.89736e-08  1.29348e-06  4.75821e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.11692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         9.67706e+08
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.167052, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.64987, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23196.4      8279.06      3128.01      3404.63      444.763      30009.5      5916.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0002  8.79e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.52e-06  8.79e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.78696e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999912  8.77175e-05   7.1377e-05  1.25002e-05  4.53181e-07  1.99391e-06  7.42332e-08  1.31421e-06  4.76557e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.12501, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.35479e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166504, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.66521, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16568.8      5913.61       2234.3      2431.88      317.688      21435.4      4226.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000187  8.12e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.36e-06  8.12e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.12254e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999919  8.10848e-05  6.66595e-05  1.09017e-05  4.11727e-07  1.71677e-06  6.59833e-08  1.32447e-06  4.77297e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.14053, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.74187e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6897, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12886.9      4599.48      1737.79      1891.46       247.09        16672         3287
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000178  7.63e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-06  7.63e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.63188e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999924  7.61867e-05  6.30621e-05  9.81086e-06  3.82925e-07  1.53611e-06  6.04415e-08  1.32949e-06  4.78039e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.16544, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         1.93541e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166441, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68688, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11598.2      4139.53      1564.01      1702.32      222.381      15004.8       2958.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000174  7.43e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.19e-06  7.43e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.42808e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999926  7.41523e-05  6.15417e-05  9.37921e-06  3.71352e-07  1.46625e-06  5.82583e-08  1.33079e-06   4.7841e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.16164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         2.90312e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.72909, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7732.12      2759.69      1042.67      1134.88      148.254      10003.2       1972.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000159  6.66e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.99e-06  6.66e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.65717e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999934  6.64565e-05  5.56614e-05  7.85424e-06  3.29346e-07  1.22575e-06  5.05415e-08  1.33045e-06  4.80251e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.20384, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         3.87082e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166113, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75411, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5799.09      2069.76      782.003      851.158      111.191      7502.38      1479.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000148  6.13e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-06  6.13e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.12588e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999939  6.11528e-05  5.15003e-05  6.89696e-06  3.01775e-07  1.07891e-06   4.5651e-08  1.32429e-06  4.82056e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22854, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.83853e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.75054, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4639.27      1655.81      625.603      680.927      88.9525       6001.9      1183.32
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00014  5.72e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.75e-06  5.72e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.72448e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999943  5.71458e-05  4.83038e-05  6.22107e-06  2.81555e-07  9.76682e-07  4.21507e-08  1.31566e-06  4.83812e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.22697, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         5.80624e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.166763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.78746, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3866.06      1379.84      521.336      567.439      74.1271      5001.59      986.099
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000134   5.4e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-06   5.4e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.40428e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999946  5.39493e-05  4.57238e-05  5.70963e-06  2.65745e-07  8.99927e-07  3.94638e-08  1.30593e-06  4.85512e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.26296, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         6.77394e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.167064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.77388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3313.77      1182.72      446.859      486.376      63.5375      4287.07      845.227
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000128  5.14e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-06  5.14e-05        -1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.13944e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999949  5.13054e-05  4.35709e-05  5.30444e-06  2.52855e-07  8.39388e-07  3.73051e-08  1.29573e-06  4.87154e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.24804, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         7.74165e+09
      global relaxation matrix dimension = 282
      setting global matrices ... done, cpu time[sec] = 0.165642, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.80253, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2899.55      1034.88      391.002      425.579      55.5953      3751.19      739.574
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000124  4.91e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-06  4.91e-05         1
         *Z       ---       ---  3.45e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.91463e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999951  4.90613e-05  4.17308e-05  4.97274e-06  2.42032e-07  7.89951e-07  3.55143e-08  1.28538e-06  4.88736e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.2777, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 60322 1/cm
      Energy step      = 333 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005791
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13506
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.108861
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.124917
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.465321
         W1 Well: minimal relaxation eigenvalue = 0.011614
         W1 Well: maximal relaxation eigenvalue = 1.32929
         W1 Well:       grid size = 276
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31586 1/cm
         B1 Barrier:        grid size = 182
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -284 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 48 1/cm
         B3 Barrier:        grid size = 195
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4613 1/cm
         B4 Barrier:        grid size = 200
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6278 1/cm
         B5 Barrier: nonpositive number of states at -23595 1/cm => truncating
         B5 Barrier:        grid size = 252
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23594 1/cm
         B6 Barrier:        grid size = 177
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1380 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4710 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.11041, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31586 -23594 3.41e+05 5.39e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -284 4.34e+17
         B2     49 1.64e+17
         B3  -4613 6.51e+16
         B4  -6278 7.03e+16
         B5 -23594 9.28e+15
         B6   1381 5.87e+17
         B7   4711 1.21e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.3e-14  6.26e-14  1.52e-14  5.34e-15  2.79e-20  1.06e-12  3.55e-11
          R  3.03e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1   1.6e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  6.59e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.87e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  3.59e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  9.44e+11    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  2.82e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.02e-17  9.51e-17  2.31e-17  8.11e-18  4.24e-23  1.61e-15   5.4e-14
          R  1.99e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.05e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  4.34e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.23e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  2.36e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  6.21e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  1.85e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
   MasterEquation::set:  done, cpu time[sec] = 1.12196, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158813, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             129213      48825.1      19361.9      20917.4      2761.25       174517      35895.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000618  0.000314         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.93e-06  0.000314         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000314018
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999686  0.000313515  0.000239547  5.72408e-05  1.87841e-06   1.0878e-05  3.48921e-07  3.60579e-06  1.63874e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.97797, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53107, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            43070.9        16275      6453.97      6972.47      920.418      58172.3      11965.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000531  0.000261         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.76e-06  0.000261        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000261194
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999739  0.000260775  0.000208885  3.99029e-05  1.39617e-06  6.58858e-06  2.35757e-07  3.75084e-06  1.64111e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         9.35673e+08
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158106, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.56824, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25842.6      9765.02      3872.38      4183.48      552.251      34903.4       7179.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000488  0.000236         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.19e-06  0.000236         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000235981
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999764  0.000235603  0.000192034  3.30356e-05  1.21989e-06  5.28291e-06   1.9864e-07   3.8156e-06  1.64349e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.0188, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.30994e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.59283, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              18459      6975.01      2765.99       2988.2      394.465        24931      5127.93
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00046  0.000219         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.82e-06  0.000219        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000219373
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999781  0.000219022  0.000180292  2.89904e-05  1.11555e-06  4.57908e-06  1.77779e-07   3.8506e-06  1.64588e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04461, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.68421e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.15831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61036, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              14357      5425.01      2151.32      2324.16      306.806      19390.8      3988.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000439  0.000207         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.54e-06  0.000207         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000207042
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999793   0.00020671  0.000171281  2.62169e-05   1.0428e-06  4.11866e-06  1.63718e-07  3.87042e-06  1.64827e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06439, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         1.87135e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159251, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61883, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12921.3      4882.51      1936.19      2091.74      276.125      17451.7      3589.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00043  0.000202         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.42e-06  0.000202        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000201902
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999798  0.000201579  0.000167458  2.51162e-05   1.0135e-06  3.94021e-06  1.58166e-07  3.87673e-06  1.64947e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.07281, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         2.80702e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.15914, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.63173, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8614.19      3255.01      1290.79      1394.49      184.084      11634.5      2393.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000396  0.000182         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.97e-06  0.000182         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000182362
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999818  0.000182069  0.000152585   2.1211e-05  9.06735e-07  3.32373e-06  1.38474e-07  3.88764e-06  1.65539e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.08549, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         3.74269e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159222, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6460.64      2441.25      968.096      1045.87      138.063      8725.84      1794.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000371  0.000169         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.66e-06  0.000169        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000168796
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999831  0.000168526  0.000141977  1.87445e-05  8.36258e-07  2.94535e-06  1.25928e-07  3.88022e-06  1.66119e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10984, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.67837e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159333, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68886, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5168.51         1953      774.477      836.696       110.45      6980.67      1435.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000353  0.000158         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.42e-06  0.000158        -1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00015849
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999842  0.000158236  0.000133778  1.69949e-05   7.8433e-07   2.6808e-06   1.1691e-07  3.86442e-06  1.66684e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.1441, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         5.61404e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.158699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.69242, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4307.09       1627.5      645.397      697.247      92.0418      5817.23      1196.52
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000338   0.00015         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.22e-06   0.00015         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000150231
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99985   0.00014999  0.000127128  1.56658e-05  7.43565e-07  2.48145e-06  1.09961e-07  3.84438e-06  1.67232e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.14611, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         6.54971e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.159071, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.68096, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             3691.8         1395      553.198       597.64       78.893      4986.19      1025.59
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000325  0.000143         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.06e-06  0.000143         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000143372
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999857  0.000143142  0.000121556  1.46092e-05  7.10214e-07  2.32372e-06   1.0436e-07  3.82214e-06  1.67762e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.13447, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         7.48539e+09
      global relaxation matrix dimension = 276
      setting global matrices ... done, cpu time[sec] = 0.160263, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.70912, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3230.32      1220.63      484.048      522.935      69.0313      4362.92      897.388
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000315  0.000138         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.92e-06  0.000138         1
         *Z       ---       ---  2.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000137529
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999863  0.000137309  0.000116775  1.37418e-05   6.8212e-07  2.19455e-06  9.96998e-08  3.79879e-06  1.68273e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.16424, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 63101 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005931
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.151374
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.104664
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.117999
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.420704
         W1 Well: minimal relaxation eigenvalue = 0.0113288
         W1 Well: maximal relaxation eigenvalue = 1.66569
         W1 Well:       grid size = 271
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31749 1/cm
         B1 Barrier:        grid size = 181
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -248 1/cm
         B2 Barrier:        grid size = 180
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 194
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4799 1/cm
         B4 Barrier:        grid size = 198
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -23349 1/cm => truncating
         B5 Barrier:        grid size = 247
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23349 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1501 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4650 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.06642, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31749 -23349 4.08e+05 7.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -248 6.39e+17
         B2    101 2.55e+17
         B3  -4799 1.06e+17
         B4  -6198 1.14e+17
         B5 -23349 1.52e+16
         B6   1502 8.99e+17
         B7   4651 1.92e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.08e-14  2.08e-14  5.76e-15  2.15e-15  2.11e-20  3.16e-13  9.54e-12
          R  9.25e+13         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  4.81e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.73e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  4.65e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  4.75e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  3.16e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  1.05e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.73e-17  3.32e-17   9.2e-18  3.43e-18  3.36e-23  5.05e-16  1.52e-14
          R  5.79e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  3.01e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.09e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  2.91e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  2.97e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  1.98e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  6.56e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
   MasterEquation::set:  done, cpu time[sec] = 1.07799, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             142366      56803.9      23619.7      25385.5      3383.65       200251      42831.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00131  0.000737         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.71e-05  0.000737        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000737039
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999264  0.000735987  0.000563894  0.000132475  4.39812e-06  2.50621e-05  8.10914e-07  9.29712e-06  4.96382e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.91685, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.152545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48191, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47455.4      18934.6      7873.23      8461.85      1127.88      66750.3      14277.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00114  0.000621         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-05  0.000621        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000621094
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99938  0.000620207  0.000497627  9.35351e-05  3.32464e-06  1.54382e-05   5.5783e-07  9.67461e-06  4.97067e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.93493, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         9.06265e+08
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50582, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            28473.3      11360.8      4723.94      5077.11       676.73      40050.2      8566.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00106  0.000565         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-05  0.000565        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000565189
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999436  0.000564382  0.000460568  7.80183e-05  2.93018e-06  1.24895e-05  4.74357e-07  9.85153e-06  4.97749e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95828, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.26877e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153607, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52707, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              20338      8114.84      3374.24      3626.51      483.379      28607.3      6118.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.001  0.000528         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-05  0.000528         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000528129
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999473  0.000527375  0.000434517  6.88382e-05  2.69584e-06  1.08936e-05   4.2727e-07  9.95308e-06   4.9843e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.63128e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153156, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15818.5      6311.54      2624.41      2820.62      375.961      22250.1      4759.06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000958    0.0005         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-05    0.0005        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000500478
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1       0.9995  0.000499764  0.000414402  6.25228e-05  2.53192e-06  9.84631e-06  3.95438e-07  1.00156e-05  4.99111e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         1.81253e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154275, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53457, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14236.6      5680.39      2361.97      2538.55      338.365      20025.1      4283.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00094  0.000489         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-05  0.000489        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000488918
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999512   0.00048822  0.000405834  6.00107e-05  2.46575e-06  9.43958e-06  3.82845e-07  1.00375e-05   4.9945e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98813, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         2.71879e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53583, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9491.09      3786.93      1574.65      1692.37      225.577      13350.1      2855.44
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000872  0.000445         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.11e-05  0.000445        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000444764
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999556  0.000444129  0.000372326  5.10683e-05  2.22388e-06  8.03003e-06  3.38039e-07  1.00921e-05   5.0113e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99003, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         3.62506e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154221, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.58883, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7118.32      2840.19      1180.98      1269.28      169.183      10012.5      2141.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000823  0.000414         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.04e-05  0.000414         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000413909
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999587  0.000413318  0.000348245  4.53922e-05   2.0634e-06  7.16075e-06  3.09358e-07  1.00966e-05  5.02775e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.04284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.53132e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.15425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61317, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5694.65      2272.16      944.788      1015.42      135.346      8010.04      1713.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000786   0.00039         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.93e-06   0.00039         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000390346
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99961  0.000389788  0.000329527  4.13496e-05  1.94466e-06  6.55065e-06  2.88659e-07  1.00769e-05  5.04377e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06656, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         5.43759e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154285, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4745.54      1893.46      787.323      846.185      112.788      6675.03      1427.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000755  0.000371         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.52e-06  0.000371        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000371381
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999629  0.000370851  0.000314274  3.82683e-05  1.85111e-06  6.08942e-06  2.72659e-07  1.00442e-05  5.05931e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06958, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         6.34385e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.153822, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.6202, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4067.61      1622.97      674.848      725.301      96.6757      5721.45      1223.76
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000729  0.000356         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.18e-06  0.000356        -1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000355575
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999645  0.000355067  0.000301443  3.58118e-05  1.77434e-06  5.72343e-06  2.59725e-07   1.0004e-05  5.07437e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.07389, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         7.25012e+09
      global relaxation matrix dimension = 271
      setting global matrices ... done, cpu time[sec] = 0.154359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.65022, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3559.16       1420.1      590.492      634.638      84.5913      5006.27      1070.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000707  0.000342         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.89e-06  0.000342         1
         *Z       ---       ---  1.28e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000342068
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999658  0.000341579  0.000290398  3.37897e-05  1.70948e-06  5.42294e-06  2.48934e-07  9.95939e-06  5.08893e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.10393, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 65881 1/cm
      Energy step      = 367 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005996
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120238
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.100682
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.129066
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.416268
         W1 Well: minimal relaxation eigenvalue = 0.0110689
         W1 Well: maximal relaxation eigenvalue = 1.6596
         W1 Well:       grid size = 266
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31741 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -179 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 187 1/cm
         B3 Barrier:        grid size = 193
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4950 1/cm
         B4 Barrier:        grid size = 197
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6418 1/cm
         B5 Barrier: nonpositive number of states at -23667 1/cm => truncating
         B5 Barrier:        grid size = 244
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23667 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1288 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4591 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03765, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31741 -23667 3.23e+05 1.02e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -179 9.25e+17
         B2    188 3.89e+17
         B3  -4950  1.7e+17
         B4  -6418 1.81e+17
         B5 -23667 2.44e+16
         B6   1289 1.35e+18
         B7   4592    3e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.92e-15  7.64e-15  2.39e-15  9.43e-16  1.63e-20  1.05e-13  2.88e-12
          R  2.55e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  1.31e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  4.18e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  1.06e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  6.12e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  9.51e+12    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  3.47e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.57e-18  1.28e-17  4.01e-18  1.58e-18  2.73e-23  1.76e-16  4.83e-15
          R  1.52e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  7.82e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  2.49e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  6.33e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  3.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  5.68e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  2.07e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
   MasterEquation::set:  done, cpu time[sec] = 1.04882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.149051, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3865, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             155329      65285.2      28481.1      30464.3      4097.21       227043      50356.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0025   0.00157         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.35e-05   0.00157    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00156945
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998433   0.00156703   0.00120206    0.0002799  9.32615e-06  5.22316e-05  1.70605e-06   2.1677e-05  1.34418e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82717, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147473, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42015, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            51776.4      21761.7      9493.69      10154.8      1365.74      75681.1      16785.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0022   0.00134         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.92e-05   0.00134    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00133839
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998664   0.00133632   0.00107307  0.000199463  7.16999e-06  3.27357e-05  1.19514e-06  2.25533e-05  1.34595e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          8.7914e+08
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4413, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31065.8        13057      5696.21      6092.86      819.442      45408.6      10071.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00206   0.00123         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-05   0.00123    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00122597
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998776   0.00122408  0.000999465  0.000167381  6.37235e-06  2.67161e-05  1.02547e-06  2.29824e-05   1.3477e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86668, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          1.2308e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148388, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.44854, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22189.9      9326.46      4068.72      4352.05      585.316      32434.7      7193.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00196   0.00115         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.57e-05   0.00115     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00115102
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998851   0.00114925  0.000947239  0.000148362   5.8966e-06  2.34444e-05   9.2939e-07  2.32405e-05  1.34944e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87213, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.58245e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148277, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46701, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17258.8      7253.91      3164.56      3384.92      455.245        25227      5595.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00188   0.00109         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-05   0.00109     0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00109486
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998907   0.00109317   0.00090666  0.000135252   5.5628e-06  2.12906e-05  8.64248e-07  2.34087e-05  1.35117e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         1.75828e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15532.9      6528.52      2848.11      3046.43      409.721      22704.3      5035.62
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00185   0.00107         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.42e-05   0.00107    -0.999
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00107132
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99893   0.00106967  0.000889311  0.000130029  5.42779e-06  2.04525e-05  8.38428e-07  2.34709e-05  1.35203e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89665, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         2.63742e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.14861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.48986, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10355.3      4352.35      1898.74      2030.95      273.147      15136.2      3357.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00173  0.000981         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.24e-05  0.000981         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000981012
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99902    0.0009795  0.000821098  0.000111397   4.9327e-06  1.75392e-05  7.46294e-07  2.36519e-05   1.3563e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.91566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         3.51656e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50547, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7766.46      3264.26      1424.05      1523.22       204.86      11352.2      2517.81
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00164  0.000918         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.12e-05  0.000918         1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000917527
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999084  0.000916113  0.000771714  9.95274e-05  4.60265e-06  1.57344e-05  6.87056e-07   2.3711e-05  1.36048e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1          4.3957e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.53334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6213.17      2611.41      1139.24      1218.57      163.888      9081.73      2014.25
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00157  0.000869         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.02e-05  0.000869        -1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000868815
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999133  0.000867476  0.000733118   9.1048e-05  4.35748e-06  1.44631e-05  6.44152e-07   2.3709e-05  1.36454e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.95579, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         5.27484e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.14807, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54018, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5177.64      2176.17      949.369      1015.48      136.574      7568.11      1678.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00151  0.000829         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.95e-05  0.000829        -1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000829455
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999172  0.000828176  0.000701526  8.45678e-05  4.16369e-06  1.34991e-05  6.10884e-07  2.36724e-05  1.36849e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96408, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         6.15398e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.147755, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.43755, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4437.98      1865.29      813.745      870.409      117.063      6486.95      1438.75
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00147  0.000797         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-05  0.000797        -1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000796539
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999205  0.000795311  0.000674849  7.93894e-05  4.00417e-06  1.27321e-05  5.83917e-07  2.36149e-05  1.37232e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.86056, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         7.03312e+09
      global relaxation matrix dimension = 266
      setting global matrices ... done, cpu time[sec] = 0.148242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.55788, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3883.23      1632.13      712.026      761.608       102.43      5676.08      1258.91
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00143  0.000768         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.83e-05  0.000768        -1
         *Z       ---       ---  8.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000768327
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999233  0.000767143  0.000651812  7.51175e-05  3.86906e-06  1.21009e-05  5.61365e-07  2.35443e-05  1.37603e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.98197, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 68662 1/cm
      Energy step      = 383 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005484
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.117747
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.098247
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.125586
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.402424
         W1 Well: minimal relaxation eigenvalue = 0.0108311
         W1 Well: maximal relaxation eigenvalue = 1.52806
         W1 Well:       grid size = 262
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31684 1/cm
         B1 Barrier:        grid size = 180
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -278 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 104 1/cm
         B3 Barrier:        grid size = 192
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4873 1/cm
         B4 Barrier:        grid size = 196
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6406 1/cm
         B5 Barrier: nonpositive number of states at -23641 1/cm => truncating
         B5 Barrier:        grid size = 241
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23641 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1254 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0144, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31684 -23641 3.29e+05 1.38e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -278 1.32e+18
         B2    105 5.82e+17
         B3  -4873 2.67e+17
         B4  -6406 2.84e+17
         B5 -23641 3.85e+16
         B6   1255    2e+18
         B7   4701 4.59e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.56e-15  3.08e-15  1.08e-15  4.46e-16   1.3e-20  3.85e-14  9.68e-13
          R   6.4e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  3.25e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  9.28e+14      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  2.24e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  7.69e+19   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  2.59e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  1.03e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.73e-18  5.39e-18  1.88e-18  7.79e-19  2.27e-23  6.74e-17  1.69e-15
          R  3.66e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  1.86e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  5.31e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  1.28e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4   4.4e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  1.48e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  5.91e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
   MasterEquation::set:  done, cpu time[sec] = 1.02561, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.145878, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             168007      74222.1      33985.1      36190.4      4908.16       254696      58430.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00435   0.00306         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.05e-05   0.00306     0.998
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00305923
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996946    0.0030543   0.00235238  0.000533888    1.817e-05  9.98935e-05  3.29633e-06  4.63426e-05   3.3036e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77812, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143742, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56002.4      24740.7      11328.4      12063.5      1636.05      84898.7      19476.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00388   0.00264         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.33e-05   0.00264     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00264004
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997364   0.00263579   0.00212094  0.000386198  1.41831e-05  6.35971e-05  2.34786e-06  4.81899e-05  3.30773e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.79375, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          8.5402e+08
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144084, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38729, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33601.4      14844.4      6797.02      7238.09      981.631      50939.2      11686.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00365   0.00243         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.97e-05   0.00243     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00243389
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99757   0.00242997   0.00198684  0.000326601   1.2704e-05  5.23355e-05  2.03173e-06  4.91254e-05  3.31178e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.19563e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.40193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              24001      10603.2      4855.02      5170.06      701.165      36385.2      8347.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00349    0.0023         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.73e-05    0.0023     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00229559
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997708   0.00229189   0.00189092  0.000291063  1.18194e-05  4.61941e-05   1.8522e-06  4.97081e-05   3.3158e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.82628, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.53724e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144647, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42695, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18667.5       8246.9      3776.12      4021.16      545.351      28299.6      6492.31
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00337   0.00219         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.54e-05   0.00219    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00219148
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997812   0.00218795   0.00181598  0.000266468  1.11972e-05  4.21403e-05  1.73019e-06   5.0103e-05  3.31979e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         1.70804e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144409, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42578, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16800.7      7422.21      3398.51      3619.04      490.816      25469.6      5843.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00331   0.00215         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.47e-05   0.00215     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00214771
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997856   0.00214425   0.00178383  0.000256647  1.09451e-05    4.056e-05  1.68175e-06  5.02543e-05  3.32178e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.85032, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         2.56206e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43653, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11200.5      4948.14      2265.67       2412.7       327.21      16979.7      3895.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00311   0.00198         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.17e-05   0.00198    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00197909
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998024    0.0019759   0.00165678  0.000221479  1.00182e-05   3.5052e-05  1.50846e-06  5.07325e-05   3.3316e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.86081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         3.41608e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45659, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8400.35       3711.1      1699.26      1809.52      245.408      12734.8      2921.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00297   0.00186         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.95e-05   0.00186    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00185983
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998143   0.00185683   0.00156417  0.000198962  9.39762e-06  3.16258e-05   1.3966e-06  5.09453e-05   3.3412e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8806, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1          4.2701e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144979, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.47489, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6720.28      2968.88       1359.4      1447.62      196.326      10187.8      2337.23
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00286   0.00177         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.79e-05   0.00177    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00176788
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998235   0.00176503   0.00149141  0.000182812  8.93503e-06  2.92044e-05  1.31532e-06  5.10209e-05  3.35055e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.89919, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.12412e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144027, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4471, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5600.24      2474.07      1132.84      1206.35      163.605      8489.87      1947.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00276   0.00169         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.65e-05   0.00169    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0016933
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998309   0.00169057   0.00143161   0.00017043  8.56824e-06   2.7363e-05  1.25211e-06  5.10165e-05  3.35964e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.87102, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         5.97814e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.144796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46308, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             4800.2      2120.63      971.003      1034.01      140.233      7277.03      1669.45
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00269   0.00163         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.54e-05   0.00163    -0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00163072
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998372   0.00162809   0.00138093  0.000160508  8.26551e-06  2.58943e-05  1.20075e-06  5.09619e-05  3.36846e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.88921, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         6.83216e+09
      global relaxation matrix dimension = 262
      setting global matrices ... done, cpu time[sec] = 0.143863, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.50046, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4200.18      1855.55      849.628      904.761      122.704       6367.4      1460.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00262   0.00158         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.44e-05   0.00158     0.999
         *Z       ---       ---  5.85e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00157693
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998426   0.00157439   0.00133703  0.000152303  8.00847e-06  2.46829e-05   1.1577e-06  5.08742e-05  3.37702e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.9237, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 71442 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00552
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.115964
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.095177
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.107145
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.387062
         W1 Well: minimal relaxation eigenvalue = 0.0106089
         W1 Well: maximal relaxation eigenvalue = 1.76191
         W1 Well:       grid size = 258
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31757 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -158 1/cm
         B2 Barrier:        grid size = 179
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -158 1/cm
         B3 Barrier:        grid size = 191
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4958 1/cm
         B4 Barrier:        grid size = 195
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6557 1/cm
         B5 Barrier: nonpositive number of states at -23758 1/cm => truncating
         B5 Barrier:        grid size = 238
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23758 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1441 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4642 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.97499, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31757 -23758 3.02e+05 1.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -158 1.85e+18
         B2   -158 8.59e+17
         B3  -4958 4.13e+17
         B4  -6557 4.38e+17
         B5 -23758 5.98e+16
         B6   1442 2.91e+18
         B7   4643 6.88e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.71e-16  1.34e-15  5.18e-16  2.24e-16  1.05e-20  1.53e-14  3.55e-13
          R  1.49e+15         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  7.46e+14       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.93e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  4.46e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  9.49e+19  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  6.53e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  2.82e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e-18  2.45e-18  9.45e-19  4.09e-19  1.92e-23   2.8e-17  6.48e-16
          R  8.17e+17         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  4.09e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.06e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  2.44e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4   5.2e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  3.58e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  1.54e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
   MasterEquation::set:  done, cpu time[sec] = 0.9861, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             180312      83558.3      40163.8      42593.4      5821.69       282996      67004.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00701   0.00553         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000102   0.00553     0.997
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00553192
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994477   0.00552307   0.00426165  0.000953665  3.27623e-05  0.000176452  5.88991e-06  9.19029e-05  7.46406e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.138233, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34375, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60104.1      27852.8      13387.9      14197.8      1940.56        94332        22335
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00633   0.00483         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.07e-05   0.00483     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00482614
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995182   0.00481842   0.00388078  0.000696916  2.59842e-05   0.00011425  4.26988e-06  9.54766e-05  7.47297e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74176, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1          8.3067e+08
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139371, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36062.4      16711.7      8032.75      8518.68      1164.34      56599.2        13401
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00598   0.00448         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.5e-05   0.00448     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00447554
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995532   0.00446839   0.00365544  0.000592871  2.34554e-05  9.48171e-05  3.72664e-06  9.73308e-05  7.48165e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.16294e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139385, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37036, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            25758.9      11936.9      5737.68      6084.77       831.67        40428      9572.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00574   0.00424         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.11e-05   0.00424     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00423903
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995768   0.00423225   0.00349278   0.00053067  2.19376e-05  8.41773e-05  3.41706e-06  9.85167e-05  7.49024e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.49521e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140298, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.39218, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20034.7      9284.26      4462.64       4732.6      646.855        31444      7444.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00556   0.00406         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.82e-05   0.00406     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00406025
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995946   0.00405375   0.00336492   0.00048753  2.08672e-05  7.71339e-05  3.20611e-06  9.93439e-05  7.49874e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.79233, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         1.66134e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.13898, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38538, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18031.2      8355.83      4016.38      4259.34      582.169      28299.6      6700.49
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00549   0.00398         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.69e-05   0.00398    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00398489
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996021   0.00397852   0.00330988   0.00047028  2.04327e-05   7.4383e-05  3.12221e-06  9.96687e-05  7.50296e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78368, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         2.49201e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139931, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4023, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12020.8      5570.56      2677.58      2839.56      388.113      18866.4      4466.99
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00518   0.00369         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.21e-05   0.00369    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00369346
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996312   0.00368756   0.00309126  0.000408377  1.88306e-05  6.47683e-05   2.8213e-06  0.000100751   7.5238e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.80129, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         3.32268e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139858, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.41746, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9015.61      4177.92      2008.19      2129.67      291.085      14149.8      3350.24
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00497   0.00349         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.87e-05   0.00349     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0034862
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996519   0.00348062   0.00293081  0.000368608  1.77535e-05  5.87629e-05   2.6263e-06  0.000101308  7.54412e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.81621, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.15335e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43984, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7212.49      3342.33      1606.55      1703.74      232.868      11319.8      2680.19
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00479   0.00333         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.6e-05   0.00333    -0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00332573
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99668   0.00332041   0.00280412  0.000340007  1.69478e-05  5.45049e-05  2.48415e-06  0.000101588  7.56391e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83922, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.98402e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43657, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6010.41      2785.28      1338.79      1419.78      194.056       9433.2       2233.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00465    0.0032         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.38e-05    0.0032     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00319509
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99681   0.00318998   0.00269956  0.000318027  1.63071e-05  5.12579e-05  2.37332e-06  0.000101702  7.58315e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         5.81469e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.139775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.45784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5151.78      2387.38      1147.54      1216.95      166.334       8085.6      1914.42
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00453   0.00309         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   6.2e-05   0.00309     0.998
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00308515
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99692   0.00308022   0.00261065  0.000300377   1.5777e-05  4.86619e-05  2.28305e-06  0.000101708  7.60184e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.8583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         6.64536e+09
      global relaxation matrix dimension = 258
      setting global matrices ... done, cpu time[sec] = 0.140265, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.4467, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4507.81      2088.96      1004.09      1064.83      145.542       7074.9      1675.12
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00443   0.00299         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.04e-05   0.00299     0.999
         *Z       ---       ---  4.22e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0029904
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997014   0.00298562   0.00253341  0.000285753  1.53258e-05  4.65161e-05  2.20722e-06  0.000101643  7.61998e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.84626, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 74222 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -50.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005333
         W1 Well: collisional kernel bandwidth = 27
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122002
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.092313
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084575
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.372807
         W1 Well: minimal relaxation eigenvalue = 0.0104029
         W1 Well: maximal relaxation eigenvalue = 1.6145
         W1 Well:       grid size = 254
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31695 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -4 1/cm
         B3 Barrier:        grid size = 190
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5008 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6259 1/cm
         B5 Barrier: nonpositive number of states at -23773 1/cm => truncating
         B5 Barrier:        grid size = 235
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23773 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1247 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4583 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.939541, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31695 -23773 2.99e+05 2.48e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.57e+18
         B2     -4 1.25e+18
         B3  -5008 6.29e+17
         B4  -6259 6.65e+17
         B5 -23773 9.15e+16
         B6   1248 4.17e+18
         B7   4583 1.02e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.09e-16  6.25e-16  2.64e-16  1.19e-16  8.69e-21  6.55e-15  1.41e-13
          R  3.24e+15         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1   1.6e+15     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  3.79e+15      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  8.39e+15      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  1.15e+20  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  1.53e+14    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6   7.1e+12   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.87e-19  1.19e-18  5.03e-19  2.27e-19  1.65e-23  1.25e-17  2.68e-16
          R   1.7e+18         1      2.02     0.856     0.386  2.82e-05      21.2       457
         P1  8.41e+17     0.494         1     0.423     0.191  1.39e-05      10.5       225
         P2  1.99e+18      1.17      2.37         1     0.451  3.29e-05      24.8       534
         P3  4.41e+18      2.59      5.24      2.22         1  7.29e-05        55  1.18e+03
         P4  6.05e+22  3.55e+04  7.19e+04  3.04e+04  1.37e+04         1  7.54e+05  1.62e+07
         P5  8.02e+16    0.0471    0.0954    0.0403    0.0182  1.33e-06         1      21.5
         P6  3.73e+15   0.00219   0.00443   0.00187  0.000846  6.17e-08    0.0465         1
   MasterEquation::set:  done, cpu time[sec] = 0.950959, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             192180      93244.7      47051.8      49705.6      6843.46       311761      76031.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106   0.00934         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000162   0.00934     0.995
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00933535
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99068   0.00932024   0.00723274   0.00155826  5.54249e-05  0.000292026  9.86961e-06  0.000170357  1.56622e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65529, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.134705, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27622, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            64060.1      31081.6      15683.9      16568.5      2281.15       103920      25343.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00964   0.00823         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000145   0.00823     0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00823251
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991781   0.00821919   0.00663781   0.00115941  4.45541e-05  0.000191819  7.26491e-06  0.000176761    1.568e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67363, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         8.08894e+08
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136403, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29803, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38436.1      18648.9      9410.35      9941.13      1368.69      62352.1      15206.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00916   0.00768         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000137   0.00768    -0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00767857
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992334   0.00766614   0.00628242  0.000994648  4.05009e-05  0.000160434  6.39066e-06  0.000180178  1.56972e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.19671, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.13245e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135382, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27454.3      13320.7      6721.68       7100.8      977.637      44537.2      10861.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00883    0.0073         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000131    0.0073    -0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00730257
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992709   0.00729075   0.00602424  0.000895357  3.80644e-05  0.000143208  5.89152e-06  0.000182415  1.57142e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6999, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.45601e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135502, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3107, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21353.4      10360.5      5227.97      5522.85      760.384      34640.1      8447.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00858   0.00702         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000126   0.00702    -0.996
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0070171
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.992994   0.00700574   0.00582034  0.000826141  3.63433e-05   0.00013178  5.55081e-06  0.000184012  1.57309e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71054, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         1.61779e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135775, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29781, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              19218      9324.47      4705.18      4970.56      684.346      31176.1      7603.16
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00847    0.0069         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000125    0.0069    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00689644
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993115   0.00688528   0.00573231  0.000798379  3.56438e-05   0.00012731  5.41514e-06  0.000184651  1.57393e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         2.42668e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.13624, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33044, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              12812      6216.31      3136.78      3313.71       456.23        20784      5068.77
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00805   0.00643         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000117   0.00643    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00642794
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993582   0.00641754   0.00538112  0.000698343  3.30594e-05  0.000111653  4.92756e-06   0.00018686  1.57802e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.72937, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         3.23558e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.13578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.34931, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9609.02      4662.23      2352.59      2485.28      342.173        15588      3801.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00774   0.00609         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000112   0.00609    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00609285
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993917   0.00608299   0.00512183   0.00063371   3.1316e-05  0.000101839  4.61059e-06  0.000188103    1.582e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.74874, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.04447e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136148, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.37661, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7687.21      3729.79      1882.07      1988.23      273.738      12470.4      3041.26
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0075   0.00583         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000108   0.00583     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00583228
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994177   0.00582284   0.00491615  0.000587033  3.00082e-05  9.48609e-05  4.37892e-06  0.000188826  1.58588e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77622, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         4.85337e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135845, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35875, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6406.01      3108.16      1568.39      1656.85      228.115        10392      2534.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0073   0.00562         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000105   0.00562    -0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00561942
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99439   0.00561032   0.00474577   0.00055104  2.89655e-05  8.95268e-05  4.19786e-06  0.000189232  1.58965e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         5.66226e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.136425, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38521, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5490.87      2664.13      1344.34      1420.16      195.527      8907.45      2172.33
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00713   0.00544         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000102   0.00544     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00543972
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994569   0.00543091   0.00460043  0.000522056  2.81008e-05  8.52529e-05  4.05007e-06   0.00018943  1.59332e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78459, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
            Well    Collision, 1/sec
              W1         6.47115e+09
      global relaxation matrix dimension = 254
      setting global matrices ... done, cpu time[sec] = 0.135594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38189, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4804.51      2331.12      1176.29      1242.64      171.086      7794.02      1900.79
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00698   0.00528         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.93e-05   0.00528     0.997
         *Z       ---       ---  3.15e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00528443
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994724   0.00527588   0.00447381  0.000497983  2.73633e-05  8.17134e-05   3.9257e-06  0.000189484  1.59688e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78068, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 77002 1/cm
      Energy step      = 433 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -47.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005476
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.117056
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.090303
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.105686
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.360286
         W1 Well: minimal relaxation eigenvalue = 0.0102121
         W1 Well: maximal relaxation eigenvalue = 1.64646
         W1 Well:       grid size = 251
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31680 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -71 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -71 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4834 1/cm
         B4 Barrier:        grid size = 193
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6566 1/cm
         B5 Barrier: nonpositive number of states at -23887 1/cm => truncating
         B5 Barrier:        grid size = 233
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23886 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1227 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4691 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.941046, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31680 -23886 2.74e+05 3.29e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -71 3.52e+18
         B2    -71 1.79e+18
         B3  -4834 9.46e+17
         B4  -6566 9.96e+17
         B5 -23886 1.38e+17
         B6   1228  5.9e+18
         B7   4692 1.48e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.51e-16   3.1e-16  1.42e-16  6.68e-17   7.3e-21     3e-15  6.01e-14
          R  6.61e+15         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  3.22e+15     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  7.02e+15      1.06      2.18         1     0.469  5.13e-05        21       423
         P3   1.5e+16      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  1.37e+20  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  3.34e+14    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  1.66e+13   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.99e-19  6.13e-19  2.81e-19  1.32e-19  1.44e-23  5.92e-18  1.19e-16
          R  3.35e+18         1      2.05     0.941     0.441  4.83e-05      19.8       398
         P1  1.63e+18     0.488         1     0.459     0.215  2.35e-05      9.66       194
         P2  3.55e+18      1.06      2.18         1     0.469  5.13e-05        21       423
         P3  7.58e+18      2.27      4.65      2.13         1  0.000109      44.9       901
         P4  6.93e+22  2.07e+04  4.25e+04  1.95e+04  9.15e+03         1   4.1e+05  8.24e+06
         P5  1.69e+17    0.0505     0.104    0.0475    0.0223  2.44e-06         1      20.1
         P6  8.41e+15   0.00252   0.00516   0.00237   0.00111  1.21e-07    0.0498         1
   MasterEquation::set:  done, cpu time[sec] = 0.952573, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132348, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.54617, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             203558       103230      54680.3      57555.9      7978.54       340812      85460.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0151    0.0149         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000245    0.0149    -0.993
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.014869
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985155    0.0148451    0.0115542   0.00243203  8.82685e-05   0.00045386  1.55559e-05  0.000298103  3.07961e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.93494, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2724, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            67852.5      34409.9      18226.8      19185.3      2659.51       113604      28486.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0139    0.0132         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000221    0.0132    -0.993
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0132392
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.986782     0.013218    0.0106891   0.00183054  7.19803e-05  0.000302862  1.16405e-05  0.000308832  3.08294e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64917, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         7.88525e+08
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40711.5      20645.9      10936.1      11511.2      1595.71      68162.3        17092
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0132    0.0124         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000209    0.0124    -0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0124126
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.987607    0.0123927    0.0101633   0.00158013  6.58888e-05   0.00025533  1.03212e-05  0.000314667  3.08613e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66264, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.10394e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131698, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27947, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29079.7      14747.1      7811.48      8222.27      1139.79      48687.4      12208.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0128    0.0118         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000201    0.0118     0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0118486
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98817    0.0118296   0.00977836   0.00142867  6.22185e-05  0.000229158  9.56594e-06  0.000318558  3.08926e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65603, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.41935e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2904, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22617.5        11470      6075.59       6395.1      886.505        37868      9495.58
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0125    0.0114         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000194    0.0114    -0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0114188
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1       0.9886    0.0114005   0.00947276   0.00132282  5.96204e-05  0.000211754  9.04937e-06  0.000321385  3.09234e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66691, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         1.57705e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131637, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29815, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20355.8        10323      5468.03      5755.59      797.854      34081.2      8546.02
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0123    0.0112         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000192    0.0112     0.994
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0112367
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.988781    0.0112187   0.00934041   0.00128029  5.85632e-05  0.000204935   8.8434e-06  0.000322531  3.09387e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.674, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         2.36558e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132089, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33532, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13570.5      6881.98      3645.36      3837.06      531.903      22720.8      5697.35
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0118    0.0105         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000181    0.0105     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0105271
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98949    0.0105102   0.00881008   0.00112669  5.46482e-05  0.000180996  8.10161e-06  0.000326604  3.10138e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71134, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          3.1541e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.131882, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.346, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10177.9      5161.48      2734.02      2877.79      398.927      17040.6      4273.01
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0114      0.01         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000173      0.01     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.010017
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.989999     0.010001   0.00841617    0.0010271  5.19984e-05  0.000165939  7.61784e-06  0.000329033  3.10868e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7258, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         3.94263e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33972, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8142.31      4129.19      2187.21      2302.24      319.142      13632.5      3418.41
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0111   0.00962         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000168   0.00962     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00961886
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990397   0.00960344   0.00810231  0.000954983   5.0005e-05  0.000155202  7.26332e-06  0.000330562  3.11579e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.71931, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         4.73115e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.13235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35934, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6785.25      3440.99      1822.68      1918.53      265.951      11360.4      2848.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0108   0.00929         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000163   0.00929    -0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00929254
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990722   0.00927765   0.00784138  0.000899241  4.84119e-05  0.000146976  6.98563e-06  0.000331535  3.12269e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.73696, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1         5.51968e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.35566, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5815.93      2949.42       1562.3      1644.45      227.958      9737.47      2441.72
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0106   0.00902         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000159   0.00902     0.995
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00901631
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.990998   0.00900187   0.00761812  0.000854262  4.70877e-05  0.000140371   6.7585e-06  0.000332138  3.12941e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.7354, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
            Well    Collision, 1/sec
              W1          6.3082e+09
      global relaxation matrix dimension = 251
      setting global matrices ... done, cpu time[sec] = 0.132718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.38009, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5088.94      2580.74      1367.01       1438.9      199.464      8520.29       2136.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0104   0.00878         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000155   0.00878     0.996
         *Z       ---       ---  2.43e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00877703
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.991237   0.00876297    0.0074231  0.000816839  4.59563e-05   0.00013489  6.56702e-06   0.00033248  3.13594e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.75979, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 79782 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -45.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005721
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127966
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.088305
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07873
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.35075
         W1 Well: minimal relaxation eigenvalue = 0.0100325
         W1 Well: maximal relaxation eigenvalue = 2.02767
         W1 Well:       grid size = 248
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31818 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -317 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 131 1/cm
         B3 Barrier:        grid size = 188
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4818 1/cm
         B4 Barrier:        grid size = 192
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6618 1/cm
         B5 Barrier: nonpositive number of states at -23718 1/cm => truncating
         B5 Barrier:        grid size = 230
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23718 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4632 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.913726, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31818 -23718 3.11e+05 4.34e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -317 4.77e+18
         B2    132 2.53e+18
         B3  -4818  1.4e+18
         B4  -6618 1.47e+18
         B5 -23718 2.06e+17
         B6   1482 8.24e+18
         B7   4633 2.12e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.81e-17  1.62e-16  8.02e-17   3.9e-17  6.21e-21  1.45e-15  2.73e-14
          R  1.28e+16         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1  6.17e+15     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  1.25e+16     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  2.56e+16         2      4.16      2.06         1  0.000159      37.1       699
         P4  1.61e+20  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  6.91e+14    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  3.67e+13   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.6e-19  3.33e-19  1.65e-19  8.01e-20  1.27e-23  2.97e-18   5.6e-17
          R  6.24e+18         1      2.08      1.03     0.499  7.95e-05      18.5       349
         P1     3e+18     0.482         1     0.495      0.24  3.83e-05      8.93       168
         P2  6.07e+18     0.973      2.02         1     0.486  7.74e-05        18       340
         P3  1.25e+19         2      4.16      2.06         1  0.000159      37.1       699
         P4  7.85e+22  1.26e+04  2.61e+04  1.29e+04  6.28e+03         1  2.33e+05  4.39e+06
         P5  3.36e+17    0.0539     0.112    0.0554    0.0269  4.29e-06         1      18.8
         P6  1.79e+16   0.00286   0.00595   0.00294   0.00143  2.28e-07    0.0531         1
   MasterEquation::set:  done, cpu time[sec] = 0.924773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21721, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             214402       113463      63078.5      66170.8      9231.74       369983        95239
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0205    0.0225         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000355    0.0225     0.989
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0225446
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977493    0.0225073    0.0175112   0.00367139  0.000133303  0.000666996  2.32278e-05  0.000495547  5.71716e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59673, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129735, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.27858, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            71467.4        37821      21026.2      22056.9      3077.25       123328      31746.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.019    0.0202         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000322    0.0202      0.99
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0202259
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979808    0.0201925    0.0163265   0.00276656  0.000110383  0.000453025  1.76958e-05  0.000512561  5.72304e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.64704, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          7.6942e+08
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.12937, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2493, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            42880.5      22692.6      12615.7      13234.2      1846.35      73996.7      19047.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0183     0.019         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000306     0.019      0.99
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0190477
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.980984    0.0190163    0.0155901   0.00239587  0.000101738  0.000385038  1.58155e-05  0.000521926  5.72862e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61912, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.07719e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128796, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26622, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            30628.9        16209      9011.21      9452.97      1318.82      52854.8      13605.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0177    0.0182         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000294    0.0182    -0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0182416
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.981789    0.0182115    0.0150463   0.00217245  9.65118e-05  0.000347453  1.47355e-05  0.000528253  5.73406e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.38496e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129378, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28001, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23822.5        12607      7008.72      7352.31      1025.75      41109.3      10582.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0173    0.0176         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000285    0.0176    -0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0176257
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982403    0.0175966    0.0146122   0.00201649  9.28035e-05  0.000322391  1.39949e-05  0.000532912  5.73942e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.64892, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         1.53884e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.128763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.28291, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21440.2      11346.3      6307.85      6617.08      923.174      36998.3       9523.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0171    0.0174         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000282    0.0174    -0.991
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0173643
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.982664    0.0173356    0.0144237   0.00195386  9.12922e-05  0.000312556  1.36992e-05  0.000534822  5.74207e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65155, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         2.30826e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129793, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14293.5      7564.21      4205.23      4411.39      615.449      24665.6      6349.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0164    0.0163         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000267    0.0163    -0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0163431
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.983684    0.0163161    0.0136647   0.00172764   8.5683e-05  0.000277941  1.26319e-05  0.000541745  5.75505e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.66605, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         3.07768e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129613, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10720.1      5673.16      3153.92      3308.54      461.587      18499.2      4761.95
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0159    0.0156         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000257    0.0156     0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0156061
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98442    0.0155803    0.0130977   0.00158087  8.18735e-05  0.000256092  1.19336e-05  0.000546046  5.76766e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6865, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1          3.8471e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129971, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8576.09      4538.53      2523.14      2646.83       369.27      14799.3      3809.56
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0155     0.015         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000248     0.015     0.992
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0150289
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.984996     0.015004     0.012644   0.00147447  7.89998e-05  0.000240469  1.14205e-05  0.000548895   5.7799e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.68267, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         4.61652e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129579, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.32527, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7146.74       3782.1      2102.62      2205.69      307.725      12332.8      3174.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0152    0.0146         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000242    0.0146     0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0145545
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98547    0.0145304    0.0122655   0.00139214  7.66978e-05  0.000228471  1.10177e-05  0.000550836   5.7918e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.69454, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         5.38594e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.130139, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6125.78       3241.8      1802.24      1890.59      263.764        10571      2721.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0149    0.0142         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000236    0.0142    -0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.014152
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.985871    0.0141286    0.0119407   0.00132565  7.47803e-05  0.000218819  1.06877e-05  0.000552163  5.80337e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70783, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
            Well    Collision, 1/sec
              W1         6.15536e+09
      global relaxation matrix dimension = 248
      setting global matrices ... done, cpu time[sec] = 0.129954, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.33617, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5360.06      2836.58      1576.96      1654.27      230.793      9249.58      2380.98
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0146    0.0138         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000231    0.0138    -0.993
         *Z       ---       ---  1.92e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0138026
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.98622    0.0137798    0.0116563   0.00127026  7.31389e-05  0.000210796  1.04089e-05  0.000553056  5.81462e-06

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.70681, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 82562 1/cm
      Energy step      = 467 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -43.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005635
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125656
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.08561
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094007
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.340177
         W1 Well: minimal relaxation eigenvalue = 0.00986391
         W1 Well: maximal relaxation eigenvalue = 2.18155
         W1 Well:       grid size = 245
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31853 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -97 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -97 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4767 1/cm
         B4 Barrier:        grid size = 191
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6635 1/cm
         B5 Barrier: nonpositive number of states at -23447 1/cm => truncating
         B5 Barrier:        grid size = 227
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23447 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1303 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4572 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.911652, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31853 -23447  3.8e+05 5.68e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -97  6.4e+18
         B2    -97 3.53e+18
         B3  -4767 2.06e+18
         B4  -6635 2.15e+18
         B5 -23447 3.02e+17
         B6   1304 1.14e+19
         B7   4573    3e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.23e-17   8.9e-17  4.72e-17  2.37e-17  5.34e-21  7.37e-16  1.31e-14
          R  2.36e+16         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  1.12e+16     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  2.12e+16     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  4.22e+16      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  1.87e+20  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  1.36e+15    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  7.65e+13   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.02e-20   1.9e-19  1.01e-19  5.05e-20  1.14e-23  1.57e-18  2.79e-17
          R  1.11e+19         1       2.1      1.11      0.56  0.000126      17.4       309
         P1  5.27e+18     0.476         1      0.53     0.266  6.01e-05      8.28       147
         P2  9.95e+18     0.897      1.89         1     0.503  0.000113      15.6       277
         P3  1.98e+19      1.79      3.75      1.99         1  0.000225      31.1       552
         P4  8.78e+22  7.92e+03  1.66e+04  8.83e+03  4.44e+03         1  1.38e+05  2.45e+06
         P5  6.37e+17    0.0574     0.121     0.064    0.0322  7.25e-06         1      17.7
         P6  3.59e+16   0.00324    0.0068   0.00361   0.00181  4.09e-07    0.0564         1
   MasterEquation::set:  done, cpu time[sec] = 0.922709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             224684       123897      72273.3        75575      10607.5       399124       105317
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0267    0.0325         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000494    0.0325     0.984
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0324914
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967562     0.032438     0.025399   0.00507269   0.00019342  0.000941491  3.33289e-05  0.000788048  1.00856e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56072, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23876, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74894.5      41298.8      24091.1      25191.7      3535.84       133041      35105.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.025    0.0294         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000451    0.0294     0.985
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0294225
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970626    0.0293742    0.0238128   0.00390262  0.000162008  0.000647758  2.57421e-05  0.000813179  1.00954e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59923, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         7.51455e+08
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126557, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24304, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            44936.7      24779.3      14454.7        15115       2121.5      79824.9      21063.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0241    0.0278         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00043    0.0278    -0.986
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0278409
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.972205    0.0277952    0.0228211   0.00340888  0.000150217  0.000554501  2.31699e-05  0.000827236  1.01047e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60522, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.05204e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126841, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24236, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32097.7      17699.5      10324.8      10796.4      1515.36      57017.8      15045.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0234    0.0268         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000414    0.0268    -0.987
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0267518
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.973292    0.0267079     0.022085   0.00310823  0.000143086  0.000502868  2.16912e-05  0.000836865  1.01136e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60393, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.35262e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126183, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25835, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24964.8      13766.3      8030.36      8397.22      1178.61      44347.1      11701.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.023    0.0259         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000403    0.0259     0.987
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0259162
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.974126    0.0258736    0.0214953    0.0028971  0.000138022  0.000468383  2.06762e-05  0.000844048  1.01224e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.6178, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         1.50291e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22468.4      12389.7      7227.33       7557.5      1060.75      39912.4      10531.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0227    0.0256         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000398    0.0256    -0.987
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0255606
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.974481    0.0255187    0.0212384   0.00281202  0.000135956  0.000454836  2.02705e-05  0.000847019  1.01268e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61566, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         2.25437e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126528, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27319, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14978.9      8259.77      4818.22      5038.33      707.167      26608.3      7021.11
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0219    0.0242         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000379    0.0242    -0.988
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0241664
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.975873    0.0241267    0.0202011   0.00250334   0.00012828  0.000407071  1.88043e-05  0.000857974   1.0148e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63529, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.00582e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125991, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.29526, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11234.2      6194.83      3613.66      3778.75      530.376      19956.2      5265.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0213    0.0232         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000365    0.0232     0.988
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0231552
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.976883    0.0231172    0.0194224   0.00230189  0.000123053  0.000376837  1.78427e-05  0.000865001  1.01686e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.65612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         3.75728e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.12687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26164, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8987.34      4955.86      2890.93         3023        424.3        15965      4212.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0208    0.0224         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000354    0.0224    -0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0223603
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.977676    0.0223236    0.0187969   0.00215526  0.000119102   0.00035517  1.71347e-05  0.000869824  1.01886e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62391, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         4.50873e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.125989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30972, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7489.45      4129.88      2409.11      2519.17      353.584      13304.1      3510.55
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0204    0.0217         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000344    0.0217     0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0217051
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978331    0.0216695    0.0182736   0.00204144  0.000115931  0.000338496   1.6578e-05  0.000873255   1.0208e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67162, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         5.26019e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126749, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.27445, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6419.53       3539.9      2064.95      2159.28      303.072      11403.6      3009.05
      eigenvector populations normalized:
          L        *R        *P        W1
          0      0.02    0.0211         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000337    0.0211     0.989
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0211478
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.978887    0.0211131    0.0178234   0.00194925  0.000113285   0.00032506   1.6121e-05  0.000875737  1.02269e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.63626, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
            Well    Collision, 1/sec
              W1         6.01164e+09
      global relaxation matrix dimension = 245
      setting global matrices ... done, cpu time[sec] = 0.126697, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.31338, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5617.09      3097.41      1806.83      1889.37      265.188      9978.11      2632.92
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0197    0.0207         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00033    0.0207     -0.99
         *Z       ---       ---  1.55e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0206629
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.979371     0.020629    0.0174283    0.0018723  0.000111017  0.000313874  1.57345e-05  0.000877538  1.02452e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.67466, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 85343 1/cm
      Energy step      = 483 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -40.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005591
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125009
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.084302
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074902
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.340409
         W1 Well: minimal relaxation eigenvalue = 0.00970545
         W1 Well: maximal relaxation eigenvalue = 7.45437
         W1 Well:       grid size = 243
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -32026 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -148 1/cm
         B2 Barrier:        grid size = 177
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -148 1/cm
         B3 Barrier:        grid size = 187
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4978 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6427 1/cm
         B5 Barrier: nonpositive number of states at -23815 1/cm => truncating
         B5 Barrier:        grid size = 226
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23815 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1300 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.890904, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -32026 -23815 2.89e+05 7.41e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -148 8.51e+18
         B2   -148 4.88e+18
         B3  -4978 2.99e+18
         B4  -6427 3.11e+18
         B5 -23815 4.39e+17
         B6   1301 1.55e+19
         B7   4682  4.2e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.4e-17  5.11e-17  2.88e-17   1.5e-17  4.66e-21  3.94e-16   6.6e-15
          R  4.17e+16         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  1.96e+16      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  3.47e+16     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  6.69e+16       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  2.14e+20  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  2.54e+15     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  1.51e+14   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.29e-20  1.13e-19  6.36e-20   3.3e-20  1.03e-23  8.68e-19  1.46e-17
          R  1.89e+19         1      2.13       1.2     0.623  0.000194      16.4       275
         P1  8.88e+18      0.47         1     0.565     0.293  9.13e-05      7.71       129
         P2  1.57e+19     0.832      1.77         1     0.518  0.000162      13.6       229
         P3  3.03e+19       1.6      3.42      1.93         1  0.000312      26.3       442
         P4  9.73e+22  5.15e+03   1.1e+04  6.19e+03  3.21e+03         1  8.44e+04  1.42e+06
         P5  1.15e+18     0.061      0.13    0.0733     0.038  1.18e-05         1      16.8
         P6  6.87e+16   0.00363   0.00773   0.00437   0.00226  7.06e-07    0.0596         1
   MasterEquation::set:  done, cpu time[sec] = 0.902545, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1774, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             234382       134486      82292.7      85793.9      12110.5       428104       115645
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0338    0.0451         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000668    0.0451    -0.977
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0451178
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.954957    0.0450433    0.0353391   0.00689804  0.000269271   0.00127132  4.58425e-05   0.00120272  1.69993e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54302, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18141, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            78127.2      44828.7      27430.9        28598      4036.83       142701      38548.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0318    0.0412         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000613    0.0412     0.979
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0411571
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958911    0.0410891     0.033329   0.00535188  0.000228464   0.00088828  3.59675e-05   0.00123855  1.70149e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5484, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         7.34524e+08
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124461, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19849, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46876.3      26897.2      16458.5      17158.8       2422.1      85620.8      23129.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0307    0.0391         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000585    0.0391      0.98
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0391015
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.960963     0.039037    0.0320514   0.00469796  0.000213101   0.00076606  3.26062e-05   0.00125882  1.70294e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56515, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.02833e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.12448, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.19544, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            33483.1      19212.3      11756.1      12256.3      1730.07      61157.7      16520.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0      0.03    0.0377         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000566    0.0377    -0.981
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0376805
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.962382    0.0376183    0.0310965   0.00429917  0.000203793  0.000698199  3.06694e-05   0.00127285  1.70435e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56441, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.32214e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124494, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.21275, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26042.4      14942.9      9143.63      9532.66      1345.61      47567.1      12849.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0294    0.0366         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000551    0.0366    -0.982
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.036587
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963473    0.0365266    0.0303281   0.00401873  0.000197172  0.000652782  2.93377e-05   0.00128342  1.70572e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58074, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         1.46905e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125217, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            23438.2      13448.6      8229.27      8579.39      1211.05      42810.4      11564.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0292    0.0361         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000544    0.0361    -0.982
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0361209
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.963939    0.0360613    0.0299926   0.00390563  0.000194469  0.000634916  2.88049e-05   0.00128782   1.7064e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         2.20357e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15625.4      8965.75      5486.18       5719.6      807.365      28540.3      7709.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0282    0.0343         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000519    0.0343     0.983
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0342882
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.965768    0.0342316    0.0286325   0.00349467  0.000184405  0.000571798  2.68757e-05   0.00130427  1.70971e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.59811, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1          2.9381e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124944, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11719.1      6724.31      4114.63       4289.7      605.524      21405.2      5782.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0274     0.033         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000501     0.033    -0.983
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0329538
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.967101    0.0328994    0.0276065   0.00322588  0.000177536   0.00053173  2.56074e-05   0.00131507  1.71291e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.60175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         3.67262e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124353, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24457, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9375.26      5379.45      3291.71      3431.76      484.419      17124.2      4625.82
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0269    0.0319         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000487    0.0319    -0.984
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0319017
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.968151    0.0318491    0.0267794   0.00302987  0.000172332  0.000502949  2.46717e-05   0.00132268  1.71602e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61181, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         4.40715e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124923, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24217, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7812.72      4482.87      2743.09       2859.8      403.683      14270.1      3854.85
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0264     0.031         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000475     0.031     0.984
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0310323
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969019    0.0309811    0.0260853   0.00287748  0.000168147  0.000480759  2.39346e-05   0.00132825  1.71903e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.61132, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.14167e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.124488, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.26021, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6696.62      3842.46      2351.22      2451.26      346.014      12231.5      3304.15
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.026    0.0303         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000465    0.0303     0.985
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0302912
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.969759    0.0302412    0.0254868   0.00275388   0.00016465  0.000462847  2.33286e-05   0.00133243  1.72196e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62709, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
            Well    Collision, 1/sec
              W1         5.87619e+09
      global relaxation matrix dimension = 243
      setting global matrices ... done, cpu time[sec] = 0.125002, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.25415, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5859.54      3362.16      2057.32      2144.85      302.762      10702.6      2891.14
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0256    0.0296         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000456    0.0296     0.985
         *Z       ---       ---  1.29e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0296452
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.970404    0.0295962    0.0249604   0.00265057  0.000161646  0.000447913  2.28154e-05    0.0013356  1.72481e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.62325, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 88123 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -38.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005661
         W1 Well: collisional kernel bandwidth = 26
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1033
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.082051
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099824
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.330745
         W1 Well: minimal relaxation eigenvalue = 0.00955724
         W1 Well: maximal relaxation eigenvalue = 2.36185
         W1 Well:       grid size = 240
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31876 1/cm
         B1 Barrier:        grid size = 177
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -376 1/cm
         B2 Barrier:        grid size = 176
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 123 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4876 1/cm
         B4 Barrier:        grid size = 189
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6376 1/cm
         B5 Barrier: nonpositive number of states at -23377 1/cm => truncating
         B5 Barrier:        grid size = 223
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23376 1/cm
         B6 Barrier:        grid size = 174
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1123 1/cm
         B7 Barrier:        grid size = 167
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4623 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.88617, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31876 -23376    4e+05 9.59e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -376 1.12e+19
         B2    124 6.68e+18
         B3  -4876 4.28e+18
         B4  -6376 4.45e+18
         B5 -23376 6.32e+17
         B6   1124  2.1e+19
         B7   4624  5.8e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.41e-17  3.04e-17  1.82e-17  9.72e-18   4.1e-21  2.19e-16  3.48e-15
          R  7.09e+16         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  3.29e+16     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  5.49e+16     0.775      1.67         1     0.534  0.000225        12       191
         P3  1.03e+17      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  2.44e+20  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5  4.57e+15    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  2.87e+14   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.22e-20  6.94e-20  4.16e-20  2.22e-20  9.36e-24  4.99e-19  7.95e-18
          R  3.11e+19         1      2.15      1.29     0.689  0.000291      15.5       247
         P1  1.44e+19     0.464         1     0.599      0.32  0.000135      7.19       115
         P2  2.41e+19     0.775      1.67         1     0.534  0.000225        12       191
         P3  4.51e+19      1.45      3.13      1.87         1  0.000422      22.5       359
         P4  1.07e+23  3.44e+03  7.41e+03  4.44e+03  2.37e+03         1  5.33e+04   8.5e+05
         P5     2e+18    0.0645     0.139    0.0833    0.0444  1.87e-05         1      15.9
         P6  1.26e+17   0.00405   0.00873   0.00523   0.00279  1.18e-06    0.0628         1
   MasterEquation::set:  done, cpu time[sec] = 0.897294, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.12064, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.15505, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             243480       145183      93153.6      96842.2      13743.6       456785       126171
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0415    0.0606         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00088    0.0606    -0.969
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.060623
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.939479    0.0605215    0.0474377   0.00921321  0.000361704   0.00165178  6.08069e-05   0.00176882  2.75119e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.50885, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.1206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1722, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81160.1      48394.3      31051.2      32280.7      4581.19       152262      42056.9
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0392    0.0556         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000811    0.0556     0.972
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0556039
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.944489    0.0555107    0.0449931   0.00713738  0.000311215   0.00117469  4.85366e-05   0.00181826  2.75356e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.51728, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         7.18534e+08
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120779, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.17848, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48696.1      29036.6      18630.7      19368.4      2748.72      91356.9      25234.2
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.038     0.053         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000775     0.053     0.973
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0530043
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.947085    0.0529155    0.0434045   0.00627983  0.000291991   0.00102078  4.43155e-05   0.00184652  2.75576e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.52555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.7 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.00595e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121066, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18738, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34782.9      20740.4      13307.7      13834.6      1963.37      65254.9      18024.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0371    0.0512         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00075    0.0512    -0.974
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0512051
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.948881    0.0511193    0.0422086   0.00575974    0.0002803  0.000934973  4.18742e-05   0.00186624  2.75788e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.53317, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.9 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.29336e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120487, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20282, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27053.4      16131.4      10350.4      10760.2      1527.06      50753.8        14019
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0365    0.0498         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000732    0.0498    -0.975
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0498187
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.950265    0.0497353     0.041242   0.00539489  0.000271966  0.000877394  4.01919e-05   0.00188122  2.75994e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.54882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         1.43707e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.120935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18147, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              24348      14518.3      9315.36      9684.22      1374.36      45678.5      12617.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0362    0.0492         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000723    0.0492     0.975
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0492272
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R       1.1
         P1       1.1
         P2       1.1
         P3       1.1
         P4       1.1
         P5       1.1
         P6       1.1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.950855    0.0491447    0.0408189   0.00524789  0.000268559  0.000854708  3.95179e-05   0.00188749  2.76096e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.52809, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          2.1556e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23295, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              16232      9678.86      6210.24      6456.15      916.239      30452.3      8411.39
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0351    0.0469         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000692    0.0469    -0.976
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.046897
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.953182    0.0468184     0.039098   0.00471425  0.000255849  0.000774394  3.70731e-05   0.00191117  2.76591e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58018, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         2.87414e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.122145, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22502, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              12174      7259.15      4657.68      4842.11      687.179      22839.2      6308.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0343    0.0452         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000669    0.0452     0.977
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0451956
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.95488    0.0451198    0.0377938   0.00436541  0.000247151  0.000723257  3.54615e-05   0.00192701  2.77068e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.5725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 2.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         3.59267e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121869, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20981, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9739.21      5807.32      3726.14      3873.69      549.743      18271.4      5046.83
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0336    0.0439         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000651    0.0439    -0.978
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0438509
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.956223    0.0437775    0.0367391   0.00411097  0.000240548  0.000686442  3.42703e-05    0.0019384   2.7753e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.55755, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1          4.3112e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.23696, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8116.01      4839.43      3105.12      3228.07      458.119      15226.2      4205.69
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.033    0.0427         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000636    0.0427     0.978
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0427376
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.957334     0.042666    0.0358516   0.00391307  0.000235228  0.000658004  3.33302e-05   0.00194693  2.77978e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.58335, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 3.5 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.02974e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121795, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.2307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6956.58      4148.08      2661.53      2766.92      392.674        13051      3604.88
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0326    0.0418         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000623    0.0418    -0.979
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0417868
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.958283    0.0417167    0.0350846   0.00375247  0.000230775  0.000635011  3.25563e-05   0.00195347  2.78413e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.57864, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
            Well    Collision, 1/sec
              W1         5.74827e+09
      global relaxation matrix dimension = 240
      setting global matrices ... done, cpu time[sec] = 0.121379, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.22199, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6087.01      3629.57      2328.84      2421.06      343.589      11419.6      3154.27
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0321     0.041         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000611     0.041     0.979
         *Z       ---       ---  1.09e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0409566
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.959112     0.040888    0.0344087   0.00361816  0.000226946  0.000615816     3.19e-05   0.00195858  2.78836e-05

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.56912, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 6710.16, elapsed time[sec] = 197
